{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4f4e\u7a7a\u6a21\u62df\u5668 # \u8be5\u9879\u76ee\u57fa\u4e8e AirSim \u9879\u76ee\uff0c\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u96c6\u6210\u5230 HUTB \u9879\u76ee\u4e2d\uff0c\u914d\u7f6e\u65b9\u6cd5\u8bf7\u53c2\u8003 \u94fe\u63a5 \u3002 2017\u5e74\uff0c\u5fae\u8f6f\u7814\u7a76\u9662\u521b\u5efa\u4e86AirSim\uff0c\u4f5c\u4e3a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u548c\u5b9e\u9a8c\u7684\u6a21\u62df\u5e73\u53f0\u3002\u4e94\u5e74\u6765\uff0c\u8fd9\u4e2a\u7814\u7a76\u9879\u76ee\u5df2\u5b9e\u73b0\u5176\u76ee\u6807\uff0c\u5e76\u53d6\u5f97\u4e86\u957f\u8db3\u8fdb\u5c55\u2014\u2014\u6210\u4e3a\u5171\u4eab\u7814\u7a76\u4ee3\u7801\u548c\u6d4b\u8bd5\u7a7a\u4e2d\u4eba\u5de5\u667a\u80fd\u5f00\u53d1\u4e0e\u6a21\u62df\u65b0\u60f3\u6cd5\u7684\u5e38\u7528\u65b9\u5f0f\u3002\u6b64\u5916\uff0c\u65f6\u95f4\u4e5f\u63a8\u52a8\u4e86\u6211\u4eec\u5c06\u6280\u672f\u5e94\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u65b9\u5f0f\u4e0d\u65ad\u8fdb\u6b65\uff0c\u5c24\u5176\u662f\u5728\u7a7a\u4e2d\u673a\u52a8\u548c\u81ea\u4e3b\u7cfb\u7edf\u65b9\u9762\u3002\u4f8b\u5982\uff0c\u65e0\u4eba\u673a\u9001\u8d27\u4e0d\u518d\u662f\u79d1\u5e7b\u6545\u4e8b\uff0c\u800c\u662f\u5546\u4e1a\u73b0\u5b9e\uff0c\u8fd9\u610f\u5473\u7740\u65b0\u7684\u9700\u6c42\u9700\u8981\u6ee1\u8db3\u3002\u6211\u4eec\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6536\u83b7\u9887\u4e30\uff0c\u5e76\u611f\u8c22\u793e\u533a\u6210\u5458\u4e00\u76f4\u4ee5\u6765\u7684\u79ef\u6781\u53c2\u4e0e\u3002 \u672c\u7740\u4e0d\u65ad\u53d1\u5c55\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u5c06\u5728\u660e\u5e74\u53d1\u5e03\u4e00\u4e2a\u5168\u65b0\u7684\u6a21\u62df\u5e73\u53f0\uff0c\u5e76\u968f\u540e\u5b58\u6863\u539f\u7248 2017 \u5e74 AirSim\u3002\u6b64\u540e\uff0c\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u539f\u7248 AirSim \u4ee3\u7801\uff0c\u4f46\u4e0d\u4f1a\u7acb\u5373\u8fdb\u884c\u4efb\u4f55\u66f4\u65b0\u3002\u6211\u4eec\u5c06\u4e13\u6ce8\u4e8e\u5f00\u53d1\u4e00\u6b3e\u540d\u4e3a Microsoft Project AirSim \u7684\u65b0\u4ea7\u54c1\uff0c\u4ee5\u6ee1\u8db3\u822a\u7a7a\u822a\u5929\u4e1a\u65e5\u76ca\u589e\u957f\u7684\u9700\u6c42\u3002Project AirSim \u5c06\u63d0\u4f9b\u4e00\u4e2a\u7aef\u5230\u7aef\u5e73\u53f0\uff0c\u7528\u4e8e\u901a\u8fc7\u6a21\u62df\u5b89\u5168\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u81ea\u4e3b\u98de\u884c\u6280\u672f\u3002\u7528\u6237\u5c06\u53d7\u76ca\u4e8e\u5546\u4e1a\u4ea7\u54c1\u72ec\u6709\u7684\u5b89\u5168\u3001\u4ee3\u7801\u5ba1\u67e5\u3001\u6d4b\u8bd5\u3001\u9ad8\u7ea7\u6a21\u62df\u548c\u4eba\u5de5\u667a\u80fd\u529f\u80fd\u3002\u968f\u7740 Project AirSim \u53d1\u5e03\u7684\u4e34\u8fd1\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u5b66\u4e60\u5de5\u5177\u548c\u529f\u80fd\uff0c\u5e2e\u52a9\u60a8\u8fc1\u79fb\u5230\u65b0\u5e73\u53f0\u5e76\u6307\u5bfc\u60a8\u4f7f\u7528\u4ea7\u54c1\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4f7f\u7528\u5168\u65b0 Project AirSim \u6784\u5efa\u81ea\u4e3b\u98de\u884c\u6280\u672f\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee https://aka.ms/projectairsim \u3002 \u5fae\u8f6f\u4e0e IAMAI \u643a\u624b\u5408\u4f5c\uff0c\u901a\u8fc7 AirSim \u9879\u76ee\uff08AirSim \u7684\u5347\u7ea7\u7248\uff09\u63a8\u8fdb\u9ad8\u4fdd\u771f\u81ea\u4e3b\u9a7e\u9a76\u6a21\u62df\u6280\u672f\u3002\u8be5\u9879\u76ee\u57fa\u4e8e MIT \u8bb8\u53ef\u8bc1\u53d1\u5e03\uff0c\u662f DARPA \u652f\u6301\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002IAMAI \u5f88\u8363\u5e78\u80fd\u591f\u4e3a\u8fd9\u9879\u5de5\u4f5c\u505a\u51fa\u8d21\u732e\uff0c\u5e76\u5728 github.com/iamaisim/ProjectAirSim \u4e0a\u53d1\u5e03\u4e86\u5176\u7248\u672c\u7684 AirSim \u9879\u76ee\u4ee3\u7801\u5e93\u3002 \u6b22\u8fce\u6765\u5230 AirSim # AirSim \u662f\u4e00\u6b3e\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\uff08\u6211\u4eec\u73b0\u5728\u4e5f\u53d1\u5e03\u4e86Unity\u5b9e\u9a8c\u7248\uff09\u7684\u65e0\u4eba\u673a\u3001\u6c7d\u8f66\u7b49\u6a21\u62df\u5668\u3002\u5b83\u662f\u5f00\u6e90\u7684\u8de8\u5e73\u53f0\u4eff\u771f\u5668\uff0c\u652f\u6301\u4f7f\u7528 PX4 \u548c ArduPilot \u7b49\u4e3b\u6d41\u98de\u884c\u63a7\u5236\u5668\u8fdb\u884c\u8f6f\u4ef6\u5728\u73af\u4eff\u771f\uff0c\u4ee5\u53ca\u4f7f\u7528 PX4 \u8fdb\u884c\u786c\u4ef6\u5728\u73af\u4eff\u771f\uff0c\u4ee5\u5b9e\u73b0\u7269\u7406\u548c\u89c6\u89c9\u4e0a\u903c\u771f\u7684\u6a21\u62df\u3002\u5b83\u4ee5\u865a\u5e7b\u63d2\u4ef6\u7684\u5f62\u5f0f\u5f00\u53d1\uff0c\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u5230\u4efb\u4f55\u865a\u5e7b\u73af\u5883\u4e2d\u3002\u540c\u6837\uff0c\u6211\u4eec\u4e5f\u53d1\u5e03\u4e86 Unity \u63d2\u4ef6\u7684\u5b9e\u9a8c\u7248\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06 AirSim \u5f00\u53d1\u4e3a\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5e73\u53f0\uff0c\u7528\u4e8e\u8bd5\u9a8c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u6df1\u5ea6\u5b66\u4e60\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002\u4e3a\u6b64\uff0cAirSim \u8fd8\u5f00\u653e\u4e86 API\uff0c\u4ee5\u4fbf\u4ee5\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u65b9\u5f0f\u68c0\u7d22\u6570\u636e\u548c\u63a7\u5236\u8f66\u8f86\u3002 \u89c2\u770b 1.5 \u5206\u949f\u7684\u5feb\u901f\u6f14\u793a AirSim \u4e2d\u7684\u65e0\u4eba\u673a AirSim \u4e2d\u7684\u6c7d\u8f66 \u5982\u4f55\u83b7\u53d6 # Windows # * \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6 * \u6784\u5efa\u5b83 Linux # * \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6 * \u6784\u5efa\u5b83 macOS # * \u6784\u5efa\u5b83 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4f7f\u7528\u9884\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6587\u6863\u3002 \u5982\u4f55\u4f7f\u7528 # \u6587\u6863 # \u67e5\u770b\u6709\u5173 AirSim \u5404\u4e2a\u65b9\u9762\u7684 \u8be6\u7ec6\u6587\u6863 \u3002 \u624b\u52a8\u63a7\u5236 # \u5982\u679c\u60a8\u62e5\u6709\u5982\u4e0b\u6240\u793a\u7684\u9065\u63a7\u5668 (Remote Control, RC)\uff0c\u5219\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u624b\u52a8\u63a7\u5236\u65e0\u4eba\u673a\u3002\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u7bad\u5934\u952e\u624b\u52a8\u9a7e\u9a76\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f \u7a0b\u5e8f\u63a7\u5236 # AirSim \u63d0\u4f9b API\uff0c\u65b9\u4fbf\u60a8\u5728\u6a21\u62df\u4e2d\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u98de\u884c\u5668\u8fdb\u884c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b API \u68c0\u7d22\u56fe\u50cf\u3001\u83b7\u53d6\u72b6\u6001\u3001\u63a7\u5236\u98de\u884c\u5668\u7b49\u7b49\u3002\u8fd9\u4e9b API \u901a\u8fc7 RPC \u516c\u5f00\uff0c\u5e76\u53ef\u901a\u8fc7\u591a\u79cd\u8bed\u8a00\u8bbf\u95ee\uff0c\u5305\u62ec C++\u3001Python\u3001C# \u548c Java\u3002 \u8fd9\u4e9b API \u4e5f\u53ef\u4f5c\u4e3a\u72ec\u7acb\u7684\u8de8\u5e73\u53f0\u5e93\u7684\u4e00\u90e8\u5206\u4f7f\u7528\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u8f66\u8f86\u7684\u914d\u5957\u8ba1\u7b97\u673a\u4e0a\u3002\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u7f16\u5199\u548c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7136\u540e\u5728\u771f\u5b9e\u8f66\u8f86\u4e0a\u6267\u884c\u3002\u8fc1\u79fb\u5b66\u4e60\u53ca\u76f8\u5173\u7814\u7a76\u662f\u6211\u4eec\u7684\u91cd\u70b9\u9886\u57df\u4e4b\u4e00\u3002 \u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 SimMode \u8bbe\u7f6e \u6765\u6307\u5b9a\u9ed8\u8ba4\u8f66\u8f86\u6216\u65b0\u7684ComputerVision \u6a21\u5f0f\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u5728\u6bcf\u6b21\u542f\u52a8 AirSim \u65f6\u6536\u5230\u63d0\u793a\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f \u6536\u96c6\u8bad\u7ec3\u6570\u636e # \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4ece AirSim \u751f\u6210\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u6309\u4e0b\u53f3\u4e0b\u89d2\u7684\u201c\u5f55\u5236\u201d\u6309\u94ae\u3002\u8fd9\u5c06\u5f00\u59cb\u8bb0\u5f55\u6bcf\u4e00\u5e27\u7684\u59ff\u52bf\u548c\u56fe\u50cf\u3002\u6570\u636e\u8bb0\u5f55\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u8fdb\u884c\u4fee\u6539\u3002 \u6309\u7167\u60a8\u6240\u9700\u7684\u65b9\u5f0f\u751f\u6210\u8bad\u7ec3\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u8bbf\u95ee API\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u8bb0\u5f55\u6570\u636e\u7684\u65b9\u5f0f\u3001\u5185\u5bb9\u3001\u4f4d\u7f6e\u548c\u65f6\u95f4\u3002 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f # AirSim \u7684\u53e6\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u662f\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u60a8\u65e0\u9700\u4f7f\u7528\u8f66\u8f86\u6216\u7269\u7406\u5f15\u64ce\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u6216\u4f7f\u7528 API \u5c06\u53ef\u7528\u7684\u6444\u50cf\u5934\u5b9a\u4f4d\u5230\u4efb\u610f\u59ff\u52bf\uff0c\u5e76\u6536\u96c6\u8bf8\u5982\u6df1\u5ea6\u3001\u89c6\u5dee\u3001\u8868\u9762\u6cd5\u7ebf\u6216\u7269\u4f53\u5206\u5272\u7b49\u56fe\u50cf\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f \u5929\u6c14\u6548\u679c # \u6309 F10 \u67e5\u770b\u5404\u79cd\u53ef\u7528\u7684\u5929\u6c14\u6548\u679c\u9009\u9879\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 APIs \u63a7\u5236\u5929\u6c14\u3002\u6309 F1 \u67e5\u770b\u5176\u4ed6\u53ef\u7528\u9009\u9879\u3002 \u6559\u7a0b # \u89c6\u9891 - \u4f7f\u7528 Pixhawk \u6559\u7a0b\u8bbe\u7f6e AirSim \u89c6\u9891 - \u4f7f\u7528 AirSim \u548c Pixhawk \u6559\u7a0b \u89c6\u9891 - \u4f7f\u7528 AirSim \u7684\u73b0\u6210\u73af\u5883 \u7f51\u7edc\u7814\u8ba8\u4f1a\u2014\u2014\u5229\u7528\u9ad8\u4fdd\u771f\u4eff\u771f\u5b9e\u73b0\u81ea\u4e3b\u7cfb\u7edf \u4f7f\u7528 AirSim \u8fdb\u884c\u5f3a\u5316\u5b66\u4e60 \u81ea\u52a8\u9a7e\u9a76\u98df\u8c31 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u7b80\u5355\u7684\u9632\u78b0\u649e \u53c2\u52a0 # \u8bba\u6587 # \u66f4\u591a\u6280\u672f\u7ec6\u8282\u8bf7\u53c2\u9605 AirSim \u8bba\u6587\uff08FSR 2017 \u4f1a\u8bae\uff09) \u3002\u8bf7\u5f15\u7528\uff1a @inproceedings{airsim2017fsr, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, title = {AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles}, year = {2017}, booktitle = {Field and Service Robotics}, eprint = {arXiv:1705.05065}, url = {https://arxiv.org/abs/1705.05065} } \u8d21\u732e # \u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\u7684\u9886\u57df\uff0c\u8bf7\u67e5\u770b \u672a\u89e3\u51b3\u7684\u95ee\u9898 \u3002 \u66f4\u591a\u5173\u4e8e AirSim \u8bbe\u8ba1\u7684\u4fe1\u606f \u6709\u5173\u4ee3\u7801\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f \u8d21\u732e\u6307\u5357 \u8c01\u5728\u4f7f\u7528 AirSim\uff1f # \u6211\u4eec\u7ef4\u62a4\u7740\u4e00\u4efd\u6211\u4eec\u6240\u77e5\u7684\u4e00\u4e9b\u9879\u76ee\u3001\u4eba\u5458\u548c\u56e2\u4f53\u7684 \u5217\u8868 \u3002\u5982\u679c\u60a8\u5e0c\u671b\u88ab\u6536\u5f55\u5728\u6b64\u5217\u8868\u4e2d\uff0c\u8bf7 \u5728\u6b64\u5904\u63d0\u4ea4\u7533\u8bf7 \u3002 \u8054\u7cfb # \u52a0\u5165\u6211\u4eec\u7684 GitHub \u8ba8\u8bba\u7ec4 \u4ee5\u4e86\u89e3\u6700\u65b0\u52a8\u6001\u6216\u63d0\u51fa\u4efb\u4f55\u95ee\u9898\u3002 \u6211\u4eec\u5728 Facebook \u4e0a\u8fd8\u6709\u4e00\u4e2a AirSim \u5c0f\u7ec4\u3002 \u6700\u65b0\u52a8\u6001 # \u7535\u5f71\u6444\u5f71\u673a ROS2 \u5305\u88c5\u5668 \u5217\u51fa\u6240\u6709\u8d44\u4ea7\u7684 API movetoGPS API \u5149\u6d41\u76f8\u673a simSetKinematics API \u4ece\u73b0\u6709\u7684 UE \u6750\u8d28\u6216\u7eb9\u7406 PNG \u52a8\u6001\u8bbe\u7f6e\u5bf9\u8c61\u7eb9\u7406 \u80fd\u591f\u4ea7\u751f/\u9500\u6bc1\u706f\u5149\u5e76\u63a7\u5236\u706f\u5149\u53c2\u6570 Unity \u652f\u6301\u591a\u67b6\u65e0\u4eba\u673a \u901a\u8fc7\u952e\u76d8\u63a7\u5236\u624b\u52a8\u76f8\u673a\u901f\u5ea6 \u4f7f\u7528AirSim\u7684\u9879\u76ee \u5982\u9700\u67e5\u770b\u5b8c\u6574\u7684\u53d8\u66f4\u5217\u8868\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684 \u53d8\u66f4\u65e5\u5fd7 \u5e38\u95ee\u95ee\u9898 # \u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u5e76\u968f\u65f6\u5728 AirSim \u5b58\u50a8\u5e93\u4e2d\u53d1\u5e03\u95ee\u9898\u3002 \u884c\u4e3a\u5b88\u5219 # \u672c\u9879\u76ee\u5df2\u91c7\u7528 \u5fae\u8f6f\u5f00\u6e90\u884c\u4e3a\u51c6\u5219 \u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605\u884c\u4e3a\u51c6\u5219\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\uff0c\u6216\u8054\u7cfb opencode@microsoft.com \u63d0\u51fa\u5176\u4ed6\u95ee\u9898\u6216\u610f\u89c1\u3002 \u8bb8\u53ef\u8bc1 # \u672c\u9879\u76ee\u9075\u5faa MIT \u8bb8\u53ef\u8bc1\u53d1\u5e03\u3002\u8bf7\u67e5\u770b \u8bb8\u53ef\u8bc1\u6587\u4ef6 \u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u3002","title":"\u4e3b\u9875"},{"location":"#_1","text":"\u8be5\u9879\u76ee\u57fa\u4e8e AirSim \u9879\u76ee\uff0c\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u96c6\u6210\u5230 HUTB \u9879\u76ee\u4e2d\uff0c\u914d\u7f6e\u65b9\u6cd5\u8bf7\u53c2\u8003 \u94fe\u63a5 \u3002 2017\u5e74\uff0c\u5fae\u8f6f\u7814\u7a76\u9662\u521b\u5efa\u4e86AirSim\uff0c\u4f5c\u4e3a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u548c\u5b9e\u9a8c\u7684\u6a21\u62df\u5e73\u53f0\u3002\u4e94\u5e74\u6765\uff0c\u8fd9\u4e2a\u7814\u7a76\u9879\u76ee\u5df2\u5b9e\u73b0\u5176\u76ee\u6807\uff0c\u5e76\u53d6\u5f97\u4e86\u957f\u8db3\u8fdb\u5c55\u2014\u2014\u6210\u4e3a\u5171\u4eab\u7814\u7a76\u4ee3\u7801\u548c\u6d4b\u8bd5\u7a7a\u4e2d\u4eba\u5de5\u667a\u80fd\u5f00\u53d1\u4e0e\u6a21\u62df\u65b0\u60f3\u6cd5\u7684\u5e38\u7528\u65b9\u5f0f\u3002\u6b64\u5916\uff0c\u65f6\u95f4\u4e5f\u63a8\u52a8\u4e86\u6211\u4eec\u5c06\u6280\u672f\u5e94\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u65b9\u5f0f\u4e0d\u65ad\u8fdb\u6b65\uff0c\u5c24\u5176\u662f\u5728\u7a7a\u4e2d\u673a\u52a8\u548c\u81ea\u4e3b\u7cfb\u7edf\u65b9\u9762\u3002\u4f8b\u5982\uff0c\u65e0\u4eba\u673a\u9001\u8d27\u4e0d\u518d\u662f\u79d1\u5e7b\u6545\u4e8b\uff0c\u800c\u662f\u5546\u4e1a\u73b0\u5b9e\uff0c\u8fd9\u610f\u5473\u7740\u65b0\u7684\u9700\u6c42\u9700\u8981\u6ee1\u8db3\u3002\u6211\u4eec\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6536\u83b7\u9887\u4e30\uff0c\u5e76\u611f\u8c22\u793e\u533a\u6210\u5458\u4e00\u76f4\u4ee5\u6765\u7684\u79ef\u6781\u53c2\u4e0e\u3002 \u672c\u7740\u4e0d\u65ad\u53d1\u5c55\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u5c06\u5728\u660e\u5e74\u53d1\u5e03\u4e00\u4e2a\u5168\u65b0\u7684\u6a21\u62df\u5e73\u53f0\uff0c\u5e76\u968f\u540e\u5b58\u6863\u539f\u7248 2017 \u5e74 AirSim\u3002\u6b64\u540e\uff0c\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u539f\u7248 AirSim \u4ee3\u7801\uff0c\u4f46\u4e0d\u4f1a\u7acb\u5373\u8fdb\u884c\u4efb\u4f55\u66f4\u65b0\u3002\u6211\u4eec\u5c06\u4e13\u6ce8\u4e8e\u5f00\u53d1\u4e00\u6b3e\u540d\u4e3a Microsoft Project AirSim \u7684\u65b0\u4ea7\u54c1\uff0c\u4ee5\u6ee1\u8db3\u822a\u7a7a\u822a\u5929\u4e1a\u65e5\u76ca\u589e\u957f\u7684\u9700\u6c42\u3002Project AirSim \u5c06\u63d0\u4f9b\u4e00\u4e2a\u7aef\u5230\u7aef\u5e73\u53f0\uff0c\u7528\u4e8e\u901a\u8fc7\u6a21\u62df\u5b89\u5168\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u81ea\u4e3b\u98de\u884c\u6280\u672f\u3002\u7528\u6237\u5c06\u53d7\u76ca\u4e8e\u5546\u4e1a\u4ea7\u54c1\u72ec\u6709\u7684\u5b89\u5168\u3001\u4ee3\u7801\u5ba1\u67e5\u3001\u6d4b\u8bd5\u3001\u9ad8\u7ea7\u6a21\u62df\u548c\u4eba\u5de5\u667a\u80fd\u529f\u80fd\u3002\u968f\u7740 Project AirSim \u53d1\u5e03\u7684\u4e34\u8fd1\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u5b66\u4e60\u5de5\u5177\u548c\u529f\u80fd\uff0c\u5e2e\u52a9\u60a8\u8fc1\u79fb\u5230\u65b0\u5e73\u53f0\u5e76\u6307\u5bfc\u60a8\u4f7f\u7528\u4ea7\u54c1\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4f7f\u7528\u5168\u65b0 Project AirSim \u6784\u5efa\u81ea\u4e3b\u98de\u884c\u6280\u672f\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee https://aka.ms/projectairsim \u3002 \u5fae\u8f6f\u4e0e IAMAI \u643a\u624b\u5408\u4f5c\uff0c\u901a\u8fc7 AirSim \u9879\u76ee\uff08AirSim \u7684\u5347\u7ea7\u7248\uff09\u63a8\u8fdb\u9ad8\u4fdd\u771f\u81ea\u4e3b\u9a7e\u9a76\u6a21\u62df\u6280\u672f\u3002\u8be5\u9879\u76ee\u57fa\u4e8e MIT \u8bb8\u53ef\u8bc1\u53d1\u5e03\uff0c\u662f DARPA \u652f\u6301\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002IAMAI \u5f88\u8363\u5e78\u80fd\u591f\u4e3a\u8fd9\u9879\u5de5\u4f5c\u505a\u51fa\u8d21\u732e\uff0c\u5e76\u5728 github.com/iamaisim/ProjectAirSim \u4e0a\u53d1\u5e03\u4e86\u5176\u7248\u672c\u7684 AirSim \u9879\u76ee\u4ee3\u7801\u5e93\u3002","title":"\u4f4e\u7a7a\u6a21\u62df\u5668"},{"location":"#airsim","text":"AirSim \u662f\u4e00\u6b3e\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\uff08\u6211\u4eec\u73b0\u5728\u4e5f\u53d1\u5e03\u4e86Unity\u5b9e\u9a8c\u7248\uff09\u7684\u65e0\u4eba\u673a\u3001\u6c7d\u8f66\u7b49\u6a21\u62df\u5668\u3002\u5b83\u662f\u5f00\u6e90\u7684\u8de8\u5e73\u53f0\u4eff\u771f\u5668\uff0c\u652f\u6301\u4f7f\u7528 PX4 \u548c ArduPilot \u7b49\u4e3b\u6d41\u98de\u884c\u63a7\u5236\u5668\u8fdb\u884c\u8f6f\u4ef6\u5728\u73af\u4eff\u771f\uff0c\u4ee5\u53ca\u4f7f\u7528 PX4 \u8fdb\u884c\u786c\u4ef6\u5728\u73af\u4eff\u771f\uff0c\u4ee5\u5b9e\u73b0\u7269\u7406\u548c\u89c6\u89c9\u4e0a\u903c\u771f\u7684\u6a21\u62df\u3002\u5b83\u4ee5\u865a\u5e7b\u63d2\u4ef6\u7684\u5f62\u5f0f\u5f00\u53d1\uff0c\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u5230\u4efb\u4f55\u865a\u5e7b\u73af\u5883\u4e2d\u3002\u540c\u6837\uff0c\u6211\u4eec\u4e5f\u53d1\u5e03\u4e86 Unity \u63d2\u4ef6\u7684\u5b9e\u9a8c\u7248\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06 AirSim \u5f00\u53d1\u4e3a\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5e73\u53f0\uff0c\u7528\u4e8e\u8bd5\u9a8c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u6df1\u5ea6\u5b66\u4e60\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002\u4e3a\u6b64\uff0cAirSim \u8fd8\u5f00\u653e\u4e86 API\uff0c\u4ee5\u4fbf\u4ee5\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u65b9\u5f0f\u68c0\u7d22\u6570\u636e\u548c\u63a7\u5236\u8f66\u8f86\u3002 \u89c2\u770b 1.5 \u5206\u949f\u7684\u5feb\u901f\u6f14\u793a AirSim \u4e2d\u7684\u65e0\u4eba\u673a AirSim \u4e2d\u7684\u6c7d\u8f66","title":"\u6b22\u8fce\u6765\u5230 AirSim"},{"location":"#_2","text":"","title":"\u5982\u4f55\u83b7\u53d6"},{"location":"#windows","text":"* \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6 * \u6784\u5efa\u5b83","title":"Windows"},{"location":"#linux","text":"* \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6 * \u6784\u5efa\u5b83","title":"Linux"},{"location":"#macos","text":"* \u6784\u5efa\u5b83 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4f7f\u7528\u9884\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6587\u6863\u3002","title":"macOS"},{"location":"#_3","text":"","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"#_4","text":"\u67e5\u770b\u6709\u5173 AirSim \u5404\u4e2a\u65b9\u9762\u7684 \u8be6\u7ec6\u6587\u6863 \u3002","title":"\u6587\u6863"},{"location":"#_5","text":"\u5982\u679c\u60a8\u62e5\u6709\u5982\u4e0b\u6240\u793a\u7684\u9065\u63a7\u5668 (Remote Control, RC)\uff0c\u5219\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u624b\u52a8\u63a7\u5236\u65e0\u4eba\u673a\u3002\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u7bad\u5934\u952e\u624b\u52a8\u9a7e\u9a76\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f","title":"\u624b\u52a8\u63a7\u5236"},{"location":"#_6","text":"AirSim \u63d0\u4f9b API\uff0c\u65b9\u4fbf\u60a8\u5728\u6a21\u62df\u4e2d\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u98de\u884c\u5668\u8fdb\u884c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b API \u68c0\u7d22\u56fe\u50cf\u3001\u83b7\u53d6\u72b6\u6001\u3001\u63a7\u5236\u98de\u884c\u5668\u7b49\u7b49\u3002\u8fd9\u4e9b API \u901a\u8fc7 RPC \u516c\u5f00\uff0c\u5e76\u53ef\u901a\u8fc7\u591a\u79cd\u8bed\u8a00\u8bbf\u95ee\uff0c\u5305\u62ec C++\u3001Python\u3001C# \u548c Java\u3002 \u8fd9\u4e9b API \u4e5f\u53ef\u4f5c\u4e3a\u72ec\u7acb\u7684\u8de8\u5e73\u53f0\u5e93\u7684\u4e00\u90e8\u5206\u4f7f\u7528\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u8f66\u8f86\u7684\u914d\u5957\u8ba1\u7b97\u673a\u4e0a\u3002\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u7f16\u5199\u548c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7136\u540e\u5728\u771f\u5b9e\u8f66\u8f86\u4e0a\u6267\u884c\u3002\u8fc1\u79fb\u5b66\u4e60\u53ca\u76f8\u5173\u7814\u7a76\u662f\u6211\u4eec\u7684\u91cd\u70b9\u9886\u57df\u4e4b\u4e00\u3002 \u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 SimMode \u8bbe\u7f6e \u6765\u6307\u5b9a\u9ed8\u8ba4\u8f66\u8f86\u6216\u65b0\u7684ComputerVision \u6a21\u5f0f\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u5728\u6bcf\u6b21\u542f\u52a8 AirSim \u65f6\u6536\u5230\u63d0\u793a\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f","title":"\u7a0b\u5e8f\u63a7\u5236"},{"location":"#_7","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4ece AirSim \u751f\u6210\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u6309\u4e0b\u53f3\u4e0b\u89d2\u7684\u201c\u5f55\u5236\u201d\u6309\u94ae\u3002\u8fd9\u5c06\u5f00\u59cb\u8bb0\u5f55\u6bcf\u4e00\u5e27\u7684\u59ff\u52bf\u548c\u56fe\u50cf\u3002\u6570\u636e\u8bb0\u5f55\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u8fdb\u884c\u4fee\u6539\u3002 \u6309\u7167\u60a8\u6240\u9700\u7684\u65b9\u5f0f\u751f\u6210\u8bad\u7ec3\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u8bbf\u95ee API\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u8bb0\u5f55\u6570\u636e\u7684\u65b9\u5f0f\u3001\u5185\u5bb9\u3001\u4f4d\u7f6e\u548c\u65f6\u95f4\u3002","title":"\u6536\u96c6\u8bad\u7ec3\u6570\u636e"},{"location":"#_8","text":"AirSim \u7684\u53e6\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u662f\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u60a8\u65e0\u9700\u4f7f\u7528\u8f66\u8f86\u6216\u7269\u7406\u5f15\u64ce\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u6216\u4f7f\u7528 API \u5c06\u53ef\u7528\u7684\u6444\u50cf\u5934\u5b9a\u4f4d\u5230\u4efb\u610f\u59ff\u52bf\uff0c\u5e76\u6536\u96c6\u8bf8\u5982\u6df1\u5ea6\u3001\u89c6\u5dee\u3001\u8868\u9762\u6cd5\u7ebf\u6216\u7269\u4f53\u5206\u5272\u7b49\u56fe\u50cf\u3002 \u66f4\u591a\u8be6\u7ec6\u4fe1\u606f","title":"\u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f"},{"location":"#_9","text":"\u6309 F10 \u67e5\u770b\u5404\u79cd\u53ef\u7528\u7684\u5929\u6c14\u6548\u679c\u9009\u9879\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 APIs \u63a7\u5236\u5929\u6c14\u3002\u6309 F1 \u67e5\u770b\u5176\u4ed6\u53ef\u7528\u9009\u9879\u3002","title":"\u5929\u6c14\u6548\u679c"},{"location":"#_10","text":"\u89c6\u9891 - \u4f7f\u7528 Pixhawk \u6559\u7a0b\u8bbe\u7f6e AirSim \u89c6\u9891 - \u4f7f\u7528 AirSim \u548c Pixhawk \u6559\u7a0b \u89c6\u9891 - \u4f7f\u7528 AirSim \u7684\u73b0\u6210\u73af\u5883 \u7f51\u7edc\u7814\u8ba8\u4f1a\u2014\u2014\u5229\u7528\u9ad8\u4fdd\u771f\u4eff\u771f\u5b9e\u73b0\u81ea\u4e3b\u7cfb\u7edf \u4f7f\u7528 AirSim \u8fdb\u884c\u5f3a\u5316\u5b66\u4e60 \u81ea\u52a8\u9a7e\u9a76\u98df\u8c31 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u7b80\u5355\u7684\u9632\u78b0\u649e","title":"\u6559\u7a0b"},{"location":"#_11","text":"","title":"\u53c2\u52a0"},{"location":"#_12","text":"\u66f4\u591a\u6280\u672f\u7ec6\u8282\u8bf7\u53c2\u9605 AirSim \u8bba\u6587\uff08FSR 2017 \u4f1a\u8bae\uff09) \u3002\u8bf7\u5f15\u7528\uff1a @inproceedings{airsim2017fsr, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, title = {AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles}, year = {2017}, booktitle = {Field and Service Robotics}, eprint = {arXiv:1705.05065}, url = {https://arxiv.org/abs/1705.05065} }","title":"\u8bba\u6587"},{"location":"#_13","text":"\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\u7684\u9886\u57df\uff0c\u8bf7\u67e5\u770b \u672a\u89e3\u51b3\u7684\u95ee\u9898 \u3002 \u66f4\u591a\u5173\u4e8e AirSim \u8bbe\u8ba1\u7684\u4fe1\u606f \u6709\u5173\u4ee3\u7801\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f \u8d21\u732e\u6307\u5357","title":"\u8d21\u732e"},{"location":"#airsim_1","text":"\u6211\u4eec\u7ef4\u62a4\u7740\u4e00\u4efd\u6211\u4eec\u6240\u77e5\u7684\u4e00\u4e9b\u9879\u76ee\u3001\u4eba\u5458\u548c\u56e2\u4f53\u7684 \u5217\u8868 \u3002\u5982\u679c\u60a8\u5e0c\u671b\u88ab\u6536\u5f55\u5728\u6b64\u5217\u8868\u4e2d\uff0c\u8bf7 \u5728\u6b64\u5904\u63d0\u4ea4\u7533\u8bf7 \u3002","title":"\u8c01\u5728\u4f7f\u7528 AirSim\uff1f"},{"location":"#_14","text":"\u52a0\u5165\u6211\u4eec\u7684 GitHub \u8ba8\u8bba\u7ec4 \u4ee5\u4e86\u89e3\u6700\u65b0\u52a8\u6001\u6216\u63d0\u51fa\u4efb\u4f55\u95ee\u9898\u3002 \u6211\u4eec\u5728 Facebook \u4e0a\u8fd8\u6709\u4e00\u4e2a AirSim \u5c0f\u7ec4\u3002","title":"\u8054\u7cfb"},{"location":"#_15","text":"\u7535\u5f71\u6444\u5f71\u673a ROS2 \u5305\u88c5\u5668 \u5217\u51fa\u6240\u6709\u8d44\u4ea7\u7684 API movetoGPS API \u5149\u6d41\u76f8\u673a simSetKinematics API \u4ece\u73b0\u6709\u7684 UE \u6750\u8d28\u6216\u7eb9\u7406 PNG \u52a8\u6001\u8bbe\u7f6e\u5bf9\u8c61\u7eb9\u7406 \u80fd\u591f\u4ea7\u751f/\u9500\u6bc1\u706f\u5149\u5e76\u63a7\u5236\u706f\u5149\u53c2\u6570 Unity \u652f\u6301\u591a\u67b6\u65e0\u4eba\u673a \u901a\u8fc7\u952e\u76d8\u63a7\u5236\u624b\u52a8\u76f8\u673a\u901f\u5ea6 \u4f7f\u7528AirSim\u7684\u9879\u76ee \u5982\u9700\u67e5\u770b\u5b8c\u6574\u7684\u53d8\u66f4\u5217\u8868\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684 \u53d8\u66f4\u65e5\u5fd7","title":"\u6700\u65b0\u52a8\u6001"},{"location":"#_16","text":"\u5982\u679c\u60a8\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u5e76\u968f\u65f6\u5728 AirSim \u5b58\u50a8\u5e93\u4e2d\u53d1\u5e03\u95ee\u9898\u3002","title":"\u5e38\u95ee\u95ee\u9898"},{"location":"#_17","text":"\u672c\u9879\u76ee\u5df2\u91c7\u7528 \u5fae\u8f6f\u5f00\u6e90\u884c\u4e3a\u51c6\u5219 \u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605\u884c\u4e3a\u51c6\u5219\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\uff0c\u6216\u8054\u7cfb opencode@microsoft.com \u63d0\u51fa\u5176\u4ed6\u95ee\u9898\u6216\u610f\u89c1\u3002","title":"\u884c\u4e3a\u5b88\u5219"},{"location":"#_18","text":"\u672c\u9879\u76ee\u9075\u5faa MIT \u8bb8\u53ef\u8bc1\u53d1\u5e03\u3002\u8bf7\u67e5\u770b \u8bb8\u53ef\u8bc1\u6587\u4ef6 \u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u3002","title":"\u8bb8\u53ef\u8bc1"},{"location":"CHANGELOG/","text":"What's new # Below is summarized list of important changes. This does not include minor/less important changes or bug fixes or documentation update. This list updated every few months. For complete detailed changes, please review commit history . Jan 2022 # Latest release v1.7.0 for Windows and Linux Dec 2021 # Cinematographic Camera ROS2 wrapper API to list all assets movetoGPS API Nov 2021 # Optical flow camera simSetKinematics API Dynamically set object textures from existing UE material or texture PNG Ability to spawn/destroy lights and control light parameters Sep 2021 # Support for multiple drones in Unity Aug 2021 # Control manual camera speed through the keyboard Latest release v1.6.0 for Windows and Linux Fix: DepthPlanar capture Fix: compression bug in segmentation palette Jul 2021 # Fixed external cameras Fix: ROS topic names Fix: Weather API crash Jun 2021 # Object detection API GazeboDrone project added to connect a gazebo drone to the AirSim drone Control manual camera speed through the keyboard Octo X config API for list of vehicle names Fix: issue where no new scene is rendered after simContinueForTime Fix:Check for settings.json in current directory as well May 2021 # Make falling leaves visible in depth and segmentation Fix: Unity Car API Latest release v1.5.0 for Windows and Linux fix px4 connection for wsl 2. Apr 2021 # External physics engine ArduPilot Sensor Updates Add new build configuration \"--RelWithDebInfo\" which makes it easier to debug Add ApiServerPort to available AirSim settings ROS: Use the same settings as AirSim Mar 2021 # Add moveByVelocityZBodyFrame Spawn vehicles via RPC Unity weather parameters, weather HUD, and a visual effect for snow Rotor output API Extend Recording to multiple vehicles Combine Lidar Segmentation API into getLidarData Feb 2021 # Add Ubuntu 20.04 to Actions CI add tcp server support to MavLinkTest Jan 2021 # Added continueForFrames Latest release v1.4.0 for Windows and Linux Dec 2020 # Add Actions script to build and deploy to gh-pages Gym environments and stable-baselines integration for RL Programmable camera distortion Voxel grid construction Event camera simulation Add Github Actions CI Checks Added moveByVelocityBodyFrame Nov 2020 # fix auto-detect of pixhawk 4 hardware Oct 2020 # [Travis] Add Ubuntu 20.04, OSX XCode 11.5 jobs Sep 2020 # Add Vehicle option for Subwindow settings Disable cameras after fetching images, projection matrix Add Wind simulation New simRunConsoleCommand API UE4: Fixes and improvements to World APIs UE4: Fix random crash with Plotting APIs Add backwards-compatibility layer for simSetCameraPose Disable LogMessages if set to false ROS: Removed double inclusion of static_transforms.launch Add retry loop when connecting PX4 SITL control channel Allow for enabling physics when spawning a new object July 2020 # Add Python APIs for new Object functions UE4: Fix Broken List Level Option Linux build improvements Allow passing the settings.json file location via --settings argument Distance Sensor Upgrades and fixes Update to min CMake version required for VS 2019 Fix: Non-linear bias corrupts SurfaceNormals, Segmentation image Fix: simGetSegmentationObjectID will always return -1 Initial implementation of simLoadLevel, simGet/SetObjectScale, simSpawn|DestroyObject APIs Upgrade setCameraOrientation API to setCameraPose ROS: All sensors and car support Get rid of potential div-0 errors so we can set dt = 0 for pausing ROS: Add mavros_msgs to build dependencies Move Wiki pages to docs Add Recording APIs Update Dockerfiles and documentation to Ubuntu 18.04 Azure development environment and documentation ROS: Add airsim_node to install list May 2020 # Fix more issues with PX4 master Reduce warnings level in Unity build Support for Unreal Engine 4.25 Unity crash fix, upgrade to 2019.3.12, Linux build improvements April 2020 # Fix issues with PX4 latest master branch Fix Lidar DrawDebugPoints causing crash Add docstrings for Python API Add missing noise, weather texture materials Update AirSim.uplugin version to 1.3.1 Camera Roll angle control using Q,E keys in CV mode, manual camera Remove broken GCC build New API - simSetTraceLine() ROS package compilation fixes and updates Latest release v1.3.1 for Windows and Linux APIs added and fixed - simSetCameraFov , rotateToYaw airsim Python package update to 1.2.8 NoDisplay ViewMode render state fix March 2020 # Latest release v1.3.0 for Windows and Linux Upgraded to Unreal Engine 4.24, Visual Studio 2019, Clang 8, C++ 17 standard Mac OSX Catalina support Updated airsim Python package, with lots of new APIs Removed legacy API wrappers Support for latest PX4 stable release Support for ArduPilot - Copter, Rover vehicles Updated Unity support Removed simChar* APIs Plotting APIs for Debugging Low-level Multirotor APIs Updated Eigen version to 3.3.7 Distance Sensor API fix Add simSwapTextures API Fix simContinueForTime , simPause APIs Lidar Sensor Trace Casting fix Fix rare reset() bug which causes Unreal crash Lidar sensor improvements, add simGetLidarSegmentation API Add RpcLibPort in settings Recording thread deadlock fix Prevent environment crash when Sun is not present Africa Tracking feautre, add simListSceneObjects() API, fix camera projection matrix ROS wrapper for multirotors is available. See airsim_ros_pkgs for the ROS API, and airsim_tutorial_pkgs for tutorials. Added sensor APIs for Barometer, IMU, GPS, Magnetometer, Distance Sensor Added support for docker in ubuntu November, 2018 # Added Weather Effects and APIs Added Time of Day API An experimental integration of AirSim on Unity is now available. Learn more in Unity blog post . New environments : Forest, Plains (windmill farm), TalkingHeads (human head simulation), TrapCam (animal detection via camera) Highly efficient NoDisplay view mode to turn off main screen rendering so you can capture images at high rate Enable/disable sensors via settings Lidar Sensor Support for Flysky FS-SM100 RC USB adapter Case Study: Formula Student Technion Driverless Multi-Vehicle Capability Custom speed units ROS publisher simSetObjectPose API Character Control APIs (works on TalkingHeads binaries in release) Arducopter Solo Support Linux install without sudo access Kinect like ROS publisher June, 2018 # Development workflow doc Better Python 2 compatibility OSX setup fixes Almost complete rewrite of our APIs with new threading model, merging old APIs and creating few newer ones April, 2018 # Upgraded to Unreal Engine 4.18 and Visual Studio 2017 API framework refactoring to support world-level APIs Latest PX4 firmware now supported CarState with more information ThrustMaster wheel support pause and continueForTime APIs for drone as well as car Allow drone simulation run at higher clock rate without any degradation Forward-only mode fully functional for drone (do orbits while looking at center) Better PID tuning to reduce wobble for drones Ability to set arbitrary vehicle blueprint for drone as well as car gimbal stabilization via settings Ability to segment skinned and skeletal meshes by their name moveByAngleThrottle API Car physics tuning for better maneuverability Configure additional cameras via settings Time of day with geographically computed sun position Better car steering via keyboard Added MeshNamingMethod in segmentation setting gimbal API getCameraParameters API Ability turn off main rendering to save GPU resources Projection mode for capture settings getRCData, setRCData APIs Ability to turn off segmentation using negative IDs OSX build improvements Segmentation working for very large environments with initial IDs Better and extensible hash calculation for segmentation IDs Extensible PID controller for custom integration methods Sensor architecture now enables renderer specific features like ray casting Laser altimeter sensor Jan 2018 # Config system rewrite, enable flexible config we are targeting in future Multi-Vehicle support Phase 1, core infrastructure changes MacOS support Infrared view 5 types of noise and interference for cameras WYSIWIG capture settings for cameras, preview recording settings in main view Azure support Phase 1, enable configurability of instances for headless mode Full kinematics APIs, ability to get pose, linear and angular velocities + accelerations via APIs Record multiple images from multiple cameras New segmentation APIs, ability to set configure object IDs, search via regex New object pose APIs, ability to get pose of objects (like animals) in environment Camera infrastructure enhancements, ability to add new image types like IR with just few lines Clock speed APIs for drone as well as car, simulation can be run with speed factor of 0 < x < infinity Support for Logitech G920 wheel Physics tuning of the car, Car doesn\u2019t roll over, responds to steering with better curve, releasing gas paddle behavior more realistic Debugging APIs Stress tested to 24+ hours of continuous runs Support for Landscape and sky segmentation Manual navigation with accelerated controls in CV mode, user can explore environment much more easily Collison APIs Recording enhancements, log several new data points including ground truth, multiple images, controls state Planner and Perspective Depth views Disparity view New Image APIs supports float, png or numpy formats 6 config settings for image capture, ability to set auto-exposure, motion blur, gamma etc Full multi-camera support through out including sub-windows, recording, APIs etc Command line script to build all environments in one shot Remove submodules, use rpclib as download Nov 2017 # We now have the car model . No need to build the code. Just download binaries and you are good to go! The reinforcement learning example with AirSim New built-in flight controller called simple_flight that \"just works\" without any additional setup. It is also now default . AirSim now also generates depth as well as disparity images that are in camera plane. We also have official Linux build now! Sep 2017 # We have added car model ! Aug 2017 # simple_flight is now default flight controller for drones. If you want to use PX4, you will need to modify settings.json as per PX4 setup doc . Linux build is official and currently uses Unreal 4.17 due to various bug fixes required ImageType enum has breaking changes with several new additions and clarifying existing ones SubWindows are now configurable from settings.json PythonClient is now complete and has parity with C++ APIs. Some of these would have breaking changes. Feb 2017 # First release!","title":"\u4fee\u6539\u8bb0\u5f55"},{"location":"CHANGELOG/#whats-new","text":"Below is summarized list of important changes. This does not include minor/less important changes or bug fixes or documentation update. This list updated every few months. For complete detailed changes, please review commit history .","title":"What's new"},{"location":"CHANGELOG/#jan-2022","text":"Latest release v1.7.0 for Windows and Linux","title":"Jan 2022"},{"location":"CHANGELOG/#dec-2021","text":"Cinematographic Camera ROS2 wrapper API to list all assets movetoGPS API","title":"Dec 2021"},{"location":"CHANGELOG/#nov-2021","text":"Optical flow camera simSetKinematics API Dynamically set object textures from existing UE material or texture PNG Ability to spawn/destroy lights and control light parameters","title":"Nov 2021"},{"location":"CHANGELOG/#sep-2021","text":"Support for multiple drones in Unity","title":"Sep 2021"},{"location":"CHANGELOG/#aug-2021","text":"Control manual camera speed through the keyboard Latest release v1.6.0 for Windows and Linux Fix: DepthPlanar capture Fix: compression bug in segmentation palette","title":"Aug 2021"},{"location":"CHANGELOG/#jul-2021","text":"Fixed external cameras Fix: ROS topic names Fix: Weather API crash","title":"Jul 2021"},{"location":"CHANGELOG/#jun-2021","text":"Object detection API GazeboDrone project added to connect a gazebo drone to the AirSim drone Control manual camera speed through the keyboard Octo X config API for list of vehicle names Fix: issue where no new scene is rendered after simContinueForTime Fix:Check for settings.json in current directory as well","title":"Jun 2021"},{"location":"CHANGELOG/#may-2021","text":"Make falling leaves visible in depth and segmentation Fix: Unity Car API Latest release v1.5.0 for Windows and Linux fix px4 connection for wsl 2.","title":"May 2021"},{"location":"CHANGELOG/#apr-2021","text":"External physics engine ArduPilot Sensor Updates Add new build configuration \"--RelWithDebInfo\" which makes it easier to debug Add ApiServerPort to available AirSim settings ROS: Use the same settings as AirSim","title":"Apr 2021"},{"location":"CHANGELOG/#mar-2021","text":"Add moveByVelocityZBodyFrame Spawn vehicles via RPC Unity weather parameters, weather HUD, and a visual effect for snow Rotor output API Extend Recording to multiple vehicles Combine Lidar Segmentation API into getLidarData","title":"Mar 2021"},{"location":"CHANGELOG/#feb-2021","text":"Add Ubuntu 20.04 to Actions CI add tcp server support to MavLinkTest","title":"Feb 2021"},{"location":"CHANGELOG/#jan-2021","text":"Added continueForFrames Latest release v1.4.0 for Windows and Linux","title":"Jan 2021"},{"location":"CHANGELOG/#dec-2020","text":"Add Actions script to build and deploy to gh-pages Gym environments and stable-baselines integration for RL Programmable camera distortion Voxel grid construction Event camera simulation Add Github Actions CI Checks Added moveByVelocityBodyFrame","title":"Dec 2020"},{"location":"CHANGELOG/#nov-2020","text":"fix auto-detect of pixhawk 4 hardware","title":"Nov 2020"},{"location":"CHANGELOG/#oct-2020","text":"[Travis] Add Ubuntu 20.04, OSX XCode 11.5 jobs","title":"Oct 2020"},{"location":"CHANGELOG/#sep-2020","text":"Add Vehicle option for Subwindow settings Disable cameras after fetching images, projection matrix Add Wind simulation New simRunConsoleCommand API UE4: Fixes and improvements to World APIs UE4: Fix random crash with Plotting APIs Add backwards-compatibility layer for simSetCameraPose Disable LogMessages if set to false ROS: Removed double inclusion of static_transforms.launch Add retry loop when connecting PX4 SITL control channel Allow for enabling physics when spawning a new object","title":"Sep 2020"},{"location":"CHANGELOG/#july-2020","text":"Add Python APIs for new Object functions UE4: Fix Broken List Level Option Linux build improvements Allow passing the settings.json file location via --settings argument Distance Sensor Upgrades and fixes Update to min CMake version required for VS 2019 Fix: Non-linear bias corrupts SurfaceNormals, Segmentation image Fix: simGetSegmentationObjectID will always return -1 Initial implementation of simLoadLevel, simGet/SetObjectScale, simSpawn|DestroyObject APIs Upgrade setCameraOrientation API to setCameraPose ROS: All sensors and car support Get rid of potential div-0 errors so we can set dt = 0 for pausing ROS: Add mavros_msgs to build dependencies Move Wiki pages to docs Add Recording APIs Update Dockerfiles and documentation to Ubuntu 18.04 Azure development environment and documentation ROS: Add airsim_node to install list","title":"July 2020"},{"location":"CHANGELOG/#may-2020","text":"Fix more issues with PX4 master Reduce warnings level in Unity build Support for Unreal Engine 4.25 Unity crash fix, upgrade to 2019.3.12, Linux build improvements","title":"May 2020"},{"location":"CHANGELOG/#april-2020","text":"Fix issues with PX4 latest master branch Fix Lidar DrawDebugPoints causing crash Add docstrings for Python API Add missing noise, weather texture materials Update AirSim.uplugin version to 1.3.1 Camera Roll angle control using Q,E keys in CV mode, manual camera Remove broken GCC build New API - simSetTraceLine() ROS package compilation fixes and updates Latest release v1.3.1 for Windows and Linux APIs added and fixed - simSetCameraFov , rotateToYaw airsim Python package update to 1.2.8 NoDisplay ViewMode render state fix","title":"April 2020"},{"location":"CHANGELOG/#march-2020","text":"Latest release v1.3.0 for Windows and Linux Upgraded to Unreal Engine 4.24, Visual Studio 2019, Clang 8, C++ 17 standard Mac OSX Catalina support Updated airsim Python package, with lots of new APIs Removed legacy API wrappers Support for latest PX4 stable release Support for ArduPilot - Copter, Rover vehicles Updated Unity support Removed simChar* APIs Plotting APIs for Debugging Low-level Multirotor APIs Updated Eigen version to 3.3.7 Distance Sensor API fix Add simSwapTextures API Fix simContinueForTime , simPause APIs Lidar Sensor Trace Casting fix Fix rare reset() bug which causes Unreal crash Lidar sensor improvements, add simGetLidarSegmentation API Add RpcLibPort in settings Recording thread deadlock fix Prevent environment crash when Sun is not present Africa Tracking feautre, add simListSceneObjects() API, fix camera projection matrix ROS wrapper for multirotors is available. See airsim_ros_pkgs for the ROS API, and airsim_tutorial_pkgs for tutorials. Added sensor APIs for Barometer, IMU, GPS, Magnetometer, Distance Sensor Added support for docker in ubuntu","title":"March 2020"},{"location":"CHANGELOG/#november-2018","text":"Added Weather Effects and APIs Added Time of Day API An experimental integration of AirSim on Unity is now available. Learn more in Unity blog post . New environments : Forest, Plains (windmill farm), TalkingHeads (human head simulation), TrapCam (animal detection via camera) Highly efficient NoDisplay view mode to turn off main screen rendering so you can capture images at high rate Enable/disable sensors via settings Lidar Sensor Support for Flysky FS-SM100 RC USB adapter Case Study: Formula Student Technion Driverless Multi-Vehicle Capability Custom speed units ROS publisher simSetObjectPose API Character Control APIs (works on TalkingHeads binaries in release) Arducopter Solo Support Linux install without sudo access Kinect like ROS publisher","title":"November, 2018"},{"location":"CHANGELOG/#june-2018","text":"Development workflow doc Better Python 2 compatibility OSX setup fixes Almost complete rewrite of our APIs with new threading model, merging old APIs and creating few newer ones","title":"June, 2018"},{"location":"CHANGELOG/#april-2018","text":"Upgraded to Unreal Engine 4.18 and Visual Studio 2017 API framework refactoring to support world-level APIs Latest PX4 firmware now supported CarState with more information ThrustMaster wheel support pause and continueForTime APIs for drone as well as car Allow drone simulation run at higher clock rate without any degradation Forward-only mode fully functional for drone (do orbits while looking at center) Better PID tuning to reduce wobble for drones Ability to set arbitrary vehicle blueprint for drone as well as car gimbal stabilization via settings Ability to segment skinned and skeletal meshes by their name moveByAngleThrottle API Car physics tuning for better maneuverability Configure additional cameras via settings Time of day with geographically computed sun position Better car steering via keyboard Added MeshNamingMethod in segmentation setting gimbal API getCameraParameters API Ability turn off main rendering to save GPU resources Projection mode for capture settings getRCData, setRCData APIs Ability to turn off segmentation using negative IDs OSX build improvements Segmentation working for very large environments with initial IDs Better and extensible hash calculation for segmentation IDs Extensible PID controller for custom integration methods Sensor architecture now enables renderer specific features like ray casting Laser altimeter sensor","title":"April, 2018"},{"location":"CHANGELOG/#jan-2018","text":"Config system rewrite, enable flexible config we are targeting in future Multi-Vehicle support Phase 1, core infrastructure changes MacOS support Infrared view 5 types of noise and interference for cameras WYSIWIG capture settings for cameras, preview recording settings in main view Azure support Phase 1, enable configurability of instances for headless mode Full kinematics APIs, ability to get pose, linear and angular velocities + accelerations via APIs Record multiple images from multiple cameras New segmentation APIs, ability to set configure object IDs, search via regex New object pose APIs, ability to get pose of objects (like animals) in environment Camera infrastructure enhancements, ability to add new image types like IR with just few lines Clock speed APIs for drone as well as car, simulation can be run with speed factor of 0 < x < infinity Support for Logitech G920 wheel Physics tuning of the car, Car doesn\u2019t roll over, responds to steering with better curve, releasing gas paddle behavior more realistic Debugging APIs Stress tested to 24+ hours of continuous runs Support for Landscape and sky segmentation Manual navigation with accelerated controls in CV mode, user can explore environment much more easily Collison APIs Recording enhancements, log several new data points including ground truth, multiple images, controls state Planner and Perspective Depth views Disparity view New Image APIs supports float, png or numpy formats 6 config settings for image capture, ability to set auto-exposure, motion blur, gamma etc Full multi-camera support through out including sub-windows, recording, APIs etc Command line script to build all environments in one shot Remove submodules, use rpclib as download","title":"Jan 2018"},{"location":"CHANGELOG/#nov-2017","text":"We now have the car model . No need to build the code. Just download binaries and you are good to go! The reinforcement learning example with AirSim New built-in flight controller called simple_flight that \"just works\" without any additional setup. It is also now default . AirSim now also generates depth as well as disparity images that are in camera plane. We also have official Linux build now!","title":"Nov 2017"},{"location":"CHANGELOG/#sep-2017","text":"We have added car model !","title":"Sep 2017"},{"location":"CHANGELOG/#aug-2017","text":"simple_flight is now default flight controller for drones. If you want to use PX4, you will need to modify settings.json as per PX4 setup doc . Linux build is official and currently uses Unreal 4.17 due to various bug fixes required ImageType enum has breaking changes with several new additions and clarifying existing ones SubWindows are now configurable from settings.json PythonClient is now complete and has parity with C++ APIs. Some of these would have breaking changes.","title":"Aug 2017"},{"location":"CHANGELOG/#feb-2017","text":"First release!","title":"Feb 2017"},{"location":"CONTRIBUTING/","text":"\u8d21\u732e # \u5feb\u901f\u5165\u95e8 # \u8bf7\u9605\u8bfb\u6211\u4eec\u7684 \u7b80\u77ed\u800c\u7cbe\u5f69\u7684\u7f16\u7801\u6307\u5357 \u3002 \u5bf9\u4e8e\u6dfb\u52a0\u65b0\u529f\u80fd\u6216\u91cd\u6784\u7b49\u91cd\u5927\u66f4\u6539\uff0c\u8bf7\u5148 \u63d0\u4ea4\u95ee\u9898 \u3002 \u4f7f\u7528\u6211\u4eec\u7684 \u63a8\u8350\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u8fdb\u884c\u66f4\u6539\u5e76\u6d4b\u8bd5\u5b83\u3002 \u4f7f\u7528 \u5e38\u89c4\u6b65\u9aa4 \u50cf\u5176\u4ed6 GitHub \u9879\u76ee\u4e00\u6837\u8fdb\u884c\u8d21\u732e\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089 Git \u7684\u201c\u5206\u652f-\u53d8\u57fa-\u5408\u5e76\u201d\u5de5\u4f5c\u6d41\u7a0b\uff0c\u8bf7 \u5148\u9605\u8bfb\u6b64\u6587 \u3002 \u6e05\u5355 # \u4f7f\u7528\u4e0e\u5176\u4f59\u4ee3\u7801\u76f8\u540c\u7684\u6837\u5f0f\u548c\u683c\u5f0f\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u60a8\u559c\u6b22\u7684\u3002 \u66f4\u6539\u4e0e\u4ee3\u7801\u66f4\u6539\u76f8\u5173\u7684\u4efb\u4f55\u6587\u6863\u3002 \u4e0d\u8981\u5305\u542b\u7279\u5b9a\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5934\u6587\u4ef6\u6216\u65b0\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u9879\u3002 \u4fdd\u6301\u4f60\u7684\u62c9\u53d6\u8bf7\u6c42\u8f83\u5c0f\uff0c\u6700\u597d\u5c11\u4e8e 10 \u4e2a\u6587\u4ef6\u3002 \u786e\u4fdd\u4e0d\u5305\u542b\u5927\u578b\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u5f53\u6dfb\u52a0\u65b0\u7684\u5305\u542b\u65f6\uff0c\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002 \u7ecf\u5e38\u4f7f\u7528\u4e3b\u5206\u652f Rebase \u60a8\u7684\u5206\u652f\uff08\u6bcf 2-3 \u5929\u4e00\u6b21\u662f\u7406\u60f3\u7684\uff09\u3002 \u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u5728 Windows\u3001Linux \u548c OSX \u4e0a\u7f16\u8bd1\u3002","title":"\u8d21\u732e"},{"location":"CONTRIBUTING/#_1","text":"","title":"\u8d21\u732e"},{"location":"CONTRIBUTING/#_2","text":"\u8bf7\u9605\u8bfb\u6211\u4eec\u7684 \u7b80\u77ed\u800c\u7cbe\u5f69\u7684\u7f16\u7801\u6307\u5357 \u3002 \u5bf9\u4e8e\u6dfb\u52a0\u65b0\u529f\u80fd\u6216\u91cd\u6784\u7b49\u91cd\u5927\u66f4\u6539\uff0c\u8bf7\u5148 \u63d0\u4ea4\u95ee\u9898 \u3002 \u4f7f\u7528\u6211\u4eec\u7684 \u63a8\u8350\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u8fdb\u884c\u66f4\u6539\u5e76\u6d4b\u8bd5\u5b83\u3002 \u4f7f\u7528 \u5e38\u89c4\u6b65\u9aa4 \u50cf\u5176\u4ed6 GitHub \u9879\u76ee\u4e00\u6837\u8fdb\u884c\u8d21\u732e\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089 Git \u7684\u201c\u5206\u652f-\u53d8\u57fa-\u5408\u5e76\u201d\u5de5\u4f5c\u6d41\u7a0b\uff0c\u8bf7 \u5148\u9605\u8bfb\u6b64\u6587 \u3002","title":"\u5feb\u901f\u5165\u95e8"},{"location":"CONTRIBUTING/#_3","text":"\u4f7f\u7528\u4e0e\u5176\u4f59\u4ee3\u7801\u76f8\u540c\u7684\u6837\u5f0f\u548c\u683c\u5f0f\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u60a8\u559c\u6b22\u7684\u3002 \u66f4\u6539\u4e0e\u4ee3\u7801\u66f4\u6539\u76f8\u5173\u7684\u4efb\u4f55\u6587\u6863\u3002 \u4e0d\u8981\u5305\u542b\u7279\u5b9a\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5934\u6587\u4ef6\u6216\u65b0\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u9879\u3002 \u4fdd\u6301\u4f60\u7684\u62c9\u53d6\u8bf7\u6c42\u8f83\u5c0f\uff0c\u6700\u597d\u5c11\u4e8e 10 \u4e2a\u6587\u4ef6\u3002 \u786e\u4fdd\u4e0d\u5305\u542b\u5927\u578b\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u5f53\u6dfb\u52a0\u65b0\u7684\u5305\u542b\u65f6\uff0c\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002 \u7ecf\u5e38\u4f7f\u7528\u4e3b\u5206\u652f Rebase \u60a8\u7684\u5206\u652f\uff08\u6bcf 2-3 \u5929\u4e00\u6b21\u662f\u7406\u60f3\u7684\uff09\u3002 \u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u5728 Windows\u3001Linux \u548c OSX \u4e0a\u7f16\u8bd1\u3002","title":"\u6e05\u5355"},{"location":"InfraredCamera/","text":"This is a tutorial for generating simulated thermal infrared (IR) images using AirSim and the AirSim Africa environment. Pre-compiled Africa Environment can be downloaded from the Releases tab of this Github repo: Windows Pre-compiled binary To generate your own data, you may use two python files: create_ir_segmentation_map.py and capture_ir_segmentation.py . create_ir_segmentation_map.py uses temperature, emissivity, and camera response information to estimate the thermal digital count that could be expected for the objects in the environment, and then reassigns the segmentation IDs in AirSim to match these digital counts. It should be run before starting to capture thermal IR data. Otherwise, digital counts in the IR images will be incorrect. The camera response, temperature, and emissivity data are all included for the Africa environment. capture_ir_segmentation.py is run after the segmentation IDs have been reassigned. It tracks objects of interest and records the infrared and scene images from the multirotor. It uses Computer Vision mode. Finally, the details about how temperatures were estimated for plants and animals in the Africa environment, etc. can be found in this paper: @inproceedings{bondi2018airsim, title={AirSim-W: A Simulation Environment for Wildlife Conservation with UAVs}, author={Bondi, Elizabeth and Dey, Debadeepta and Kapoor, Ashish and Piavis, Jim and Shah, Shital and Fang, Fei and Dilkina, Bistra and Hannaford, Robert and Iyer, Arvind and Joppa, Lucas and others}, booktitle={Proceedings of the 1st ACM SIGCAS Conference on Computing and Sustainable Societies}, pages={40}, year={2018}, organization={ACM} } nb","title":"\u7ea2\u5916\u76f8\u673a"},{"location":"SUPPORT/","text":"\u652f\u6301 # \u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u67e5\u770b\u6e90\u4ee3\u7801\u5e76\u4e3a\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002 \u7531\u4e8e\u6536\u5230\u7684\u529f\u80fd\u8bf7\u6c42\u6570\u91cf\u4f17\u591a\uff0c\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u5728\u60a8\u671f\u671b\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u60a8\u7684\u8bf7\u6c42\u3002 \u6240\u4ee5\u8bf7 \u8d21\u732e\u60a8\u7684\u4ee3\u7801 :)\u3002 \u5728\u8ba8\u8bba\u4e2d\u63d0\u95ee GitHub Issue \u52a0\u5165 AirSim Facebook \u7ec4","title":"\u652f\u6301"},{"location":"SUPPORT/#_1","text":"\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u67e5\u770b\u6e90\u4ee3\u7801\u5e76\u4e3a\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002 \u7531\u4e8e\u6536\u5230\u7684\u529f\u80fd\u8bf7\u6c42\u6570\u91cf\u4f17\u591a\uff0c\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u5728\u60a8\u671f\u671b\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u60a8\u7684\u8bf7\u6c42\u3002 \u6240\u4ee5\u8bf7 \u8d21\u732e\u60a8\u7684\u4ee3\u7801 :)\u3002 \u5728\u8ba8\u8bba\u4e2d\u63d0\u95ee GitHub Issue \u52a0\u5165 AirSim Facebook \u7ec4","title":"\u652f\u6301"},{"location":"adding_new_apis/","text":"\u5411 AirSim \u6dfb\u52a0\u65b0\u7684 API # \u6dfb\u52a0\u65b0\u7684 API \u9700\u8981\u4fee\u6539\u6e90\u4ee3\u7801\u3002\u8bb8\u591a\u66f4\u6539\u662f\u673a\u68b0\u7684\uff0c\u5e76\u4e14\u662f AirSim \u652f\u6301\u7684\u5404\u4e2a\u62bd\u8c61\u7ea7\u522b\u6240\u5fc5\u9700\u7684\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u9700\u8981\u4fee\u6539\u7684\u4e3b\u8981\u6587\u4ef6\uff0c\u5e76\u9644\u4e0a\u4e86\u4e00\u4e9b\u63d0\u4ea4\u548c PR \u4ee5\u4f9b\u6f14\u793a\u3002PR \u6216\u63d0\u4ea4\u7684\u7279\u5b9a\u90e8\u5206\u53ef\u80fd\u5728\u67d0\u4e9b\u5730\u65b9\u6709\u94fe\u63a5\uff0c\u4f46\u67e5\u770b\u5b8c\u6574\u7684 diff \u6709\u52a9\u4e8e\u66f4\u597d\u5730\u4e86\u89e3\u5de5\u4f5c\u6d41\u7a0b\u3002\u6b64\u5916\uff0c\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u5982\u4f55\u8fdb\u884c\u66f4\u6539\u6216\u9700\u8981\u83b7\u53d6\u53cd\u9988\uff0c\u8bf7\u968f\u65f6\u63d0\u4ea4\u95ee\u9898\u6216 PR \u8349\u7a3f\u3002 \u5b9e\u73b0 API # \u5728\u6dfb\u52a0\u5305\u88c5\u5668\u4ee3\u7801\u6765\u8c03\u7528\u548c\u5904\u7406 API \u4e4b\u524d\uff0c\u9700\u8981\u5148\u5b9e\u73b0\u5b83\u3002\u5177\u4f53\u5b9e\u73b0\u7684\u6587\u4ef6\u53d6\u51b3\u4e8e\u5b83\u7684\u5177\u4f53\u529f\u80fd\u3002\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e9b\u793a\u4f8b\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u60a8\u5165\u95e8\u3002 \u57fa\u4e8e\u8f66\u8f86\u7684 API # moveByVelocityBodyFrameAsync API \u7528\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668 X-Y \u6846\u67b6\u4e2d\u57fa\u4e8e\u901f\u5ea6\u7684\u8fd0\u52a8\u3002 \u4e3b\u8981\u5b9e\u73b0\u5728 MultirotorBaseApi.cpp \u4e2d\u5b8c\u6210\uff0c\u5176\u4e2d\u5b9e\u73b0\u4e86\u5927\u591a\u6570\u591a\u65cb\u7ffc API\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u7ed3\u6784\u6765\u5b58\u50a8\u6570\u636e\uff0c getRotorStates API \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc RotorStates \u7ed3\u6784\u4f53\u5728\u4e24\u5904\u88ab\u5b9a\u4e49\uff0c\u7528\u4e8e\u4ece RPC \u8f6c\u6362\u4e3a\u5185\u90e8\u4ee3\u7801\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u5728 AirLib \u4ee5\u53ca Unreal/Plugins \u4e2d\u8fdb\u884c\u4fee\u6539\u624d\u80fd\u5b9e\u73b0\u3002 \u73af\u5883\u76f8\u5173\u7684 API # \u8fd9\u4e9b API \u9700\u8981\u4e0e\u6a21\u62df\u73af\u5883\u672c\u8eab\u4ea4\u4e92\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u5728 Unreal/Plugins \u6587\u4ef6\u5939\u4e2d\u5b9e\u73b0\u3002 simCreateVoxelGrid API \u7528\u4e8e\u751f\u6210\u5e76\u4fdd\u5b58 binvox \u683c\u5f0f\u7684\u73af\u5883\u7f51\u683c - WorldSimApi.cpp simAddVehicle API \u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u8f66\u8f86 - SimMode*, WorldSimApi \u6587\u4ef6 \u7269\u7406\u76f8\u5173\u7684 API # simSetWind API \u5c55\u793a\u4e86\u4e00\u4e2a\u4fee\u6539\u7269\u7406\u884c\u4e3a\u5e76\u4e3a\u5176\u6dfb\u52a0 API + \u8bbe\u7f6e\u5b57\u6bb5\u7684\u793a\u4f8b\u3002\u6709\u5173\u4ee3\u7801\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 PR \u3002 RPC \u5305\u88c5\u5668 # \u8fd9\u4e9b API \u901a\u8fc7 Tam\u00c3\u00a1s Szelei \u5f00\u53d1\u7684 rpclib \u4f7f\u7528 TCP/IP \u4e0a\u7684 msgpack-rpc \u534f\u8bae \uff0c\u8be5\u5e93\u5141\u8bb8\u60a8\u4f7f\u7528\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec C++\u3001C#\u3001Python\u3001Java \u7b49\u3002AirSim \u542f\u52a8\u65f6\uff0c\u4f1a\u6253\u5f00 41451 \u7aef\u53e3\uff08\u53ef\u901a\u8fc7 \u8bbe\u7f6e \u66f4\u6539\uff09\u5e76\u76d1\u542c\u4f20\u5165\u8bf7\u6c42\u3002Python \u6216 C++ \u5ba2\u6237\u7aef\u4ee3\u7801\u8fde\u63a5\u5230\u6b64\u7aef\u53e3\uff0c\u5e76\u4f7f\u7528 msgpack \u5e8f\u5217\u5316\u683c\u5f0f \u53d1\u9001 RPC \u8c03\u7528\u3002 \u8981\u6dfb\u52a0 RPC \u4ee3\u7801\u6765\u8c03\u7528\u65b0\u7684 API\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002\u5176\u4ed6 API \u7684\u5b9e\u73b0\u8bf7\u53c2\u89c1\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u90e8\u5206\u3002 \u5728\u670d\u52a1\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a RPC \u5904\u7406\u7a0b\u5e8f\uff0c\u8be5\u5904\u7406\u7a0b\u5e8f\u4f1a\u8c03\u7528\u60a8\u5728 RpcLibServerBase.cpp \u4e2d\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u7279\u5b9a\u4e8e\u8f66\u8f86\u7684 API \u4f4d\u4e8e\u5176\u5404\u81ea\u7684 Vehicle \u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u5728 RpcClientBase.cpp \u4e2d\u6dfb\u52a0 C++ \u5ba2\u6237\u7aef API \u65b9\u6cd5 \u5728 client.py \u4e2d\u6dfb\u52a0 Python \u5ba2\u6237\u7aef API \u65b9\u6cd5\u3002\u5982\u679c\u9700\u8981\uff0c\u8bf7\u5728 types.py \u4e2d\u6dfb\u52a0\u6216\u4fee\u6539\u7ed3\u6784\u4f53\u5b9a\u4e49\u3002 \u6d4b\u8bd5 # \u9700\u8981\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd API \u80fd\u591f\u6309\u9884\u671f\u8fd0\u884c\u3002\u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u7684 AirSim \u548c Blocks \u73af\u5883\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f7f\u7528 Python API\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u6e90\u4ee3\u7801\u4e2d\u7684 airsim \u8f6f\u4ef6\u5305\uff0c\u800c\u4e0d\u662f PyPI \u8f6f\u4ef6\u5305\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u4e86 2 \u79cd\u4f7f\u7528\u6e90\u4ee3\u7801\u8f6f\u4ef6\u5305\u7684\u65b9\u6cd5 \u4f7f\u7528 setup_path.py \u3002\u5b83\u5c06\u8bbe\u7f6e\u8def\u5f84\uff0c\u4ee5\u4fbf\u4f7f\u7528\u672c\u5730 airsim \u6a21\u5757\u800c\u4e0d\u662f pip \u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u3002\u8bb8\u591a\u811a\u672c\u90fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7528\u6237\u9664\u4e86\u8fd0\u884c\u811a\u672c\u4e4b\u5916\u65e0\u9700\u6267\u884c\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u3002\u5c06\u793a\u4f8b\u811a\u672c\u653e\u5728 PythonClient \u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982 multirotor \u3001 car \u7b49\u3002\u60a8\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u4ece\u5176\u4ed6\u6587\u4ef6\u5939\u590d\u5236 setup_path.py \u6587\u4ef6\u3002\u5728\u6587\u4ef6\u4e2d\u7684 import airsim \u4e4b\u524d\u6dfb\u52a0 import setup_path \u3002\u73b0\u5728\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u4e3b API\uff08\u6216\u5f53\u524d\u68c0\u51fa\u7684\u4efb\u4f55\u5206\u652f\uff09\u3002 \u4f7f\u7528 \u672c\u5730\u9879\u76ee pip install \u3002\u5e38\u89c4\u5b89\u88c5\u4f1a\u521b\u5efa\u5f53\u524d\u6e90\u7684\u526f\u672c\u5e76\u4f7f\u7528\u5b83\uff0c\u800c\u53ef\u7f16\u8f91\u5b89\u88c5\uff08\u5728 PythonClient \u6587\u4ef6\u5939\u4e2d\u6267\u884c pip install -e . \uff09\u5219\u4f1a\u5728 Python API \u6587\u4ef6\u53d1\u751f\u66f4\u6539\u65f6\u66f4\u6539\u5305\u3002\u5728\u5904\u7406\u591a\u4e2a\u5206\u652f\u6216 API \u5c1a\u672a\u6700\u7ec8\u786e\u5b9a\u65f6\uff0c\u53ef\u7f16\u8f91\u5b89\u88c5\u66f4\u5177\u4f18\u52bf\u3002 \u5efa\u8bae\u4f7f\u7528\u865a\u62df\u73af\u5883\u6765\u5904\u7406 Python \u6253\u5305\uff0c\u4ee5\u514d\u7834\u574f\u4efb\u4f55\u73b0\u6709\u8bbe\u7f6e\u3002 \u63d0\u4ea4 PR \u65f6\uff0c\u8bf7\u52a1\u5fc5\u9075\u5faa \u7f16\u7801\u6307\u5357 \u3002\u6b64\u5916\uff0c\u8bf7\u5728 Python \u6587\u4ef6\u4e2d\u6dfb\u52a0 API \u7684\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u5e76\u5305\u542b\u811a\u672c\u4e2d\u6240\u9700\u7684\u6240\u6709\u793a\u4f8b\u811a\u672c\u548c\u8bbe\u7f6e\u3002","title":"\u6dfb\u52a0\u65b0\u7684 APIs"},{"location":"adding_new_apis/#airsim-api","text":"\u6dfb\u52a0\u65b0\u7684 API \u9700\u8981\u4fee\u6539\u6e90\u4ee3\u7801\u3002\u8bb8\u591a\u66f4\u6539\u662f\u673a\u68b0\u7684\uff0c\u5e76\u4e14\u662f AirSim \u652f\u6301\u7684\u5404\u4e2a\u62bd\u8c61\u7ea7\u522b\u6240\u5fc5\u9700\u7684\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u9700\u8981\u4fee\u6539\u7684\u4e3b\u8981\u6587\u4ef6\uff0c\u5e76\u9644\u4e0a\u4e86\u4e00\u4e9b\u63d0\u4ea4\u548c PR \u4ee5\u4f9b\u6f14\u793a\u3002PR \u6216\u63d0\u4ea4\u7684\u7279\u5b9a\u90e8\u5206\u53ef\u80fd\u5728\u67d0\u4e9b\u5730\u65b9\u6709\u94fe\u63a5\uff0c\u4f46\u67e5\u770b\u5b8c\u6574\u7684 diff \u6709\u52a9\u4e8e\u66f4\u597d\u5730\u4e86\u89e3\u5de5\u4f5c\u6d41\u7a0b\u3002\u6b64\u5916\uff0c\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u5982\u4f55\u8fdb\u884c\u66f4\u6539\u6216\u9700\u8981\u83b7\u53d6\u53cd\u9988\uff0c\u8bf7\u968f\u65f6\u63d0\u4ea4\u95ee\u9898\u6216 PR \u8349\u7a3f\u3002","title":"\u5411 AirSim \u6dfb\u52a0\u65b0\u7684 API"},{"location":"adding_new_apis/#api","text":"\u5728\u6dfb\u52a0\u5305\u88c5\u5668\u4ee3\u7801\u6765\u8c03\u7528\u548c\u5904\u7406 API \u4e4b\u524d\uff0c\u9700\u8981\u5148\u5b9e\u73b0\u5b83\u3002\u5177\u4f53\u5b9e\u73b0\u7684\u6587\u4ef6\u53d6\u51b3\u4e8e\u5b83\u7684\u5177\u4f53\u529f\u80fd\u3002\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e9b\u793a\u4f8b\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u60a8\u5165\u95e8\u3002","title":"\u5b9e\u73b0 API"},{"location":"adding_new_apis/#api_1","text":"moveByVelocityBodyFrameAsync API \u7528\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668 X-Y \u6846\u67b6\u4e2d\u57fa\u4e8e\u901f\u5ea6\u7684\u8fd0\u52a8\u3002 \u4e3b\u8981\u5b9e\u73b0\u5728 MultirotorBaseApi.cpp \u4e2d\u5b8c\u6210\uff0c\u5176\u4e2d\u5b9e\u73b0\u4e86\u5927\u591a\u6570\u591a\u65cb\u7ffc API\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u7ed3\u6784\u6765\u5b58\u50a8\u6570\u636e\uff0c getRotorStates API \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc RotorStates \u7ed3\u6784\u4f53\u5728\u4e24\u5904\u88ab\u5b9a\u4e49\uff0c\u7528\u4e8e\u4ece RPC \u8f6c\u6362\u4e3a\u5185\u90e8\u4ee3\u7801\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u5728 AirLib \u4ee5\u53ca Unreal/Plugins \u4e2d\u8fdb\u884c\u4fee\u6539\u624d\u80fd\u5b9e\u73b0\u3002","title":"\u57fa\u4e8e\u8f66\u8f86\u7684 API"},{"location":"adding_new_apis/#api_2","text":"\u8fd9\u4e9b API \u9700\u8981\u4e0e\u6a21\u62df\u73af\u5883\u672c\u8eab\u4ea4\u4e92\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u5728 Unreal/Plugins \u6587\u4ef6\u5939\u4e2d\u5b9e\u73b0\u3002 simCreateVoxelGrid API \u7528\u4e8e\u751f\u6210\u5e76\u4fdd\u5b58 binvox \u683c\u5f0f\u7684\u73af\u5883\u7f51\u683c - WorldSimApi.cpp simAddVehicle API \u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u8f66\u8f86 - SimMode*, WorldSimApi \u6587\u4ef6","title":"\u73af\u5883\u76f8\u5173\u7684 API"},{"location":"adding_new_apis/#api_3","text":"simSetWind API \u5c55\u793a\u4e86\u4e00\u4e2a\u4fee\u6539\u7269\u7406\u884c\u4e3a\u5e76\u4e3a\u5176\u6dfb\u52a0 API + \u8bbe\u7f6e\u5b57\u6bb5\u7684\u793a\u4f8b\u3002\u6709\u5173\u4ee3\u7801\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 PR \u3002","title":"\u7269\u7406\u76f8\u5173\u7684 API"},{"location":"adding_new_apis/#rpc","text":"\u8fd9\u4e9b API \u901a\u8fc7 Tam\u00c3\u00a1s Szelei \u5f00\u53d1\u7684 rpclib \u4f7f\u7528 TCP/IP \u4e0a\u7684 msgpack-rpc \u534f\u8bae \uff0c\u8be5\u5e93\u5141\u8bb8\u60a8\u4f7f\u7528\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec C++\u3001C#\u3001Python\u3001Java \u7b49\u3002AirSim \u542f\u52a8\u65f6\uff0c\u4f1a\u6253\u5f00 41451 \u7aef\u53e3\uff08\u53ef\u901a\u8fc7 \u8bbe\u7f6e \u66f4\u6539\uff09\u5e76\u76d1\u542c\u4f20\u5165\u8bf7\u6c42\u3002Python \u6216 C++ \u5ba2\u6237\u7aef\u4ee3\u7801\u8fde\u63a5\u5230\u6b64\u7aef\u53e3\uff0c\u5e76\u4f7f\u7528 msgpack \u5e8f\u5217\u5316\u683c\u5f0f \u53d1\u9001 RPC \u8c03\u7528\u3002 \u8981\u6dfb\u52a0 RPC \u4ee3\u7801\u6765\u8c03\u7528\u65b0\u7684 API\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\u3002\u5176\u4ed6 API \u7684\u5b9e\u73b0\u8bf7\u53c2\u89c1\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u90e8\u5206\u3002 \u5728\u670d\u52a1\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a RPC \u5904\u7406\u7a0b\u5e8f\uff0c\u8be5\u5904\u7406\u7a0b\u5e8f\u4f1a\u8c03\u7528\u60a8\u5728 RpcLibServerBase.cpp \u4e2d\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u7279\u5b9a\u4e8e\u8f66\u8f86\u7684 API \u4f4d\u4e8e\u5176\u5404\u81ea\u7684 Vehicle \u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u5728 RpcClientBase.cpp \u4e2d\u6dfb\u52a0 C++ \u5ba2\u6237\u7aef API \u65b9\u6cd5 \u5728 client.py \u4e2d\u6dfb\u52a0 Python \u5ba2\u6237\u7aef API \u65b9\u6cd5\u3002\u5982\u679c\u9700\u8981\uff0c\u8bf7\u5728 types.py \u4e2d\u6dfb\u52a0\u6216\u4fee\u6539\u7ed3\u6784\u4f53\u5b9a\u4e49\u3002","title":"RPC \u5305\u88c5\u5668"},{"location":"adding_new_apis/#_1","text":"\u9700\u8981\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd API \u80fd\u591f\u6309\u9884\u671f\u8fd0\u884c\u3002\u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u7684 AirSim \u548c Blocks \u73af\u5883\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f7f\u7528 Python API\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u6e90\u4ee3\u7801\u4e2d\u7684 airsim \u8f6f\u4ef6\u5305\uff0c\u800c\u4e0d\u662f PyPI \u8f6f\u4ef6\u5305\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u4e86 2 \u79cd\u4f7f\u7528\u6e90\u4ee3\u7801\u8f6f\u4ef6\u5305\u7684\u65b9\u6cd5 \u4f7f\u7528 setup_path.py \u3002\u5b83\u5c06\u8bbe\u7f6e\u8def\u5f84\uff0c\u4ee5\u4fbf\u4f7f\u7528\u672c\u5730 airsim \u6a21\u5757\u800c\u4e0d\u662f pip \u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u3002\u8bb8\u591a\u811a\u672c\u90fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7528\u6237\u9664\u4e86\u8fd0\u884c\u811a\u672c\u4e4b\u5916\u65e0\u9700\u6267\u884c\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u3002\u5c06\u793a\u4f8b\u811a\u672c\u653e\u5728 PythonClient \u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982 multirotor \u3001 car \u7b49\u3002\u60a8\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u4ece\u5176\u4ed6\u6587\u4ef6\u5939\u590d\u5236 setup_path.py \u6587\u4ef6\u3002\u5728\u6587\u4ef6\u4e2d\u7684 import airsim \u4e4b\u524d\u6dfb\u52a0 import setup_path \u3002\u73b0\u5728\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u4e3b API\uff08\u6216\u5f53\u524d\u68c0\u51fa\u7684\u4efb\u4f55\u5206\u652f\uff09\u3002 \u4f7f\u7528 \u672c\u5730\u9879\u76ee pip install \u3002\u5e38\u89c4\u5b89\u88c5\u4f1a\u521b\u5efa\u5f53\u524d\u6e90\u7684\u526f\u672c\u5e76\u4f7f\u7528\u5b83\uff0c\u800c\u53ef\u7f16\u8f91\u5b89\u88c5\uff08\u5728 PythonClient \u6587\u4ef6\u5939\u4e2d\u6267\u884c pip install -e . \uff09\u5219\u4f1a\u5728 Python API \u6587\u4ef6\u53d1\u751f\u66f4\u6539\u65f6\u66f4\u6539\u5305\u3002\u5728\u5904\u7406\u591a\u4e2a\u5206\u652f\u6216 API \u5c1a\u672a\u6700\u7ec8\u786e\u5b9a\u65f6\uff0c\u53ef\u7f16\u8f91\u5b89\u88c5\u66f4\u5177\u4f18\u52bf\u3002 \u5efa\u8bae\u4f7f\u7528\u865a\u62df\u73af\u5883\u6765\u5904\u7406 Python \u6253\u5305\uff0c\u4ee5\u514d\u7834\u574f\u4efb\u4f55\u73b0\u6709\u8bbe\u7f6e\u3002 \u63d0\u4ea4 PR \u65f6\uff0c\u8bf7\u52a1\u5fc5\u9075\u5faa \u7f16\u7801\u6307\u5357 \u3002\u6b64\u5916\uff0c\u8bf7\u5728 Python \u6587\u4ef6\u4e2d\u6dfb\u52a0 API \u7684\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u5e76\u5305\u542b\u811a\u672c\u4e2d\u6240\u9700\u7684\u6240\u6709\u793a\u4f8b\u811a\u672c\u548c\u8bbe\u7f6e\u3002","title":"\u6d4b\u8bd5"},{"location":"airsim_ros_pkgs/","text":"airsim_ros_pkgs # AirSim C++\u5ba2\u6237\u7aef\u5e93\u4e0a\u7684ROS\u5c01\u88c5\u3002 \u5b89\u88c5 # \u4ee5\u4e0b\u6b65\u9aa4\u9002\u7528\u4e8eLinux\u3002\u5982\u679c\u5728Windows\u4e0a\u8fd0\u884cAirSim\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528Windows Subsystem for Linux\uff08WSL\uff09\u6765\u8fd0\u884cROS\u5305\u88c5\uff0c\u8bf7\u53c2\u9605 \u4e0b\u9762 \u7684\u8bf4\u660e\u3002\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u95ee\u9898\uff0c\u60a8\u65e0\u6cd5\u6216\u4e0d\u559c\u6b22\u5728\u4e3b\u673aLinux\u4e0a\u5b89\u88c5ROS\u548c\u76f8\u5173\u5de5\u5177\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528Docker\u5c1d\u8bd5\uff0c\u8bf7\u53c2\u9605 \u4e3a ROS \u5c01\u88c5\u4f7f\u7528 Docker \u4e2d\u7684\u6b65\u9aa4 \u5982\u679c\u9ed8\u8ba4GCC\u7248\u672c\u4e0d\u662f8\u6216\u66f4\u9ad8\u7248\u672c\uff08\u4f7f\u7528 GCC--version \u68c0\u67e5\uff09 \u4f7f\u7528 gcc >= 8.0.0: sudo apt-get install gcc-8 g++-8 \u4f7f\u7528 gcc-8 --version \u9a8c\u8bc1\u5b89\u88c5 Ubuntu 16.04 \u5b89\u88c5 ROS kinetic \u5b89\u88c5tf2 sensor \u548c mavros \u5305\uff1a sudo apt-get install ros-kinetic-tf2-sensor-msgs ros-kinetic-tf2-geometry-msgs ros-kinetic-mavros* Ubuntu 18.04 \u5b89\u88c5 ROS melodic \u5b89\u88c5 tf2 sensor \u548c mavros \u5305: sudo apt-get install ros-melodic-tf2-sensor-msgs ros-melodic-tf2-geometry-msgs ros-melodic-mavros* Ubuntu 20.04 \u5b89\u88c5 ROS noetic \u5b89\u88c5 tf2 sensor \u548c mavros \u5305: sudo apt-get install ros-noetic-tf2-sensor-msgs ros-noetic-tf2-geometry-msgs ros-noetic-mavros* \u5b89\u88c5 catkin_tools sudo apt-get install python-catkin-tools \u6216 pip install catkin_tools \u3002 \u5982\u679c\u5728 Ubuntu 20.04 \u5219\u4f7f\u7528 pip install \"git+https://github.com/catkin/catkin_tools.git#egg=catkin_tools\" \u6784\u5efa # \u6784\u5efa AirSim git clone https://github.com/Microsoft/AirSim.git ; cd AirSim ; ./setup.sh ; ./build.sh ; \u786e\u4fdd\u5df2\u6309\u7167\u4e0a\u9762\u7684\u5b89\u88c5\u9875\u9762\u4e2d\u6240\u8ff0\u8bbe\u7f6eROS\u7684\u73af\u5883\u53d8\u91cf\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u5c06 source \u547d\u4ee4\u6dfb\u52a0\u5230 .bashrc \u4e2d\uff08\u7528\u7279\u5b9a\u7684\u7248\u672c\u540d\u66ff\u6362 mediatic \uff09\uff1a echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc \u6784\u5efa ROS \u5305 cd ros ; catkin build ; # \u6216 catkin_make \u5982\u679c\u9ed8\u8ba4GCC\u4e0d\u662f8\u6216\u66f4\u9ad8\uff08\u4f7f\u7528 GCC--version \u68c0\u67e5\uff09\uff0c\u5219\u7f16\u8bd1\u5c06\u5931\u8d25\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u663e\u5f0f\u4f7f\u7528 gcc-8 \uff0c\u5982\u4e0b\u6240\u793a catkin build -DCMAKE_C_COMPILER = gcc-8 -DCMAKE_CXX_COMPILER = g++-8 \u8fd0\u884c # source devel/setup.bash ; roslaunch airsim_ros_pkgs airsim_node.launch ; roslaunch airsim_ros_pkgs rviz.launch ; \u6ce8\u610f \u5982\u679c\u5728\u8fd0\u884c roslaunch airsim_ros_pkgs airsim_node.launch \u65f6\u51fa\u9519\uff0c\u8bf7\u8fd0\u884c catkin clean \uff0c\u7136\u540e\u91cd\u8bd5 \u4f7f\u7528 AirSim ROS \u5305\u88c5\u5668 # ROS\u5305\u88c5\u5668\u7531\u4e24\u4e2aROS\u8282\u70b9\u7ec4\u6210\u2014\u2014\u7b2c\u4e00\u4e2a\u662fAirSim\u591a\u65cb\u7ffc C++ \u5ba2\u6237\u7aef\u5e93\u7684\u5305\u88c5\u5668\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7b80\u5355\u7684 \u6bd4\u4f8b-\u5fae\u5206(PD) \u4f4d\u7f6e\u63a7\u5236\u5668\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u8fd9 2 \u4e2a\u8282\u70b9\u7684ROS API\uff1a AirSim ROS \u5305\u88c5\u5668\u8282\u70b9 # \u53d1\u5e03\u8005\uff1a # /airsim_node/origin_geo_point airsim_ros_pkgs/GPSYaw GPS coordinates corresponding to global NED frame. This is set in the airsim's settings.json file under the OriginGeopoint key. /airsim_node/VEHICLE_NAME/global_gps sensor_msgs/NavSatFix This the current GPS coordinates of the drone in airsim. /airsim_node/VEHICLE_NAME/odom_local_ned nav_msgs/Odometry Odometry in NED frame (default name: odom_local_ned, launch name and frame type are configurable) wrt take-off point. /airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE/camera_info sensor_msgs/CameraInfo /airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE sensor_msgs/Image RGB or float image depending on image type requested in settings.json. /tf tf2_msgs/TFMessage /airsim_node/VEHICLE_NAME/altimeter/SENSOR_NAME airsim_ros_pkgs/Altimeter This the current altimeter reading for altitude, pressure, and QNH /airsim_node/VEHICLE_NAME/imu/SENSOR_NAME sensor_msgs::Imu IMU sensor data /airsim_node/VEHICLE_NAME/magnetometer/SENSOR_NAME sensor_msgs::MagneticField Meausrement of magnetic field vector/compass /airsim_node/VEHICLE_NAME/distance/SENSOR_NAME sensor_msgs::Range Meausrement of distance from an active ranger, such as infrared or IR /airsim_node/VEHICLE_NAME/lidar/SENSOR_NAME sensor_msgs::PointCloud2 LIDAR pointcloud \u8ba2\u9605\u8005: # /airsim_node/vel_cmd_body_frame airsim_ros_pkgs/VelCmd Ignore vehicle_name field, leave it to blank. We will use vehicle_name in future for multiple drones. /airsim_node/vel_cmd_world_frame airsim_ros_pkgs/VelCmd Ignore vehicle_name field, leave it to blank. We will use vehicle_name in future for multiple drones. /gimbal_angle_euler_cmd airsim_ros_pkgs/GimbalAngleEulerCmd Gimbal set point in euler angles. /gimbal_angle_quat_cmd airsim_ros_pkgs/GimbalAngleQuatCmd Gimbal set point in quaternion. /airsim_node/VEHICLE_NAME/car_cmd airsim_ros_pkgs/CarControls Throttle, brake, steering and gear selections for control. Both automatic and manual transmission control possible, see the car_joy.py script for use. \u670d\u52a1: # /airsim_node/VEHICLE_NAME/land airsim_ros_pkgs/Takeoff /airsim_node/takeoff airsim_ros_pkgs/Takeoff /airsim_node/reset airsim_ros_pkgs/Reset Resets all drones \u53c2\u6570: # /airsim_node/world_frame_id [string] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: world_ned Set to \"world_enu\" to switch to ENU frames automatically /airsim_node/odom_frame_id [string] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: odom_local_ned If you set world_frame_id to \"world_enu\", the default odom name will instead default to \"odom_local_enu\" /airsim_node/coordinate_system_enu [boolean] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: false If you set world_frame_id to \"world_enu\", this setting will instead default to true /airsim_node/update_airsim_control_every_n_sec [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: 0.01 seconds. Timer callback frequency for updating drone odom and state from airsim, and sending in control commands. The current RPClib interface to unreal engine maxes out at 50 Hz. Timer callbacks in ROS run at maximum rate possible, so it's best to not touch this parameter. /airsim_node/update_airsim_img_response_every_n_sec [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: 0.01 seconds. Timer callback frequency for receiving images from all cameras in airsim. The speed will depend on number of images requested and their resolution. Timer callbacks in ROS run at maximum rate possible, so it's best to not touch this parameter. /airsim_node/publish_clock [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: false Will publish the ros /clock topic if set to true. \u7b80\u5355 PID \u4f4d\u7f6e\u63a7\u5236\u5668\u8282\u70b9 # \u53c2\u6570: # PD \u63a7\u5236\u5668\u53c2\u6570\uff1a /pd_position_node/kd_x [double], /pd_position_node/kp_y [double], /pd_position_node/kp_z [double], /pd_position_node/kp_yaw [double] Proportional gains /pd_position_node/kd_x [double], /pd_position_node/kd_y [double], /pd_position_node/kd_z [double], /pd_position_node/kd_yaw [double] Derivative gains /pd_position_node/reached_thresh_xyz [double] Threshold euler distance (meters) from current position to setpoint position /pd_position_node/reached_yaw_degrees [double] Threshold yaw distance (degrees) from current position to setpoint position /pd_position_node/update_control_every_n_sec [double] Default: 0.01 seconds \u670d\u52a1: # /airsim_node/VEHICLE_NAME/gps_goal [Request: srv/SetGPSPosition ] Target gps position + yaw. In absolute altitude. /airsim_node/VEHICLE_NAME/local_position_goal [Request: srv/SetLocalPosition ] Target local position + yaw in global NED frame. \u8ba2\u9605\u8005: # /airsim_node/origin_geo_point airsim_ros_pkgs/GPSYaw Listens to home geo coordinates published by airsim_node . /airsim_node/VEHICLE_NAME/odom_local_ned nav_msgs/Odometry Listens to odometry published by airsim_node \u53d1\u5e03\u8005: # /vel_cmd_world_frame airsim_ros_pkgs/VelCmd Sends velocity command to airsim_node \u5168\u5c40\u53c2\u6570 # Dynamic constraints. These can be changed in dynamic_constraints.launch : /max_vel_horz_abs [double] Maximum horizontal velocity of the drone (meters/second) /max_vel_vert_abs [double] Maximum vertical velocity of the drone (meters/second) /max_yaw_rate_degree [double] Maximum yaw rate (degrees/second) \u6742\u9879 # \u4f7f\u7528 WSL1 \u6216 WSL2 \u5728 Windows10 \u4e0a\u8bbe\u7f6e\u6784\u67b6\u73af\u5883 # \u8fd9\u4e9b\u5b89\u88c5\u8bf4\u660e\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6e\u201cWindows\u4e0aUbuntu\u4e0a\u7684Bash\u201d\uff08\u53c8\u540d\u201cLinux\u7684Windows\u5b50\u7cfb\u7edf\u201d\uff09\u3002 \u5b83\u6d89\u53ca\u5728Windows10\u4e2d\u542f\u7528\u5185\u7f6e\u7684Windows Linux\u73af\u5883\uff08WSL\uff09\uff0c\u5b89\u88c5\u517c\u5bb9\u7684Linux OS\u6620\u50cf\uff0c\u6700\u540e\u5b89\u88c5\u6784\u5efa\u73af\u5883\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u666e\u901a\u7684Linux\u7cfb\u7edf\u4e00\u6837\u3002 \u5b8c\u6210\u540e\uff0c\u60a8\u5c06\u80fd\u591f\u50cf\u5728\u672c\u673alinux\u673a\u5668\u4e2d\u4e00\u6837\u6784\u5efa\u548c\u8fd0\u884cros\u5305\u88c5\u5668\u3002 WSL1 vs WSL2 # WSL2 is the latest version of the Windows10 Subsystem for Linux. It is many times faster than WSL1 (if you use the native file system in /home/... rather than Windows mounted folders under /mnt/... ) and is therefore much preferred for building the code in terms of speed. Once installed, you can switch between WSL1 or WSL2 versions as you prefer. WSL Setup steps # Follow the instructions here . Check that the ROS version you want to use is supported by the Ubuntu version you want to install. Congratulations, you now have a working Ubuntu subsystem under Windows, you can now go to Ubuntu 16 / 18 instructions and then How to run Airsim on Windows and ROS wrapper on WSL ! Note You can run XWindows applications (including SITL) by installing VcXsrv on Windows. To use it find and run XLaunch from the Windows start menu. Select Multiple Windows in first popup, Start no client in second popup, only Clipboard in third popup. Do not select Native Opengl (and if you are not able to connect select Disable access control ). You will need to set the DISPLAY variable to point to your display: in WSL it is 127.0.0.1:0 , in WSL2 it will be the ip address of the PC's network port and can be set by using the code below. Also in WSL2 you may have to disable the firewall for public networks, or create an exception in order for VcXsrv to communicate with WSL2: export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0 Tip If you add this line to your ~/.bashrc file you won't need to run this command again For code editing you can install VSCode inside WSL. Windows 10 includes \"Windows Defender\" virus scanner. It will slow down WSL quite a bit. Disabling it greatly improves disk performance but increases your risk to viruses so disable at your own risk. Here is one of many resources/videos that show you how to disable it: How to Disable or Enable Windows Defender on Windows 10 File System Access between WSL and Windows10 # From within WSL, the Windows drives are referenced in the /mnt directory. For example, in order to list documents within your ( ) documents folder: `ls /mnt/c/'Documents and Settings'/<username>/Documents` or `ls /mnt/c/Users/<username>/Documents` From within Windows, the WSL distribution's files are located at (type in windows Explorer address bar): \\\\wsl$\\<distribution name> e.g. \\\\wsl$\\Ubuntu-18.04 How to run Airsim on Windows and ROS wrapper on WSL # For WSL 1 execute: export WSL_HOST_IP=127.0.0.1 and for WSL 2: export WSL_HOST_IP=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}') Now, as in the running section for linux , execute the following: source devel/setup.bash roslaunch airsim_ros_pkgs airsim_node.launch output: = screen host: = $WSL_HOST_IP roslaunch airsim_ros_pkgs rviz.launch Using Docker for ROS # A Dockerfile is present in the tools directory. To build the airsim-ros image - cd tools docker build -t airsim-ros -f Dockerfile-ROS . To run, replace the path of the AirSim folder below - docker run --rm -it --net = host -v <your-AirSim-folder-path>:/home/testuser/AirSim airsim-ros:latest bash The above command mounts the AirSim directory to the home directory inside the container. Any changes you make in the source files from your host will be visible inside the container, which is useful for development and testing. Now follow the steps from Build to compile and run the ROS wrapper.","title":"ROS: AirSim ROS \u5305\u88c5\u5668"},{"location":"airsim_ros_pkgs/#airsim_ros_pkgs","text":"AirSim C++\u5ba2\u6237\u7aef\u5e93\u4e0a\u7684ROS\u5c01\u88c5\u3002","title":"airsim_ros_pkgs"},{"location":"airsim_ros_pkgs/#_1","text":"\u4ee5\u4e0b\u6b65\u9aa4\u9002\u7528\u4e8eLinux\u3002\u5982\u679c\u5728Windows\u4e0a\u8fd0\u884cAirSim\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528Windows Subsystem for Linux\uff08WSL\uff09\u6765\u8fd0\u884cROS\u5305\u88c5\uff0c\u8bf7\u53c2\u9605 \u4e0b\u9762 \u7684\u8bf4\u660e\u3002\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u95ee\u9898\uff0c\u60a8\u65e0\u6cd5\u6216\u4e0d\u559c\u6b22\u5728\u4e3b\u673aLinux\u4e0a\u5b89\u88c5ROS\u548c\u76f8\u5173\u5de5\u5177\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528Docker\u5c1d\u8bd5\uff0c\u8bf7\u53c2\u9605 \u4e3a ROS \u5c01\u88c5\u4f7f\u7528 Docker \u4e2d\u7684\u6b65\u9aa4 \u5982\u679c\u9ed8\u8ba4GCC\u7248\u672c\u4e0d\u662f8\u6216\u66f4\u9ad8\u7248\u672c\uff08\u4f7f\u7528 GCC--version \u68c0\u67e5\uff09 \u4f7f\u7528 gcc >= 8.0.0: sudo apt-get install gcc-8 g++-8 \u4f7f\u7528 gcc-8 --version \u9a8c\u8bc1\u5b89\u88c5 Ubuntu 16.04 \u5b89\u88c5 ROS kinetic \u5b89\u88c5tf2 sensor \u548c mavros \u5305\uff1a sudo apt-get install ros-kinetic-tf2-sensor-msgs ros-kinetic-tf2-geometry-msgs ros-kinetic-mavros* Ubuntu 18.04 \u5b89\u88c5 ROS melodic \u5b89\u88c5 tf2 sensor \u548c mavros \u5305: sudo apt-get install ros-melodic-tf2-sensor-msgs ros-melodic-tf2-geometry-msgs ros-melodic-mavros* Ubuntu 20.04 \u5b89\u88c5 ROS noetic \u5b89\u88c5 tf2 sensor \u548c mavros \u5305: sudo apt-get install ros-noetic-tf2-sensor-msgs ros-noetic-tf2-geometry-msgs ros-noetic-mavros* \u5b89\u88c5 catkin_tools sudo apt-get install python-catkin-tools \u6216 pip install catkin_tools \u3002 \u5982\u679c\u5728 Ubuntu 20.04 \u5219\u4f7f\u7528 pip install \"git+https://github.com/catkin/catkin_tools.git#egg=catkin_tools\"","title":"\u5b89\u88c5"},{"location":"airsim_ros_pkgs/#_2","text":"\u6784\u5efa AirSim git clone https://github.com/Microsoft/AirSim.git ; cd AirSim ; ./setup.sh ; ./build.sh ; \u786e\u4fdd\u5df2\u6309\u7167\u4e0a\u9762\u7684\u5b89\u88c5\u9875\u9762\u4e2d\u6240\u8ff0\u8bbe\u7f6eROS\u7684\u73af\u5883\u53d8\u91cf\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u5c06 source \u547d\u4ee4\u6dfb\u52a0\u5230 .bashrc \u4e2d\uff08\u7528\u7279\u5b9a\u7684\u7248\u672c\u540d\u66ff\u6362 mediatic \uff09\uff1a echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc \u6784\u5efa ROS \u5305 cd ros ; catkin build ; # \u6216 catkin_make \u5982\u679c\u9ed8\u8ba4GCC\u4e0d\u662f8\u6216\u66f4\u9ad8\uff08\u4f7f\u7528 GCC--version \u68c0\u67e5\uff09\uff0c\u5219\u7f16\u8bd1\u5c06\u5931\u8d25\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u663e\u5f0f\u4f7f\u7528 gcc-8 \uff0c\u5982\u4e0b\u6240\u793a catkin build -DCMAKE_C_COMPILER = gcc-8 -DCMAKE_CXX_COMPILER = g++-8","title":"\u6784\u5efa"},{"location":"airsim_ros_pkgs/#_3","text":"source devel/setup.bash ; roslaunch airsim_ros_pkgs airsim_node.launch ; roslaunch airsim_ros_pkgs rviz.launch ; \u6ce8\u610f \u5982\u679c\u5728\u8fd0\u884c roslaunch airsim_ros_pkgs airsim_node.launch \u65f6\u51fa\u9519\uff0c\u8bf7\u8fd0\u884c catkin clean \uff0c\u7136\u540e\u91cd\u8bd5","title":"\u8fd0\u884c"},{"location":"airsim_ros_pkgs/#airsim-ros","text":"ROS\u5305\u88c5\u5668\u7531\u4e24\u4e2aROS\u8282\u70b9\u7ec4\u6210\u2014\u2014\u7b2c\u4e00\u4e2a\u662fAirSim\u591a\u65cb\u7ffc C++ \u5ba2\u6237\u7aef\u5e93\u7684\u5305\u88c5\u5668\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7b80\u5355\u7684 \u6bd4\u4f8b-\u5fae\u5206(PD) \u4f4d\u7f6e\u63a7\u5236\u5668\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u8fd9 2 \u4e2a\u8282\u70b9\u7684ROS API\uff1a","title":"\u4f7f\u7528 AirSim ROS \u5305\u88c5\u5668"},{"location":"airsim_ros_pkgs/#airsim-ros_1","text":"","title":"AirSim ROS \u5305\u88c5\u5668\u8282\u70b9"},{"location":"airsim_ros_pkgs/#_4","text":"/airsim_node/origin_geo_point airsim_ros_pkgs/GPSYaw GPS coordinates corresponding to global NED frame. This is set in the airsim's settings.json file under the OriginGeopoint key. /airsim_node/VEHICLE_NAME/global_gps sensor_msgs/NavSatFix This the current GPS coordinates of the drone in airsim. /airsim_node/VEHICLE_NAME/odom_local_ned nav_msgs/Odometry Odometry in NED frame (default name: odom_local_ned, launch name and frame type are configurable) wrt take-off point. /airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE/camera_info sensor_msgs/CameraInfo /airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE sensor_msgs/Image RGB or float image depending on image type requested in settings.json. /tf tf2_msgs/TFMessage /airsim_node/VEHICLE_NAME/altimeter/SENSOR_NAME airsim_ros_pkgs/Altimeter This the current altimeter reading for altitude, pressure, and QNH /airsim_node/VEHICLE_NAME/imu/SENSOR_NAME sensor_msgs::Imu IMU sensor data /airsim_node/VEHICLE_NAME/magnetometer/SENSOR_NAME sensor_msgs::MagneticField Meausrement of magnetic field vector/compass /airsim_node/VEHICLE_NAME/distance/SENSOR_NAME sensor_msgs::Range Meausrement of distance from an active ranger, such as infrared or IR /airsim_node/VEHICLE_NAME/lidar/SENSOR_NAME sensor_msgs::PointCloud2 LIDAR pointcloud","title":"\u53d1\u5e03\u8005\uff1a"},{"location":"airsim_ros_pkgs/#_5","text":"/airsim_node/vel_cmd_body_frame airsim_ros_pkgs/VelCmd Ignore vehicle_name field, leave it to blank. We will use vehicle_name in future for multiple drones. /airsim_node/vel_cmd_world_frame airsim_ros_pkgs/VelCmd Ignore vehicle_name field, leave it to blank. We will use vehicle_name in future for multiple drones. /gimbal_angle_euler_cmd airsim_ros_pkgs/GimbalAngleEulerCmd Gimbal set point in euler angles. /gimbal_angle_quat_cmd airsim_ros_pkgs/GimbalAngleQuatCmd Gimbal set point in quaternion. /airsim_node/VEHICLE_NAME/car_cmd airsim_ros_pkgs/CarControls Throttle, brake, steering and gear selections for control. Both automatic and manual transmission control possible, see the car_joy.py script for use.","title":"\u8ba2\u9605\u8005:"},{"location":"airsim_ros_pkgs/#_6","text":"/airsim_node/VEHICLE_NAME/land airsim_ros_pkgs/Takeoff /airsim_node/takeoff airsim_ros_pkgs/Takeoff /airsim_node/reset airsim_ros_pkgs/Reset Resets all drones","title":"\u670d\u52a1:"},{"location":"airsim_ros_pkgs/#_7","text":"/airsim_node/world_frame_id [string] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: world_ned Set to \"world_enu\" to switch to ENU frames automatically /airsim_node/odom_frame_id [string] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: odom_local_ned If you set world_frame_id to \"world_enu\", the default odom name will instead default to \"odom_local_enu\" /airsim_node/coordinate_system_enu [boolean] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: false If you set world_frame_id to \"world_enu\", this setting will instead default to true /airsim_node/update_airsim_control_every_n_sec [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: 0.01 seconds. Timer callback frequency for updating drone odom and state from airsim, and sending in control commands. The current RPClib interface to unreal engine maxes out at 50 Hz. Timer callbacks in ROS run at maximum rate possible, so it's best to not touch this parameter. /airsim_node/update_airsim_img_response_every_n_sec [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: 0.01 seconds. Timer callback frequency for receiving images from all cameras in airsim. The speed will depend on number of images requested and their resolution. Timer callbacks in ROS run at maximum rate possible, so it's best to not touch this parameter. /airsim_node/publish_clock [double] Set in: $(airsim_ros_pkgs)/launch/airsim_node.launch Default: false Will publish the ros /clock topic if set to true.","title":"\u53c2\u6570:"},{"location":"airsim_ros_pkgs/#pid","text":"","title":"\u7b80\u5355 PID \u4f4d\u7f6e\u63a7\u5236\u5668\u8282\u70b9"},{"location":"airsim_ros_pkgs/#_8","text":"PD \u63a7\u5236\u5668\u53c2\u6570\uff1a /pd_position_node/kd_x [double], /pd_position_node/kp_y [double], /pd_position_node/kp_z [double], /pd_position_node/kp_yaw [double] Proportional gains /pd_position_node/kd_x [double], /pd_position_node/kd_y [double], /pd_position_node/kd_z [double], /pd_position_node/kd_yaw [double] Derivative gains /pd_position_node/reached_thresh_xyz [double] Threshold euler distance (meters) from current position to setpoint position /pd_position_node/reached_yaw_degrees [double] Threshold yaw distance (degrees) from current position to setpoint position /pd_position_node/update_control_every_n_sec [double] Default: 0.01 seconds","title":"\u53c2\u6570:"},{"location":"airsim_ros_pkgs/#_9","text":"/airsim_node/VEHICLE_NAME/gps_goal [Request: srv/SetGPSPosition ] Target gps position + yaw. In absolute altitude. /airsim_node/VEHICLE_NAME/local_position_goal [Request: srv/SetLocalPosition ] Target local position + yaw in global NED frame.","title":"\u670d\u52a1:"},{"location":"airsim_ros_pkgs/#_10","text":"/airsim_node/origin_geo_point airsim_ros_pkgs/GPSYaw Listens to home geo coordinates published by airsim_node . /airsim_node/VEHICLE_NAME/odom_local_ned nav_msgs/Odometry Listens to odometry published by airsim_node","title":"\u8ba2\u9605\u8005:"},{"location":"airsim_ros_pkgs/#_11","text":"/vel_cmd_world_frame airsim_ros_pkgs/VelCmd Sends velocity command to airsim_node","title":"\u53d1\u5e03\u8005:"},{"location":"airsim_ros_pkgs/#_12","text":"Dynamic constraints. These can be changed in dynamic_constraints.launch : /max_vel_horz_abs [double] Maximum horizontal velocity of the drone (meters/second) /max_vel_vert_abs [double] Maximum vertical velocity of the drone (meters/second) /max_yaw_rate_degree [double] Maximum yaw rate (degrees/second)","title":"\u5168\u5c40\u53c2\u6570"},{"location":"airsim_ros_pkgs/#_13","text":"","title":"\u6742\u9879"},{"location":"airsim_ros_pkgs/#wsl1-wsl2-windows10","text":"\u8fd9\u4e9b\u5b89\u88c5\u8bf4\u660e\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6e\u201cWindows\u4e0aUbuntu\u4e0a\u7684Bash\u201d\uff08\u53c8\u540d\u201cLinux\u7684Windows\u5b50\u7cfb\u7edf\u201d\uff09\u3002 \u5b83\u6d89\u53ca\u5728Windows10\u4e2d\u542f\u7528\u5185\u7f6e\u7684Windows Linux\u73af\u5883\uff08WSL\uff09\uff0c\u5b89\u88c5\u517c\u5bb9\u7684Linux OS\u6620\u50cf\uff0c\u6700\u540e\u5b89\u88c5\u6784\u5efa\u73af\u5883\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u666e\u901a\u7684Linux\u7cfb\u7edf\u4e00\u6837\u3002 \u5b8c\u6210\u540e\uff0c\u60a8\u5c06\u80fd\u591f\u50cf\u5728\u672c\u673alinux\u673a\u5668\u4e2d\u4e00\u6837\u6784\u5efa\u548c\u8fd0\u884cros\u5305\u88c5\u5668\u3002","title":"\u4f7f\u7528 WSL1 \u6216 WSL2 \u5728 Windows10 \u4e0a\u8bbe\u7f6e\u6784\u67b6\u73af\u5883"},{"location":"airsim_ros_pkgs/#wsl1-vs-wsl2","text":"WSL2 is the latest version of the Windows10 Subsystem for Linux. It is many times faster than WSL1 (if you use the native file system in /home/... rather than Windows mounted folders under /mnt/... ) and is therefore much preferred for building the code in terms of speed. Once installed, you can switch between WSL1 or WSL2 versions as you prefer.","title":"WSL1 vs WSL2"},{"location":"airsim_ros_pkgs/#wsl-setup-steps","text":"Follow the instructions here . Check that the ROS version you want to use is supported by the Ubuntu version you want to install. Congratulations, you now have a working Ubuntu subsystem under Windows, you can now go to Ubuntu 16 / 18 instructions and then How to run Airsim on Windows and ROS wrapper on WSL ! Note You can run XWindows applications (including SITL) by installing VcXsrv on Windows. To use it find and run XLaunch from the Windows start menu. Select Multiple Windows in first popup, Start no client in second popup, only Clipboard in third popup. Do not select Native Opengl (and if you are not able to connect select Disable access control ). You will need to set the DISPLAY variable to point to your display: in WSL it is 127.0.0.1:0 , in WSL2 it will be the ip address of the PC's network port and can be set by using the code below. Also in WSL2 you may have to disable the firewall for public networks, or create an exception in order for VcXsrv to communicate with WSL2: export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0 Tip If you add this line to your ~/.bashrc file you won't need to run this command again For code editing you can install VSCode inside WSL. Windows 10 includes \"Windows Defender\" virus scanner. It will slow down WSL quite a bit. Disabling it greatly improves disk performance but increases your risk to viruses so disable at your own risk. Here is one of many resources/videos that show you how to disable it: How to Disable or Enable Windows Defender on Windows 10","title":"WSL Setup steps"},{"location":"airsim_ros_pkgs/#file-system-access-between-wsl-and-windows10","text":"From within WSL, the Windows drives are referenced in the /mnt directory. For example, in order to list documents within your ( ) documents folder: `ls /mnt/c/'Documents and Settings'/<username>/Documents` or `ls /mnt/c/Users/<username>/Documents` From within Windows, the WSL distribution's files are located at (type in windows Explorer address bar): \\\\wsl$\\<distribution name> e.g. \\\\wsl$\\Ubuntu-18.04","title":"File System Access between WSL and Windows10"},{"location":"airsim_ros_pkgs/#how-to-run-airsim-on-windows-and-ros-wrapper-on-wsl","text":"For WSL 1 execute: export WSL_HOST_IP=127.0.0.1 and for WSL 2: export WSL_HOST_IP=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}') Now, as in the running section for linux , execute the following: source devel/setup.bash roslaunch airsim_ros_pkgs airsim_node.launch output: = screen host: = $WSL_HOST_IP roslaunch airsim_ros_pkgs rviz.launch","title":"How to run Airsim on Windows and ROS wrapper on WSL"},{"location":"airsim_ros_pkgs/#using-docker-for-ros","text":"A Dockerfile is present in the tools directory. To build the airsim-ros image - cd tools docker build -t airsim-ros -f Dockerfile-ROS . To run, replace the path of the AirSim folder below - docker run --rm -it --net = host -v <your-AirSim-folder-path>:/home/testuser/AirSim airsim-ros:latest bash The above command mounts the AirSim directory to the home directory inside the container. Any changes you make in the source files from your host will be visible inside the container, which is useful for development and testing. Now follow the steps from Build to compile and run the ROS wrapper.","title":"Using Docker for ROS"},{"location":"airsim_tutorial_pkgs/","text":"AirSim ROS \u6559\u7a0b # \u8fd9\u662f\u4e00\u7ec4 AirSim \u7684\u793a\u4f8b settings.json \u3001roslaunch \u548c rviz \u6587\u4ef6\uff0c\u65e8\u5728\u5e2e\u52a9\u60a8\u4e86\u89e3\u5982\u4f55\u5728 ROS \u4e2d\u4f7f\u7528 AirSim\u3002 \u6709\u5173 ROS API\uff0c\u8bf7\u53c2\u9605 airsim_ros_pkgs \u3002 \u8bbe\u7f6e # \u786e\u4fdd airsim_ros_pkgs \u8bbe\u7f6e \u5df2\u5b8c\u6210\u5e76\u4e14\u5148\u51b3\u6761\u4ef6\u5df2\u5b89\u88c5\u3002 $ cd PATH_TO/AirSim/ros $ catkin build airsim_tutorial_pkgs \u5982\u679c\u60a8\u7684\u9ed8\u8ba4 GCC \u7248\u672c\u4e0d\u662f 8 \u6216\u66f4\u9ad8\u7248\u672c\uff08\u8bf7\u4f7f\u7528 gcc --version \u68c0\u67e5\uff09\uff0c\u5219\u7f16\u8bd1\u5c06\u5931\u8d25\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u660e\u786e\u4f7f\u7528 gcc-8 \uff0c\u5982\u4e0b\u6240\u793a\uff1a catkin build airsim_tutorial_pkgs -DCMAKE_C_COMPILER = gcc-8 -DCMAKE_CXX_COMPILER = g++-8 \u7b14\u8bb0 \u4e3a\u4e86\u8fd0\u884c\u793a\u4f8b\uff0c\u4ee5\u53ca\u6bcf\u6b21\u6253\u5f00\u65b0\u7ec8\u7aef\u65f6\uff0c\u90fd\u9700\u8981\u83b7\u53d6 setup.bash \u6587\u4ef6\u3002\u5982\u679c\u60a8\u7ecf\u5e38\u4f7f\u7528 ROS \u5305\u88c5\u5668\uff0c\u6700\u597d\u5c06 source PATH_TO/AirSim/ros/devel/setup.bash \u6dfb\u52a0\u5230 ~/.profile \u6216 ~/.bashrc \uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8fd0\u884c\u6bcf\u6b21\u6253\u5f00\u7ec8\u7aef\u65f6\u90fd\u9700\u8981\u8fd0\u884c\u8be5\u547d\u4ee4\u3002 \u4f8b\u5b50 # \u914d\u5907\u5355\u76ee\u6444\u50cf\u5934\u3001\u6df1\u5ea6\u6444\u50cf\u5934\u548c\u6fc0\u5149\u96f7\u8fbe\u7684\u5355\u67b6\u65e0\u4eba\u673a # Settings.json - front_stereo_and_center_mono.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/front_stereo_and_center_mono.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5f15\u64ce\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; # in a new pane / terminal $ source PATH_TO/AirSim/ros/devel/setup.bash $ roslaunch airsim_tutorial_pkgs front_stereo_and_center_mono.launch \u4e0a\u8ff0\u547d\u4ee4\u5c06\u4f7f\u7528 tf \u542f\u52a8 rviz\uff0c\u4f7f\u7528 depth_image_proc \u4f7f\u7528 depth_to_pointcloud \u542f\u52a8\u6587\u4ef6 \u6ce8\u518c RGBD \u4e91\uff0c\u4ee5\u53ca\u6fc0\u5149\u96f7\u8fbe\u70b9\u4e91\u3002 2 \u67b6\u65e0\u4eba\u673a\uff0c\u5206\u522b\u914d\u5907\u6444\u50cf\u5934\u3001\u6fc0\u5149\u96f7\u8fbe\u548c IMU # Settings.json - two_drones_camera_lidar_imu.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/two_drones_camera_lidar_imu.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; $ roslaunch airsim_ros_pkgs rviz.launch \u60a8\u53ef\u4ee5\u5728 rviz \u4e2d\u67e5\u770b tfs\u3002\u7136\u540e\u8fd0\u884c rostopic list \u548c rosservice list \u6765\u68c0\u67e5\u53ef\u7528\u7684\u670d\u52a1\u3002 25\u67b6\u65e0\u4eba\u673a\u7ec4\u6210\u4e00\u4e2a\u65b9\u5f62\u56fe\u6848 # Settings.json - twenty_five_drones.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/twenty_five_drones.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5f15\u64ce\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; $ roslaunch airsim_ros_pkgs rviz.launch \u60a8\u53ef\u4ee5\u5728 rviz \u4e2d\u67e5\u770b tfs\u3002 \u7136\u540e\u8fd0\u884c rostopic list \u548c rosservice list \u6765\u68c0\u67e5\u53ef\u7528\u7684\u670d\u52a1\u3002","title":"ROS: AirSim \u6559\u7a0b\u5305"},{"location":"airsim_tutorial_pkgs/#airsim-ros","text":"\u8fd9\u662f\u4e00\u7ec4 AirSim \u7684\u793a\u4f8b settings.json \u3001roslaunch \u548c rviz \u6587\u4ef6\uff0c\u65e8\u5728\u5e2e\u52a9\u60a8\u4e86\u89e3\u5982\u4f55\u5728 ROS \u4e2d\u4f7f\u7528 AirSim\u3002 \u6709\u5173 ROS API\uff0c\u8bf7\u53c2\u9605 airsim_ros_pkgs \u3002","title":"AirSim ROS \u6559\u7a0b"},{"location":"airsim_tutorial_pkgs/#_1","text":"\u786e\u4fdd airsim_ros_pkgs \u8bbe\u7f6e \u5df2\u5b8c\u6210\u5e76\u4e14\u5148\u51b3\u6761\u4ef6\u5df2\u5b89\u88c5\u3002 $ cd PATH_TO/AirSim/ros $ catkin build airsim_tutorial_pkgs \u5982\u679c\u60a8\u7684\u9ed8\u8ba4 GCC \u7248\u672c\u4e0d\u662f 8 \u6216\u66f4\u9ad8\u7248\u672c\uff08\u8bf7\u4f7f\u7528 gcc --version \u68c0\u67e5\uff09\uff0c\u5219\u7f16\u8bd1\u5c06\u5931\u8d25\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u660e\u786e\u4f7f\u7528 gcc-8 \uff0c\u5982\u4e0b\u6240\u793a\uff1a catkin build airsim_tutorial_pkgs -DCMAKE_C_COMPILER = gcc-8 -DCMAKE_CXX_COMPILER = g++-8 \u7b14\u8bb0 \u4e3a\u4e86\u8fd0\u884c\u793a\u4f8b\uff0c\u4ee5\u53ca\u6bcf\u6b21\u6253\u5f00\u65b0\u7ec8\u7aef\u65f6\uff0c\u90fd\u9700\u8981\u83b7\u53d6 setup.bash \u6587\u4ef6\u3002\u5982\u679c\u60a8\u7ecf\u5e38\u4f7f\u7528 ROS \u5305\u88c5\u5668\uff0c\u6700\u597d\u5c06 source PATH_TO/AirSim/ros/devel/setup.bash \u6dfb\u52a0\u5230 ~/.profile \u6216 ~/.bashrc \uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8fd0\u884c\u6bcf\u6b21\u6253\u5f00\u7ec8\u7aef\u65f6\u90fd\u9700\u8981\u8fd0\u884c\u8be5\u547d\u4ee4\u3002","title":"\u8bbe\u7f6e"},{"location":"airsim_tutorial_pkgs/#_2","text":"","title":"\u4f8b\u5b50"},{"location":"airsim_tutorial_pkgs/#_3","text":"Settings.json - front_stereo_and_center_mono.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/front_stereo_and_center_mono.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5f15\u64ce\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; # in a new pane / terminal $ source PATH_TO/AirSim/ros/devel/setup.bash $ roslaunch airsim_tutorial_pkgs front_stereo_and_center_mono.launch \u4e0a\u8ff0\u547d\u4ee4\u5c06\u4f7f\u7528 tf \u542f\u52a8 rviz\uff0c\u4f7f\u7528 depth_image_proc \u4f7f\u7528 depth_to_pointcloud \u542f\u52a8\u6587\u4ef6 \u6ce8\u518c RGBD \u4e91\uff0c\u4ee5\u53ca\u6fc0\u5149\u96f7\u8fbe\u70b9\u4e91\u3002","title":"\u914d\u5907\u5355\u76ee\u6444\u50cf\u5934\u3001\u6df1\u5ea6\u6444\u50cf\u5934\u548c\u6fc0\u5149\u96f7\u8fbe\u7684\u5355\u67b6\u65e0\u4eba\u673a"},{"location":"airsim_tutorial_pkgs/#2-imu","text":"Settings.json - two_drones_camera_lidar_imu.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/two_drones_camera_lidar_imu.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; $ roslaunch airsim_ros_pkgs rviz.launch \u60a8\u53ef\u4ee5\u5728 rviz \u4e2d\u67e5\u770b tfs\u3002\u7136\u540e\u8fd0\u884c rostopic list \u548c rosservice list \u6765\u68c0\u67e5\u53ef\u7528\u7684\u670d\u52a1\u3002","title":"2 \u67b6\u65e0\u4eba\u673a\uff0c\u5206\u522b\u914d\u5907\u6444\u50cf\u5934\u3001\u6fc0\u5149\u96f7\u8fbe\u548c IMU"},{"location":"airsim_tutorial_pkgs/#25","text":"Settings.json - twenty_five_drones.json $ source PATH_TO/AirSim/ros/devel/setup.bash $ roscd airsim_tutorial_pkgs $ cp settings/twenty_five_drones.json ~/Documents/AirSim/settings.json ## \u4ece\u8fd9\u91cc\u542f\u52a8\u4f60\u7684\u865a\u5e7b\u5f15\u64ce\u5305\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6 $ roslaunch airsim_ros_pkgs airsim_node.launch ; $ roslaunch airsim_ros_pkgs rviz.launch \u60a8\u53ef\u4ee5\u5728 rviz \u4e2d\u67e5\u770b tfs\u3002 \u7136\u540e\u8fd0\u884c rostopic list \u548c rosservice list \u6765\u68c0\u67e5\u53ef\u7528\u7684\u670d\u52a1\u3002","title":"25\u67b6\u65e0\u4eba\u673a\u7ec4\u6210\u4e00\u4e2a\u65b9\u5f62\u56fe\u6848"},{"location":"apis/","text":"AirSim APIs # \u4ecb\u7ecd # AirSim \u63d0\u4f9b API\uff0c\u65b9\u4fbf\u60a8\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u6a21\u62df\u4e2d\u7684\u8f66\u8f86\u8fdb\u884c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b API \u6765\u68c0\u7d22\u56fe\u50cf\u3001\u83b7\u53d6\u72b6\u6001\u3001\u63a7\u5236\u8f66\u8f86\u7b49\u7b49\u3002 Python \u5feb\u901f\u5165\u95e8 # \u5982\u679c\u60a8\u60f3\u4f7f\u7528 Python \u8c03\u7528 AirSim API\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u5e26\u6709 Python 3.5 \u6216\u66f4\u9ad8\u7248\u672c\u7684 Anaconda\uff0c\u4f46\u67d0\u4e9b\u4ee3\u7801\u4e5f\u53ef\u80fd\u9002\u7528\u4e8e Python 2.7\uff08 \u5e2e\u52a9\u6211\u4eec \u63d0\u9ad8\u517c\u5bb9\u6027\uff01\uff09\u3002 \u9996\u5148\u5b89\u88c5 Python \u865a\u62df\u73af\u5883\uff1a conda create -n air python = 3 .8 conda activate air \u9996\u5148\u5b89\u88c5\u8fd9\u4e2a\u5305\uff1a pip install msgpack-rpc-python \u60a8\u53ef\u4ee5\u4ece releases \u83b7\u53d6 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\uff08 Windows \u3001 Linux \uff09\u3002\u4e00\u65e6\u60a8\u53ef\u4ee5\u8fd0\u884c AirSim\uff0c\u8bf7\u9009\u62e9 Car \u4f5c\u4e3a\u8f7d\u5177\uff0c\u7136\u540e\u5bfc\u822a\u5230 PythonClient\\car\\ \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\uff1a python hello_car.py \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528 Visual Studio 2019\uff0c\u5219\u53ea\u9700\u6253\u5f00 AirSim.sln \uff0c\u5c06 PythonClient \u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee\uff0c\u5e76\u9009\u62e9 car\\hello_car.py \u4f5c\u4e3a\u542f\u52a8\u811a\u672c\u3002 \u5b89\u88c5 AirSim \u5305 # \u60a8\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b89\u88c5 airsim \u5305\uff1a\uff0c pip install airsim \u60a8\u53ef\u4ee5\u5728\u4ee3\u7801\u4ed3\u5e93\u7684 PythonClient \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u8be5\u5305\u7684\u6e90\u4ee3\u7801\u548c\u793a\u4f8b\u3002 \u7b14\u8bb0 1. \u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u5728\u6211\u4eec\u7684\u793a\u4f8b\u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a setup_path.py \u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6765\u68c0\u6d4b airsim \u5305\u662f\u5426\u5728\u7236\u6587\u4ef6\u5939\u4e2d\u53ef\u7528\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u800c\u4e0d\u662f pip \u5b89\u88c5\u7684\u5305\uff0c\u6240\u4ee5\u60a8\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684\u4ee3\u7801\u3002 2. AirSim \u4ecd\u5728\u5927\u91cf\u5f00\u53d1\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u80fd\u9700\u8981\u7ecf\u5e38\u66f4\u65b0\u8f6f\u4ef6\u5305\u4ee5\u4f7f\u7528\u65b0\u7684 API\u3002 C++ \u7528\u6237 # \u5982\u679c\u8981\u4f7f\u7528 C++ \u7684 API \u548c\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 C++ APIs \u6307\u5357 \u3002 Hello Car # \u4e0b\u9762\u662f\u5982\u4f55\u4f7f\u7528 Python \u7684 AirSim API \u63a7\u5236\u6a21\u62df\u6c7d\u8f66\uff08\u53e6\u8bf7\u53c2\u89c1 C++ \u793a\u4f8b \uff09\uff1a # \u51c6\u5907\u8fd0\u884c\u793a\u4f8b\uff1aPythonClient/car/hello_car.py import airsim import time # \u8fde\u63a5\u5230 AirSim \u6a21\u62df\u5668 client = airsim . CarClient () client . confirmConnection () client . enableApiControl ( True ) car_controls = airsim . CarControls () while True : # \u83b7\u53d6\u8f66\u8f86\u72b6\u6001 car_state = client . getCarState () print ( \"Speed %d , Gear %d \" % ( car_state . speed , car_state . gear )) # \u63a7\u5236\u8f66\u8f86 car_controls . throttle = 1 car_controls . steering = 1 client . setCarControls ( car_controls ) # \u8ba9\u6c7d\u8f66\u5f00\u4e00\u4f1a\u513f time . sleep ( 1 ) # \u4ece\u6c7d\u8f66\u4e2d\u83b7\u53d6\u76f8\u673a\u56fe\u50cf responses = client . simGetImages ([ airsim . ImageRequest ( 0 , airsim . ImageType . DepthVis ), airsim . ImageRequest ( 1 , airsim . ImageType . DepthPlanar , True )]) print ( 'Retrieved images: %d ' , len ( responses )) # \u5bf9\u56fe\u50cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c for response in responses : if response . pixels_as_float : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_float ))) airsim . write_pfm ( 'py1.pfm' , airsim . get_pfm_array ( response )) else : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_uint8 ))) airsim . write_file ( 'py1.png' , response . image_data_uint8 ) Hello Drone # \u4e0b\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Python \u7684 AirSim API \u6765\u63a7\u5236\u6a21\u62df\u56db\u65cb\u7ffc\u98de\u884c\u5668\uff08\u53e6\u8bf7\u53c2\u9605 C++ \u793a\u4f8b \uff09\uff1a # \u51c6\u5907\u8fd0\u884c\u793a\u4f8b\uff1aPythonClient/multirotor/hello_drone.py import airsim import os # \u8fde\u63a5\u5230 AirSim \u6a21\u62df\u5668 client = airsim . MultirotorClient () client . confirmConnection () client . enableApiControl ( True ) client . armDisarm ( True ) # Async \u65b9\u6cd5\u8fd4\u56de Future\u3002\u8c03\u7528 join() \u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\u3002 client . takeoffAsync () . join () client . moveToPositionAsync ( - 10 , 10 , - 10 , 5 ) . join () # \u83b7\u53d6\u56fe\u50cf responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . DepthVis ), airsim . ImageRequest ( \"1\" , airsim . ImageType . DepthPlanar , True )]) print ( 'Retrieved images: %d ' , len ( responses )) # \u5bf9\u56fe\u50cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c for response in responses : if response . pixels_as_float : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_float ))) airsim . write_pfm ( os . path . normpath ( '/temp/py1.pfm' ), airsim . get_pfm_array ( response )) else : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_uint8 ))) airsim . write_file ( os . path . normpath ( '/temp/py1.png' ), response . image_data_uint8 ) \u5e38\u7528 API # reset : This resets the vehicle to its original starting state. Note that you must call enableApiControl and armDisarm again after the call to reset . confirmConnection : Checks state of connection every 1 sec and reports it in Console so user can see the progress for connection. enableApiControl : For safety reasons, by default API control for autonomous vehicle is not enabled and human operator has full control (usually via RC or joystick in simulator). The client must make this call to request control via API. It is likely that human operator of vehicle might have disallowed API control which would mean that enableApiControl has no effect. This can be checked by isApiControlEnabled . isApiControlEnabled : Returns true if API control is established. If false (which is default) then API calls would be ignored. After a successful call to enableApiControl , the isApiControlEnabled should return true. ping : If connection is established then this call will return true otherwise it will be blocked until timeout. simPrintLogMessage : Prints the specified message in the simulator's window. If message_param is also supplied then its printed next to the message and in that case if this API is called with same message value but different message_param again then previous line is overwritten with new line (instead of API creating new line on display). For example, simPrintLogMessage(\"Iteration: \", to_string(i)) keeps updating same line on display when API is called with different values of i. The valid values of severity parameter is 0 to 3 inclusive that corresponds to different colors. simGetObjectPose , simSetObjectPose : Gets and sets the pose of specified object in Unreal environment. Here the object means \"actor\" in Unreal terminology. They are searched by tag as well as name. Please note that the names shown in UE Editor are auto-generated in each run and are not permanent. So if you want to refer to actor by name, you must change its auto-generated name in UE Editor. Alternatively you can add a tag to actor which can be done by clicking on that actor in Unreal Editor and then going to Tags property , click \"+\" sign and add some string value. If multiple actors have same tag then the first match is returned. If no matches are found then NaN pose is returned. The returned pose is in NED coordinates in SI units in the world frame. For simSetObjectPose , the specified actor must have Mobility set to Movable or otherwise you will get undefined behavior. The simSetObjectPose has parameter teleport which means object is moved through other objects in its way and it returns true if move was successful Image / Computer Vision APIs # AirSim offers comprehensive images APIs to retrieve synchronized images from multiple cameras along with ground truth including depth, disparity, surface normals and vision. You can set the resolution, FOV, motion blur etc parameters in settings.json . There is also API for detecting collision state. See also complete code that generates specified number of stereo images and ground truth depth with normalization to camera plane, computation of disparity image and saving it to pfm format . More on image APIs and Computer Vision mode . For vision problems that can benefit from domain randomization, there is also an object retexturing API , which can be used in supported scenes. Pause and Continue APIs # AirSim allows to pause and continue the simulation through pause(is_paused) API. To pause the simulation call pause(True) and to continue the simulation call pause(False) . You may have scenario, especially while using reinforcement learning, to run the simulation for specified amount of time and then automatically pause. While simulation is paused, you may then do some expensive computation, send a new command and then again run the simulation for specified amount of time. This can be achieved by API continueForTime(seconds) . This API runs the simulation for the specified number of seconds and then pauses the simulation. For example usage, please see pause_continue_car.py and pause_continue_drone.py . Collision API # The collision information can be obtained using simGetCollisionInfo API. This call returns a struct that has information not only whether collision occurred but also collision position, surface normal, penetration depth and so on. Time of Day API # AirSim assumes there exist sky sphere of class EngineSky/BP_Sky_Sphere in your environment with ADirectionalLight actor . By default, the position of the sun in the scene doesn't move with time. You can use settings to set up latitude, longitude, date and time which AirSim uses to compute the position of sun in the scene. You can also use following API call to set the sun position according to given date time: simSetTimeOfDay(self, is_enabled, start_datetime = \"\", is_start_datetime_dst = False, celestial_clock_speed = 1, update_interval_secs = 60, move_sun = True) The is_enabled parameter must be True to enable time of day effect. If it is False then sun position is reset to its original in the environment. Other parameters are same as in settings . Line-of-sight and world extent APIs # To test line-of-sight in the sim from a vehicle to a point or between two points, see simTestLineOfSightToPoint(point, vehicle_name) and simTestLineOfSightBetweenPoints(point1, point2), respectively. Sim world extent, in the form of a vector of two GeoPoints, can be retrieved using simGetWorldExtents(). Weather APIs # By default all weather effects are disabled. To enable weather effect, first call: simEnableWeather(True) Various weather effects can be enabled by using simSetWeatherParameter method which takes WeatherParameter , for example, client.simSetWeatherParameter(airsim.WeatherParameter.Rain, 0.25); The second parameter value is from 0 to 1. The first parameter provides following options: class WeatherParameter: Rain = 0 Roadwetness = 1 Snow = 2 RoadSnow = 3 MapleLeaf = 4 RoadLeaf = 5 Dust = 6 Fog = 7 Please note that Roadwetness , RoadSnow and RoadLeaf effects requires adding materials to your scene. Please see example code for more details. Recording APIs # Recording APIs can be used to start recording data through APIs. Data to be recorded can be specified using settings . To start recording, use - client.startRecording() Similarly, to stop recording, use client.stopRecording() . To check whether Recording is running, call client.isRecording() , returns a bool . This API works alongwith toggling Recording using R button, therefore if it's enabled using R key, isRecording() will return True , and recording can be stopped via API using stopRecording() . Similarly, recording started using API will be stopped if R key is pressed in Viewport. LogMessage will also appear in the top-left of the viewport if recording is started or stopped using API. Note that this will only save the data as specfied in the settings. For full freedom in storing data such as certain sensor information, or in a different format or layout, use the other APIs to fetch the data and save as desired. Check out Modifying Recording Data for details on how to modify the kinematics data being recorded. Wind API # Wind can be changed during simulation using simSetWind() . Wind is specified in World frame, NED direction and m/s values E.g. To set 20m/s wind in North (forward) direction - # Set wind to (20,0,0) in NED (forward direction) wind = airsim . Vector3r ( 20 , 0 , 0 ) client . simSetWind ( wind ) Also see example script in set_wind.py Lidar APIs # AirSim offers API to retrieve point cloud data from Lidar sensors on vehicles. You can set the number of channels, points per second, horizontal and vertical FOV, etc parameters in settings.json . More on lidar APIs and settings and sensor settings Light Control APIs # Lights that can be manipulated inside AirSim can be created via the simSpawnObject() API by passing either PointLightBP or SpotLightBP as the asset_name parameter and True as the is_blueprint parameter. Once a light has been spawned, it can be manipulated using the following API: simSetLightIntensity : This allows you to edit a light's intensity or brightness. It takes two parameters, light_name , the name of the light object returned by a previous call to simSpawnObject() , and intensity , a float value. Texture APIs # Textures can be dynamically set on objects via these APIs: simSetObjectMaterial : This sets an object's material using an existing Unreal material asset. It takes two string parameters, object_name and material_name . simSetObjectMaterialFromTexture : This sets an object's material using a path to a texture. It takes two string parameters, object_name and texture_path . Multiple Vehicles # AirSim supports multiple vehicles and control them through APIs. Please Multiple Vehicles doc. Coordinate System # All AirSim API uses NED coordinate system, i.e., +X is North, +Y is East and +Z is Down. All units are in SI system. Please note that this is different from coordinate system used internally by Unreal Engine. In Unreal Engine, +Z is up instead of down and length unit is in centimeters instead of meters. AirSim APIs takes care of the appropriate conversions. The starting point of the vehicle is always coordinates (0, 0, 0) in NED system. Thus when converting from Unreal coordinates to NED, we first subtract the starting offset and then scale by 100 for cm to m conversion. The vehicle is spawned in Unreal environment where the Player Start component is placed. There is a setting called OriginGeopoint in settings.json which assigns geographic longitude, longitude and altitude to the Player Start component. Vehicle Specific APIs # APIs for Car # Car has followings APIs available: setCarControls : This allows you to set throttle, steering, handbrake and auto or manual gear. getCarState : This retrieves the state information including speed, current gear and 6 kinematics quantities: position, orientation, linear and angular velocity, linear and angular acceleration. All quantities are in NED coordinate system, SI units in world frame except for angular velocity and accelerations which are in body frame. Image APIs . APIs for Multirotor # Multirotor can be controlled by specifying angles, velocity vector, destination position or some combination of these. There are corresponding move* APIs for this purpose. When doing position control, we need to use some path following algorithm. By default AirSim uses carrot following algorithm. This is often referred to as \"high level control\" because you just need to specify high level goal and the firmware takes care of the rest. Currently lowest level control available in AirSim is moveByAngleThrottleAsync API. getMultirotorState # This API returns the state of the vehicle in one call. The state includes, collision, estimated kinematics (i.e. kinematics computed by fusing sensors), and timestamp (nano seconds since epoch). The kinematics here means 6 quantities: position, orientation, linear and angular velocity, linear and angular acceleration. Please note that simple_slight currently doesn't support state estimator which means estimated and ground truth kinematics values would be same for simple_flight. Estimated kinematics are however available for PX4 except for angular acceleration. All quantities are in NED coordinate system, SI units in world frame except for angular velocity and accelerations which are in body frame. Async methods, duration and max_wait_seconds # Many API methods has parameters named duration or max_wait_seconds and they have Async as suffix, for example, takeoffAsync . These methods will return immediately after starting the task in AirSim so that your client code can do something else while that task is being executed. If you want to wait for this task to complete then you can call waitOnLastTask like this: //C++ client . takeoffAsync () -> waitOnLastTask (); # Python client . takeoffAsync (). join () If you start another command then it automatically cancels the previous task and starts new command. This allows to use pattern where your coded continuously does the sensing, computes a new trajectory to follow and issues that path to vehicle in AirSim. Each newly issued trajectory cancels the previous trajectory allowing your code to continuously do the update as new sensor data arrives. All Async method returns concurrent.futures.Future in Python ( std::future in C++). Please note that these future classes currently do not allow to check status or cancel the task; they only allow to wait for task to complete. AirSim does provide API cancelLastTask , however. drivetrain # There are two modes you can fly vehicle: drivetrain parameter is set to airsim.DrivetrainType.ForwardOnly or airsim.DrivetrainType.MaxDegreeOfFreedom . When you specify ForwardOnly, you are saying that vehicle's front should always point in the direction of travel. So if you want drone to take left turn then it would first rotate so front points to left. This mode is useful when you have only front camera and you are operating vehicle using FPV view. This is more or less like travelling in car where you always have front view. The MaxDegreeOfFreedom means you don't care where the front points to. So when you take left turn, you just start going left like crab. Quadrotors can go in any direction regardless of where front points to. The MaxDegreeOfFreedom enables this mode. yaw_mode # yaw_mode is a struct YawMode with two fields, yaw_or_rate and is_rate . If is_rate field is True then yaw_or_rate field is interpreted as angular velocity in degrees/sec which means you want vehicle to rotate continuously around its axis at that angular velocity while moving. If is_rate is False then yaw_or_rate is interpreted as angle in degrees which means you want vehicle to rotate to specific angle (i.e. yaw) and keep that angle while moving. You can probably see that when yaw_mode.is_rate == true , the drivetrain parameter shouldn't be set to ForwardOnly because you are contradicting by saying that keep front pointing ahead but also rotate continuously. However if you have yaw_mode.is_rate = false in ForwardOnly mode then you can do some funky stuff. For example, you can have drone do circles and have yaw_or_rate set to 90 so camera is always pointed to center (\"super cool selfie mode\"). In MaxDegreeofFreedom also you can get some funky stuff by setting yaw_mode.is_rate = true and say yaw_mode.yaw_or_rate = 20 . This will cause drone to go in its path while rotating which may allow to do 360 scanning. In most cases, you just don't want yaw to change which you can do by setting yaw rate of 0. The shorthand for this is airsim.YawMode.Zero() (or in C++: YawMode::Zero() ). lookahead and adaptive_lookahead # When you ask vehicle to follow a path, AirSim uses \"carrot following\" algorithm. This algorithm operates by looking ahead on path and adjusting its velocity vector. The parameters for this algorithm is specified by lookahead and adaptive_lookahead . For most of the time you want algorithm to auto-decide the values by simply setting lookahead = -1 and adaptive_lookahead = 0 . Using APIs on Real Vehicles # We want to be able to run same code that runs in simulation as on real vehicle. This allows you to test your code in simulator and deploy to real vehicle. Generally speaking, APIs therefore shouldn't allow you to do something that cannot be done on real vehicle (for example, getting the ground truth). But, of course, simulator has much more information and it would be useful in applications that may not care about running things on real vehicle. For this reason, we clearly delineate between sim-only APIs by attaching sim prefix, for example, simGetGroundTruthKinematics . This way you can avoid using these simulation-only APIs if you care about running your code on real vehicles. The AirLib is self-contained library that you can put on an offboard computing module such as the Gigabyte barebone Mini PC. This module then can talk to the flight controllers such as PX4 using exact same code and flight controller protocol. The code you write for testing in the simulator remains unchanged. See AirLib on custom drones . \u5411 AirSim \u6dfb\u52a0\u65b0\u7684 API # \u8bf7\u53c2\u9605 \u6dfb\u52a0\u65b0 API \u9875\u9762 References and Examples # C++ API Examples Car Examples Multirotor Examples Computer Vision Examples Move on Path demo showing video of fast multirotor flight through Modular Neighborhood environment Building a Hexacopter Building Point Clouds FAQ # Unreal is slowed down dramatically when I run API # If you see Unreal getting slowed down dramatically when Unreal Engine window loses focus then go to 'Edit->Editor Preferences' in Unreal Editor, in the 'Search' box type 'CPU' and ensure that the 'Use Less CPU when in Background' is unchecked. Do I need anything else on Windows? # You should install VS2019 with VC++, Windows SDK 10.0 and Python. To use Python APIs you will need Python 3.5 or later (install it using Anaconda). Which version of Python should I use? # We recommend Anaconda to get Python tools and libraries. Our code is tested with Python 3.5.3 :: Anaconda 4.4.0. This is important because older version have been known to have problems . I get error on import cv2 # You can install OpenCV using: conda install opencv pip install opencv-python TypeError: unsupported operand type(s) for *: 'AsyncIOLoop' and 'float' # This error happens if you install Jupyter, which somehow breaks the msgpackrpc library. Create a new python environment which the minimal required packages.","title":"\u6838\u5fc3 APIs"},{"location":"apis/#airsim-apis","text":"","title":"AirSim APIs"},{"location":"apis/#_1","text":"AirSim \u63d0\u4f9b API\uff0c\u65b9\u4fbf\u60a8\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u6a21\u62df\u4e2d\u7684\u8f66\u8f86\u8fdb\u884c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b API \u6765\u68c0\u7d22\u56fe\u50cf\u3001\u83b7\u53d6\u72b6\u6001\u3001\u63a7\u5236\u8f66\u8f86\u7b49\u7b49\u3002","title":"\u4ecb\u7ecd"},{"location":"apis/#python","text":"\u5982\u679c\u60a8\u60f3\u4f7f\u7528 Python \u8c03\u7528 AirSim API\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u5e26\u6709 Python 3.5 \u6216\u66f4\u9ad8\u7248\u672c\u7684 Anaconda\uff0c\u4f46\u67d0\u4e9b\u4ee3\u7801\u4e5f\u53ef\u80fd\u9002\u7528\u4e8e Python 2.7\uff08 \u5e2e\u52a9\u6211\u4eec \u63d0\u9ad8\u517c\u5bb9\u6027\uff01\uff09\u3002 \u9996\u5148\u5b89\u88c5 Python \u865a\u62df\u73af\u5883\uff1a conda create -n air python = 3 .8 conda activate air \u9996\u5148\u5b89\u88c5\u8fd9\u4e2a\u5305\uff1a pip install msgpack-rpc-python \u60a8\u53ef\u4ee5\u4ece releases \u83b7\u53d6 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\uff08 Windows \u3001 Linux \uff09\u3002\u4e00\u65e6\u60a8\u53ef\u4ee5\u8fd0\u884c AirSim\uff0c\u8bf7\u9009\u62e9 Car \u4f5c\u4e3a\u8f7d\u5177\uff0c\u7136\u540e\u5bfc\u822a\u5230 PythonClient\\car\\ \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\uff1a python hello_car.py \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528 Visual Studio 2019\uff0c\u5219\u53ea\u9700\u6253\u5f00 AirSim.sln \uff0c\u5c06 PythonClient \u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee\uff0c\u5e76\u9009\u62e9 car\\hello_car.py \u4f5c\u4e3a\u542f\u52a8\u811a\u672c\u3002","title":"Python \u5feb\u901f\u5165\u95e8"},{"location":"apis/#airsim","text":"\u60a8\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b89\u88c5 airsim \u5305\uff1a\uff0c pip install airsim \u60a8\u53ef\u4ee5\u5728\u4ee3\u7801\u4ed3\u5e93\u7684 PythonClient \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u8be5\u5305\u7684\u6e90\u4ee3\u7801\u548c\u793a\u4f8b\u3002 \u7b14\u8bb0 1. \u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u5728\u6211\u4eec\u7684\u793a\u4f8b\u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a setup_path.py \u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6765\u68c0\u6d4b airsim \u5305\u662f\u5426\u5728\u7236\u6587\u4ef6\u5939\u4e2d\u53ef\u7528\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u800c\u4e0d\u662f pip \u5b89\u88c5\u7684\u5305\uff0c\u6240\u4ee5\u60a8\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684\u4ee3\u7801\u3002 2. AirSim \u4ecd\u5728\u5927\u91cf\u5f00\u53d1\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u80fd\u9700\u8981\u7ecf\u5e38\u66f4\u65b0\u8f6f\u4ef6\u5305\u4ee5\u4f7f\u7528\u65b0\u7684 API\u3002","title":"\u5b89\u88c5 AirSim \u5305"},{"location":"apis/#c","text":"\u5982\u679c\u8981\u4f7f\u7528 C++ \u7684 API \u548c\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 C++ APIs \u6307\u5357 \u3002","title":"C++ \u7528\u6237"},{"location":"apis/#hello-car","text":"\u4e0b\u9762\u662f\u5982\u4f55\u4f7f\u7528 Python \u7684 AirSim API \u63a7\u5236\u6a21\u62df\u6c7d\u8f66\uff08\u53e6\u8bf7\u53c2\u89c1 C++ \u793a\u4f8b \uff09\uff1a # \u51c6\u5907\u8fd0\u884c\u793a\u4f8b\uff1aPythonClient/car/hello_car.py import airsim import time # \u8fde\u63a5\u5230 AirSim \u6a21\u62df\u5668 client = airsim . CarClient () client . confirmConnection () client . enableApiControl ( True ) car_controls = airsim . CarControls () while True : # \u83b7\u53d6\u8f66\u8f86\u72b6\u6001 car_state = client . getCarState () print ( \"Speed %d , Gear %d \" % ( car_state . speed , car_state . gear )) # \u63a7\u5236\u8f66\u8f86 car_controls . throttle = 1 car_controls . steering = 1 client . setCarControls ( car_controls ) # \u8ba9\u6c7d\u8f66\u5f00\u4e00\u4f1a\u513f time . sleep ( 1 ) # \u4ece\u6c7d\u8f66\u4e2d\u83b7\u53d6\u76f8\u673a\u56fe\u50cf responses = client . simGetImages ([ airsim . ImageRequest ( 0 , airsim . ImageType . DepthVis ), airsim . ImageRequest ( 1 , airsim . ImageType . DepthPlanar , True )]) print ( 'Retrieved images: %d ' , len ( responses )) # \u5bf9\u56fe\u50cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c for response in responses : if response . pixels_as_float : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_float ))) airsim . write_pfm ( 'py1.pfm' , airsim . get_pfm_array ( response )) else : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_uint8 ))) airsim . write_file ( 'py1.png' , response . image_data_uint8 )","title":"Hello Car"},{"location":"apis/#hello-drone","text":"\u4e0b\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Python \u7684 AirSim API \u6765\u63a7\u5236\u6a21\u62df\u56db\u65cb\u7ffc\u98de\u884c\u5668\uff08\u53e6\u8bf7\u53c2\u9605 C++ \u793a\u4f8b \uff09\uff1a # \u51c6\u5907\u8fd0\u884c\u793a\u4f8b\uff1aPythonClient/multirotor/hello_drone.py import airsim import os # \u8fde\u63a5\u5230 AirSim \u6a21\u62df\u5668 client = airsim . MultirotorClient () client . confirmConnection () client . enableApiControl ( True ) client . armDisarm ( True ) # Async \u65b9\u6cd5\u8fd4\u56de Future\u3002\u8c03\u7528 join() \u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\u3002 client . takeoffAsync () . join () client . moveToPositionAsync ( - 10 , 10 , - 10 , 5 ) . join () # \u83b7\u53d6\u56fe\u50cf responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . DepthVis ), airsim . ImageRequest ( \"1\" , airsim . ImageType . DepthPlanar , True )]) print ( 'Retrieved images: %d ' , len ( responses )) # \u5bf9\u56fe\u50cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c for response in responses : if response . pixels_as_float : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_float ))) airsim . write_pfm ( os . path . normpath ( '/temp/py1.pfm' ), airsim . get_pfm_array ( response )) else : print ( \"Type %d , size %d \" % ( response . image_type , len ( response . image_data_uint8 ))) airsim . write_file ( os . path . normpath ( '/temp/py1.png' ), response . image_data_uint8 )","title":"Hello Drone"},{"location":"apis/#api","text":"reset : This resets the vehicle to its original starting state. Note that you must call enableApiControl and armDisarm again after the call to reset . confirmConnection : Checks state of connection every 1 sec and reports it in Console so user can see the progress for connection. enableApiControl : For safety reasons, by default API control for autonomous vehicle is not enabled and human operator has full control (usually via RC or joystick in simulator). The client must make this call to request control via API. It is likely that human operator of vehicle might have disallowed API control which would mean that enableApiControl has no effect. This can be checked by isApiControlEnabled . isApiControlEnabled : Returns true if API control is established. If false (which is default) then API calls would be ignored. After a successful call to enableApiControl , the isApiControlEnabled should return true. ping : If connection is established then this call will return true otherwise it will be blocked until timeout. simPrintLogMessage : Prints the specified message in the simulator's window. If message_param is also supplied then its printed next to the message and in that case if this API is called with same message value but different message_param again then previous line is overwritten with new line (instead of API creating new line on display). For example, simPrintLogMessage(\"Iteration: \", to_string(i)) keeps updating same line on display when API is called with different values of i. The valid values of severity parameter is 0 to 3 inclusive that corresponds to different colors. simGetObjectPose , simSetObjectPose : Gets and sets the pose of specified object in Unreal environment. Here the object means \"actor\" in Unreal terminology. They are searched by tag as well as name. Please note that the names shown in UE Editor are auto-generated in each run and are not permanent. So if you want to refer to actor by name, you must change its auto-generated name in UE Editor. Alternatively you can add a tag to actor which can be done by clicking on that actor in Unreal Editor and then going to Tags property , click \"+\" sign and add some string value. If multiple actors have same tag then the first match is returned. If no matches are found then NaN pose is returned. The returned pose is in NED coordinates in SI units in the world frame. For simSetObjectPose , the specified actor must have Mobility set to Movable or otherwise you will get undefined behavior. The simSetObjectPose has parameter teleport which means object is moved through other objects in its way and it returns true if move was successful","title":"\u5e38\u7528 API"},{"location":"apis/#image-computer-vision-apis","text":"AirSim offers comprehensive images APIs to retrieve synchronized images from multiple cameras along with ground truth including depth, disparity, surface normals and vision. You can set the resolution, FOV, motion blur etc parameters in settings.json . There is also API for detecting collision state. See also complete code that generates specified number of stereo images and ground truth depth with normalization to camera plane, computation of disparity image and saving it to pfm format . More on image APIs and Computer Vision mode . For vision problems that can benefit from domain randomization, there is also an object retexturing API , which can be used in supported scenes.","title":"Image / Computer Vision APIs"},{"location":"apis/#pause-and-continue-apis","text":"AirSim allows to pause and continue the simulation through pause(is_paused) API. To pause the simulation call pause(True) and to continue the simulation call pause(False) . You may have scenario, especially while using reinforcement learning, to run the simulation for specified amount of time and then automatically pause. While simulation is paused, you may then do some expensive computation, send a new command and then again run the simulation for specified amount of time. This can be achieved by API continueForTime(seconds) . This API runs the simulation for the specified number of seconds and then pauses the simulation. For example usage, please see pause_continue_car.py and pause_continue_drone.py .","title":"Pause and Continue APIs"},{"location":"apis/#collision-api","text":"The collision information can be obtained using simGetCollisionInfo API. This call returns a struct that has information not only whether collision occurred but also collision position, surface normal, penetration depth and so on.","title":"Collision API"},{"location":"apis/#time-of-day-api","text":"AirSim assumes there exist sky sphere of class EngineSky/BP_Sky_Sphere in your environment with ADirectionalLight actor . By default, the position of the sun in the scene doesn't move with time. You can use settings to set up latitude, longitude, date and time which AirSim uses to compute the position of sun in the scene. You can also use following API call to set the sun position according to given date time: simSetTimeOfDay(self, is_enabled, start_datetime = \"\", is_start_datetime_dst = False, celestial_clock_speed = 1, update_interval_secs = 60, move_sun = True) The is_enabled parameter must be True to enable time of day effect. If it is False then sun position is reset to its original in the environment. Other parameters are same as in settings .","title":"Time of Day API"},{"location":"apis/#line-of-sight-and-world-extent-apis","text":"To test line-of-sight in the sim from a vehicle to a point or between two points, see simTestLineOfSightToPoint(point, vehicle_name) and simTestLineOfSightBetweenPoints(point1, point2), respectively. Sim world extent, in the form of a vector of two GeoPoints, can be retrieved using simGetWorldExtents().","title":"Line-of-sight and world extent APIs"},{"location":"apis/#weather-apis","text":"By default all weather effects are disabled. To enable weather effect, first call: simEnableWeather(True) Various weather effects can be enabled by using simSetWeatherParameter method which takes WeatherParameter , for example, client.simSetWeatherParameter(airsim.WeatherParameter.Rain, 0.25); The second parameter value is from 0 to 1. The first parameter provides following options: class WeatherParameter: Rain = 0 Roadwetness = 1 Snow = 2 RoadSnow = 3 MapleLeaf = 4 RoadLeaf = 5 Dust = 6 Fog = 7 Please note that Roadwetness , RoadSnow and RoadLeaf effects requires adding materials to your scene. Please see example code for more details.","title":"Weather APIs"},{"location":"apis/#recording-apis","text":"Recording APIs can be used to start recording data through APIs. Data to be recorded can be specified using settings . To start recording, use - client.startRecording() Similarly, to stop recording, use client.stopRecording() . To check whether Recording is running, call client.isRecording() , returns a bool . This API works alongwith toggling Recording using R button, therefore if it's enabled using R key, isRecording() will return True , and recording can be stopped via API using stopRecording() . Similarly, recording started using API will be stopped if R key is pressed in Viewport. LogMessage will also appear in the top-left of the viewport if recording is started or stopped using API. Note that this will only save the data as specfied in the settings. For full freedom in storing data such as certain sensor information, or in a different format or layout, use the other APIs to fetch the data and save as desired. Check out Modifying Recording Data for details on how to modify the kinematics data being recorded.","title":"Recording APIs"},{"location":"apis/#wind-api","text":"Wind can be changed during simulation using simSetWind() . Wind is specified in World frame, NED direction and m/s values E.g. To set 20m/s wind in North (forward) direction - # Set wind to (20,0,0) in NED (forward direction) wind = airsim . Vector3r ( 20 , 0 , 0 ) client . simSetWind ( wind ) Also see example script in set_wind.py","title":"Wind API"},{"location":"apis/#lidar-apis","text":"AirSim offers API to retrieve point cloud data from Lidar sensors on vehicles. You can set the number of channels, points per second, horizontal and vertical FOV, etc parameters in settings.json . More on lidar APIs and settings and sensor settings","title":"Lidar APIs"},{"location":"apis/#light-control-apis","text":"Lights that can be manipulated inside AirSim can be created via the simSpawnObject() API by passing either PointLightBP or SpotLightBP as the asset_name parameter and True as the is_blueprint parameter. Once a light has been spawned, it can be manipulated using the following API: simSetLightIntensity : This allows you to edit a light's intensity or brightness. It takes two parameters, light_name , the name of the light object returned by a previous call to simSpawnObject() , and intensity , a float value.","title":"Light Control APIs"},{"location":"apis/#texture-apis","text":"Textures can be dynamically set on objects via these APIs: simSetObjectMaterial : This sets an object's material using an existing Unreal material asset. It takes two string parameters, object_name and material_name . simSetObjectMaterialFromTexture : This sets an object's material using a path to a texture. It takes two string parameters, object_name and texture_path .","title":"Texture APIs"},{"location":"apis/#multiple-vehicles","text":"AirSim supports multiple vehicles and control them through APIs. Please Multiple Vehicles doc.","title":"Multiple Vehicles"},{"location":"apis/#coordinate-system","text":"All AirSim API uses NED coordinate system, i.e., +X is North, +Y is East and +Z is Down. All units are in SI system. Please note that this is different from coordinate system used internally by Unreal Engine. In Unreal Engine, +Z is up instead of down and length unit is in centimeters instead of meters. AirSim APIs takes care of the appropriate conversions. The starting point of the vehicle is always coordinates (0, 0, 0) in NED system. Thus when converting from Unreal coordinates to NED, we first subtract the starting offset and then scale by 100 for cm to m conversion. The vehicle is spawned in Unreal environment where the Player Start component is placed. There is a setting called OriginGeopoint in settings.json which assigns geographic longitude, longitude and altitude to the Player Start component.","title":"Coordinate System"},{"location":"apis/#vehicle-specific-apis","text":"","title":"Vehicle Specific APIs"},{"location":"apis/#apis-for-car","text":"Car has followings APIs available: setCarControls : This allows you to set throttle, steering, handbrake and auto or manual gear. getCarState : This retrieves the state information including speed, current gear and 6 kinematics quantities: position, orientation, linear and angular velocity, linear and angular acceleration. All quantities are in NED coordinate system, SI units in world frame except for angular velocity and accelerations which are in body frame. Image APIs .","title":"APIs for Car"},{"location":"apis/#apis-for-multirotor","text":"Multirotor can be controlled by specifying angles, velocity vector, destination position or some combination of these. There are corresponding move* APIs for this purpose. When doing position control, we need to use some path following algorithm. By default AirSim uses carrot following algorithm. This is often referred to as \"high level control\" because you just need to specify high level goal and the firmware takes care of the rest. Currently lowest level control available in AirSim is moveByAngleThrottleAsync API.","title":"APIs for Multirotor"},{"location":"apis/#getmultirotorstate","text":"This API returns the state of the vehicle in one call. The state includes, collision, estimated kinematics (i.e. kinematics computed by fusing sensors), and timestamp (nano seconds since epoch). The kinematics here means 6 quantities: position, orientation, linear and angular velocity, linear and angular acceleration. Please note that simple_slight currently doesn't support state estimator which means estimated and ground truth kinematics values would be same for simple_flight. Estimated kinematics are however available for PX4 except for angular acceleration. All quantities are in NED coordinate system, SI units in world frame except for angular velocity and accelerations which are in body frame.","title":"getMultirotorState"},{"location":"apis/#async-methods-duration-and-max_wait_seconds","text":"Many API methods has parameters named duration or max_wait_seconds and they have Async as suffix, for example, takeoffAsync . These methods will return immediately after starting the task in AirSim so that your client code can do something else while that task is being executed. If you want to wait for this task to complete then you can call waitOnLastTask like this: //C++ client . takeoffAsync () -> waitOnLastTask (); # Python client . takeoffAsync (). join () If you start another command then it automatically cancels the previous task and starts new command. This allows to use pattern where your coded continuously does the sensing, computes a new trajectory to follow and issues that path to vehicle in AirSim. Each newly issued trajectory cancels the previous trajectory allowing your code to continuously do the update as new sensor data arrives. All Async method returns concurrent.futures.Future in Python ( std::future in C++). Please note that these future classes currently do not allow to check status or cancel the task; they only allow to wait for task to complete. AirSim does provide API cancelLastTask , however.","title":"Async methods, duration and max_wait_seconds"},{"location":"apis/#drivetrain","text":"There are two modes you can fly vehicle: drivetrain parameter is set to airsim.DrivetrainType.ForwardOnly or airsim.DrivetrainType.MaxDegreeOfFreedom . When you specify ForwardOnly, you are saying that vehicle's front should always point in the direction of travel. So if you want drone to take left turn then it would first rotate so front points to left. This mode is useful when you have only front camera and you are operating vehicle using FPV view. This is more or less like travelling in car where you always have front view. The MaxDegreeOfFreedom means you don't care where the front points to. So when you take left turn, you just start going left like crab. Quadrotors can go in any direction regardless of where front points to. The MaxDegreeOfFreedom enables this mode.","title":"drivetrain"},{"location":"apis/#yaw_mode","text":"yaw_mode is a struct YawMode with two fields, yaw_or_rate and is_rate . If is_rate field is True then yaw_or_rate field is interpreted as angular velocity in degrees/sec which means you want vehicle to rotate continuously around its axis at that angular velocity while moving. If is_rate is False then yaw_or_rate is interpreted as angle in degrees which means you want vehicle to rotate to specific angle (i.e. yaw) and keep that angle while moving. You can probably see that when yaw_mode.is_rate == true , the drivetrain parameter shouldn't be set to ForwardOnly because you are contradicting by saying that keep front pointing ahead but also rotate continuously. However if you have yaw_mode.is_rate = false in ForwardOnly mode then you can do some funky stuff. For example, you can have drone do circles and have yaw_or_rate set to 90 so camera is always pointed to center (\"super cool selfie mode\"). In MaxDegreeofFreedom also you can get some funky stuff by setting yaw_mode.is_rate = true and say yaw_mode.yaw_or_rate = 20 . This will cause drone to go in its path while rotating which may allow to do 360 scanning. In most cases, you just don't want yaw to change which you can do by setting yaw rate of 0. The shorthand for this is airsim.YawMode.Zero() (or in C++: YawMode::Zero() ).","title":"yaw_mode"},{"location":"apis/#lookahead-and-adaptive_lookahead","text":"When you ask vehicle to follow a path, AirSim uses \"carrot following\" algorithm. This algorithm operates by looking ahead on path and adjusting its velocity vector. The parameters for this algorithm is specified by lookahead and adaptive_lookahead . For most of the time you want algorithm to auto-decide the values by simply setting lookahead = -1 and adaptive_lookahead = 0 .","title":"lookahead and adaptive_lookahead"},{"location":"apis/#using-apis-on-real-vehicles","text":"We want to be able to run same code that runs in simulation as on real vehicle. This allows you to test your code in simulator and deploy to real vehicle. Generally speaking, APIs therefore shouldn't allow you to do something that cannot be done on real vehicle (for example, getting the ground truth). But, of course, simulator has much more information and it would be useful in applications that may not care about running things on real vehicle. For this reason, we clearly delineate between sim-only APIs by attaching sim prefix, for example, simGetGroundTruthKinematics . This way you can avoid using these simulation-only APIs if you care about running your code on real vehicles. The AirLib is self-contained library that you can put on an offboard computing module such as the Gigabyte barebone Mini PC. This module then can talk to the flight controllers such as PX4 using exact same code and flight controller protocol. The code you write for testing in the simulator remains unchanged. See AirLib on custom drones .","title":"Using APIs on Real Vehicles"},{"location":"apis/#airsim-api","text":"\u8bf7\u53c2\u9605 \u6dfb\u52a0\u65b0 API \u9875\u9762","title":"\u5411 AirSim \u6dfb\u52a0\u65b0\u7684 API"},{"location":"apis/#references-and-examples","text":"C++ API Examples Car Examples Multirotor Examples Computer Vision Examples Move on Path demo showing video of fast multirotor flight through Modular Neighborhood environment Building a Hexacopter Building Point Clouds","title":"References and Examples"},{"location":"apis/#faq","text":"","title":"FAQ"},{"location":"apis/#unreal-is-slowed-down-dramatically-when-i-run-api","text":"If you see Unreal getting slowed down dramatically when Unreal Engine window loses focus then go to 'Edit->Editor Preferences' in Unreal Editor, in the 'Search' box type 'CPU' and ensure that the 'Use Less CPU when in Background' is unchecked.","title":"Unreal is slowed down dramatically when I run API"},{"location":"apis/#do-i-need-anything-else-on-windows","text":"You should install VS2019 with VC++, Windows SDK 10.0 and Python. To use Python APIs you will need Python 3.5 or later (install it using Anaconda).","title":"Do I need anything else on Windows?"},{"location":"apis/#which-version-of-python-should-i-use","text":"We recommend Anaconda to get Python tools and libraries. Our code is tested with Python 3.5.3 :: Anaconda 4.4.0. This is important because older version have been known to have problems .","title":"Which version of Python should I use?"},{"location":"apis/#i-get-error-on-import-cv2","text":"You can install OpenCV using: conda install opencv pip install opencv-python","title":"I get error on import cv2"},{"location":"apis/#typeerror-unsupported-operand-types-for-asyncioloop-and-float","text":"This error happens if you install Jupyter, which somehow breaks the msgpackrpc library. Create a new python environment which the minimal required packages.","title":"TypeError: unsupported operand type(s) for *: 'AsyncIOLoop' and 'float'"},{"location":"apis_cpp/","text":"Using C++ APIs for AirSim # Please read general API doc first if you haven't already. This document describes C++ examples and other C++ specific details. Quick Start # Fastest way to get started is to open AirSim.sln in Visual Studio 2019. You will see Hello Car and Hello Drone examples in the solution. These examples will show you the include paths and lib paths you will need to setup in your VC++ projects. If you are using Linux then you will specify these paths either in your cmake file or on compiler command line. Include and Lib Folders # Include folders: $(ProjectDir)..\\AirLib\\deps\\rpclib\\include;include;$(ProjectDir)..\\AirLib\\deps\\eigen3;$(ProjectDir)..\\AirLib\\include Dependencies: rpc.lib Lib folders: $(ProjectDir)\\..\\AirLib\\deps\\MavLinkCom\\lib\\$(Platform)\\$(Configuration);$(ProjectDir)\\..\\AirLib\\deps\\rpclib\\lib\\$(Platform)\\$(Configuration);$(ProjectDir)\\..\\AirLib\\lib\\$(Platform)\\$(Configuration) References: Reference AirLib and MavLinkCom to the project references. (Right click your project then go to References , Add reference... , and then select AirLib and MavLinkCom) Hello Car # Here's how to use AirSim APIs using C++ to control simulated car (see also Python example ): // ready to run example: https://github.com/Microsoft/AirSim/blob/main/HelloCar/main.cpp #include <iostream> #include \"vehicles/car/api/CarRpcLibClient.hpp\" int main () { msr :: airlib :: CarRpcLibClient client ; client . enableApiControl ( true ); //this disables manual control CarControllerBase :: CarControls controls ; std :: cout << \"Press enter to drive forward\" << std :: endl ; std :: cin . get (); controls . throttle = 1 ; client . setCarControls ( controls ); std :: cout << \"Press Enter to activate handbrake\" << std :: endl ; std :: cin . get (); controls . handbrake = true ; client . setCarControls ( controls ); std :: cout << \"Press Enter to take turn and drive backward\" << std :: endl ; std :: cin . get (); controls . handbrake = false ; controls . throttle = -1 ; controls . steering = 1 ; client . setCarControls ( controls ); std :: cout << \"Press Enter to stop\" << std :: endl ; std :: cin . get (); client . setCarControls ( CarControllerBase :: CarControls ()); return 0 ; } Hello Drone # Here's how to use AirSim APIs using C++ to control simulated quadrotor (see also Python example ): // ready to run example: https://github.com/Microsoft/AirSim/blob/main/HelloDrone/main.cpp #include <iostream> #include \"vehicles/multirotor/api/MultirotorRpcLibClient.hpp\" int main () { msr :: airlib :: MultirotorRpcLibClient client ; std :: cout << \"Press Enter to enable API control \\n \" ; std :: cin . get (); client . enableApiControl ( true ); std :: cout << \"Press Enter to arm the drone \\n \" ; std :: cin . get (); client . armDisarm ( true ); std :: cout << \"Press Enter to takeoff \\n \" ; std :: cin . get (); client . takeoffAsync ( 5 ) -> waitOnLastTask (); std :: cout << \"Press Enter to move 5 meters in x direction with 1 m/s velocity \\n \" ; std :: cin . get (); auto position = client . getMultirotorState (). getPosition (); // from current location client . moveToPositionAsync ( position . x () + 5 , position . y (), position . z (), 1 ) -> waitOnLastTask (); std :: cout << \"Press Enter to land \\n \" ; std :: cin . get (); client . landAsync () -> waitOnLastTask (); return 0 ; } See Also # Examples of how to use internal infrastructure in AirSim in your other projects DroneShell app shows how to make simple interface using C++ APIs to control drones HelloSpawnedDrones app shows how to make additional vehicles on the fly Python APIs","title":"C++ APIs"},{"location":"apis_cpp/#using-c-apis-for-airsim","text":"Please read general API doc first if you haven't already. This document describes C++ examples and other C++ specific details.","title":"Using C++ APIs for AirSim"},{"location":"apis_cpp/#quick-start","text":"Fastest way to get started is to open AirSim.sln in Visual Studio 2019. You will see Hello Car and Hello Drone examples in the solution. These examples will show you the include paths and lib paths you will need to setup in your VC++ projects. If you are using Linux then you will specify these paths either in your cmake file or on compiler command line.","title":"Quick Start"},{"location":"apis_cpp/#include-and-lib-folders","text":"Include folders: $(ProjectDir)..\\AirLib\\deps\\rpclib\\include;include;$(ProjectDir)..\\AirLib\\deps\\eigen3;$(ProjectDir)..\\AirLib\\include Dependencies: rpc.lib Lib folders: $(ProjectDir)\\..\\AirLib\\deps\\MavLinkCom\\lib\\$(Platform)\\$(Configuration);$(ProjectDir)\\..\\AirLib\\deps\\rpclib\\lib\\$(Platform)\\$(Configuration);$(ProjectDir)\\..\\AirLib\\lib\\$(Platform)\\$(Configuration) References: Reference AirLib and MavLinkCom to the project references. (Right click your project then go to References , Add reference... , and then select AirLib and MavLinkCom)","title":"Include and Lib Folders"},{"location":"apis_cpp/#hello-car","text":"Here's how to use AirSim APIs using C++ to control simulated car (see also Python example ): // ready to run example: https://github.com/Microsoft/AirSim/blob/main/HelloCar/main.cpp #include <iostream> #include \"vehicles/car/api/CarRpcLibClient.hpp\" int main () { msr :: airlib :: CarRpcLibClient client ; client . enableApiControl ( true ); //this disables manual control CarControllerBase :: CarControls controls ; std :: cout << \"Press enter to drive forward\" << std :: endl ; std :: cin . get (); controls . throttle = 1 ; client . setCarControls ( controls ); std :: cout << \"Press Enter to activate handbrake\" << std :: endl ; std :: cin . get (); controls . handbrake = true ; client . setCarControls ( controls ); std :: cout << \"Press Enter to take turn and drive backward\" << std :: endl ; std :: cin . get (); controls . handbrake = false ; controls . throttle = -1 ; controls . steering = 1 ; client . setCarControls ( controls ); std :: cout << \"Press Enter to stop\" << std :: endl ; std :: cin . get (); client . setCarControls ( CarControllerBase :: CarControls ()); return 0 ; }","title":"Hello Car"},{"location":"apis_cpp/#hello-drone","text":"Here's how to use AirSim APIs using C++ to control simulated quadrotor (see also Python example ): // ready to run example: https://github.com/Microsoft/AirSim/blob/main/HelloDrone/main.cpp #include <iostream> #include \"vehicles/multirotor/api/MultirotorRpcLibClient.hpp\" int main () { msr :: airlib :: MultirotorRpcLibClient client ; std :: cout << \"Press Enter to enable API control \\n \" ; std :: cin . get (); client . enableApiControl ( true ); std :: cout << \"Press Enter to arm the drone \\n \" ; std :: cin . get (); client . armDisarm ( true ); std :: cout << \"Press Enter to takeoff \\n \" ; std :: cin . get (); client . takeoffAsync ( 5 ) -> waitOnLastTask (); std :: cout << \"Press Enter to move 5 meters in x direction with 1 m/s velocity \\n \" ; std :: cin . get (); auto position = client . getMultirotorState (). getPosition (); // from current location client . moveToPositionAsync ( position . x () + 5 , position . y (), position . z (), 1 ) -> waitOnLastTask (); std :: cout << \"Press Enter to land \\n \" ; std :: cin . get (); client . landAsync () -> waitOnLastTask (); return 0 ; }","title":"Hello Drone"},{"location":"apis_cpp/#see-also","text":"Examples of how to use internal infrastructure in AirSim in your other projects DroneShell app shows how to make simple interface using C++ APIs to control drones HelloSpawnedDrones app shows how to make additional vehicles on the fly Python APIs","title":"See Also"},{"location":"azure/","text":"Azure \u4e0a\u7684 AirSim \u5f00\u53d1\u73af\u5883 # \u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u5728 Azure \u4e0a\u81ea\u52a8\u521b\u5efa\u5f00\u53d1\u73af\u5883\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Visual Studio Code \u7f16\u5199\u548c\u8c03\u8bd5\u8fde\u63a5\u5230 AirSim \u7684 Python \u5e94\u7528\u7a0b\u5e8f \u81ea\u52a8\u90e8\u7f72\u60a8\u7684 Azure VM # \u70b9\u51fb\u84dd\u8272\u6309\u94ae\u5f00\u59cb Azure \u90e8\u7f72\uff08\u6a21\u677f\u4e2d\u5df2\u9884\u5148\u586b\u5145\u4e86\u4ee5\u4e0b 2 \u4e2a\u6559\u7a0b\u7528\u4f8b\u7684\u63a8\u8350\u865a\u62df\u673a\u5927\u5c0f\uff09 \u6ce8\u610f \uff1a\u865a\u62df\u673a\u90e8\u7f72\u548c\u914d\u7f6e\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981 20 \u591a\u5206\u949f\u624d\u80fd\u5b8c\u6210 \u5173\u4e8e Azure VM \u7684\u90e8\u7f72 # \u4f7f\u7528 Azure \u8bd5\u7528\u5e10\u6237\u65f6\uff0c\u9ed8\u8ba4 vCPU \u914d\u989d\u4e0d\u8db3\u4ee5\u5206\u914d\u8fd0\u884c AirSim \u6240\u9700\u7684\u865a\u62df\u673a\u3002\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u5c06\u5728\u5c1d\u8bd5\u521b\u5efa\u865a\u62df\u673a\u65f6\u770b\u5230\u9519\u8bef\uff0c\u5e76\u4e14\u9700\u8981\u63d0\u4ea4\u589e\u52a0\u914d\u989d\u7684\u8bf7\u6c42\u3002 \u8bf7\u52a1\u5fc5\u4e86\u89e3\u865a\u62df\u673a\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u8d39\u7528 \u3002 \u4e3a\u907f\u514d\u5728\u4e0d\u4f7f\u7528\u65f6\u5bf9\u865a\u62df\u673a\u4f7f\u7528\u4ea7\u751f\u8d39\u7528\uff0c\u8bf7\u8bb0\u4f4f\u4ece Azure \u95e8\u6237 \u91ca\u653e\u5176\u8d44\u6e90\u6216\u4ece Azure CLI \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a az vm deallocate --resource-group MyResourceGroup --name MyVMName \u901a\u8fc7 Visual Studio Code \u548c\u8fdc\u7a0b SSH \u8fdb\u884c\u7f16\u7801\u548c\u8c03\u8bd5 # \u5b89\u88c5 Visual Studio Code \u5b89\u88c5 Remote - SSH \u6269\u5c55 \u6309 F1 \u5e76\u8fd0\u884c Remote - SSH: Connect to host... \u547d\u4ee4 \u6dfb\u52a0\u6700\u8fd1\u521b\u5efa\u7684\u865a\u62df\u673a\u8be6\u7ec6\u4fe1\u606f\u3002\u4f8b\u5982\uff0c AzureUser@11.22.33.44 \u518d\u6b21\u8fd0\u884c Remote - SSH: Connect to host... \u547d\u4ee4\uff0c\u73b0\u5728\u9009\u62e9\u65b0\u6dfb\u52a0\u7684\u8fde\u63a5\u3002 \u8fde\u63a5\u540e\uff0c\u70b9\u51fb Visual Studio Code \u4e2d\u7684 Clone Repository \u6309\u94ae\uff0c\u7136\u540e\u5c06\u5176\u514b\u9686\u5230\u8fdc\u7a0b\u865a\u62df\u673a\u4e2d\u5e76 \u4ec5\u6253\u5f00 azure \u6587\u4ef6\u5939 \uff0c\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u514b\u9686\u5b83\u5e76\u5c06 azure \u6587\u4ef6\u5939\u7684\u5185\u5bb9\u4ece\u6b64\u5b58\u50a8\u5e93\u590d\u5236\u5230\u5176\u4e2d\u3002\u52a1\u5fc5\u6253\u5f00\u8be5\u76ee\u5f55\uff0c\u4ee5\u4fbf Visual Studio Code \u80fd\u591f\u9488\u5bf9\u5177\u4f53\u573a\u666f\u4f7f\u7528\u7279\u5b9a\u7684 .vscode \u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u901a\u7528\u7684 AirSim .vscode \u76ee\u5f55\u3002\u8be5\u76ee\u5f55\u5305\u542b\u5efa\u8bae\u5b89\u88c5\u7684\u6269\u5c55\u7a0b\u5e8f\u3001\u8fdc\u7a0b\u542f\u52a8 AirSim \u7684\u4efb\u52a1\u4ee5\u53ca Python \u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u914d\u7f6e\u3002 \u5b89\u88c5\u6240\u6709\u63a8\u8350\u7684\u6269\u5c55 \u6309 F1 \u5e76\u9009\u62e9 Tasks: Run Task \u9009\u9879\u3002\u7136\u540e\uff0c\u4ece Visual Studio Code \u4e2d\u9009\u62e9 Start AirSim \u4efb\u52a1\uff0c\u4ee5\u4ece Visual Studio Code \u6267\u884c start-airsim.ps1 \u811a\u672c\u3002 \u6253\u5f00 app \u76ee\u5f55\u4e2d\u7684 multirotor.py \u6587\u4ef6 \u5f00\u59cb\u4f7f\u7528 Python \u8fdb\u884c\u8c03\u8bd5 \u5b8c\u6210\u540e\uff0c\u8bf7\u8bb0\u4f4f\u505c\u6b62\u5e76\u89e3\u9664\u5206\u914d Azure VM\uff0c\u4ee5\u907f\u514d\u4ea7\u751f\u989d\u5916\u8d39\u7528 \u4ece\u672c\u5730 Visual Studio Code \u8fdb\u884c\u7f16\u7801\u548c\u8c03\u8bd5\uff0c\u5e76\u901a\u8fc7\u8f6c\u53d1\u7aef\u53e3\u8fde\u63a5\u5230 AirSim # \u6ce8\u610f \u6b64\u573a\u666f\u5c06\u4f7f\u7528 2 \u4e2a Visual Studio Code \u5b9e\u4f8b\u3002\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u7528\u4f5c\u6865\u6881\uff0c\u901a\u8fc7 SSH \u5c06\u7aef\u53e3\u8f6c\u53d1\u5230 Azure VM \u5e76\u6267\u884c\u8fdc\u7a0b\u8fdb\u7a0b\uff1b\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u5c06\u7528\u4e8e\u672c\u5730 Python \u5f00\u53d1\u3002\u4e3a\u4e86\u80fd\u591f\u4ece\u672c\u5730 Python \u4ee3\u7801\u8bbf\u95ee VM\uff0c\u9700\u8981\u4fdd\u6301 Visual Studio Code \u7684 Remote - SSH \u5b9e\u4f8b\u5904\u4e8e\u6253\u5f00\u72b6\u6001\uff0c\u540c\u65f6\u5728\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u672c\u5730 Python \u73af\u5883\u3002 \u6253\u5f00\u7b2c\u4e00\u4e2a Visual Studio Code \u5b9e\u4f8b \u6309\u7167\u4e0a\u4e00\u8282\u4e2d\u7684\u6b65\u9aa4\u901a\u8fc7 Remote - SSH \u8fdb\u884c\u8fde\u63a5 \u5728 \u8fdc\u7a0b\u8d44\u6e90\u7ba1\u7406\u5668(Remote Explorer) \u4e2d\uff0c\u5c06\u7aef\u53e3 41451 \u6dfb\u52a0\u4e3a\u672c\u5730\u4e3b\u673a\u7684\u8f6c\u53d1\u7aef\u53e3 \u6309\u7167\u4e0a\u4e00\u573a\u666f\u4e2d\u7684\u8bf4\u660e\uff0c\u4f7f\u7528\u8fdc\u7a0b\u4f1a\u8bdd\u5728 Visual Studio Code \u4e0a\u8fd0\u884c Start AirSim \u4efb\u52a1\uff0c\u6216\u8005\u5728 VM \u4e2d\u624b\u52a8\u542f\u52a8 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6 \u6253\u5f00\u7b2c\u4e8c\u4e2a Visual Studio Code \u5b9e\u4f8b\uff0c\u65e0\u9700\u65ad\u5f00\u6216\u5173\u95ed\u7b2c\u4e00\u4e2a\u5b9e\u4f8b \u8981\u4e48\u5728\u672c\u5730\u514b\u9686\u6b64\u5b58\u50a8\u5e93\u5e76 \u4ec5 \u5728 Visual Studio Code \u4e2d\u6253\u5f00 azure \u6587\u4ef6\u5939 \uff0c\u8981\u4e48\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u514b\u9686\u5b83\u5e76\u4ece\u8be5\u5b58\u50a8\u5e93\u4e2d\u590d\u5236 azure \u6587\u4ef6\u5939\u7684\u5185\u5bb9\u3002 \u5728 app \u76ee\u5f55\u4e2d\u8fd0\u884c pip install -r requirements.txt \u6253\u5f00 app \u76ee\u5f55\u4e2d\u7684 multirotor.py \u6587\u4ef6 \u5f00\u59cb\u4f7f\u7528 Python \u8fdb\u884c\u8c03\u8bd5 \u5b8c\u6210\u540e\uff0c\u8bf7\u8bb0\u4f4f\u505c\u6b62\u5e76\u89e3\u9664\u5206\u914d Azure VM\uff0c\u4ee5\u907f\u514d\u4ea7\u751f\u989d\u5916\u8d39\u7528 \u4f7f\u7528 Docker \u8fd0\u884c # \u4e00\u65e6 AirSim \u73af\u5883\u548c Python \u5e94\u7528\u7a0b\u5e8f\u51c6\u5907\u5c31\u7eea\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u5185\u5bb9\u6253\u5305\u4e3a Docker \u955c\u50cf\u3002 azure \u76ee\u5f55\u4e2d\u7684\u793a\u4f8b\u9879\u76ee\u5df2\u51c6\u5907\u597d\u4f7f\u7528 Docker \u8fd0\u884c\u9884\u6784\u5efa\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\u548c Python \u4ee3\u7801\u3002 \u5f53\u4f60\u60f3\u8981\u5927\u89c4\u6a21\u8fd0\u884c\u6a21\u62df\u65f6\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4e3a\u540c\u4e00\u4e2a\u6a21\u62df\u8bbe\u7f6e\u51e0\u79cd\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u5e76\u4f7f\u7528 Azure \u5bb9\u5668\u670d\u52a1\u4e0a\u7684 Docker \u955c\u50cf\u4ee5\u5e76\u884c\u3001\u65e0\u4eba\u503c\u5b88\u7684\u65b9\u5f0f\u6267\u884c\u5b83\u4eec\u3002 \u7531\u4e8e AirSim \u9700\u8981\u8bbf\u95ee\u4e3b\u673a GPU\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u652f\u6301\u8be5\u529f\u80fd\u7684 Docker \u8fd0\u884c\u65f6\u3002\u6709\u5173\u5728 Docker \u4e2d\u8fd0\u884c AirSim \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \u6b64\u5904 \u3002 \u4f7f\u7528 Azure \u5bb9\u5668\u670d\u52a1\u8fd0\u884c\u6b64\u6620\u50cf\u65f6\uff0c\u552f\u4e00\u7684\u989d\u5916\u8981\u6c42\u662f\u5411\u5c06\u8981\u90e8\u7f72\u7684\u5bb9\u5668\u7ec4\u6dfb\u52a0 GPU \u652f\u6301\u3002 \u5b83\u53ef\u4ee5\u4f7f\u7528\u6765\u81ea DockerHub \u7684\u516c\u5171 docker \u955c\u50cf\u6216\u90e8\u7f72\u5230\u79c1\u6709 Azure \u5bb9\u5668\u6ce8\u518c\u8868\u7684\u955c\u50cf\u3002 \u6784\u5efa docker \u955c\u50cf # docker build -t <your-registry-url>/<your-image-name> -f ./docker/Dockerfile . ` \u4f7f\u7528\u4e0d\u540c\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6 # \u8981\u4f7f\u7528\u4e0d\u540c\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u9996\u5148\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a \u5982\u4f55\u5728 Windows \u4e0a\u6784\u5efa AirSim \u4ee5\u53ca \u5982\u4f55\u5728 Linux \u4e0a\u6784\u5efa AirSim \uff08\u5982\u679c\u60a8\u8fd8\u60f3\u4f7f\u7528 Docker \u8fd0\u884c\u5b83\uff09 \u4e00\u65e6\u60a8\u62e5\u6709\u5305\u542b\u65b0 AirSim \u73af\u5883\u7684 zip \u6587\u4ef6\uff08\u6216\u8005\u66f4\u559c\u6b22\u4f7f\u7528 \u5b98\u65b9\u7248\u672c \u4e2d\u7684\u6587\u4ef6\uff09\uff0c\u60a8\u9700\u8981\u4fee\u6539\u5b58\u50a8\u5e93\u7684 azure \u76ee\u5f55\u4e2d\u7684\u67d0\u4e9b\u811a\u672c\u4ee5\u6307\u5411\u65b0\u73af\u5883\uff1a - \u5728 azure/azure-env-creation/configure-vm.ps1 \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539\u4ee5 $airSimBinary \u5f00\u5934\u7684\u6240\u6709\u53c2\u6570 - \u5728 azure/start-airsim.ps1 \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 $airSimExecutable \u548c $airSimProcessName \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fdocker\u955c\u50cf\uff0c\u4f60\u8fd8\u9700\u8981\u4e00\u4e2alinux\u4e8c\u8fdb\u5236zip\u6587\u4ef6\uff0c\u5e76\u4fee\u6539\u4ee5\u4e0bDocker\u76f8\u5173\u7684\u6587\u4ef6\uff1a - \u5728 azure/docker/Dockerfile \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 AIRSIM_BINARY_ZIP_URL \u548c AIRSIM_BINARY_ZIP_FILENAME ENV \u58f0\u660e - \u5728 azure/docker/docker-entrypoint.sh \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 AIRSIM_EXECUTABLE \u7ef4\u62a4\u6b64\u5f00\u53d1\u73af\u5883 # \u6b64\u5f00\u53d1\u73af\u5883\u7684\u591a\u4e2a\u7ec4\u4ef6\uff08ARM \u6a21\u677f\u3001\u521d\u59cb\u5316\u811a\u672c\u548c VSCode \u4efb\u52a1\uff09\u76f4\u63a5\u4f9d\u8d56\u4e8e\u5f53\u524d\u76ee\u5f55\u7ed3\u6784\u3001\u6587\u4ef6\u540d\u548c\u5b58\u50a8\u5e93\u4f4d\u7f6e\u3002\u8ba1\u5212 \u4fee\u6539/fork \u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7ec4\u4ef6\u65f6\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u6bcf\u4e2a\u811a\u672c\u548c\u6a21\u677f\uff0c\u4ee5\u8fdb\u884c\u5fc5\u8981\u7684\u8c03\u6574\u3002","title":"Azure \u4e0a\u7684 ArSim"},{"location":"azure/#azure-airsim","text":"\u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u5728 Azure \u4e0a\u81ea\u52a8\u521b\u5efa\u5f00\u53d1\u73af\u5883\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Visual Studio Code \u7f16\u5199\u548c\u8c03\u8bd5\u8fde\u63a5\u5230 AirSim \u7684 Python \u5e94\u7528\u7a0b\u5e8f","title":"Azure \u4e0a\u7684 AirSim \u5f00\u53d1\u73af\u5883"},{"location":"azure/#azure-vm","text":"\u70b9\u51fb\u84dd\u8272\u6309\u94ae\u5f00\u59cb Azure \u90e8\u7f72\uff08\u6a21\u677f\u4e2d\u5df2\u9884\u5148\u586b\u5145\u4e86\u4ee5\u4e0b 2 \u4e2a\u6559\u7a0b\u7528\u4f8b\u7684\u63a8\u8350\u865a\u62df\u673a\u5927\u5c0f\uff09 \u6ce8\u610f \uff1a\u865a\u62df\u673a\u90e8\u7f72\u548c\u914d\u7f6e\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981 20 \u591a\u5206\u949f\u624d\u80fd\u5b8c\u6210","title":"\u81ea\u52a8\u90e8\u7f72\u60a8\u7684 Azure VM"},{"location":"azure/#azure-vm_1","text":"\u4f7f\u7528 Azure \u8bd5\u7528\u5e10\u6237\u65f6\uff0c\u9ed8\u8ba4 vCPU \u914d\u989d\u4e0d\u8db3\u4ee5\u5206\u914d\u8fd0\u884c AirSim \u6240\u9700\u7684\u865a\u62df\u673a\u3002\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u5c06\u5728\u5c1d\u8bd5\u521b\u5efa\u865a\u62df\u673a\u65f6\u770b\u5230\u9519\u8bef\uff0c\u5e76\u4e14\u9700\u8981\u63d0\u4ea4\u589e\u52a0\u914d\u989d\u7684\u8bf7\u6c42\u3002 \u8bf7\u52a1\u5fc5\u4e86\u89e3\u865a\u62df\u673a\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u8d39\u7528 \u3002 \u4e3a\u907f\u514d\u5728\u4e0d\u4f7f\u7528\u65f6\u5bf9\u865a\u62df\u673a\u4f7f\u7528\u4ea7\u751f\u8d39\u7528\uff0c\u8bf7\u8bb0\u4f4f\u4ece Azure \u95e8\u6237 \u91ca\u653e\u5176\u8d44\u6e90\u6216\u4ece Azure CLI \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a az vm deallocate --resource-group MyResourceGroup --name MyVMName","title":"\u5173\u4e8e Azure VM \u7684\u90e8\u7f72"},{"location":"azure/#visual-studio-code-ssh","text":"\u5b89\u88c5 Visual Studio Code \u5b89\u88c5 Remote - SSH \u6269\u5c55 \u6309 F1 \u5e76\u8fd0\u884c Remote - SSH: Connect to host... \u547d\u4ee4 \u6dfb\u52a0\u6700\u8fd1\u521b\u5efa\u7684\u865a\u62df\u673a\u8be6\u7ec6\u4fe1\u606f\u3002\u4f8b\u5982\uff0c AzureUser@11.22.33.44 \u518d\u6b21\u8fd0\u884c Remote - SSH: Connect to host... \u547d\u4ee4\uff0c\u73b0\u5728\u9009\u62e9\u65b0\u6dfb\u52a0\u7684\u8fde\u63a5\u3002 \u8fde\u63a5\u540e\uff0c\u70b9\u51fb Visual Studio Code \u4e2d\u7684 Clone Repository \u6309\u94ae\uff0c\u7136\u540e\u5c06\u5176\u514b\u9686\u5230\u8fdc\u7a0b\u865a\u62df\u673a\u4e2d\u5e76 \u4ec5\u6253\u5f00 azure \u6587\u4ef6\u5939 \uff0c\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u514b\u9686\u5b83\u5e76\u5c06 azure \u6587\u4ef6\u5939\u7684\u5185\u5bb9\u4ece\u6b64\u5b58\u50a8\u5e93\u590d\u5236\u5230\u5176\u4e2d\u3002\u52a1\u5fc5\u6253\u5f00\u8be5\u76ee\u5f55\uff0c\u4ee5\u4fbf Visual Studio Code \u80fd\u591f\u9488\u5bf9\u5177\u4f53\u573a\u666f\u4f7f\u7528\u7279\u5b9a\u7684 .vscode \u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u901a\u7528\u7684 AirSim .vscode \u76ee\u5f55\u3002\u8be5\u76ee\u5f55\u5305\u542b\u5efa\u8bae\u5b89\u88c5\u7684\u6269\u5c55\u7a0b\u5e8f\u3001\u8fdc\u7a0b\u542f\u52a8 AirSim \u7684\u4efb\u52a1\u4ee5\u53ca Python \u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u914d\u7f6e\u3002 \u5b89\u88c5\u6240\u6709\u63a8\u8350\u7684\u6269\u5c55 \u6309 F1 \u5e76\u9009\u62e9 Tasks: Run Task \u9009\u9879\u3002\u7136\u540e\uff0c\u4ece Visual Studio Code \u4e2d\u9009\u62e9 Start AirSim \u4efb\u52a1\uff0c\u4ee5\u4ece Visual Studio Code \u6267\u884c start-airsim.ps1 \u811a\u672c\u3002 \u6253\u5f00 app \u76ee\u5f55\u4e2d\u7684 multirotor.py \u6587\u4ef6 \u5f00\u59cb\u4f7f\u7528 Python \u8fdb\u884c\u8c03\u8bd5 \u5b8c\u6210\u540e\uff0c\u8bf7\u8bb0\u4f4f\u505c\u6b62\u5e76\u89e3\u9664\u5206\u914d Azure VM\uff0c\u4ee5\u907f\u514d\u4ea7\u751f\u989d\u5916\u8d39\u7528","title":"\u901a\u8fc7 Visual Studio Code \u548c\u8fdc\u7a0b SSH \u8fdb\u884c\u7f16\u7801\u548c\u8c03\u8bd5"},{"location":"azure/#visual-studio-code-airsim","text":"\u6ce8\u610f \u6b64\u573a\u666f\u5c06\u4f7f\u7528 2 \u4e2a Visual Studio Code \u5b9e\u4f8b\u3002\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u7528\u4f5c\u6865\u6881\uff0c\u901a\u8fc7 SSH \u5c06\u7aef\u53e3\u8f6c\u53d1\u5230 Azure VM \u5e76\u6267\u884c\u8fdc\u7a0b\u8fdb\u7a0b\uff1b\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u5c06\u7528\u4e8e\u672c\u5730 Python \u5f00\u53d1\u3002\u4e3a\u4e86\u80fd\u591f\u4ece\u672c\u5730 Python \u4ee3\u7801\u8bbf\u95ee VM\uff0c\u9700\u8981\u4fdd\u6301 Visual Studio Code \u7684 Remote - SSH \u5b9e\u4f8b\u5904\u4e8e\u6253\u5f00\u72b6\u6001\uff0c\u540c\u65f6\u5728\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u672c\u5730 Python \u73af\u5883\u3002 \u6253\u5f00\u7b2c\u4e00\u4e2a Visual Studio Code \u5b9e\u4f8b \u6309\u7167\u4e0a\u4e00\u8282\u4e2d\u7684\u6b65\u9aa4\u901a\u8fc7 Remote - SSH \u8fdb\u884c\u8fde\u63a5 \u5728 \u8fdc\u7a0b\u8d44\u6e90\u7ba1\u7406\u5668(Remote Explorer) \u4e2d\uff0c\u5c06\u7aef\u53e3 41451 \u6dfb\u52a0\u4e3a\u672c\u5730\u4e3b\u673a\u7684\u8f6c\u53d1\u7aef\u53e3 \u6309\u7167\u4e0a\u4e00\u573a\u666f\u4e2d\u7684\u8bf4\u660e\uff0c\u4f7f\u7528\u8fdc\u7a0b\u4f1a\u8bdd\u5728 Visual Studio Code \u4e0a\u8fd0\u884c Start AirSim \u4efb\u52a1\uff0c\u6216\u8005\u5728 VM \u4e2d\u624b\u52a8\u542f\u52a8 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6 \u6253\u5f00\u7b2c\u4e8c\u4e2a Visual Studio Code \u5b9e\u4f8b\uff0c\u65e0\u9700\u65ad\u5f00\u6216\u5173\u95ed\u7b2c\u4e00\u4e2a\u5b9e\u4f8b \u8981\u4e48\u5728\u672c\u5730\u514b\u9686\u6b64\u5b58\u50a8\u5e93\u5e76 \u4ec5 \u5728 Visual Studio Code \u4e2d\u6253\u5f00 azure \u6587\u4ef6\u5939 \uff0c\u8981\u4e48\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u514b\u9686\u5b83\u5e76\u4ece\u8be5\u5b58\u50a8\u5e93\u4e2d\u590d\u5236 azure \u6587\u4ef6\u5939\u7684\u5185\u5bb9\u3002 \u5728 app \u76ee\u5f55\u4e2d\u8fd0\u884c pip install -r requirements.txt \u6253\u5f00 app \u76ee\u5f55\u4e2d\u7684 multirotor.py \u6587\u4ef6 \u5f00\u59cb\u4f7f\u7528 Python \u8fdb\u884c\u8c03\u8bd5 \u5b8c\u6210\u540e\uff0c\u8bf7\u8bb0\u4f4f\u505c\u6b62\u5e76\u89e3\u9664\u5206\u914d Azure VM\uff0c\u4ee5\u907f\u514d\u4ea7\u751f\u989d\u5916\u8d39\u7528","title":"\u4ece\u672c\u5730 Visual Studio Code \u8fdb\u884c\u7f16\u7801\u548c\u8c03\u8bd5\uff0c\u5e76\u901a\u8fc7\u8f6c\u53d1\u7aef\u53e3\u8fde\u63a5\u5230 AirSim"},{"location":"azure/#docker","text":"\u4e00\u65e6 AirSim \u73af\u5883\u548c Python \u5e94\u7528\u7a0b\u5e8f\u51c6\u5907\u5c31\u7eea\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u5185\u5bb9\u6253\u5305\u4e3a Docker \u955c\u50cf\u3002 azure \u76ee\u5f55\u4e2d\u7684\u793a\u4f8b\u9879\u76ee\u5df2\u51c6\u5907\u597d\u4f7f\u7528 Docker \u8fd0\u884c\u9884\u6784\u5efa\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\u548c Python \u4ee3\u7801\u3002 \u5f53\u4f60\u60f3\u8981\u5927\u89c4\u6a21\u8fd0\u884c\u6a21\u62df\u65f6\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4e3a\u540c\u4e00\u4e2a\u6a21\u62df\u8bbe\u7f6e\u51e0\u79cd\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u5e76\u4f7f\u7528 Azure \u5bb9\u5668\u670d\u52a1\u4e0a\u7684 Docker \u955c\u50cf\u4ee5\u5e76\u884c\u3001\u65e0\u4eba\u503c\u5b88\u7684\u65b9\u5f0f\u6267\u884c\u5b83\u4eec\u3002 \u7531\u4e8e AirSim \u9700\u8981\u8bbf\u95ee\u4e3b\u673a GPU\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u652f\u6301\u8be5\u529f\u80fd\u7684 Docker \u8fd0\u884c\u65f6\u3002\u6709\u5173\u5728 Docker \u4e2d\u8fd0\u884c AirSim \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u70b9\u51fb \u6b64\u5904 \u3002 \u4f7f\u7528 Azure \u5bb9\u5668\u670d\u52a1\u8fd0\u884c\u6b64\u6620\u50cf\u65f6\uff0c\u552f\u4e00\u7684\u989d\u5916\u8981\u6c42\u662f\u5411\u5c06\u8981\u90e8\u7f72\u7684\u5bb9\u5668\u7ec4\u6dfb\u52a0 GPU \u652f\u6301\u3002 \u5b83\u53ef\u4ee5\u4f7f\u7528\u6765\u81ea DockerHub \u7684\u516c\u5171 docker \u955c\u50cf\u6216\u90e8\u7f72\u5230\u79c1\u6709 Azure \u5bb9\u5668\u6ce8\u518c\u8868\u7684\u955c\u50cf\u3002","title":"\u4f7f\u7528 Docker \u8fd0\u884c"},{"location":"azure/#docker_1","text":"docker build -t <your-registry-url>/<your-image-name> -f ./docker/Dockerfile . `","title":"\u6784\u5efa docker \u955c\u50cf"},{"location":"azure/#airsim","text":"\u8981\u4f7f\u7528\u4e0d\u540c\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u9996\u5148\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a \u5982\u4f55\u5728 Windows \u4e0a\u6784\u5efa AirSim \u4ee5\u53ca \u5982\u4f55\u5728 Linux \u4e0a\u6784\u5efa AirSim \uff08\u5982\u679c\u60a8\u8fd8\u60f3\u4f7f\u7528 Docker \u8fd0\u884c\u5b83\uff09 \u4e00\u65e6\u60a8\u62e5\u6709\u5305\u542b\u65b0 AirSim \u73af\u5883\u7684 zip \u6587\u4ef6\uff08\u6216\u8005\u66f4\u559c\u6b22\u4f7f\u7528 \u5b98\u65b9\u7248\u672c \u4e2d\u7684\u6587\u4ef6\uff09\uff0c\u60a8\u9700\u8981\u4fee\u6539\u5b58\u50a8\u5e93\u7684 azure \u76ee\u5f55\u4e2d\u7684\u67d0\u4e9b\u811a\u672c\u4ee5\u6307\u5411\u65b0\u73af\u5883\uff1a - \u5728 azure/azure-env-creation/configure-vm.ps1 \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539\u4ee5 $airSimBinary \u5f00\u5934\u7684\u6240\u6709\u53c2\u6570 - \u5728 azure/start-airsim.ps1 \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 $airSimExecutable \u548c $airSimProcessName \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fdocker\u955c\u50cf\uff0c\u4f60\u8fd8\u9700\u8981\u4e00\u4e2alinux\u4e8c\u8fdb\u5236zip\u6587\u4ef6\uff0c\u5e76\u4fee\u6539\u4ee5\u4e0bDocker\u76f8\u5173\u7684\u6587\u4ef6\uff1a - \u5728 azure/docker/Dockerfile \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 AIRSIM_BINARY_ZIP_URL \u548c AIRSIM_BINARY_ZIP_FILENAME ENV \u58f0\u660e - \u5728 azure/docker/docker-entrypoint.sh \u4e2d\uff0c\u4f7f\u7528\u65b0\u503c\u4fee\u6539 AIRSIM_EXECUTABLE","title":"\u4f7f\u7528\u4e0d\u540c\u7684 AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"azure/#_1","text":"\u6b64\u5f00\u53d1\u73af\u5883\u7684\u591a\u4e2a\u7ec4\u4ef6\uff08ARM \u6a21\u677f\u3001\u521d\u59cb\u5316\u811a\u672c\u548c VSCode \u4efb\u52a1\uff09\u76f4\u63a5\u4f9d\u8d56\u4e8e\u5f53\u524d\u76ee\u5f55\u7ed3\u6784\u3001\u6587\u4ef6\u540d\u548c\u5b58\u50a8\u5e93\u4f4d\u7f6e\u3002\u8ba1\u5212 \u4fee\u6539/fork \u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7ec4\u4ef6\u65f6\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u6bcf\u4e2a\u811a\u672c\u548c\u6a21\u677f\uff0c\u4ee5\u8fdb\u884c\u5fc5\u8981\u7684\u8c03\u6574\u3002","title":"\u7ef4\u62a4\u6b64\u5f00\u53d1\u73af\u5883"},{"location":"build_faq/","text":"FAQ # Windows \u6784\u5efa # \u5982\u4f55\u5f3a\u5236 Unreal \u4f7f\u7528 Visual Studio 2019\uff1f \u62a5\u9519: 'where' is not recognized as an internal or external command \u62a5\u9519\uff1a <MyProject> could not be compiled. Try rebuilding from source manually \u5f53\u8fd0\u884c build.cmd \u65f6\u62a5\u9519\uff1a error C100 : An internal error has occurred in the compiler \u62a5\u9519\uff1a\"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\" \u5982\u4f55\u5c06 PX4 \u56fa\u4ef6\u4e0e AirSim \u4e00\u8d77\u4f7f\u7528\uff1f \u5728 Visual Studio \u4e2d\u505a\u4e86\u66f4\u6539\uff0c\u4f46\u6ca1\u6709\u6548\u679c Unreal \u4ecd\u7136\u4f7f\u7528 VS2015\uff0c\u5426\u5219\u6211\u4f1a\u6536\u5230\u4e00\u4e9b\u94fe\u63a5\u9519\u8bef Linux \u6784\u5efa # I'm getting error <MyProject> could not be compiled. Try rebuilding from source manually . Unreal crashed! How do I know what went wrong? How do I use an IDE on Linux? Can I cross compile for Linux from a Windows machine? What compiler and stdlib does AirSim use? What version of CMake does the AirSim build use? Can I compile AirSim in BashOnWindows? Where can I find more info on running Unreal on Linux? \u5176\u4ed6 # \u6253\u5305 AirSim Windows \u6784\u5efa # \u5982\u4f55\u5f3a\u5236 Unreal \u4f7f\u7528 Visual Studio 2019\uff1f # If the default update_from_git.bat file results in VS 2017 project, then you may need to run the C:\\Program Files\\Epic Games\\UE_4.25\\Engine\\Binaries\\DotNET\\UnrealBuildTool.exe tool manually, with the command line options -projectfiles -project=<your.uproject> -game -rocket -progress -2019 . If you are upgrading from 4.18 to 4.25 you may also need to add BuildSettingsVersion.V2 to your *.Target.cs and *Editor.Target.cs build files, like this: public AirSimNHTestTarget ( TargetInfo Target ) : base ( Target ) { Type = TargetType . Game ; DefaultBuildSettings = BuildSettingsVersion . V2 ; ExtraModuleNames . AddRange ( new string [] { \"AirSimNHTest\" }); } You may also need to edit this file: \"%APPDATA%\\Unreal Engine\\UnrealBuildTool\\BuildConfiguration.xml And add this Compiler version setting: <Configuration xmlns= \"https://www.unrealengine.com/BuildConfiguration\" > <WindowsPlatform> <Compiler> VisualStudio2019 </Compiler> </WindowsPlatform> </Configuration> \u62a5\u9519: 'where' is not recognized as an internal or external command # \u60a8\u5fc5\u987b\u5c06 C:\\WINDOWS\\SYSTEM32 \u6dfb\u52a0\u5230\u60a8\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u3002 \u62a5\u9519 <MyProject> could not be compiled. Try rebuilding from source manually # \u5f53\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u65e5\u5fd7\u5b58\u50a8\u5728 <My-Project>\\Saved\\Logs \u4e2d\uff0c\u53ef\u7528\u4e8e\u67e5\u627e\u95ee\u9898\u3002 \u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u53ef\u80fd\u662f Visual Studio \u7248\u672c\u51b2\u7a81\uff0cAirSim \u4f7f\u7528\u7684\u662f VS 2019\uff0c\u800c UE \u4f7f\u7528\u7684\u662f VS 2017\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u641c\u7d22 2017 \u6765\u627e\u5230\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u53c2\u9605\u4e0a\u9762\u7684\u7b54\u6848\u3002 \u5982\u679c\u60a8\u4fee\u6539\u4e86 AirSim \u63d2\u4ef6\u6587\u4ef6\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb .uproject \u6587\u4ef6\uff0c\u9009\u62e9 Generate Visual Studio solution file \uff0c\u7136\u540e\u5728 VS \u4e2d\u6253\u5f00 .sln \u6587\u4ef6\u4ee5\u4fee\u590d\u9519\u8bef\u5e76\u518d\u6b21\u6784\u5efa\u3002 I get error C100 : An internal error has occurred in the compiler when running build.cmd # We have noticed this happening with VS version 15.9.0 and have checked-in a workaround in AirSim code. If you have this VS version, please make sure to pull the latest AirSim code. \u62a5\u9519\uff1a\"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\" # Very likely you don't have Windows SDK installed with Visual Studio. \u5982\u4f55\u5c06 PX4 \u56fa\u4ef6\u4e0e AirSim \u4e00\u8d77\u4f7f\u7528\uff1f # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528\u5176\u5185\u7f6e\u56fa\u4ef6 simple_flight \u3002\u5982\u679c\u60a8\u53ea\u60f3\u4f7f\u7528\u5b83\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u5176\u4ed6\u8bbe\u7f6e\u3002\u5982\u679c\u60a8\u60f3\u6539\u7528 PX4\uff0c\u8bf7\u53c2\u9605 \u672c\u6307\u5357 \u3002 \u5728 Visual Studio \u4e2d\u505a\u4e86\u66f4\u6539\uff0c\u4f46\u6ca1\u6709\u6548\u679c # \u6709\u65f6\uff0c\u5982\u679c\u4ec5\u66f4\u6539\u5934\u6587\u4ef6\uff0cUnreal + VS \u6784\u5efa\u7cfb\u7edf\u53ef\u80fd\u65e0\u6cd5\u91cd\u65b0\u7f16\u8bd1\u3002\u4e3a\u4e86\u786e\u4fdd\u91cd\u65b0\u7f16\u8bd1\uff0c\u8bf7\u5c06\u4e00\u4e9b\u57fa\u4e8e Unreal \u7684 cpp \u6587\u4ef6\uff08\u4f8b\u5982 AirSimGameMode.cpp\uff09\u8bbe\u7f6e\u4e3a\u201cdirty\u201d\u3002 Unreal \u4ecd\u7136\u4f7f\u7528 VS2015\uff0c\u5426\u5219\u6211\u4f1a\u6536\u5230\u4e00\u4e9b\u94fe\u63a5\u9519\u8bef # \u8fd0\u884c\u591a\u4e2a\u7248\u672c\u7684 VS \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1 UE \u9879\u76ee\u65f6\u51fa\u73b0\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f UE \u4f1a\u5c1d\u8bd5\u4f7f\u7528\u65e7\u7248\u672c\u7684 VS \u8fdb\u884c\u7f16\u8bd1\uff0c\u800c\u65e7\u7248\u672c\u7684 VS \u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u865a\u5e7b\u5f15\u64ce\u4e2d\u6709\u4e24\u4e2a\u8bbe\u7f6e\uff0c\u4e00\u4e2a\u7528\u4e8e\u5f15\u64ce\uff0c\u4e00\u4e2a\u7528\u4e8e\u9879\u76ee\uff0c\u7528\u4e8e\u8c03\u6574\u8981\u4f7f\u7528\u7684 VS \u7248\u672c\u3002 Edit -> Editor preferences -> General -> Source code -> Source Code Editor Edit -> Project Settings -> Platforms -> Windows -> Toolchain ->CompilerVersion \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u4ecd\u7136\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u7ed3\u679c\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u4ea7\u751f\u5982\u4e0b\u9519\u8bef\uff1aLINK:\u81f4\u547d\u9519\u8bef LNK1181:\u65e0\u6cd5\u6253\u5f00\u8f93\u5165\u6587\u4ef6\u201cws2_32.lib\u201d \u4e3a\u4e86\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff0c\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528 VisualStudioUninstaller \u5378\u8f7d\u6240\u6709\u65e7\u7248\u672c\u7684 VS Repair/Install VS 2019 \u91cd\u542f\u673a\u5668\u5e76\u5b89\u88c5 Epic \u542f\u52a8\u5668\u548c\u6240\u9700\u7248\u672c\u7684\u5f15\u64ce Linux \u6784\u5efa # \u62a5\u9519\uff1a <MyProject> could not be compiled. Try rebuilding from source manually . # This could either happen because of compile error or the fact that your gch files are outdated. Look in to your console window. Do you see something like below? fatal error: file '/usr/include/linux/version.h''/usr/include/linux/version.h' has been modified since the precompiled header If this is the case then look for *.gch file(s) that follows after that message, delete them and try again. Here's relevant thread on Unreal Engine forums. If you see other compile errors in console then open up those source files and see if it is due to changes you made. If not, then report it as issue on GitHub. Unreal crashed! How do I know what went wrong? # Go to the MyUnrealProject/Saved/Crashes folder and search for the file MyProject.log within its subdirectories. At the end of this file you will see the stack trace and messages. You can also take a look at the Diagnostics.txt file. How do I use an IDE on Linux? # You can use Qt Creator or CodeLite. Instructions for Qt Creator are available here . Can I cross compile for Linux from a Windows machine? # Yes, you can, but we haven't tested it. You can find the instructions here . What compiler and stdlib does AirSim use? # We use the same compiler that Unreal Engine uses, Clang 8 , and stdlib, libc++ . AirSim's setup.sh will automatically download them. What version of CMake does the AirSim build use? # 3.10.0 or higher. This is not the default in Ubuntu 16.04 so setup.sh installs it for you. You can check your CMake version using cmake --version . If you have an older version, follow these instructions or see the CMake website . Can I compile AirSim in BashOnWindows? # Yes, however, you can't run Unreal from BashOnWindows. So this is kind of useful to check a Linux compile, but not for an end-to-end run. See the BashOnWindows install guide . Make sure to have the latest version (Windows 10 Creators Edition) as previous versions had various issues. Also, don't invoke bash from Visual Studio Command Prompt , otherwise CMake might find VC++ and try and use that! Where can I find more info on running Unreal on Linux? # Start here: Unreal on Linux Building Unreal on Linux Unreal Linux Support Unreal Cross Compilation \u5176\u4ed6 # Packaging a binary including the AirSim plugin # In order to package a custom environment with the AirSim plugin, there are a few project settings that are necessary for ensuring all required assets needed for AirSim are included inside the package. Under Edit -> Project Settings... -> Project -> Packaging , please ensure the following settings are configured properly: List of maps to include in a packaged build : ensure one entry exists for /AirSim/AirSimAssets Additional Asset Directories to Cook : ensure one entry exists for /AirSim/HUDAssets","title":"\u573a\u666f\u95ee\u9898\u548c\u56de\u7b54"},{"location":"build_faq/#faq","text":"","title":"FAQ"},{"location":"build_faq/#windows","text":"\u5982\u4f55\u5f3a\u5236 Unreal \u4f7f\u7528 Visual Studio 2019\uff1f \u62a5\u9519: 'where' is not recognized as an internal or external command \u62a5\u9519\uff1a <MyProject> could not be compiled. Try rebuilding from source manually \u5f53\u8fd0\u884c build.cmd \u65f6\u62a5\u9519\uff1a error C100 : An internal error has occurred in the compiler \u62a5\u9519\uff1a\"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\" \u5982\u4f55\u5c06 PX4 \u56fa\u4ef6\u4e0e AirSim \u4e00\u8d77\u4f7f\u7528\uff1f \u5728 Visual Studio \u4e2d\u505a\u4e86\u66f4\u6539\uff0c\u4f46\u6ca1\u6709\u6548\u679c Unreal \u4ecd\u7136\u4f7f\u7528 VS2015\uff0c\u5426\u5219\u6211\u4f1a\u6536\u5230\u4e00\u4e9b\u94fe\u63a5\u9519\u8bef","title":"Windows \u6784\u5efa"},{"location":"build_faq/#linux","text":"I'm getting error <MyProject> could not be compiled. Try rebuilding from source manually . Unreal crashed! How do I know what went wrong? How do I use an IDE on Linux? Can I cross compile for Linux from a Windows machine? What compiler and stdlib does AirSim use? What version of CMake does the AirSim build use? Can I compile AirSim in BashOnWindows? Where can I find more info on running Unreal on Linux?","title":"Linux \u6784\u5efa"},{"location":"build_faq/#_1","text":"\u6253\u5305 AirSim","title":"\u5176\u4ed6"},{"location":"build_faq/#windows_1","text":"","title":"Windows \u6784\u5efa"},{"location":"build_faq/#unreal-visual-studio-2019","text":"If the default update_from_git.bat file results in VS 2017 project, then you may need to run the C:\\Program Files\\Epic Games\\UE_4.25\\Engine\\Binaries\\DotNET\\UnrealBuildTool.exe tool manually, with the command line options -projectfiles -project=<your.uproject> -game -rocket -progress -2019 . If you are upgrading from 4.18 to 4.25 you may also need to add BuildSettingsVersion.V2 to your *.Target.cs and *Editor.Target.cs build files, like this: public AirSimNHTestTarget ( TargetInfo Target ) : base ( Target ) { Type = TargetType . Game ; DefaultBuildSettings = BuildSettingsVersion . V2 ; ExtraModuleNames . AddRange ( new string [] { \"AirSimNHTest\" }); } You may also need to edit this file: \"%APPDATA%\\Unreal Engine\\UnrealBuildTool\\BuildConfiguration.xml And add this Compiler version setting: <Configuration xmlns= \"https://www.unrealengine.com/BuildConfiguration\" > <WindowsPlatform> <Compiler> VisualStudio2019 </Compiler> </WindowsPlatform> </Configuration>","title":"\u5982\u4f55\u5f3a\u5236 Unreal \u4f7f\u7528 Visual Studio 2019\uff1f"},{"location":"build_faq/#where-is-not-recognized-as-an-internal-or-external-command","text":"\u60a8\u5fc5\u987b\u5c06 C:\\WINDOWS\\SYSTEM32 \u6dfb\u52a0\u5230\u60a8\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u3002","title":"\u62a5\u9519: 'where' is not recognized as an internal or external command"},{"location":"build_faq/#myproject-could-not-be-compiled-try-rebuilding-from-source-manually","text":"\u5f53\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u65e5\u5fd7\u5b58\u50a8\u5728 <My-Project>\\Saved\\Logs \u4e2d\uff0c\u53ef\u7528\u4e8e\u67e5\u627e\u95ee\u9898\u3002 \u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u53ef\u80fd\u662f Visual Studio \u7248\u672c\u51b2\u7a81\uff0cAirSim \u4f7f\u7528\u7684\u662f VS 2019\uff0c\u800c UE \u4f7f\u7528\u7684\u662f VS 2017\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u641c\u7d22 2017 \u6765\u627e\u5230\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u53c2\u9605\u4e0a\u9762\u7684\u7b54\u6848\u3002 \u5982\u679c\u60a8\u4fee\u6539\u4e86 AirSim \u63d2\u4ef6\u6587\u4ef6\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb .uproject \u6587\u4ef6\uff0c\u9009\u62e9 Generate Visual Studio solution file \uff0c\u7136\u540e\u5728 VS \u4e2d\u6253\u5f00 .sln \u6587\u4ef6\u4ee5\u4fee\u590d\u9519\u8bef\u5e76\u518d\u6b21\u6784\u5efa\u3002","title":"\u62a5\u9519 &lt;MyProject&gt; could not be compiled. Try rebuilding from source manually"},{"location":"build_faq/#i-get-error-c100-an-internal-error-has-occurred-in-the-compiler-when-running-buildcmd","text":"We have noticed this happening with VS version 15.9.0 and have checked-in a workaround in AirSim code. If you have this VS version, please make sure to pull the latest AirSim code.","title":"I get error C100 : An internal error has occurred in the compiler when running build.cmd"},{"location":"build_faq/#corecrth-no-such-file-or-directory-or-windows-sdk-version-81-not-found","text":"Very likely you don't have Windows SDK installed with Visual Studio.","title":"\u62a5\u9519\uff1a\"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\""},{"location":"build_faq/#px4-airsim","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528\u5176\u5185\u7f6e\u56fa\u4ef6 simple_flight \u3002\u5982\u679c\u60a8\u53ea\u60f3\u4f7f\u7528\u5b83\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u5176\u4ed6\u8bbe\u7f6e\u3002\u5982\u679c\u60a8\u60f3\u6539\u7528 PX4\uff0c\u8bf7\u53c2\u9605 \u672c\u6307\u5357 \u3002","title":"\u5982\u4f55\u5c06 PX4 \u56fa\u4ef6\u4e0e AirSim \u4e00\u8d77\u4f7f\u7528\uff1f"},{"location":"build_faq/#visual-studio","text":"\u6709\u65f6\uff0c\u5982\u679c\u4ec5\u66f4\u6539\u5934\u6587\u4ef6\uff0cUnreal + VS \u6784\u5efa\u7cfb\u7edf\u53ef\u80fd\u65e0\u6cd5\u91cd\u65b0\u7f16\u8bd1\u3002\u4e3a\u4e86\u786e\u4fdd\u91cd\u65b0\u7f16\u8bd1\uff0c\u8bf7\u5c06\u4e00\u4e9b\u57fa\u4e8e Unreal \u7684 cpp \u6587\u4ef6\uff08\u4f8b\u5982 AirSimGameMode.cpp\uff09\u8bbe\u7f6e\u4e3a\u201cdirty\u201d\u3002","title":"\u5728 Visual Studio \u4e2d\u505a\u4e86\u66f4\u6539\uff0c\u4f46\u6ca1\u6709\u6548\u679c"},{"location":"build_faq/#unreal-vs2015","text":"\u8fd0\u884c\u591a\u4e2a\u7248\u672c\u7684 VS \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1 UE \u9879\u76ee\u65f6\u51fa\u73b0\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f UE \u4f1a\u5c1d\u8bd5\u4f7f\u7528\u65e7\u7248\u672c\u7684 VS \u8fdb\u884c\u7f16\u8bd1\uff0c\u800c\u65e7\u7248\u672c\u7684 VS \u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u865a\u5e7b\u5f15\u64ce\u4e2d\u6709\u4e24\u4e2a\u8bbe\u7f6e\uff0c\u4e00\u4e2a\u7528\u4e8e\u5f15\u64ce\uff0c\u4e00\u4e2a\u7528\u4e8e\u9879\u76ee\uff0c\u7528\u4e8e\u8c03\u6574\u8981\u4f7f\u7528\u7684 VS \u7248\u672c\u3002 Edit -> Editor preferences -> General -> Source code -> Source Code Editor Edit -> Project Settings -> Platforms -> Windows -> Toolchain ->CompilerVersion \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u4ecd\u7136\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u7ed3\u679c\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u4ea7\u751f\u5982\u4e0b\u9519\u8bef\uff1aLINK:\u81f4\u547d\u9519\u8bef LNK1181:\u65e0\u6cd5\u6253\u5f00\u8f93\u5165\u6587\u4ef6\u201cws2_32.lib\u201d \u4e3a\u4e86\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff0c\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528 VisualStudioUninstaller \u5378\u8f7d\u6240\u6709\u65e7\u7248\u672c\u7684 VS Repair/Install VS 2019 \u91cd\u542f\u673a\u5668\u5e76\u5b89\u88c5 Epic \u542f\u52a8\u5668\u548c\u6240\u9700\u7248\u672c\u7684\u5f15\u64ce","title":"Unreal \u4ecd\u7136\u4f7f\u7528 VS2015\uff0c\u5426\u5219\u6211\u4f1a\u6536\u5230\u4e00\u4e9b\u94fe\u63a5\u9519\u8bef"},{"location":"build_faq/#linux_1","text":"","title":"Linux \u6784\u5efa"},{"location":"build_faq/#myproject-could-not-be-compiled-try-rebuilding-from-source-manually_1","text":"This could either happen because of compile error or the fact that your gch files are outdated. Look in to your console window. Do you see something like below? fatal error: file '/usr/include/linux/version.h''/usr/include/linux/version.h' has been modified since the precompiled header If this is the case then look for *.gch file(s) that follows after that message, delete them and try again. Here's relevant thread on Unreal Engine forums. If you see other compile errors in console then open up those source files and see if it is due to changes you made. If not, then report it as issue on GitHub.","title":"\u62a5\u9519\uff1a&lt;MyProject&gt; could not be compiled. Try rebuilding from source manually."},{"location":"build_faq/#unreal-crashed-how-do-i-know-what-went-wrong","text":"Go to the MyUnrealProject/Saved/Crashes folder and search for the file MyProject.log within its subdirectories. At the end of this file you will see the stack trace and messages. You can also take a look at the Diagnostics.txt file.","title":"Unreal crashed! How do I know what went wrong?"},{"location":"build_faq/#how-do-i-use-an-ide-on-linux","text":"You can use Qt Creator or CodeLite. Instructions for Qt Creator are available here .","title":"How do I use an IDE on Linux?"},{"location":"build_faq/#can-i-cross-compile-for-linux-from-a-windows-machine","text":"Yes, you can, but we haven't tested it. You can find the instructions here .","title":"Can I cross compile for Linux from a Windows machine?"},{"location":"build_faq/#what-compiler-and-stdlib-does-airsim-use","text":"We use the same compiler that Unreal Engine uses, Clang 8 , and stdlib, libc++ . AirSim's setup.sh will automatically download them.","title":"What compiler and stdlib does AirSim use?"},{"location":"build_faq/#what-version-of-cmake-does-the-airsim-build-use","text":"3.10.0 or higher. This is not the default in Ubuntu 16.04 so setup.sh installs it for you. You can check your CMake version using cmake --version . If you have an older version, follow these instructions or see the CMake website .","title":"What version of CMake does the AirSim build use?"},{"location":"build_faq/#can-i-compile-airsim-in-bashonwindows","text":"Yes, however, you can't run Unreal from BashOnWindows. So this is kind of useful to check a Linux compile, but not for an end-to-end run. See the BashOnWindows install guide . Make sure to have the latest version (Windows 10 Creators Edition) as previous versions had various issues. Also, don't invoke bash from Visual Studio Command Prompt , otherwise CMake might find VC++ and try and use that!","title":"Can I compile AirSim in BashOnWindows?"},{"location":"build_faq/#where-can-i-find-more-info-on-running-unreal-on-linux","text":"Start here: Unreal on Linux Building Unreal on Linux Unreal Linux Support Unreal Cross Compilation","title":"Where can I find more info on running Unreal on Linux?"},{"location":"build_faq/#_2","text":"","title":"\u5176\u4ed6"},{"location":"build_faq/#packaging-a-binary-including-the-airsim-plugin","text":"In order to package a custom environment with the AirSim plugin, there are a few project settings that are necessary for ensuring all required assets needed for AirSim are included inside the package. Under Edit -> Project Settings... -> Project -> Packaging , please ensure the following settings are configured properly: List of maps to include in a packaged build : ensure one entry exists for /AirSim/AirSimAssets Additional Asset Directories to Cook : ensure one entry exists for /AirSim/HUDAssets","title":"Packaging a binary including the AirSim plugin"},{"location":"build_linux/","text":"\u5728 Linux \u4e0a\u6784\u5efa AirSim # \u76ee\u524d\u63a8\u8350\u5e76\u6d4b\u8bd5\u7684\u73af\u5883\u662f Ubuntu 18.04 LTS \u3002\u7406\u8bba\u4e0a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u53d1\u884c\u7248\u4e0a\u8fdb\u884c\u6784\u5efa\uff0c\u4f46\u6211\u4eec\u5c1a\u672a\u6d4b\u8bd5\u3002 \u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9 - \u60a8\u53ef\u4ee5\u5728 docker \u5bb9\u5668\u6216\u4e3b\u673a\u5185\u6784\u5efa\u3002 Docker # \u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u8bf4\u660e \u4e3b\u673a # \u9884\u6784\u5efa\u8bbe\u7f6e # \u6784\u5efa\u865a\u5e7b\u5f15\u64ce # \u786e\u4fdd\u4f60\u5df2 \u5728 Epic Games \u6ce8\u518c \u3002\u8fd9\u662f\u83b7\u53d6\u865a\u5e7b\u5f15\u64ce\u6e90\u4ee3\u7801\u8bbf\u95ee\u6743\u9650\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u5c06\u865a\u5e7b\u5f15\u64ce\u514b\u9686\u5230\u60a8\u5e38\u7528\u7684\u6587\u4ef6\u5939\u4e2d\u5e76\u6784\u5efa\uff08\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff01\uff09\u3002 \u6ce8\u610f \uff1a\u6211\u4eec\u76ee\u524d\u4ec5\u652f\u6301\u865a\u5e7b\u5f15\u64ce 4.27 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002\u5efa\u8bae\u4f7f\u7528 4.27 \u7248\u672c\u3002 # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone -b 4 .27 git@github.com:EpicGames/UnrealEngine.git cd UnrealEngine ./Setup.sh ./GenerateProjectFiles.sh make \u6784\u5efa AirSim # \u514b\u9686 AirSim \u5e76\u6784\u5efa\u5b83\uff1a # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone https://github.com/Microsoft/AirSim.git cd AirSim \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 clang 8 \u8fdb\u884c\u6784\u5efa\uff0c\u4ee5\u517c\u5bb9 UE 4.27\u3002\u5b89\u88c5\u811a\u672c\u5c06\u5b89\u88c5\u6b63\u786e\u7248\u672c\u7684 cmake\u3001llvm \u548c eigen\u3002 ./setup.sh ./build.sh # \u4f7f\u7528 ./build.sh --debug \u4ee5\u8c03\u8bd5\u6a21\u5f0f\u6784\u5efa \u6784\u5efa\u865a\u5e7b\u73af\u5883 # \u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002AirSim \u81ea\u5e26\u4e00\u4e2a\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002 \u5982\u4f55\u4f7f\u7528 AirSim # \u4e00\u65e6\u8bbe\u7f6e\u4e86 AirSim\uff1a \u8f6c\u5230 UnrealEngine \u5b89\u88c5\u6587\u4ef6\u5939\u5e76\u901a\u8fc7\u8fd0\u884c ./Engine/Binaries/Linux/UE4Editor \u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u5f53\u865a\u5e7b\u5f15\u64ce\u63d0\u793a\u6253\u5f00\u6216\u521b\u5efa\u9879\u76ee\u65f6\uff0c\u9009\u62e9\u6d4f\u89c8\u5e76\u9009\u62e9 AirSim/Unreal/Environments/Blocks \uff08\u6216\u60a8\u7684 \u81ea\u5b9a\u4e49 \u865a\u5e7b\u9879\u76ee\uff09\u3002 \u6216\u8005\uff0c\u53ef\u4ee5\u5c06\u9879\u76ee\u6587\u4ef6\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\u3002\u5bf9\u4e8e Blocks\uff1a ./Engine/Binaries/Linux/UE4Editor <AirSim_path>/Unreal/Environments/Blocks/Blocks.uproject \u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u8f6c\u6362\u9879\u76ee\uff0c\u8bf7\u67e5\u627e\u201c\u66f4\u591a\u9009\u9879\u201d\u6216\u201c\u5c31\u5730\u8f6c\u6362\u201d\u9009\u9879\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u6784\u5efa\uff0c\u8bf7\u9009\u62e9\u201c\u662f\u201d\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7981\u7528 AirSim \u63d2\u4ef6\uff0c\u8bf7\u9009\u62e9\u201c\u5426\u201d\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309\u64ad\u653e(Play)\u6309\u94ae\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u53ef\u7528\u4e8e AirSim \u7684\u5404\u79cd\u9009\u9879\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002 [\u53ef\u9009] \u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09 # \u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 API \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002","title":"\u5728 Linux \u4e0a\u6784\u5efa"},{"location":"build_linux/#linux-airsim","text":"\u76ee\u524d\u63a8\u8350\u5e76\u6d4b\u8bd5\u7684\u73af\u5883\u662f Ubuntu 18.04 LTS \u3002\u7406\u8bba\u4e0a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u53d1\u884c\u7248\u4e0a\u8fdb\u884c\u6784\u5efa\uff0c\u4f46\u6211\u4eec\u5c1a\u672a\u6d4b\u8bd5\u3002 \u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9 - \u60a8\u53ef\u4ee5\u5728 docker \u5bb9\u5668\u6216\u4e3b\u673a\u5185\u6784\u5efa\u3002","title":"\u5728 Linux \u4e0a\u6784\u5efa AirSim"},{"location":"build_linux/#docker","text":"\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u8bf4\u660e","title":"Docker"},{"location":"build_linux/#_1","text":"","title":"\u4e3b\u673a"},{"location":"build_linux/#_2","text":"","title":"\u9884\u6784\u5efa\u8bbe\u7f6e"},{"location":"build_linux/#_3","text":"\u786e\u4fdd\u4f60\u5df2 \u5728 Epic Games \u6ce8\u518c \u3002\u8fd9\u662f\u83b7\u53d6\u865a\u5e7b\u5f15\u64ce\u6e90\u4ee3\u7801\u8bbf\u95ee\u6743\u9650\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u5c06\u865a\u5e7b\u5f15\u64ce\u514b\u9686\u5230\u60a8\u5e38\u7528\u7684\u6587\u4ef6\u5939\u4e2d\u5e76\u6784\u5efa\uff08\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff01\uff09\u3002 \u6ce8\u610f \uff1a\u6211\u4eec\u76ee\u524d\u4ec5\u652f\u6301\u865a\u5e7b\u5f15\u64ce 4.27 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002\u5efa\u8bae\u4f7f\u7528 4.27 \u7248\u672c\u3002 # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone -b 4 .27 git@github.com:EpicGames/UnrealEngine.git cd UnrealEngine ./Setup.sh ./GenerateProjectFiles.sh make","title":"\u6784\u5efa\u865a\u5e7b\u5f15\u64ce"},{"location":"build_linux/#airsim","text":"\u514b\u9686 AirSim \u5e76\u6784\u5efa\u5b83\uff1a # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone https://github.com/Microsoft/AirSim.git cd AirSim \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 clang 8 \u8fdb\u884c\u6784\u5efa\uff0c\u4ee5\u517c\u5bb9 UE 4.27\u3002\u5b89\u88c5\u811a\u672c\u5c06\u5b89\u88c5\u6b63\u786e\u7248\u672c\u7684 cmake\u3001llvm \u548c eigen\u3002 ./setup.sh ./build.sh # \u4f7f\u7528 ./build.sh --debug \u4ee5\u8c03\u8bd5\u6a21\u5f0f\u6784\u5efa","title":"\u6784\u5efa AirSim"},{"location":"build_linux/#_4","text":"\u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002AirSim \u81ea\u5e26\u4e00\u4e2a\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002","title":"\u6784\u5efa\u865a\u5e7b\u73af\u5883"},{"location":"build_linux/#airsim_1","text":"\u4e00\u65e6\u8bbe\u7f6e\u4e86 AirSim\uff1a \u8f6c\u5230 UnrealEngine \u5b89\u88c5\u6587\u4ef6\u5939\u5e76\u901a\u8fc7\u8fd0\u884c ./Engine/Binaries/Linux/UE4Editor \u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u5f53\u865a\u5e7b\u5f15\u64ce\u63d0\u793a\u6253\u5f00\u6216\u521b\u5efa\u9879\u76ee\u65f6\uff0c\u9009\u62e9\u6d4f\u89c8\u5e76\u9009\u62e9 AirSim/Unreal/Environments/Blocks \uff08\u6216\u60a8\u7684 \u81ea\u5b9a\u4e49 \u865a\u5e7b\u9879\u76ee\uff09\u3002 \u6216\u8005\uff0c\u53ef\u4ee5\u5c06\u9879\u76ee\u6587\u4ef6\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\u3002\u5bf9\u4e8e Blocks\uff1a ./Engine/Binaries/Linux/UE4Editor <AirSim_path>/Unreal/Environments/Blocks/Blocks.uproject \u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u8f6c\u6362\u9879\u76ee\uff0c\u8bf7\u67e5\u627e\u201c\u66f4\u591a\u9009\u9879\u201d\u6216\u201c\u5c31\u5730\u8f6c\u6362\u201d\u9009\u9879\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u6784\u5efa\uff0c\u8bf7\u9009\u62e9\u201c\u662f\u201d\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7981\u7528 AirSim \u63d2\u4ef6\uff0c\u8bf7\u9009\u62e9\u201c\u5426\u201d\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309\u64ad\u653e(Play)\u6309\u94ae\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u53ef\u7528\u4e8e AirSim \u7684\u5404\u79cd\u9009\u9879\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002","title":"\u5982\u4f55\u4f7f\u7528 AirSim"},{"location":"build_linux/#_5","text":"\u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 API \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002","title":"[\u53ef\u9009] \u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09"},{"location":"build_macos/","text":"\u5728 macOS \u4e0a\u6784\u5efa AirSim # \u76ee\u524d\u4ec5\u6d4b\u8bd5\u4e86 Catalina (10.15) \u3002\u7406\u8bba\u4e0a\uff0cAirSim \u5e94\u8be5\u53ef\u4ee5\u5728\u66f4\u9ad8\u7248\u672c\u7684 macOS \u548c Apple Silicon \u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u4f46\u6b64\u8def\u5f84\u5c1a\u672a\u5f97\u5230\u5b98\u65b9\u652f\u6301\u3002 \u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9 - \u60a8\u53ef\u4ee5\u5728 docker \u5bb9\u5668\u6216\u4e3b\u673a\u5185\u6784\u5efa\u3002 Docker # \u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u8bf4\u660e \u4e3b\u673a # \u9884\u6784\u5efa\u8bbe\u7f6e # \u4e0b\u8f7d\u865a\u5e7b\u5f15\u64ce # \u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u6253\u5f00\u5de6\u4fa7\u7a97\u683c\u4e2d\u7684 Library \u9009\u9879\u5361\u3002\u70b9\u51fb Add Versions \uff0c\u6b64\u65f6\u5c06\u663e\u793a\u4e0b\u8f7d \u865a\u5e7b 4.27 \u7684\u9009\u9879\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\uff0c\u8bf7\u786e\u4fdd\u901a\u8fc7\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934 \u5c06 4.27 \u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c \u3002 \u6ce8\u610f : AirSim \u4e5f\u9002\u7528\u4e8e UE 4.24 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u4f46\u6211\u4eec\u63a8\u8350\u4f7f\u7528 4.27 \u7248\u672c\u3002 \u6ce8\u610f : \u5982\u679c\u60a8\u62e5\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002 \u6784\u5efa AirSim # \u514b\u9686 AirSim \u5e76\u6784\u5efa\u5b83\uff1a # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone https://github.com/Microsoft/AirSim.git cd AirSim \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 clang 8 \u8fdb\u884c\u6784\u5efa\uff0c\u4ee5\u517c\u5bb9 UE 4.25\u3002\u5b89\u88c5\u811a\u672c\u5c06\u5b89\u88c5\u6b63\u786e\u7248\u672c\u7684 cmake\u3001llvm \u548c eigen\u3002 CMake 3.19.2 is required for building on Apple Silicon. ./setup.sh ./build.sh # \u4f7f\u7528 ./build.sh --debug \u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u6784\u5efa \u6784\u5efa\u865a\u5e7b\u73af\u5883 # \u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f7d\u5177\u73af\u5883\u3002AirSim \u81ea\u5e26\u4e00\u4e2a\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002 \u5982\u4f55\u4f7f\u7528 AirSim # \u6d4f\u89c8\u5230 AirSim/Unreal/Environments/Blocks . \u4ece\u7ec8\u7aef\u8fd0\u884c ./GenerateProjectFiles.sh <UE_PATH> \uff0c\u5176\u4e2d UE_PATH \u662f\u865a\u5e7b\u5f15\u64ce\u5b89\u88c5\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u8def\u5f84\u4e3a /Users/Shared/Epic\\ Games/UE_4.27/ \uff09\u8be5\u811a\u672c\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Blocks.xcworkspace \u7684 XCode \u5de5\u4f5c\u533a\u3002 \u6253\u5f00 XCode \u5de5\u4f5c\u533a\uff0c\u7136\u540e\u6309\u5de6\u4e0a\u89d2\u7684\u201c\u6784\u5efa\u5e76\u8fd0\u884c\u201d\u6309\u94ae\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309\u64ad\u653e\u6309\u94ae\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u53ef\u7528\u4e8e AirSim \u7684\u5404\u79cd\u9009\u9879\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002 [\u53ef\u9009] \u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09 # \u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002","title":"\u5728 macOS \u4e0a\u6784\u5efa"},{"location":"build_macos/#macos-airsim","text":"\u76ee\u524d\u4ec5\u6d4b\u8bd5\u4e86 Catalina (10.15) \u3002\u7406\u8bba\u4e0a\uff0cAirSim \u5e94\u8be5\u53ef\u4ee5\u5728\u66f4\u9ad8\u7248\u672c\u7684 macOS \u548c Apple Silicon \u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u4f46\u6b64\u8def\u5f84\u5c1a\u672a\u5f97\u5230\u5b98\u65b9\u652f\u6301\u3002 \u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9 - \u60a8\u53ef\u4ee5\u5728 docker \u5bb9\u5668\u6216\u4e3b\u673a\u5185\u6784\u5efa\u3002","title":"\u5728 macOS \u4e0a\u6784\u5efa AirSim"},{"location":"build_macos/#docker","text":"\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u8bf4\u660e","title":"Docker"},{"location":"build_macos/#_1","text":"","title":"\u4e3b\u673a"},{"location":"build_macos/#_2","text":"","title":"\u9884\u6784\u5efa\u8bbe\u7f6e"},{"location":"build_macos/#_3","text":"\u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u6253\u5f00\u5de6\u4fa7\u7a97\u683c\u4e2d\u7684 Library \u9009\u9879\u5361\u3002\u70b9\u51fb Add Versions \uff0c\u6b64\u65f6\u5c06\u663e\u793a\u4e0b\u8f7d \u865a\u5e7b 4.27 \u7684\u9009\u9879\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\uff0c\u8bf7\u786e\u4fdd\u901a\u8fc7\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934 \u5c06 4.27 \u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c \u3002 \u6ce8\u610f : AirSim \u4e5f\u9002\u7528\u4e8e UE 4.24 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u4f46\u6211\u4eec\u63a8\u8350\u4f7f\u7528 4.27 \u7248\u672c\u3002 \u6ce8\u610f : \u5982\u679c\u60a8\u62e5\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002","title":"\u4e0b\u8f7d\u865a\u5e7b\u5f15\u64ce"},{"location":"build_macos/#airsim","text":"\u514b\u9686 AirSim \u5e76\u6784\u5efa\u5b83\uff1a # \u524d\u5f80\u514b\u9686 GitHub \u9879\u76ee\u7684\u6587\u4ef6\u5939 git clone https://github.com/Microsoft/AirSim.git cd AirSim \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 clang 8 \u8fdb\u884c\u6784\u5efa\uff0c\u4ee5\u517c\u5bb9 UE 4.25\u3002\u5b89\u88c5\u811a\u672c\u5c06\u5b89\u88c5\u6b63\u786e\u7248\u672c\u7684 cmake\u3001llvm \u548c eigen\u3002 CMake 3.19.2 is required for building on Apple Silicon. ./setup.sh ./build.sh # \u4f7f\u7528 ./build.sh --debug \u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u6784\u5efa","title":"\u6784\u5efa AirSim"},{"location":"build_macos/#_4","text":"\u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f7d\u5177\u73af\u5883\u3002AirSim \u81ea\u5e26\u4e00\u4e2a\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002","title":"\u6784\u5efa\u865a\u5e7b\u73af\u5883"},{"location":"build_macos/#airsim_1","text":"\u6d4f\u89c8\u5230 AirSim/Unreal/Environments/Blocks . \u4ece\u7ec8\u7aef\u8fd0\u884c ./GenerateProjectFiles.sh <UE_PATH> \uff0c\u5176\u4e2d UE_PATH \u662f\u865a\u5e7b\u5f15\u64ce\u5b89\u88c5\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u8def\u5f84\u4e3a /Users/Shared/Epic\\ Games/UE_4.27/ \uff09\u8be5\u811a\u672c\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Blocks.xcworkspace \u7684 XCode \u5de5\u4f5c\u533a\u3002 \u6253\u5f00 XCode \u5de5\u4f5c\u533a\uff0c\u7136\u540e\u6309\u5de6\u4e0a\u89d2\u7684\u201c\u6784\u5efa\u5e76\u8fd0\u884c\u201d\u6309\u94ae\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309\u64ad\u653e\u6309\u94ae\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u53ef\u7528\u4e8e AirSim \u7684\u5404\u79cd\u9009\u9879\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002","title":"\u5982\u4f55\u4f7f\u7528 AirSim"},{"location":"build_macos/#_5","text":"\u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002","title":"[\u53ef\u9009] \u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09"},{"location":"build_windows/","text":"\u5728 Windows \u4e0a\u6784\u5efa AirSim # \u5b89\u88c5\u865a\u5e7b\u5f15\u64ce # \u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u5728\u5de6\u4fa7\u7a97\u683c\u4e2d\u6253\u5f00 Unreal Engine \u9009\u9879\u5361\u3002\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Install \u6309\u94ae\uff0c\u6b64\u65f6\u4f1a\u663e\u793a\u4e0b\u8f7d \u865a\u5e7b\u5f15\u64ce 4.27 \u53ca\u4ee5\u4e0a\u7248\u672c\u7684\u9009\u9879 \u3002\u9009\u62e9\u9002\u5408\u60a8\u9700\u6c42\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u8bf7\u786e \u4fdd\u60a8\u4f7f\u7528\u7684\u7248\u672c\u5df2\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c \uff0c\u65b9\u6cd5\u662f\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u7684\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934\u3002 \u6ce8\u610f : \u5982\u679c\u60a8\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002 \u6784\u5efa AirSim # \u5b89\u88c5 Visual Studio 2022\u3002 \u786e\u4fdd \u9009\u62e9\u4f7f\u7528 C++ \u548c Windows 10 SDK 10.0.19041 \u8fdb\u884c\u684c\u9762\u5f00\u53d1 \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\uff0c\u5e76\u5728\u5b89\u88c5 VS 2022 \u65f6\u5728\u201c\u5355\u4e2a\u7ec4\u4ef6\u201d\u9009\u9879\u5361\u4e0b\u9009\u62e9\u6700\u65b0\u7684 .NET Framework SDK\u3002 \u542f\u52a8 Developer Command Prompt for VS 2022 . \u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/OpenHUTB/AirSim.git \uff0c\u7136\u540e\u901a\u8fc7 cd AirSim \u8fdb\u5165 AirSim \u76ee\u5f55\u3002 \u6ce8\u610f \u901a\u5e38\u4e0d\u5efa\u8bae\u5c06 AirSim \u5b89\u88c5\u5728 C \u76d8\u3002\u8fd9\u4f1a\u5bfc\u81f4\u811a\u672c\u8fd0\u884c\u5931\u8d25\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u6a21\u5f0f\u8fd0\u884c VS\u3002\u5efa\u8bae\u5c06\u5176\u514b\u9686\u5230\u5176\u4ed6\u76d8\uff0c\u4f8b\u5982 D \u76d8\u6216 E \u76d8\u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u3002 \u7b14\u8bb0 \u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f1a\u5f39\u51fa Select Unreal Engine Version \uff0c\u9009\u62e9 hutb \u6240\u5bf9\u5e94\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u4f1a\u4e3a AirSim\\Unreal\\Environments\\Blocks.uproject \u751f\u6210 Blocks.sln \u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u8df3\u5230\u4e0b\u9762\u7684\u201c\u5982\u4f55\u4f7f\u7528 AirSim\u201d\u3002 \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u9879\u76ee # \u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5173\u95ed\u865a\u5e7b\u5f15\u64ce\u548c Epic Games \u542f\u52a8\u5668\uff0c\u8bf7\u52a1\u5fc5\u5728\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u73af\u5883\u4e4b\u524d\u5c06\u5176\u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u3002\u91cd\u65b0\u542f\u52a8 Epic Games \u542f\u52a8\u5668\u540e\uff0c\u5b83\u4f1a\u8981\u6c42\u60a8\u5c06\u9879\u76ee\u6587\u4ef6\u6269\u5c55\u540d\u4e0e\u865a\u5e7b\u5f15\u64ce\u5173\u8054\uff0c\u70b9\u51fb\u201c\u7acb\u5373\u4fee\u590d\u201d\u5373\u53ef\u4fee\u590d\u3002AirSim \u81ea\u5e26\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002 \u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09 # \u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002 \u5982\u4f55\u4f7f\u7528 AirSim # \u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u8bbe\u7f6e AirSim \u540e\uff0c\u60a8\u53ef\u4ee5 \u53cc\u51fb Unreal\\Environments\\Blocks.sln \u6587\u4ef6\u4ee5\u52a0\u8f7d Blocks \u9879\u76ee\uff08\u6216\u60a8 \u81ea\u5b9a\u4e49 \u7684 Unreal \u9879\u76ee\u4e2d\u7684 .sln \u6587\u4ef6\uff09\u3002\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230 .sln \u6587\u4ef6\uff0c\u5219\u53ef\u80fd\u662f\u60a8\u5c1a\u672a\u5b8c\u6210\u4e0a\u9762\u201c\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u201d\u90e8\u5206\u4e2d\u7684\u6b65\u9aa4\u3002 \u6ce8\u610f : Unreal 4.27 \u5c06\u81ea\u52a8\u751f\u6210\u9488\u5bf9 Visual Studio 2019 \u7684 .sln \u6587\u4ef6\u3002Visual Studio 2022 \u5c06\u80fd\u591f\u52a0\u8f7d\u548c\u8fd0\u884c\u6b64 .sln\uff0c\u4f46\u5982\u679c\u60a8\u60f3\u8981\u5b8c\u5168\u652f\u6301 Visual Studio 2022\uff0c\u5219\u9700\u8981\u901a\u8fc7\u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879->\u6e90\u4ee3\u7801\u201d\u5e76\u4e3a\u201c\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u201d\u8bbe\u7f6e\u9009\u62e9\u201cVisual Studio 2022\u201d\u6765\u660e\u786e\u542f\u7528\u652f\u6301\u3002 \u9009\u62e9\u60a8\u7684\u865a\u5e7b\u9879\u76ee\u4f5c\u4e3a\u542f\u52a8\u9879\u76ee\uff08\u4f8b\u5982\uff0c Blocks \u9879\u76ee\uff0c\u53f3\u952e \u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668 \u4e2d\u7684 Block \uff0c\u9009\u62e9 \u8bbe\u4e3a\u542f\u52a8\u9879\u76ee \uff09\u5e76\u786e\u4fdd\u6784\u5efa\u914d\u7f6e\u8bbe\u7f6e\u4e3a Development Editor \u548c Win64 \u3002 \u5982\u679c\u62a5\u9519 1>LINK : fatal error LNK1104: \u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\u201cD:\\work\\workspace\\UnrealEngine\\Engine\\Binaries\\Win64\\UE4Editor-Voice.dll\u201d \uff0c\u5219\u68c0\u67e5\u89e3\u51b3\u65b9\u6848\u4e2d\u6709\u6ca1\u6709\u5408\u9002\u7684UE4\u3002 \u539f\u56e0\uff1a\u8fd0\u884c GenerateProjectFiles.bat \u4e2d\u7684 powershell -command \"& { (Get-ItemProperty 'Registry::HKEY_CLASSES_ROOT\\Unreal.ProjectFile\\shell\\rungenproj' -Name 'Icon' ).'Icon' } \uff0c\u663e\u793a\u7684 C:\\Program Files (x86)\\Epic Games\\Launcher\\Engine\\Binaries\\Win64\\UnrealVersionSelector.exe \u4e0d\u662fhutb\u6240\u4f7f\u7528\u7684\u865a\u5e7b\u5f15\u64ce\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309 \u8fd0\u884c(Play) \u6309\u94ae\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u5404\u79cd\u53ef\u7528\u9009\u9879\u3002 Unity \u4e0a\u7684 AirSim (\u5b9e\u9a8c\u6027) # Unity \u662f\u53e6\u4e00\u4e2a\u4f18\u79c0\u7684\u6e38\u620f\u5f15\u64ce\u5e73\u53f0\uff0c\u6211\u4eec\u76ee\u524d\u5df2\u5c06 AirSim \u4e0e Unity \u96c6\u6210\uff0c\u5e76\u8fdb\u884c\u4e86 \u5b9e\u9a8c\u6027 \u6d4b\u8bd5\u3002\u8bf7\u6ce8\u610f\uff0c\u8be5\u96c6\u6210\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u90e8\u5206\u529f\u80fd\u53ef\u80fd\u5c1a\u672a\u5b8c\u5168\u5b9e\u73b0\u3002","title":"\u5728 Windows \u4e0a\u6784\u5efa"},{"location":"build_windows/#windows-airsim","text":"","title":"\u5728 Windows \u4e0a\u6784\u5efa AirSim"},{"location":"build_windows/#_1","text":"\u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u5728\u5de6\u4fa7\u7a97\u683c\u4e2d\u6253\u5f00 Unreal Engine \u9009\u9879\u5361\u3002\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Install \u6309\u94ae\uff0c\u6b64\u65f6\u4f1a\u663e\u793a\u4e0b\u8f7d \u865a\u5e7b\u5f15\u64ce 4.27 \u53ca\u4ee5\u4e0a\u7248\u672c\u7684\u9009\u9879 \u3002\u9009\u62e9\u9002\u5408\u60a8\u9700\u6c42\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u8bf7\u786e \u4fdd\u60a8\u4f7f\u7528\u7684\u7248\u672c\u5df2\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c \uff0c\u65b9\u6cd5\u662f\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u7684\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934\u3002 \u6ce8\u610f : \u5982\u679c\u60a8\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002","title":"\u5b89\u88c5\u865a\u5e7b\u5f15\u64ce"},{"location":"build_windows/#airsim","text":"\u5b89\u88c5 Visual Studio 2022\u3002 \u786e\u4fdd \u9009\u62e9\u4f7f\u7528 C++ \u548c Windows 10 SDK 10.0.19041 \u8fdb\u884c\u684c\u9762\u5f00\u53d1 \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\uff0c\u5e76\u5728\u5b89\u88c5 VS 2022 \u65f6\u5728\u201c\u5355\u4e2a\u7ec4\u4ef6\u201d\u9009\u9879\u5361\u4e0b\u9009\u62e9\u6700\u65b0\u7684 .NET Framework SDK\u3002 \u542f\u52a8 Developer Command Prompt for VS 2022 . \u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/OpenHUTB/AirSim.git \uff0c\u7136\u540e\u901a\u8fc7 cd AirSim \u8fdb\u5165 AirSim \u76ee\u5f55\u3002 \u6ce8\u610f \u901a\u5e38\u4e0d\u5efa\u8bae\u5c06 AirSim \u5b89\u88c5\u5728 C \u76d8\u3002\u8fd9\u4f1a\u5bfc\u81f4\u811a\u672c\u8fd0\u884c\u5931\u8d25\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u6a21\u5f0f\u8fd0\u884c VS\u3002\u5efa\u8bae\u5c06\u5176\u514b\u9686\u5230\u5176\u4ed6\u76d8\uff0c\u4f8b\u5982 D \u76d8\u6216 E \u76d8\u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u3002 \u7b14\u8bb0 \u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f1a\u5f39\u51fa Select Unreal Engine Version \uff0c\u9009\u62e9 hutb \u6240\u5bf9\u5e94\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u4f1a\u4e3a AirSim\\Unreal\\Environments\\Blocks.uproject \u751f\u6210 Blocks.sln \u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u8df3\u5230\u4e0b\u9762\u7684\u201c\u5982\u4f55\u4f7f\u7528 AirSim\u201d\u3002","title":"\u6784\u5efa AirSim"},{"location":"build_windows/#_2","text":"\u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5173\u95ed\u865a\u5e7b\u5f15\u64ce\u548c Epic Games \u542f\u52a8\u5668\uff0c\u8bf7\u52a1\u5fc5\u5728\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u73af\u5883\u4e4b\u524d\u5c06\u5176\u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u3002\u91cd\u65b0\u542f\u52a8 Epic Games \u542f\u52a8\u5668\u540e\uff0c\u5b83\u4f1a\u8981\u6c42\u60a8\u5c06\u9879\u76ee\u6587\u4ef6\u6269\u5c55\u540d\u4e0e\u865a\u5e7b\u5f15\u64ce\u5173\u8054\uff0c\u70b9\u51fb\u201c\u7acb\u5373\u4fee\u590d\u201d\u5373\u53ef\u4fee\u590d\u3002AirSim \u81ea\u5e26\u5185\u7f6e\u7684\u201cBlocks \u73af\u5883\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002\u8bf7\u53c2\u9605 \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 \u3002","title":"\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u9879\u76ee"},{"location":"build_windows/#_3","text":"\u5982\u9700\u624b\u52a8\u98de\u884c\uff0c\u5219\u9700\u8981\u9065\u63a7\u5668\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605 \u9065\u63a7\u5668\u8bbe\u7f6e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u79fb\u52a8\u3002","title":"\u8bbe\u7f6e\u9065\u63a7\u5668\uff08\u4ec5\u9650\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff09"},{"location":"build_windows/#airsim_1","text":"\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u8bbe\u7f6e AirSim \u540e\uff0c\u60a8\u53ef\u4ee5 \u53cc\u51fb Unreal\\Environments\\Blocks.sln \u6587\u4ef6\u4ee5\u52a0\u8f7d Blocks \u9879\u76ee\uff08\u6216\u60a8 \u81ea\u5b9a\u4e49 \u7684 Unreal \u9879\u76ee\u4e2d\u7684 .sln \u6587\u4ef6\uff09\u3002\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230 .sln \u6587\u4ef6\uff0c\u5219\u53ef\u80fd\u662f\u60a8\u5c1a\u672a\u5b8c\u6210\u4e0a\u9762\u201c\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u201d\u90e8\u5206\u4e2d\u7684\u6b65\u9aa4\u3002 \u6ce8\u610f : Unreal 4.27 \u5c06\u81ea\u52a8\u751f\u6210\u9488\u5bf9 Visual Studio 2019 \u7684 .sln \u6587\u4ef6\u3002Visual Studio 2022 \u5c06\u80fd\u591f\u52a0\u8f7d\u548c\u8fd0\u884c\u6b64 .sln\uff0c\u4f46\u5982\u679c\u60a8\u60f3\u8981\u5b8c\u5168\u652f\u6301 Visual Studio 2022\uff0c\u5219\u9700\u8981\u901a\u8fc7\u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879->\u6e90\u4ee3\u7801\u201d\u5e76\u4e3a\u201c\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u201d\u8bbe\u7f6e\u9009\u62e9\u201cVisual Studio 2022\u201d\u6765\u660e\u786e\u542f\u7528\u652f\u6301\u3002 \u9009\u62e9\u60a8\u7684\u865a\u5e7b\u9879\u76ee\u4f5c\u4e3a\u542f\u52a8\u9879\u76ee\uff08\u4f8b\u5982\uff0c Blocks \u9879\u76ee\uff0c\u53f3\u952e \u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668 \u4e2d\u7684 Block \uff0c\u9009\u62e9 \u8bbe\u4e3a\u542f\u52a8\u9879\u76ee \uff09\u5e76\u786e\u4fdd\u6784\u5efa\u914d\u7f6e\u8bbe\u7f6e\u4e3a Development Editor \u548c Win64 \u3002 \u5982\u679c\u62a5\u9519 1>LINK : fatal error LNK1104: \u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\u201cD:\\work\\workspace\\UnrealEngine\\Engine\\Binaries\\Win64\\UE4Editor-Voice.dll\u201d \uff0c\u5219\u68c0\u67e5\u89e3\u51b3\u65b9\u6848\u4e2d\u6709\u6ca1\u6709\u5408\u9002\u7684UE4\u3002 \u539f\u56e0\uff1a\u8fd0\u884c GenerateProjectFiles.bat \u4e2d\u7684 powershell -command \"& { (Get-ItemProperty 'Registry::HKEY_CLASSES_ROOT\\Unreal.ProjectFile\\shell\\rungenproj' -Name 'Icon' ).'Icon' } \uff0c\u663e\u793a\u7684 C:\\Program Files (x86)\\Epic Games\\Launcher\\Engine\\Binaries\\Win64\\UnrealVersionSelector.exe \u4e0d\u662fhutb\u6240\u4f7f\u7528\u7684\u865a\u5e7b\u5f15\u64ce\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u52a0\u8f7d\u540e\uff0c\u6309 \u8fd0\u884c(Play) \u6309\u94ae\u3002 \u63d0\u793a \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u672a\u9009\u4e2d\u201c\u5728\u540e\u53f0\u65f6\u4f7f\u7528\u8f83\u5c11\u7684 CPU\u201d(Use Less CPU when in Background)\u3002 \u8bf7\u53c2\u9605 \u4f7f\u7528 API \u548c settings.json \u4e86\u89e3\u5404\u79cd\u53ef\u7528\u9009\u9879\u3002","title":"\u5982\u4f55\u4f7f\u7528 AirSim"},{"location":"build_windows/#unity-airsim","text":"Unity \u662f\u53e6\u4e00\u4e2a\u4f18\u79c0\u7684\u6e38\u620f\u5f15\u64ce\u5e73\u53f0\uff0c\u6211\u4eec\u76ee\u524d\u5df2\u5c06 AirSim \u4e0e Unity \u96c6\u6210\uff0c\u5e76\u8fdb\u884c\u4e86 \u5b9e\u9a8c\u6027 \u6d4b\u8bd5\u3002\u8bf7\u6ce8\u610f\uff0c\u8be5\u96c6\u6210\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u90e8\u5206\u529f\u80fd\u53ef\u80fd\u5c1a\u672a\u5b8c\u5168\u5b9e\u73b0\u3002","title":"Unity \u4e0a\u7684 AirSim (\u5b9e\u9a8c\u6027)"},{"location":"camera_views/","text":"Camera Views # The camera views that are shown on screen are the camera views you can fetch via the simGetImages API . From left to right is the depth view, segmentation view and the FPV view. See Image APIs for description of various available views. Turning ON/OFF Views # Press F1 key to see keyboard shortcuts for turning on/off any or all views. You can also select various view modes there, such as \"Fly with Me\" mode, FPV mode and \"Ground View\" mode. Controlling Manual Camera # You can switch to manual camera control by pressing the M key. While manual camera control mode is selected, you can use the following keys to control the camera: |Key|Action| ---|--- |Arrow keys|move the camera forward/back and left/right| |Page up/down|move the camera up/down| |W/A/S/D|control pitch up/down and yaw left/right| |Left shift|increase movement speed| |Left control|decrease movement speed| Configuring Sub-Windows # Now you can select what is shown by each of above sub windows. For instance, you can chose to show surface normals in first window (instead of depth) and disparity in second window (instead of segmentation). Below is the settings value you can use in settings.json : { \"SubWindows\": [ {\"WindowID\": 1, \"CameraName\": \"0\", \"ImageType\": 5, \"VehicleName\": \"\", \"Visible\": false}, {\"WindowID\": 2, \"CameraName\": \"0\", \"ImageType\": 3, \"VehicleName\": \"\", \"Visible\": false} ] } Performance Impact # Note : This section is outdated and has not been updated for new performance enhancement changes. Now rendering these views does impact the FPS performance of the game, since this is additional work for the GPU. The following shows the impact on FPS when you open these views. This is measured on Intel core i7 computer with 32 gb RAM and a GeForce GTX 1080 graphics card running the Modular Neighborhood map, using cooked debug bits, no debugger or GameEditor open. The normal state with no subviews open is measuring around 16 ms per frame, which means it is keeping a nice steady 60 FPS (which is the target FPS). As it climbs up to 35ms the FPS drops to around 28 frames per second, spiking to 40ms means a few drops to 25 fps. The simulator can still function and fly correctly when all this is going on even in the worse case because the physics is decoupled from the rendering. However if the delay gets too high such that the communication with PX4 hardware is interrupted due to overly busy CPU then the flight can stall due to timeout in the offboard control messages. On the computer where this was measured the drone could fly the path.py program without any problems with all views open, and with 3 python scripts running to capture each view type. But there was one stall during this flight, but it recovered gracefully and completed the path. So it was right on the limit. The following shows the impact on CPU, perhaps a bit surprisingly, the CPU impact is also non trivial.","title":"\u76f8\u673a\u89c6\u89d2"},{"location":"camera_views/#camera-views","text":"The camera views that are shown on screen are the camera views you can fetch via the simGetImages API . From left to right is the depth view, segmentation view and the FPV view. See Image APIs for description of various available views.","title":"Camera Views"},{"location":"camera_views/#turning-onoff-views","text":"Press F1 key to see keyboard shortcuts for turning on/off any or all views. You can also select various view modes there, such as \"Fly with Me\" mode, FPV mode and \"Ground View\" mode.","title":"Turning ON/OFF Views"},{"location":"camera_views/#controlling-manual-camera","text":"You can switch to manual camera control by pressing the M key. While manual camera control mode is selected, you can use the following keys to control the camera: |Key|Action| ---|--- |Arrow keys|move the camera forward/back and left/right| |Page up/down|move the camera up/down| |W/A/S/D|control pitch up/down and yaw left/right| |Left shift|increase movement speed| |Left control|decrease movement speed|","title":"Controlling Manual Camera"},{"location":"camera_views/#configuring-sub-windows","text":"Now you can select what is shown by each of above sub windows. For instance, you can chose to show surface normals in first window (instead of depth) and disparity in second window (instead of segmentation). Below is the settings value you can use in settings.json : { \"SubWindows\": [ {\"WindowID\": 1, \"CameraName\": \"0\", \"ImageType\": 5, \"VehicleName\": \"\", \"Visible\": false}, {\"WindowID\": 2, \"CameraName\": \"0\", \"ImageType\": 3, \"VehicleName\": \"\", \"Visible\": false} ] }","title":"Configuring Sub-Windows"},{"location":"camera_views/#performance-impact","text":"Note : This section is outdated and has not been updated for new performance enhancement changes. Now rendering these views does impact the FPS performance of the game, since this is additional work for the GPU. The following shows the impact on FPS when you open these views. This is measured on Intel core i7 computer with 32 gb RAM and a GeForce GTX 1080 graphics card running the Modular Neighborhood map, using cooked debug bits, no debugger or GameEditor open. The normal state with no subviews open is measuring around 16 ms per frame, which means it is keeping a nice steady 60 FPS (which is the target FPS). As it climbs up to 35ms the FPS drops to around 28 frames per second, spiking to 40ms means a few drops to 25 fps. The simulator can still function and fly correctly when all this is going on even in the worse case because the physics is decoupled from the rendering. However if the delay gets too high such that the communication with PX4 hardware is interrupted due to overly busy CPU then the flight can stall due to timeout in the offboard control messages. On the computer where this was measured the drone could fly the path.py program without any problems with all views open, and with 3 python scripts running to capture each view type. But there was one stall during this flight, but it recovered gracefully and completed the path. So it was right on the limit. The following shows the impact on CPU, perhaps a bit surprisingly, the CPU impact is also non trivial.","title":"Performance Impact"},{"location":"cmake_linux/","text":"Installing cmake on Linux # If you don't have cmake version 3.10 (for example, 3.2.2 is the default on Ubuntu 14) you can run the following: mkdir ~/cmake-3.10.2 cd ~/cmake-3.10.2 wget https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh Now you have to run this command by itself (it is interactive) sh cmake-3.10.2-Linux-x86_64.sh --prefix ~/cmake-3.10.2 Answer 'n' to the question about creating another cmake-3.10.2-Linux-x86_64 folder and then sudo update-alternatives --install /usr/bin/cmake cmake ~/cmake-3.10.2/bin/cmake 60 Now type cmake --version to make sure your cmake version is 3.10.2.","title":"\u5728 Linux \u4e0a\u5b89\u88c5 cmake"},{"location":"cmake_linux/#installing-cmake-on-linux","text":"If you don't have cmake version 3.10 (for example, 3.2.2 is the default on Ubuntu 14) you can run the following: mkdir ~/cmake-3.10.2 cd ~/cmake-3.10.2 wget https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh Now you have to run this command by itself (it is interactive) sh cmake-3.10.2-Linux-x86_64.sh --prefix ~/cmake-3.10.2 Answer 'n' to the question about creating another cmake-3.10.2-Linux-x86_64 folder and then sudo update-alternatives --install /usr/bin/cmake cmake ~/cmake-3.10.2/bin/cmake 60 Now type cmake --version to make sure your cmake version is 3.10.2.","title":"Installing cmake on Linux"},{"location":"code_structure/","text":"Code Structure # AirLib # Majority of the code is located in AirLib. This is a self-contained library that you should be able to compile with any C++11 compiler. AirLib consists of the following components: Physics engine: This is header-only physics engine. It is designed to be fast and extensible to implement different vehicles. Sensor models: This is header-only models for Barometer, IMU, GPS and Magnetometer. Vehicle models: This is header-only models for vehicle configurations and models. Currently we have implemented model for a MultiRotor and a configuration for PX4 QuadRotor in the X config. There are several different Multirotor models defined in MultiRotorParams.hpp including a hexacopter as well. API-related files: This part of AirLib provides abstract base class for our APIs and concrete implementation for specific vehicle platforms such as MavLink. It also has classes for the RPC client and server. Apart from these, all common utilities are defined in common/ subfolder. One important file here is AirSimSettings.hpp which should be modified if any new fields are to be added in settings.json . AirSim supports different firmwares for Multirotor such as its own SimpleFlight, PX4 and ArduPilot, files for communicating with each firmware are placed in their respective subfolders in multirotor/firmwares . The vehicle-specific APIs are defined in the api/ subfolder, along-with required structs. The AirLib/src/ contains .cpp files with implementations of various mehtods defined in the .hpp files. For e.g. MultirotorApiBase.cpp contains the base implementation of the multirotor APIs, which can also be overridden in the specific firmware files if required. Unreal/Plugins/AirSim # This is the only portion of project which is dependent on Unreal engine. We have kept it isolated so we can implement simulator for other platforms as well, as has been done for Unity . The Unreal code takes advantage of its UObject based classes including Blueprints. The Source/ folder contains the C++ files, while the Content/ folder has the blueprints and assets. Some main components are described below: SimMode_ classes : The SimMode classes help implement many different modes, such as pure Computer Vision mode, where there is no vehicle or simulation for a specific vehicle (currently car and multirotor). The vehicle classes are located in Vehicles/ PawnSimApi : This is the base class for all vehicle pawn visualizations. Each vehicle has their own child (Multirotor|Car|ComputerVision)Pawn class. UnrealSensors : Contains implementation of Distance and Lidar sensors. WorldSimApi : Implements most of the environment and vehicle-agnostic APIs Apart from these, PIPCamera contains the camera initialization, and UnrealImageCapture & RenderRequest the image rendering code. AirBlueprintLib has a lot of utility and wrapper methods used to interface with the UE4 engine. MavLinkCom # This is the library developed by our own team member Chris Lovett that provides C++ classes to talk to the MavLink devices. This library is stand alone and can be used in any project. See MavLinkCom for more info. Sample Programs # We have created a few sample programs to demonstrate how to use the API. See HelloDrone and DroneShell. DroneShell demonstrates how to connect to the simulator using UDP. The simulator is running a server (similar to DroneServer). PythonClient # PythonClient contains Python API wrapper files and sample programs demonstrating their uses. Contributing # See Contribution Guidelines Unreal Framework # The following picture illustrates how AirSim is loaded and invoked by the Unreal Game Engine:","title":"\u4ee3\u7801\u7ed3\u6784"},{"location":"code_structure/#code-structure","text":"","title":"Code Structure"},{"location":"code_structure/#airlib","text":"Majority of the code is located in AirLib. This is a self-contained library that you should be able to compile with any C++11 compiler. AirLib consists of the following components: Physics engine: This is header-only physics engine. It is designed to be fast and extensible to implement different vehicles. Sensor models: This is header-only models for Barometer, IMU, GPS and Magnetometer. Vehicle models: This is header-only models for vehicle configurations and models. Currently we have implemented model for a MultiRotor and a configuration for PX4 QuadRotor in the X config. There are several different Multirotor models defined in MultiRotorParams.hpp including a hexacopter as well. API-related files: This part of AirLib provides abstract base class for our APIs and concrete implementation for specific vehicle platforms such as MavLink. It also has classes for the RPC client and server. Apart from these, all common utilities are defined in common/ subfolder. One important file here is AirSimSettings.hpp which should be modified if any new fields are to be added in settings.json . AirSim supports different firmwares for Multirotor such as its own SimpleFlight, PX4 and ArduPilot, files for communicating with each firmware are placed in their respective subfolders in multirotor/firmwares . The vehicle-specific APIs are defined in the api/ subfolder, along-with required structs. The AirLib/src/ contains .cpp files with implementations of various mehtods defined in the .hpp files. For e.g. MultirotorApiBase.cpp contains the base implementation of the multirotor APIs, which can also be overridden in the specific firmware files if required.","title":"AirLib"},{"location":"code_structure/#unrealpluginsairsim","text":"This is the only portion of project which is dependent on Unreal engine. We have kept it isolated so we can implement simulator for other platforms as well, as has been done for Unity . The Unreal code takes advantage of its UObject based classes including Blueprints. The Source/ folder contains the C++ files, while the Content/ folder has the blueprints and assets. Some main components are described below: SimMode_ classes : The SimMode classes help implement many different modes, such as pure Computer Vision mode, where there is no vehicle or simulation for a specific vehicle (currently car and multirotor). The vehicle classes are located in Vehicles/ PawnSimApi : This is the base class for all vehicle pawn visualizations. Each vehicle has their own child (Multirotor|Car|ComputerVision)Pawn class. UnrealSensors : Contains implementation of Distance and Lidar sensors. WorldSimApi : Implements most of the environment and vehicle-agnostic APIs Apart from these, PIPCamera contains the camera initialization, and UnrealImageCapture & RenderRequest the image rendering code. AirBlueprintLib has a lot of utility and wrapper methods used to interface with the UE4 engine.","title":"Unreal/Plugins/AirSim"},{"location":"code_structure/#mavlinkcom","text":"This is the library developed by our own team member Chris Lovett that provides C++ classes to talk to the MavLink devices. This library is stand alone and can be used in any project. See MavLinkCom for more info.","title":"MavLinkCom"},{"location":"code_structure/#sample-programs","text":"We have created a few sample programs to demonstrate how to use the API. See HelloDrone and DroneShell. DroneShell demonstrates how to connect to the simulator using UDP. The simulator is running a server (similar to DroneServer).","title":"Sample Programs"},{"location":"code_structure/#pythonclient","text":"PythonClient contains Python API wrapper files and sample programs demonstrating their uses.","title":"PythonClient"},{"location":"code_structure/#contributing","text":"See Contribution Guidelines","title":"Contributing"},{"location":"code_structure/#unreal-framework","text":"The following picture illustrates how AirSim is loaded and invoked by the Unreal Game Engine:","title":"Unreal Framework"},{"location":"coding_guidelines/","text":"\u73b0\u4ee3 C++ \u7f16\u7801\u6307\u5357 # \u6211\u4eec\u6b63\u5728\u4f7f\u7528\u73b0\u4ee3 C++11\u3002\u667a\u80fd\u6307\u9488\u3001Lambda \u8868\u8fbe\u5f0f\u548c C++11 \u591a\u7ebf\u7a0b\u539f\u8bed\u90fd\u662f\u60a8\u7684\u597d\u5e2e\u624b\u3002 \u5feb\u901f\u7b14\u8bb0 # \u201c\u6807\u51c6\u201d \u7684\u4f18\u70b9\u5728\u4e8e\u6709\u5f88\u591a\u53ef\u4f9b\u9009\u62e9\uff1a ISO \u3001 Sutter & Stroustrup \u3001 ROS \u3001 LINUX \u3001 Google \u3001 Microsoft \u3001 CERN \u3001 GCC ARM \u3001 LLVM \u4ee5\u53ca\u5176\u4ed6\u6570\u5343\u4e2a\u6807\u51c6\u3002\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e9b\u6807\u51c6\u4e2d\u7684\u5927\u591a\u6570\u751a\u81f3\u8fde\u50cf\u5982\u4f55\u547d\u540d\u7c7b\u6216\u5e38\u91cf\u8fd9\u6837\u57fa\u672c\u7684\u89c4\u8303\u90fd\u65e0\u6cd5\u8fbe\u6210\u4e00\u81f4\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e9b\u6807\u51c6\u7531\u4e8e\u652f\u6301\u73b0\u6709\u4ee3\u7801\u5e93\u800c\u7ecf\u5e38\u5b58\u5728\u8bb8\u591a\u9057\u7559\u95ee\u9898\u3002\u672c\u6587\u6863\u65e8\u5728\u521b\u5efa\u5c3d\u53ef\u80fd\u63a5\u8fd1 ISO\u3001Sutter & Stroustrup \u548c ROS \u6807\u51c6\u7684\u6307\u5357\uff0c\u540c\u65f6\u5c3d\u53ef\u80fd\u89e3\u51b3\u5b83\u4eec\u4e4b\u95f4\u7684\u51b2\u7a81\u3001\u7f3a\u70b9\u548c\u4e0d\u4e00\u81f4\u4e4b\u5904\u3002 clang-format # C++ \u8bed\u6cd5\u7684\u683c\u5f0f\u5316\u7531 clang-format \u5de5\u5177\u8fdb\u884c\u89c4\u8303\u5316\uff0c\u8be5\u5de5\u5177\u5df2\u5c06\u8bbe\u7f6e\u7b7e\u5165\u5230\u672c\u9879\u76ee\u4e2d\u7684 .clang-format \u6587\u4ef6\u4e2d\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u7b26\u5408\u4ee5\u4e0b\u5217\u51fa\u7684\u683c\u5f0f\u6307\u5357\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 clang-format \u547d\u4ee4\u884c\u6216\u5728\u6bcf\u6b21\u7f16\u8f91\u6216\u4fdd\u5b58\u6587\u4ef6\u65f6\u542f\u7528 Visual Studio \u81ea\u52a8 clang \u683c\u5f0f\u5316\u6765\u201c\u683c\u5f0f\u5316\u201d\u6587\u4ef6\u3002\u6240\u6709\u6587\u4ef6\u5747\u5df2\u6309\u6b64\u683c\u5f0f\u683c\u5f0f\u5316\uff0c\u540d\u4e3a clang-format \u7684 GitHub \u5de5\u4f5c\u6d41\u4e5f\u5c06\u786e\u4fdd\u6240\u6709\u62c9\u53d6\u8bf7\u6c42\u90fd\u683c\u5f0f\u6b63\u786e\uff0c\u56e0\u6b64\u5e94\u8be5\u4fdd\u6301\u7b80\u6d01\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u5305\u62ec Eigen \u6216 rpclib \u7b49\u5916\u90e8\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u53d1\u73b0 clang-format \u4e2d\u5b58\u5728\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6ce8\u91ca\u5bf9\u7981\u7528\u7279\u5b9a\u4ee3\u7801\u5757\u7684 clang \u683c\u5f0f\uff1a // clang-format off ... // clang-format on \u547d\u540d\u7ea6\u5b9a # \u907f\u514d\u5728\u540d\u79f0\u4e0a\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u5308\u7259\u5229\u8868\u793a\u6cd5\uff0c\u907f\u514d\u5728\u6307\u9488\u4e0a\u4f7f\u7528\u201c_ptr\u201d\u3002 \u4ee3\u7801\u5143\u7d20 \u98ce\u683c \u8bc4\u8bba \u547d\u540d\u7a7a\u95f4 under_scored \u4e0e\u7c7b\u540d\u533a\u5206 \u7c7b\u540d CamelCase \u4e3a\u4e86\u4e0e ISO \u63a8\u8350\u7684 STL \u7c7b\u578b\u533a\u5206\u5f00\u6765\uff08\u4e0d\u8981\u4f7f\u7528\u201cC\u201d\u6216\u201cT\u201d\u524d\u7f00\uff09 \u51fd\u6570\u540d camelCase \u9664\u4e86 .Net \u4e16\u754c\u4e4b\u5916\uff0c\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u51e0\u4e4e\u662f\u901a\u7528\u7684 \u53c2\u6570/\u5c40\u90e8\u53d8\u91cf under_scored \u7edd\u5927\u591a\u6570\u6807\u51c6\u90fd\u63a8\u8350\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a _ \u5bf9\u4e8e C++ \u4eba\u7fa4\u6765\u8bf4\u66f4\u5177\u53ef\u8bfb\u6027\uff08\u5c3d\u7ba1\u5bf9\u4e8e Java/.Net \u4eba\u7fa4\u6765\u8bf4\u5e76\u4e0d\u591a\uff09 \u6210\u5458\u53d8\u91cf under_scored_with_ \u7531\u4e8e ISO \u5bf9\u4fdd\u7559 _identifiers \u6709\u89c4\u5b9a\uff0c\u56e0\u6b64\u5f3a\u70c8\u4e0d\u5efa\u8bae\u4f7f\u7528\u524d\u7f00 _\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u540e\u7f00 \u679a\u4e3e\u53ca\u5176\u6210\u5458 CamelCase \u9664\u4e86\u975e\u5e38\u53e4\u8001\u7684\u6807\u51c6\u5916\uff0c\u5927\u591a\u6570\u6807\u51c6\u90fd\u540c\u610f\u8fd9\u4e00\u70b9 \u5168\u5c40\u53d8\u91cf g_under_scored \u4f60\u9996\u5148\u5c31\u4e0d\u5e94\u8be5\u62e5\u6709\u8fd9\u4e9b\uff01 \u5e38\u91cf UPPER_CASE \u975e\u5e38\u6709\u4e89\u8bae\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u91cc\u9009\u62e9\u4e00\u4e2a\uff0c\u9664\u975e\u5b83\u662f\u7c7b\u6216\u65b9\u6cd5\u4e2d\u7684\u79c1\u6709\u5e38\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u6210\u5458\u6216\u672c\u5730\u547d\u540d \u6587\u4ef6\u540d \u5339\u914d\u6587\u4ef6\u4e2d\u7684\u7c7b\u540d\u7684\u5927\u5c0f\u5199 \u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u6709\u5f88\u591a\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u4f46\u8fd9\u6d88\u9664\u4e86\u81ea\u52a8\u751f\u6210\u4ee3\u7801\u4e2d\u7684\u4e0d\u4e00\u81f4\u6027\uff08\u5bf9\u4e8e ROS \u5f88\u91cd\u8981\uff09 \u5934\u6587\u4ef6 # \u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u9650\u5b9a\u7684 #ifdef \u6765\u9632\u6b62\u591a\u91cd\u5305\u542b\uff1a #ifndef msr_airsim_MyHeader_hpp #define msr_airsim_MyHeader_hpp //--\u4f60\u7684\u4ee3\u7801 #endif \u6211\u4eec\u4e0d\u4f7f\u7528 #pragma once \u7684\u539f\u56e0\u662f\uff0c\u5982\u679c\u76f8\u540c\u7684\u5934\u6587\u4ef6\u5b58\u5728\u4e8e\u591a\u4e2a\u5730\u65b9\uff08\u8fd9\u5728 ROS \u6784\u5efa\u7cfb\u7edf\u4e0b\u53ef\u80fd\u662f\u53ef\u80fd\u7684\uff01\uff09\uff0c\u5219\u4e0d\u652f\u6301\u3002 \u62ec\u5728\u62ec\u5f27\u5185 # \u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5185\uff0c\u5c06\u82b1\u62ec\u53f7\u653e\u5728\u540c\u4e00\u884c\u3002\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5916\uff0c\u547d\u540d\u7a7a\u95f4\u3001\u7c7b\u548c\u65b9\u6cd5\u7ea7\u522b\u5219\u5355\u72ec\u4e00\u884c\u3002\u8fd9\u88ab\u79f0\u4e3a K&R \u98ce\u683c \uff0c\u5176\u53d8\u4f53\u5728 C++ \u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c\u5176\u4ed6\u98ce\u683c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u66f4\u53d7\u6b22\u8fce\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8bed\u53e5\u5355\u4e00\uff0c\u5219\u65e0\u9700\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u590d\u6742\u7684\u8bed\u53e5\u4f7f\u7528\u5927\u62ec\u53f7\u66f4\u5bb9\u6613\u4fdd\u6301\u6b63\u786e\u3002 \u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5185\uff0c\u5c06\u82b1\u62ec\u53f7\u653e\u5728\u540c\u4e00\u884c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u547d\u540d\u7a7a\u95f4\u3001\u7c7b\u548c\u65b9\u6cd5\u7ea7\u522b\u4f7f\u7528\u5355\u72ec\u7684\u4e00\u884c\u3002 \u8fd9\u79f0\u4e3a K&R \u98ce\u683c \uff0c\u5176\u53d8\u4f53\u5728 C++ \u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c\u5176\u4ed6\u98ce\u683c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u66f4\u53d7\u6b22\u8fce\u3002 \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8bed\u53e5\u5355\u4e00\uff0c\u5219\u65e0\u9700\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u590d\u6742\u7684\u8bed\u53e5\u4f7f\u7528\u5927\u62ec\u53f7\u66f4\u5bb9\u6613\u4fdd\u6301\u6b63\u786e\u3002 int main(int argc, char* argv[]) { while (x == y) { f0(); if (cont()) { f1(); } else { f2(); f3(); } if (x > 100) break; } } Const \u548c\u5f15\u7528 # \u8ba4\u771f\u68c0\u67e5\u6240\u6709\u58f0\u660e\u4e3a const \u548c\u5f15\u7528\u7684\u975e\u6807\u91cf\u53c2\u6570\u3002\u5982\u679c\u60a8\u4e4b\u524d\u4f7f\u7528\u8fc7 C#/Java/Python \u7b49\u8bed\u8a00\uff0c\u6700\u5e38\u72af\u7684\u9519\u8bef\u5c31\u662f\u6309\u503c\u4f20\u9012\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 const T&; \u3002\u5c24\u5176\u662f\u5927\u591a\u6570\u5b57\u7b26\u4e32\u3001\u5411\u91cf\u548c\u6620\u5c04\uff0c\u5982\u679c\u5b83\u4eec\u662f\u53ea\u8bfb\u7684\uff0c\u5219\u5e94\u4f7f\u7528 const T&; \uff1b\u5982\u679c\u5b83\u4eec\u662f\u53ef\u5199\u7684\uff0c\u5219\u5e94\u4f7f\u7528 T& \u3002\u6b64\u5916\uff0c\u5c3d\u53ef\u80fd\u4e3a\u65b9\u6cd5\u6dfb\u52a0 const \u540e\u7f00\u3002 \u91cd\u5199 # \u91cd\u5199\u865a\u65b9\u6cd5\u65f6\uff0c\u4f7f\u7528 override \u540e\u7f00\u3002 \u6307\u9488 # \u8fd9\u5b9e\u9645\u4e0a\u4e0e\u5185\u5b58\u7ba1\u7406\u6709\u5173\u3002\u6a21\u62df\u5668\u5305\u542b\u8bb8\u591a\u6027\u80fd\u5173\u952e\u4ee3\u7801\uff0c\u56e0\u6b64\u6211\u4eec\u5c3d\u91cf\u907f\u514d\u901a\u8fc7\u5927\u91cf\u8c03\u7528 new/delete \u6765\u5bfc\u81f4\u5185\u5b58\u7ba1\u7406\u5668\u8fc7\u8f7d\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u907f\u514d\u5728\u5806\u6808\u4e0a\u8fdb\u884c\u8fc7\u591a\u7684\u5185\u5bb9\u590d\u5236\uff0c\u56e0\u6b64\u6211\u4eec\u5c3d\u53ef\u80fd\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u5185\u5bb9\u3002 \u4f46\u662f\uff0c\u5f53\u5bf9\u8c61\u786e\u5b9e\u9700\u8981\u6bd4\u8c03\u7528\u5806\u6808\u5b58\u6d3b\u66f4\u957f\u65f6\u95f4\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5728\u5806\u4e0a\u5206\u914d\u8be5\u5bf9\u8c61\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6307\u9488\u3002\u73b0\u5728\uff0c\u5982\u679c\u7ba1\u7406\u8be5\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u6bd4\u8f83\u68d8\u624b\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 C++ 11 \u667a\u80fd\u6307\u9488 \u3002 \u4f46\u662f\u667a\u80fd\u6307\u9488\u786e\u5b9e\u5b58\u5728\u6210\u672c\uff0c\u56e0\u6b64\u4e0d\u8981\u76f2\u76ee\u5730\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528\u5b83\u4eec\u3002\u5bf9\u4e8e\u6027\u80fd\u81f3\u5173\u91cd\u8981\u7684\u79c1\u6709\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u5728\u4e0e\u4ec5\u63a5\u53d7\u6307\u9488\u7c7b\u578b\u7684\u65e7\u7cfb\u7edf\uff08\u4f8b\u5982\u5957\u63a5\u5b57 API\uff09\u4ea4\u4e92\u65f6\uff0c\u901a\u5e38\u4e5f\u9700\u8981\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u4f46\u6211\u4eec\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u5730\u5305\u88c5\u8fd9\u4e9b\u9057\u7559\u63a5\u53e3\uff0c\u5e76\u907f\u514d\u8fd9\u79cd\u7f16\u7a0b\u98ce\u683c\u6cc4\u9732\u5230\u66f4\u5927\u7684\u4ee3\u7801\u5e93\u4e2d\u3002 \u52a1\u5fc5\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528 const\uff0c\u4f8b\u5982 const float * const xP \u3002\u907f\u514d\u5728\u53d8\u91cf\u540d\u4e2d\u4f7f\u7528\u524d\u7f00\u6216\u540e\u7f00\u6765\u6307\u793a\u6307\u9488\u7c7b\u578b\uff0c\u4f8b\u5982\uff0c\u9664\u975e\u4e3a\u4e86\u66f4\u597d\u5730\u533a\u5206\u53d8\u91cf\uff0c\u5426\u5219\u8bf7\u4f7f\u7528 my_obj \u800c\u4e0d\u662f myobj_ptr \uff0c\u4f8b\u5982 int mynum = 5; int* mynum_ptr = mynum; \u3002 \u7a7a\u503c\u68c0\u67e5 # \u5728\u865a\u5e7b C++ \u4ee3\u7801\u4e2d\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3a\u7a7a\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u201cIsValid(ptr)\u201d\u3002\u9664\u4e86\u68c0\u67e5\u7a7a\u6307\u9488\u4e4b\u5916\uff0c\u6b64\u51fd\u6570\u8fd8\u4f1a\u8fd4\u56de UObject \u662f\u5426\u5df2\u6b63\u786e\u521d\u59cb\u5316\u3002\u8fd9\u5728 UObject \u6b63\u5728\u88ab\u5783\u573e\u56de\u6536\u4f46\u4ecd\u8bbe\u7f6e\u4e3a\u975e\u7a7a\u503c\u7684\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\u3002 \u7f29\u8fdb # C++ \u4ee3\u7801\u5e93\u4f7f\u7528\u56db\u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\uff08\u800c\u4e0d\u662f\u5236\u8868\u7b26\uff09\u3002 \u6362\u884c\u7b26 # \u63d0\u4ea4\u6587\u4ef6\u65f6\u5e94\u4f7f\u7528 Unix \u6362\u884c\u7b26\u3002\u5728 Windows \u4e0a\u5de5\u4f5c\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e git \u68c0\u51fa\u5e26\u6709 Windows \u6362\u884c\u7b26\u7684\u6587\u4ef6\uff0c\u5e76\u5728\u63d0\u4ea4\u65f6\u81ea\u52a8\u5c06 Windows \u6362\u884c\u7b26\u8f6c\u6362\u4e3a Unix \u6362\u884c\u7b26\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a git config --global core.autocrlf true \u5728 Linux \u4e0a\u5de5\u4f5c\u65f6\uff0c\u6700\u597d\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06 git \u914d\u7f6e\u4e3a\u68c0\u51fa\u5e26\u6709 Unix \u6362\u884c\u7b26\u7684\u6587\u4ef6\uff1a git config --global core.autocrlf input \u6709\u5173\u6b64\u8bbe\u7f6e\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6b64\u6587\u6863 \u3002 \u8fd9\u592a\u77ed\u4e86\uff0c\u662f\u5417\uff1f # \u662f\u7684\uff0c\u8fd9\u662f\u6545\u610f\u7684\uff0c\u56e0\u4e3a\u6ca1\u4eba\u559c\u6b22\u8bfb200\u9875\u7684\u7f16\u7801\u6307\u5357\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u53ea\u6db5\u76d6\u6700\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9 \u5728 GCC\u4e2d\u7684\u4e25\u683c\u6a21\u5f0f\u7f16\u8bd1 \u548cVC++\u4e2d\u76844\u7ea7\u8b66\u544a\u9519\u8bef\u4e2d\u5c1a\u672a\u6db5\u76d6\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u5982\u4f55\u7528C++\u7f16\u5199\u66f4\u597d\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u9605 GotW \u548c Effective Modern C++ \u8fd9\u672c\u4e66\u3002","title":"\u7f16\u7801\u6307\u5357"},{"location":"coding_guidelines/#c","text":"\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u73b0\u4ee3 C++11\u3002\u667a\u80fd\u6307\u9488\u3001Lambda \u8868\u8fbe\u5f0f\u548c C++11 \u591a\u7ebf\u7a0b\u539f\u8bed\u90fd\u662f\u60a8\u7684\u597d\u5e2e\u624b\u3002","title":"\u73b0\u4ee3 C++ \u7f16\u7801\u6307\u5357"},{"location":"coding_guidelines/#_1","text":"\u201c\u6807\u51c6\u201d \u7684\u4f18\u70b9\u5728\u4e8e\u6709\u5f88\u591a\u53ef\u4f9b\u9009\u62e9\uff1a ISO \u3001 Sutter & Stroustrup \u3001 ROS \u3001 LINUX \u3001 Google \u3001 Microsoft \u3001 CERN \u3001 GCC ARM \u3001 LLVM \u4ee5\u53ca\u5176\u4ed6\u6570\u5343\u4e2a\u6807\u51c6\u3002\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e9b\u6807\u51c6\u4e2d\u7684\u5927\u591a\u6570\u751a\u81f3\u8fde\u50cf\u5982\u4f55\u547d\u540d\u7c7b\u6216\u5e38\u91cf\u8fd9\u6837\u57fa\u672c\u7684\u89c4\u8303\u90fd\u65e0\u6cd5\u8fbe\u6210\u4e00\u81f4\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e9b\u6807\u51c6\u7531\u4e8e\u652f\u6301\u73b0\u6709\u4ee3\u7801\u5e93\u800c\u7ecf\u5e38\u5b58\u5728\u8bb8\u591a\u9057\u7559\u95ee\u9898\u3002\u672c\u6587\u6863\u65e8\u5728\u521b\u5efa\u5c3d\u53ef\u80fd\u63a5\u8fd1 ISO\u3001Sutter & Stroustrup \u548c ROS \u6807\u51c6\u7684\u6307\u5357\uff0c\u540c\u65f6\u5c3d\u53ef\u80fd\u89e3\u51b3\u5b83\u4eec\u4e4b\u95f4\u7684\u51b2\u7a81\u3001\u7f3a\u70b9\u548c\u4e0d\u4e00\u81f4\u4e4b\u5904\u3002","title":"\u5feb\u901f\u7b14\u8bb0"},{"location":"coding_guidelines/#clang-format","text":"C++ \u8bed\u6cd5\u7684\u683c\u5f0f\u5316\u7531 clang-format \u5de5\u5177\u8fdb\u884c\u89c4\u8303\u5316\uff0c\u8be5\u5de5\u5177\u5df2\u5c06\u8bbe\u7f6e\u7b7e\u5165\u5230\u672c\u9879\u76ee\u4e2d\u7684 .clang-format \u6587\u4ef6\u4e2d\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u7b26\u5408\u4ee5\u4e0b\u5217\u51fa\u7684\u683c\u5f0f\u6307\u5357\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 clang-format \u547d\u4ee4\u884c\u6216\u5728\u6bcf\u6b21\u7f16\u8f91\u6216\u4fdd\u5b58\u6587\u4ef6\u65f6\u542f\u7528 Visual Studio \u81ea\u52a8 clang \u683c\u5f0f\u5316\u6765\u201c\u683c\u5f0f\u5316\u201d\u6587\u4ef6\u3002\u6240\u6709\u6587\u4ef6\u5747\u5df2\u6309\u6b64\u683c\u5f0f\u683c\u5f0f\u5316\uff0c\u540d\u4e3a clang-format \u7684 GitHub \u5de5\u4f5c\u6d41\u4e5f\u5c06\u786e\u4fdd\u6240\u6709\u62c9\u53d6\u8bf7\u6c42\u90fd\u683c\u5f0f\u6b63\u786e\uff0c\u56e0\u6b64\u5e94\u8be5\u4fdd\u6301\u7b80\u6d01\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u5305\u62ec Eigen \u6216 rpclib \u7b49\u5916\u90e8\u4ee3\u7801\u3002 \u5982\u679c\u60a8\u53d1\u73b0 clang-format \u4e2d\u5b58\u5728\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6ce8\u91ca\u5bf9\u7981\u7528\u7279\u5b9a\u4ee3\u7801\u5757\u7684 clang \u683c\u5f0f\uff1a // clang-format off ... // clang-format on","title":"clang-format"},{"location":"coding_guidelines/#_2","text":"\u907f\u514d\u5728\u540d\u79f0\u4e0a\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u5308\u7259\u5229\u8868\u793a\u6cd5\uff0c\u907f\u514d\u5728\u6307\u9488\u4e0a\u4f7f\u7528\u201c_ptr\u201d\u3002 \u4ee3\u7801\u5143\u7d20 \u98ce\u683c \u8bc4\u8bba \u547d\u540d\u7a7a\u95f4 under_scored \u4e0e\u7c7b\u540d\u533a\u5206 \u7c7b\u540d CamelCase \u4e3a\u4e86\u4e0e ISO \u63a8\u8350\u7684 STL \u7c7b\u578b\u533a\u5206\u5f00\u6765\uff08\u4e0d\u8981\u4f7f\u7528\u201cC\u201d\u6216\u201cT\u201d\u524d\u7f00\uff09 \u51fd\u6570\u540d camelCase \u9664\u4e86 .Net \u4e16\u754c\u4e4b\u5916\uff0c\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u51e0\u4e4e\u662f\u901a\u7528\u7684 \u53c2\u6570/\u5c40\u90e8\u53d8\u91cf under_scored \u7edd\u5927\u591a\u6570\u6807\u51c6\u90fd\u63a8\u8350\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a _ \u5bf9\u4e8e C++ \u4eba\u7fa4\u6765\u8bf4\u66f4\u5177\u53ef\u8bfb\u6027\uff08\u5c3d\u7ba1\u5bf9\u4e8e Java/.Net \u4eba\u7fa4\u6765\u8bf4\u5e76\u4e0d\u591a\uff09 \u6210\u5458\u53d8\u91cf under_scored_with_ \u7531\u4e8e ISO \u5bf9\u4fdd\u7559 _identifiers \u6709\u89c4\u5b9a\uff0c\u56e0\u6b64\u5f3a\u70c8\u4e0d\u5efa\u8bae\u4f7f\u7528\u524d\u7f00 _\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u540e\u7f00 \u679a\u4e3e\u53ca\u5176\u6210\u5458 CamelCase \u9664\u4e86\u975e\u5e38\u53e4\u8001\u7684\u6807\u51c6\u5916\uff0c\u5927\u591a\u6570\u6807\u51c6\u90fd\u540c\u610f\u8fd9\u4e00\u70b9 \u5168\u5c40\u53d8\u91cf g_under_scored \u4f60\u9996\u5148\u5c31\u4e0d\u5e94\u8be5\u62e5\u6709\u8fd9\u4e9b\uff01 \u5e38\u91cf UPPER_CASE \u975e\u5e38\u6709\u4e89\u8bae\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u91cc\u9009\u62e9\u4e00\u4e2a\uff0c\u9664\u975e\u5b83\u662f\u7c7b\u6216\u65b9\u6cd5\u4e2d\u7684\u79c1\u6709\u5e38\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u6210\u5458\u6216\u672c\u5730\u547d\u540d \u6587\u4ef6\u540d \u5339\u914d\u6587\u4ef6\u4e2d\u7684\u7c7b\u540d\u7684\u5927\u5c0f\u5199 \u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u6709\u5f88\u591a\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u4f46\u8fd9\u6d88\u9664\u4e86\u81ea\u52a8\u751f\u6210\u4ee3\u7801\u4e2d\u7684\u4e0d\u4e00\u81f4\u6027\uff08\u5bf9\u4e8e ROS \u5f88\u91cd\u8981\uff09","title":"\u547d\u540d\u7ea6\u5b9a"},{"location":"coding_guidelines/#_3","text":"\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u9650\u5b9a\u7684 #ifdef \u6765\u9632\u6b62\u591a\u91cd\u5305\u542b\uff1a #ifndef msr_airsim_MyHeader_hpp #define msr_airsim_MyHeader_hpp //--\u4f60\u7684\u4ee3\u7801 #endif \u6211\u4eec\u4e0d\u4f7f\u7528 #pragma once \u7684\u539f\u56e0\u662f\uff0c\u5982\u679c\u76f8\u540c\u7684\u5934\u6587\u4ef6\u5b58\u5728\u4e8e\u591a\u4e2a\u5730\u65b9\uff08\u8fd9\u5728 ROS \u6784\u5efa\u7cfb\u7edf\u4e0b\u53ef\u80fd\u662f\u53ef\u80fd\u7684\uff01\uff09\uff0c\u5219\u4e0d\u652f\u6301\u3002","title":"\u5934\u6587\u4ef6"},{"location":"coding_guidelines/#_4","text":"\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5185\uff0c\u5c06\u82b1\u62ec\u53f7\u653e\u5728\u540c\u4e00\u884c\u3002\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5916\uff0c\u547d\u540d\u7a7a\u95f4\u3001\u7c7b\u548c\u65b9\u6cd5\u7ea7\u522b\u5219\u5355\u72ec\u4e00\u884c\u3002\u8fd9\u88ab\u79f0\u4e3a K&R \u98ce\u683c \uff0c\u5176\u53d8\u4f53\u5728 C++ \u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c\u5176\u4ed6\u98ce\u683c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u66f4\u53d7\u6b22\u8fce\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8bed\u53e5\u5355\u4e00\uff0c\u5219\u65e0\u9700\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u590d\u6742\u7684\u8bed\u53e5\u4f7f\u7528\u5927\u62ec\u53f7\u66f4\u5bb9\u6613\u4fdd\u6301\u6b63\u786e\u3002 \u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4f53\u5185\uff0c\u5c06\u82b1\u62ec\u53f7\u653e\u5728\u540c\u4e00\u884c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u547d\u540d\u7a7a\u95f4\u3001\u7c7b\u548c\u65b9\u6cd5\u7ea7\u522b\u4f7f\u7528\u5355\u72ec\u7684\u4e00\u884c\u3002 \u8fd9\u79f0\u4e3a K&R \u98ce\u683c \uff0c\u5176\u53d8\u4f53\u5728 C++ \u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c\u5176\u4ed6\u98ce\u683c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u66f4\u53d7\u6b22\u8fce\u3002 \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8bed\u53e5\u5355\u4e00\uff0c\u5219\u65e0\u9700\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u590d\u6742\u7684\u8bed\u53e5\u4f7f\u7528\u5927\u62ec\u53f7\u66f4\u5bb9\u6613\u4fdd\u6301\u6b63\u786e\u3002 int main(int argc, char* argv[]) { while (x == y) { f0(); if (cont()) { f1(); } else { f2(); f3(); } if (x > 100) break; } }","title":"\u62ec\u5728\u62ec\u5f27\u5185"},{"location":"coding_guidelines/#const","text":"\u8ba4\u771f\u68c0\u67e5\u6240\u6709\u58f0\u660e\u4e3a const \u548c\u5f15\u7528\u7684\u975e\u6807\u91cf\u53c2\u6570\u3002\u5982\u679c\u60a8\u4e4b\u524d\u4f7f\u7528\u8fc7 C#/Java/Python \u7b49\u8bed\u8a00\uff0c\u6700\u5e38\u72af\u7684\u9519\u8bef\u5c31\u662f\u6309\u503c\u4f20\u9012\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 const T&; \u3002\u5c24\u5176\u662f\u5927\u591a\u6570\u5b57\u7b26\u4e32\u3001\u5411\u91cf\u548c\u6620\u5c04\uff0c\u5982\u679c\u5b83\u4eec\u662f\u53ea\u8bfb\u7684\uff0c\u5219\u5e94\u4f7f\u7528 const T&; \uff1b\u5982\u679c\u5b83\u4eec\u662f\u53ef\u5199\u7684\uff0c\u5219\u5e94\u4f7f\u7528 T& \u3002\u6b64\u5916\uff0c\u5c3d\u53ef\u80fd\u4e3a\u65b9\u6cd5\u6dfb\u52a0 const \u540e\u7f00\u3002","title":"Const \u548c\u5f15\u7528"},{"location":"coding_guidelines/#_5","text":"\u91cd\u5199\u865a\u65b9\u6cd5\u65f6\uff0c\u4f7f\u7528 override \u540e\u7f00\u3002","title":"\u91cd\u5199"},{"location":"coding_guidelines/#_6","text":"\u8fd9\u5b9e\u9645\u4e0a\u4e0e\u5185\u5b58\u7ba1\u7406\u6709\u5173\u3002\u6a21\u62df\u5668\u5305\u542b\u8bb8\u591a\u6027\u80fd\u5173\u952e\u4ee3\u7801\uff0c\u56e0\u6b64\u6211\u4eec\u5c3d\u91cf\u907f\u514d\u901a\u8fc7\u5927\u91cf\u8c03\u7528 new/delete \u6765\u5bfc\u81f4\u5185\u5b58\u7ba1\u7406\u5668\u8fc7\u8f7d\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u907f\u514d\u5728\u5806\u6808\u4e0a\u8fdb\u884c\u8fc7\u591a\u7684\u5185\u5bb9\u590d\u5236\uff0c\u56e0\u6b64\u6211\u4eec\u5c3d\u53ef\u80fd\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u5185\u5bb9\u3002 \u4f46\u662f\uff0c\u5f53\u5bf9\u8c61\u786e\u5b9e\u9700\u8981\u6bd4\u8c03\u7528\u5806\u6808\u5b58\u6d3b\u66f4\u957f\u65f6\u95f4\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5728\u5806\u4e0a\u5206\u914d\u8be5\u5bf9\u8c61\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6307\u9488\u3002\u73b0\u5728\uff0c\u5982\u679c\u7ba1\u7406\u8be5\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u6bd4\u8f83\u68d8\u624b\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 C++ 11 \u667a\u80fd\u6307\u9488 \u3002 \u4f46\u662f\u667a\u80fd\u6307\u9488\u786e\u5b9e\u5b58\u5728\u6210\u672c\uff0c\u56e0\u6b64\u4e0d\u8981\u76f2\u76ee\u5730\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528\u5b83\u4eec\u3002\u5bf9\u4e8e\u6027\u80fd\u81f3\u5173\u91cd\u8981\u7684\u79c1\u6709\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u5728\u4e0e\u4ec5\u63a5\u53d7\u6307\u9488\u7c7b\u578b\u7684\u65e7\u7cfb\u7edf\uff08\u4f8b\u5982\u5957\u63a5\u5b57 API\uff09\u4ea4\u4e92\u65f6\uff0c\u901a\u5e38\u4e5f\u9700\u8981\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u4f46\u6211\u4eec\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u5730\u5305\u88c5\u8fd9\u4e9b\u9057\u7559\u63a5\u53e3\uff0c\u5e76\u907f\u514d\u8fd9\u79cd\u7f16\u7a0b\u98ce\u683c\u6cc4\u9732\u5230\u66f4\u5927\u7684\u4ee3\u7801\u5e93\u4e2d\u3002 \u52a1\u5fc5\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528 const\uff0c\u4f8b\u5982 const float * const xP \u3002\u907f\u514d\u5728\u53d8\u91cf\u540d\u4e2d\u4f7f\u7528\u524d\u7f00\u6216\u540e\u7f00\u6765\u6307\u793a\u6307\u9488\u7c7b\u578b\uff0c\u4f8b\u5982\uff0c\u9664\u975e\u4e3a\u4e86\u66f4\u597d\u5730\u533a\u5206\u53d8\u91cf\uff0c\u5426\u5219\u8bf7\u4f7f\u7528 my_obj \u800c\u4e0d\u662f myobj_ptr \uff0c\u4f8b\u5982 int mynum = 5; int* mynum_ptr = mynum; \u3002","title":"\u6307\u9488"},{"location":"coding_guidelines/#_7","text":"\u5728\u865a\u5e7b C++ \u4ee3\u7801\u4e2d\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3a\u7a7a\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u201cIsValid(ptr)\u201d\u3002\u9664\u4e86\u68c0\u67e5\u7a7a\u6307\u9488\u4e4b\u5916\uff0c\u6b64\u51fd\u6570\u8fd8\u4f1a\u8fd4\u56de UObject \u662f\u5426\u5df2\u6b63\u786e\u521d\u59cb\u5316\u3002\u8fd9\u5728 UObject \u6b63\u5728\u88ab\u5783\u573e\u56de\u6536\u4f46\u4ecd\u8bbe\u7f6e\u4e3a\u975e\u7a7a\u503c\u7684\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\u3002","title":"\u7a7a\u503c\u68c0\u67e5"},{"location":"coding_guidelines/#_8","text":"C++ \u4ee3\u7801\u5e93\u4f7f\u7528\u56db\u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\uff08\u800c\u4e0d\u662f\u5236\u8868\u7b26\uff09\u3002","title":"\u7f29\u8fdb"},{"location":"coding_guidelines/#_9","text":"\u63d0\u4ea4\u6587\u4ef6\u65f6\u5e94\u4f7f\u7528 Unix \u6362\u884c\u7b26\u3002\u5728 Windows \u4e0a\u5de5\u4f5c\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e git \u68c0\u51fa\u5e26\u6709 Windows \u6362\u884c\u7b26\u7684\u6587\u4ef6\uff0c\u5e76\u5728\u63d0\u4ea4\u65f6\u81ea\u52a8\u5c06 Windows \u6362\u884c\u7b26\u8f6c\u6362\u4e3a Unix \u6362\u884c\u7b26\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a git config --global core.autocrlf true \u5728 Linux \u4e0a\u5de5\u4f5c\u65f6\uff0c\u6700\u597d\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06 git \u914d\u7f6e\u4e3a\u68c0\u51fa\u5e26\u6709 Unix \u6362\u884c\u7b26\u7684\u6587\u4ef6\uff1a git config --global core.autocrlf input \u6709\u5173\u6b64\u8bbe\u7f6e\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6b64\u6587\u6863 \u3002","title":"\u6362\u884c\u7b26"},{"location":"coding_guidelines/#_10","text":"\u662f\u7684\uff0c\u8fd9\u662f\u6545\u610f\u7684\uff0c\u56e0\u4e3a\u6ca1\u4eba\u559c\u6b22\u8bfb200\u9875\u7684\u7f16\u7801\u6307\u5357\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u53ea\u6db5\u76d6\u6700\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9 \u5728 GCC\u4e2d\u7684\u4e25\u683c\u6a21\u5f0f\u7f16\u8bd1 \u548cVC++\u4e2d\u76844\u7ea7\u8b66\u544a\u9519\u8bef\u4e2d\u5c1a\u672a\u6db5\u76d6\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u5982\u4f55\u7528C++\u7f16\u5199\u66f4\u597d\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u9605 GotW \u548c Effective Modern C++ \u8fd9\u672c\u4e66\u3002","title":"\u8fd9\u592a\u77ed\u4e86\uff0c\u662f\u5417\uff1f"},{"location":"create_issue/","text":"How to Create Issue or Ask Question Effectively # AirSim is open source project and contributors like you keeps it going. It is important to respect contributors time and effort when you are asking a question or filing an issue. Your chances of receiving helpful response would increase if you follow below guidelines: DOs # Search issues to see if someone already has asked it. Chose title that is short and summarizes well. Copy and paste full error message. Precisely describe steps you used that produced the error message or symptom. Describe what vehicle, mode, OS, AirSim version and other settings you are using. Copy and paste minimal version of code that reproduces the problem. Tell us what the goal you want to achieve or expected output. Tell us what you did so far to debug this issue. DONT'S # Do not use \"Please help\" etc in the title. See above. Do not copy and paste screen shot of error message. Copy and paste text. Do not use \"it doesn't work\". Precisely state what is the error message or symptom. Do not ask to write code for you. Contribute !","title":"\u521b\u5efa\u95ee\u9898"},{"location":"create_issue/#how-to-create-issue-or-ask-question-effectively","text":"AirSim is open source project and contributors like you keeps it going. It is important to respect contributors time and effort when you are asking a question or filing an issue. Your chances of receiving helpful response would increase if you follow below guidelines:","title":"How to Create Issue or Ask Question Effectively"},{"location":"create_issue/#dos","text":"Search issues to see if someone already has asked it. Chose title that is short and summarizes well. Copy and paste full error message. Precisely describe steps you used that produced the error message or symptom. Describe what vehicle, mode, OS, AirSim version and other settings you are using. Copy and paste minimal version of code that reproduces the problem. Tell us what the goal you want to achieve or expected output. Tell us what you did so far to debug this issue.","title":"DOs"},{"location":"create_issue/#donts","text":"Do not use \"Please help\" etc in the title. See above. Do not copy and paste screen shot of error message. Copy and paste text. Do not use \"it doesn't work\". Precisely state what is the error message or symptom. Do not ask to write code for you. Contribute !","title":"DONT'S"},{"location":"custom_drone/","text":"AirLib on a Real Drone # The AirLib library can be compiled and deployed on the companion computer on a real drone. For our testing, we mounted a Gigabyte Brix BXi7-5500 ultra compact PC on the drone connected to the Pixhawk flight controller over USB. The Gigabyte PC is running Ubuntu, so we are able to SSH into it over Wi-Fi: Once connected you can run MavLinkTest with this command line: MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. And this will produce a log file of the flight which can then be used for playback in the simulator . You can also add -proxy:192.168.1.100:14550 to connect MavLinkTest to a remote computer where you can run QGroundControl or our PX4 Log Viewer which is another handy way to see what is going on with your drone. MavLinkTest then has some simple commands for testing your drone, here's a simple example of some commands: arm takeoff 5 orbit 10 2 This will arm the drone, takeoff of 5 meters, then do an orbit pattern radius 10 meters, at 2 m/s. Type '?' to find all available commands. Note: Some commands (for example, orbit ) are named differently and have different syntax in MavLinkTest and DroneShell (for example, circlebypath -radius 10 -velocity 21 ). When you land the drone you can stop MavLinkTest and copy the *.mavlink log file that was generated. DroneServer and DroneShell # Once you are happy that the MavLinkTest is working, you can also run DroneServer and DroneShell as follows. First, run MavLinkTest with a local proxy to send everything to DroneServer: MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. -proxy:127.0.0.1:14560 Change ~/Documents/AirSim/settings.json to say \"serial\":false, because we want DroneServer to look for this UDP connection. DroneServer 0 Lastly, you can now connect DroneShell to this instance of DroneServer and use the DroneShell commands to fly your drone: DroneShell ==||=> Welcome to DroneShell 1.0. Type ? for help. Microsoft Research (c) 2016. Waiting for drone to report a valid GPS location... ==||=> requestcontrol ==||=> arm ==||=> takeoff ==||=> circlebypath -radius 10 -velocity 2 PX4 Specific Tools # You can run the MavlinkCom library and MavLinkTest app to test the connection between your companion computer and flight controller. How Does This Work? # AirSim uses MavLinkCom component developed by @lovettchris. The MavLinkCom has a proxy architecture where you can open a connection to PX4 either using serial or UDP and then other components share this connection. When PX4 sends MavLink message, all components receive that message. If any component sends a message then it's received by PX4 only. This allows you to connect any number of components to PX4 This code opens a connection for LogViewer and QGC. You can add something more if you like. If you want to use QGC + AirSim together than you will need QGC to let own the serial port. QGC opens up TCP connection that acts as a proxy so any other component can connect to QGC and send MavLinkMessage to QGC and then QGC forwards that message to PX4. So you tell AirSim to connect to QGC and let QGC own serial port. For companion board, the way we did it earlier was to have Gigabyte Brix on the drone. This x86 full-fledged computer that will connect to PX4 through USB. We had Ubuntu on Brix and ran DroneServer . The DroneServer created an API endpoint that we can talk to via C++ client code (or Python code) and it translated API calls to MavLink messages. That way you can write your code against the same API, test it in the simulator and then run the same code on an actual vehicle. So the companion computer has DroneServer running along with client code.","title":"\u771f\u5b9e\u65e0\u4eba\u673a\u4e0a\u7684 AirSim"},{"location":"custom_drone/#airlib-on-a-real-drone","text":"The AirLib library can be compiled and deployed on the companion computer on a real drone. For our testing, we mounted a Gigabyte Brix BXi7-5500 ultra compact PC on the drone connected to the Pixhawk flight controller over USB. The Gigabyte PC is running Ubuntu, so we are able to SSH into it over Wi-Fi: Once connected you can run MavLinkTest with this command line: MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. And this will produce a log file of the flight which can then be used for playback in the simulator . You can also add -proxy:192.168.1.100:14550 to connect MavLinkTest to a remote computer where you can run QGroundControl or our PX4 Log Viewer which is another handy way to see what is going on with your drone. MavLinkTest then has some simple commands for testing your drone, here's a simple example of some commands: arm takeoff 5 orbit 10 2 This will arm the drone, takeoff of 5 meters, then do an orbit pattern radius 10 meters, at 2 m/s. Type '?' to find all available commands. Note: Some commands (for example, orbit ) are named differently and have different syntax in MavLinkTest and DroneShell (for example, circlebypath -radius 10 -velocity 21 ). When you land the drone you can stop MavLinkTest and copy the *.mavlink log file that was generated.","title":"AirLib on a Real Drone"},{"location":"custom_drone/#droneserver-and-droneshell","text":"Once you are happy that the MavLinkTest is working, you can also run DroneServer and DroneShell as follows. First, run MavLinkTest with a local proxy to send everything to DroneServer: MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. -proxy:127.0.0.1:14560 Change ~/Documents/AirSim/settings.json to say \"serial\":false, because we want DroneServer to look for this UDP connection. DroneServer 0 Lastly, you can now connect DroneShell to this instance of DroneServer and use the DroneShell commands to fly your drone: DroneShell ==||=> Welcome to DroneShell 1.0. Type ? for help. Microsoft Research (c) 2016. Waiting for drone to report a valid GPS location... ==||=> requestcontrol ==||=> arm ==||=> takeoff ==||=> circlebypath -radius 10 -velocity 2","title":"DroneServer and DroneShell"},{"location":"custom_drone/#px4-specific-tools","text":"You can run the MavlinkCom library and MavLinkTest app to test the connection between your companion computer and flight controller.","title":"PX4 Specific Tools"},{"location":"custom_drone/#how-does-this-work","text":"AirSim uses MavLinkCom component developed by @lovettchris. The MavLinkCom has a proxy architecture where you can open a connection to PX4 either using serial or UDP and then other components share this connection. When PX4 sends MavLink message, all components receive that message. If any component sends a message then it's received by PX4 only. This allows you to connect any number of components to PX4 This code opens a connection for LogViewer and QGC. You can add something more if you like. If you want to use QGC + AirSim together than you will need QGC to let own the serial port. QGC opens up TCP connection that acts as a proxy so any other component can connect to QGC and send MavLinkMessage to QGC and then QGC forwards that message to PX4. So you tell AirSim to connect to QGC and let QGC own serial port. For companion board, the way we did it earlier was to have Gigabyte Brix on the drone. This x86 full-fledged computer that will connect to PX4 through USB. We had Ubuntu on Brix and ran DroneServer . The DroneServer created an API endpoint that we can talk to via C++ client code (or Python code) and it translated API calls to MavLink messages. That way you can write your code against the same API, test it in the simulator and then run the same code on an actual vehicle. So the companion computer has DroneServer running along with client code.","title":"How Does This Work?"},{"location":"design/","text":"Paper # You can read more about our architecture and design in our paper (work in progress) . You may cite this as, @techreport{MSR-TR-2017-9, title = { {A}erial {I}nformatics and {R}obotics Platform }, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, year = {2017}, institution = {Microsoft Research}, number = { {M}{S}{R}-{T}{R}-2017-9} } } Architecture # Below is high level overview of how different components interact with each other.","title":"\u67b6\u6784"},{"location":"design/#paper","text":"You can read more about our architecture and design in our paper (work in progress) . You may cite this as, @techreport{MSR-TR-2017-9, title = { {A}erial {I}nformatics and {R}obotics Platform }, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, year = {2017}, institution = {Microsoft Research}, number = { {M}{S}{R}-{T}{R}-2017-9} } }","title":"Paper"},{"location":"design/#architecture","text":"Below is high level overview of how different components interact with each other.","title":"Architecture"},{"location":"dev_workflow/","text":"\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b # \u4ee5\u4e0b\u662f\u5982\u4f55\u5728\u4f7f\u7528 AirSim \u65f6\u6267\u884c\u5404\u79cd\u5f00\u53d1\u6d3b\u52a8\u7684\u6307\u5357\u3002\u5982\u679c\u60a8\u662f\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u7684\u65b0\u624b\uff0c\u5e76\u4e14\u60f3\u8981\u4e3a AirSim \u505a\u51fa\u8d21\u732e\u6216\u6839\u636e\u81ea\u5df1\u7684\u5b9a\u5236\u9700\u6c42\u521b\u5efa\u81ea\u5df1\u7684\u5206\u652f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8282\u7701\u60a8\u7684\u4e00\u4e9b\u65f6\u95f4\u3002 Development Environment # \u64cd\u4f5c\u7cfb\u7edf # \u6211\u4eec\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 Windows 10 \u548c Visual Studio 2019 \u4f5c\u4e3a\u60a8\u7684\u5f00\u53d1\u73af\u5883\u3002\u9057\u61be\u7684\u662f\uff0c\u865a\u5e7b\u5f15\u64ce\u5bf9\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u548c IDE \u7684\u652f\u6301\u5e76\u4e0d\u6210\u719f\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u53d8\u901a\u65b9\u6cd5\u5e76\u8df3\u8fc7\u7e41\u7410\u7684\u6b65\u9aa4\uff0c\u53ef\u80fd\u4f1a\u9762\u4e34\u4e25\u91cd\u7684\u751f\u4ea7\u529b\u635f\u5931\u3002 \u786c\u4ef6 # \u6211\u4eec\u63a8\u8350\u4f7f\u7528 NVidia 1080 \u6216 NVidia Titan \u7cfb\u5217\u7b49 GPU\uff0c\u642d\u914d\u6027\u80fd\u5f3a\u5927\u7684\u53f0\u5f0f\u673a\uff0c\u4f8b\u5982\u914d\u5907 64GB RAM\u30016 \u6838\u53ca\u4ee5\u4e0a\u5904\u7406\u5668\u3001SSD \u548c 2-3 \u53f0\u663e\u793a\u5668\uff08\u6700\u597d\u662f 4K \u663e\u793a\u5668\uff09\u7684\u53f0\u5f0f\u673a\u3002\u6211\u4eec\u53d1\u73b0 HP Z840 \u7684\u6027\u80fd\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u9ad8\u7aef\u7b14\u8bb0\u672c\u7535\u8111\u7684\u5f00\u53d1\u4f53\u9a8c\u901a\u5e38\u4e0d\u5982\u6027\u80fd\u5f3a\u5927\u7684\u53f0\u5f0f\u673a\uff0c\u4f46\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u914d\u5907\u72ec\u7acb NVidia GPU\uff08\u81f3\u5c11\u662f M2000 \u6216\u66f4\u9ad8\u7248\u672c\uff09\u300164GB RAM\u3001SSD \u4ee5\u53ca 4K \u663e\u793a\u5668\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\u6211\u4eec\u53d1\u73b0\u8054\u60f3 P50 \u7b49\u578b\u53f7\u7684\u7b14\u8bb0\u672c\u7535\u8111\u80fd\u591f\u5f88\u597d\u5730\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u4ec5\u914d\u5907\u96c6\u6210\u663e\u5361\u7684\u7b14\u8bb0\u672c\u7535\u8111\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002 \u66f4\u65b0\u548c\u66f4\u6539 AirSim \u4ee3\u7801 # \u6982\u8ff0 # AirSim \u88ab\u8bbe\u8ba1\u4e3a\u63d2\u4ef6\u5f62\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u5b83\u65e0\u6cd5\u72ec\u7acb\u8fd0\u884c\uff0c\u9700\u8981\u5c06\u5176\u653e\u5165 Unreal \u9879\u76ee\u4e2d\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u73af\u5883\u201d\uff09\u3002\u56e0\u6b64\uff0c\u6784\u5efa\u548c\u6d4b\u8bd5 AirSim \u5206\u4e3a 2 \u4e2a\u6b65\u9aa4\uff1a(1) \u6784\u5efa\u63d2\u4ef6 (2) \u5728 Unreal \u9879\u76ee\u4e2d\u90e8\u7f72\u63d2\u4ef6\u5e76\u8fd0\u884c\u8be5\u9879\u76ee\u3002 \u7b2c\u4e00\u6b65\u662f\u901a\u8fc7 AirSim \u6839\u76ee\u5f55\u4e0b\u7684 build.cmd \u5b8c\u6210\u7684\u3002\u6b64\u547d\u4ee4\u5c06\u66f4\u65b0 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u63d2\u4ef6\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u8981\u90e8\u7f72\u63d2\u4ef6\uff0c\u60a8\u53ea\u9700\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 Unreal \u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002\u63a5\u4e0b\u6765\uff0c\u60a8\u5e94\u8be5\u5220\u9664 Unreal \u9879\u76ee\u4e2d\u7684\u6240\u6709\u4e2d\u95f4\u6587\u4ef6\uff0c\u7136\u540e\u4e3a Unreal \u9879\u76ee\u91cd\u65b0\u751f\u6210 .sln \u6587\u4ef6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5728 Unreal\\Environments\\Blocks \u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u4fbf\u7684 .bat \u6587\u4ef6\uff1a clean.bat \u548c GenerateProjectFiles.bat \u3002\u56e0\u6b64\uff0c\u53ea\u9700\u4ece Unreal \u9879\u76ee\u7684\u6839\u76ee\u5f55\u6309\u987a\u5e8f\u8fd0\u884c\u8fd9\u4e24\u4e2a bat \u6587\u4ef6\u5373\u53ef\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6253\u5f00\u65b0\u7684 .sln \u6587\u4ef6\u5e76\u6309 F5 \u8fd0\u884c\u5b83\u3002 \u6b65\u9aa4 # \u4ee5\u4e0b\u662f\u6211\u4eec\u5728 AirSim \u4e2d\u8fdb\u884c\u66f4\u6539\u5e76\u6d4b\u8bd5\u7684\u6b65\u9aa4\u3002\u5728 AirSim \u4ee3\u7801\u4e2d\u8fdb\u884c\u5f00\u53d1\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4f7f\u7528 Blocks \u9879\u76ee \u3002\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u9879\u76ee\uff0c\u56e0\u6b64\u7f16\u8bd1\u65f6\u95f4\u76f8\u5bf9\u8f83\u5feb\u3002\u901a\u5e38\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a REM //Use x64 Native Tools Command Prompt for VS 2019 REM //Navigate to AirSim repo folder git pull build.cmd cd Unreal\\Environments\\Blocks update_from_git.bat start Blocks.sln \u4e0a\u8ff0\u547d\u4ee4\u9996\u5148\u6784\u5efa AirSim \u63d2\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u4fbf\u6377\u7684 update_from_git.bat \u5c06\u5176\u90e8\u7f72\u5230 Blocks \u9879\u76ee\u4e2d\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 Visual Studio \u89e3\u51b3\u65b9\u6848\u4e2d\u5de5\u4f5c\uff0c\u4fee\u6539\u4ee3\u7801\uff0c\u7136\u540e\u53ea\u9700\u6309 F5 \u5373\u53ef\u6784\u5efa\u3001\u8fd0\u884c\u5e76\u6d4b\u8bd5\u66f4\u6539\u3002\u8c03\u8bd5\u3001\u65ad\u70b9\u7b49\u529f\u80fd\u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u5b8c\u6210\u4ee3\u7801\u66f4\u6539\u540e\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u66f4\u6539\u63a8\u9001\u56de AirSim \u4ed3\u5e93\u6216\u60a8\u81ea\u5df1\u7684 fork\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5c06\u65b0\u63d2\u4ef6\u90e8\u7f72\u5230\u60a8\u7684\u81ea\u5b9a\u4e49 Unreal \u9879\u76ee\u4e2d\u3002\u4e3a\u6b64\uff0c\u8bf7\u8fd4\u56de\u547d\u4ee4\u63d0\u793a\u7b26\u5e76\u9996\u5148\u66f4\u65b0 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff1a REM //Use x64 Native Tools Command Prompt for VS 2019 REM //run this from Unreal\\Environments\\Blocks update_to_git.bat build.cmd \u4e0a\u8ff0\u547d\u4ee4\u4f1a\u5c06\u60a8\u7684\u4ee3\u7801\u66f4\u6539\u4ece Unreal \u9879\u76ee\u6587\u4ef6\u5939\u8f6c\u79fb\u56de Unreal\\Plugins \u6587\u4ef6\u5939\u3002\u73b0\u5728\uff0c\u60a8\u7684\u66f4\u6539\u5df2\u51c6\u5907\u597d\u63a8\u9001\u5230 AirSim \u4ee3\u7801\u5e93\u6216\u60a8\u81ea\u5df1\u7684\u5206\u652f\u3002\u60a8\u4e5f\u53ef\u4ee5\u5c06 Unreal\\Plugins \u590d\u5236\u5230\u60a8\u7684\u81ea\u5b9a\u4e49 Unreal \u5f15\u64ce\u9879\u76ee\u4e2d\uff0c\u5e76\u68c0\u67e5\u60a8\u7684\u81ea\u5b9a\u4e49\u9879\u76ee\u662f\u5426\u4e00\u5207\u6b63\u5e38\u3002 Take Away # \u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u548c\u63d2\u4ef6\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u4ee5\u53ca\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u4f60\u5e94\u8be5\u5c31\u80fd\u8f7b\u677e\u5730\u9075\u5faa\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u4e86\u3002\u4e0d\u5fc5\u5bb3\u6015\u6253\u5f00 .bat \u6587\u4ef6\u6765\u67e5\u770b\u5b83\u7684\u5185\u90e8\u529f\u80fd\u3002\u8fd9\u4e9b\u6587\u4ef6\u975e\u5e38\u7b80\u6d01\u660e\u4e86\uff08\u5f53\u7136\uff0cbuild.cmd \u9664\u5916\u2014\u2014\u4e0d\u8981\u6df1\u5165\u7814\u7a76\u5b83\uff09\u3002 FAQ # \u6211\u5bf9 Blocks \u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4f46\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002 # \u5f53\u4f60\u5728 Visual Studio \u4e2d\u6309\u4e0b F5 \u6216 F6 \u5f00\u59cb\u6784\u5efa\u65f6\uff0c\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u4f1a\u542f\u52a8\uff0c\u5e76\u5c1d\u8bd5\u67e5\u627e\u662f\u5426\u6709\u4efb\u4f55\u6587\u4ef6\u662f\u810f\u7684\u4ee5\u53ca\u9700\u8981\u6784\u5efa\u54ea\u4e9b\u6587\u4ef6\u3002\u9057\u61be\u7684\u662f\uff0c\u5b83\u7ecf\u5e38\u65e0\u6cd5\u8bc6\u522b\u90a3\u4e9b\u4e0d\u662f\u4f7f\u7528\u865a\u5e7b\u5934\u6587\u4ef6\u548c\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\u7684\u4ee3\u7801\u7684\u810f\u6587\u4ef6\u3002\u6240\u4ee5\uff0c\u8bc0\u7a8d\u662f\u5c06\u67d0\u4e2a\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u59cb\u7ec8\u80fd\u8bc6\u522b\u7684\u6587\u4ef6\u8bbe\u7f6e\u4e3a\u810f\u6587\u4ef6\u3002\u6211\u6700\u559c\u6b22\u7684\u6587\u4ef6\u662f AirSimGameMode.cpp\u3002\u53ea\u9700\u63d2\u5165\u4e00\u884c\uff0c\u5220\u9664\u5b83\u5e76\u4fdd\u5b58\u6587\u4ef6\u5373\u53ef\u3002 \u6211\u5728 Visual Studio \u4e4b\u5916\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4f46\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002 # \u522b\u8fd9\u4e48\u505a\uff01\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf \u5047\u8bbe \u4f60\u6b63\u5728\u4f7f\u7528 Visual Studio\uff0c\u5e76\u4e14\u5b83\u4f1a\u6267\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u6765\u4e0e Visual Studio \u96c6\u6210\u3002\u5982\u679c\u4f60\u575a\u6301\u4f7f\u7528\u5176\u4ed6\u7f16\u8f91\u5668\uff0c\u8bf7\u67e5\u9605\u5982\u4f55\u5728\u865a\u5e7b\u9879\u76ee\u4e2d\u8fdb\u884c\u547d\u4ee4\u884c\u6784\u5efa\uff0c\u6216\u8005\u67e5\u770b\u4f60\u7684\u7f16\u8f91\u5668\u6587\u6863\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u5176\u4e0e\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u96c6\u6210\uff0c\u6216\u8005\u8fd0\u884c clean.bat + GenerateProjectFiles.bat \u4ee5\u786e\u4fdd VS \u89e3\u51b3\u65b9\u6848\u540c\u6b65\u3002 \u6211\u6b63\u5728\u5c1d\u8bd5\u5728\u865a\u5e7b\u9879\u76ee\u4e2d\u6dfb\u52a0\u65b0\u6587\u4ef6\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002 # \u4e0d\u4f1a\uff01\u867d\u7136\u60a8\u786e\u5b9e\u5728\u4f7f\u7528 Visual Studio \u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u5b9e\u9645\u4e0a\u662f\u7531 Unreal Build \u7cfb\u7edf\u751f\u6210\u7684\u3002\u5982\u679c\u60a8\u60f3\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u65b0\u6587\u4ef6\uff0c\u8bf7\u5148\u5173\u95ed Visual Studio\uff0c\u5728\u6240\u9700\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c GenerateProjectFiles.bat \uff0c\u5b83\u5c06\u626b\u63cf\u9879\u76ee\u4e2d\u7684\u6240\u6709\u6587\u4ef6\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa .sln \u6587\u4ef6\u3002\u73b0\u5728\u6253\u5f00\u8fd9\u4e2a\u65b0\u7684 .sln \u6587\u4ef6\uff0c\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002 \u6211\u590d\u5236\u4e86 Unreal\\Plugins \u6587\u4ef6\u5939\uff0c\u4f46\u5728 Unreal \u9879\u76ee\u4e2d\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94\u3002 # \u9996\u5148\u786e\u4fdd\u9879\u76ee\u7684 .uproject \u6587\u4ef6\u5f15\u7528\u4e86\u8be5\u63d2\u4ef6\u3002\u7136\u540e\u786e\u4fdd\u5df2\u6309\u7167\u4e0a\u6587\u6982\u8ff0\u4e2d\u6240\u8ff0\u8fd0\u884c clean.bat \u548c GenerateProjectFiles.bat \u3002 \u6211\u6709\u591a\u4e2a\u4f7f\u7528 AirSim \u63d2\u4ef6\u7684 Unreal \u9879\u76ee\u3002\u5982\u4f55\u8f7b\u677e\u66f4\u65b0\u5b83\u4eec\uff1f # \u4f60\u771f\u8d70\u8fd0\uff01\u6211\u4eec\u6709\u4e2a build_all_ue_projects.bat \u6587\u4ef6\uff0c\u5b83\u6b63\u597d\u80fd\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u522b\u628a\u5b83\u5f53\u6210\u9ed1\u76d2\u5b50\uff08\u81f3\u5c11\u73b0\u5728\u8fd8\u522b\uff09\uff0c\u6253\u5f00\u5b83\u770b\u770b\u5b83\u80fd\u505a\u4ec0\u4e48\u3002\u5b83\u6709 4 \u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u8bbe\u7f6e\u3002\u5982\u679c\u672a\u63d0\u4f9b\u8fd9\u4e9b\u53c2\u6570\uff0c\u5b83\u4eec\u5c06\u5728\u4e0b\u4e00\u7ec4\u8bed\u53e5\u4e2d\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002\u4f60\u53ef\u80fd\u9700\u8981\u66f4\u6539\u8def\u5f84\u7684\u9ed8\u8ba4\u503c\u3002\u8fd9\u4e2a\u6279\u5904\u7406\u6587\u4ef6\u4f1a\u6784\u5efa AirSim \u63d2\u4ef6\uff0c\u5c06\u5176\u90e8\u7f72\u5230\u6240\u6709\u5217\u51fa\u7684\u9879\u76ee\uff08\u8bf7\u53c2\u9605\u6279\u5904\u7406\u6587\u4ef6\u540e\u9762\u7684 CALL \u8bed\u53e5\uff09\uff0c\u4e3a\u8fd9\u4e9b\u9879\u76ee\u8fd0\u884c\u6253\u5305\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5165\u6307\u5b9a\u6587\u4ef6\u5939\u2014\u2014\u6240\u6709\u64cd\u4f5c\u53ea\u9700\u4e00\u6b65\uff01\u8fd9\u5c31\u662f\u6211\u4eec\u7528\u6765\u521b\u5efa\u81ea\u5df1\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u7684\u5de5\u5177\u3002 \u6211\u5982\u4f55\u56de\u9988 AirSim\uff1f # \u5728\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u521b\u5efa\u529f\u80fd\u5206\u652f\u3002\u5728 Blocks \u73af\u5883\u4e2d\u6d4b\u8bd5\u4ee3\u7801\u66f4\u6539\u540e\uff0c\u8bf7\u6309\u7167 \u5e38\u89c4\u6b65\u9aa4 \u8fdb\u884c\u8d21\u732e\uff0c\u5c31\u50cf\u5176\u4ed6 GitHub \u9879\u76ee\u4e00\u6837\u3002\u8bf7\u4f7f\u7528 rebase \u548c squash \u5408\u5e76\uff0c\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605 Git \u5408\u5e76\u548c rebase \u7b80\u4ecb\uff1a\u5b83\u4eec\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec \u3002","title":"\u5f00\u53d1\u5de5\u4f5c\u6d41"},{"location":"dev_workflow/#_1","text":"\u4ee5\u4e0b\u662f\u5982\u4f55\u5728\u4f7f\u7528 AirSim \u65f6\u6267\u884c\u5404\u79cd\u5f00\u53d1\u6d3b\u52a8\u7684\u6307\u5357\u3002\u5982\u679c\u60a8\u662f\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u7684\u65b0\u624b\uff0c\u5e76\u4e14\u60f3\u8981\u4e3a AirSim \u505a\u51fa\u8d21\u732e\u6216\u6839\u636e\u81ea\u5df1\u7684\u5b9a\u5236\u9700\u6c42\u521b\u5efa\u81ea\u5df1\u7684\u5206\u652f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8282\u7701\u60a8\u7684\u4e00\u4e9b\u65f6\u95f4\u3002","title":"\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b"},{"location":"dev_workflow/#development-environment","text":"","title":"Development Environment"},{"location":"dev_workflow/#_2","text":"\u6211\u4eec\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 Windows 10 \u548c Visual Studio 2019 \u4f5c\u4e3a\u60a8\u7684\u5f00\u53d1\u73af\u5883\u3002\u9057\u61be\u7684\u662f\uff0c\u865a\u5e7b\u5f15\u64ce\u5bf9\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u548c IDE \u7684\u652f\u6301\u5e76\u4e0d\u6210\u719f\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u53d8\u901a\u65b9\u6cd5\u5e76\u8df3\u8fc7\u7e41\u7410\u7684\u6b65\u9aa4\uff0c\u53ef\u80fd\u4f1a\u9762\u4e34\u4e25\u91cd\u7684\u751f\u4ea7\u529b\u635f\u5931\u3002","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"dev_workflow/#_3","text":"\u6211\u4eec\u63a8\u8350\u4f7f\u7528 NVidia 1080 \u6216 NVidia Titan \u7cfb\u5217\u7b49 GPU\uff0c\u642d\u914d\u6027\u80fd\u5f3a\u5927\u7684\u53f0\u5f0f\u673a\uff0c\u4f8b\u5982\u914d\u5907 64GB RAM\u30016 \u6838\u53ca\u4ee5\u4e0a\u5904\u7406\u5668\u3001SSD \u548c 2-3 \u53f0\u663e\u793a\u5668\uff08\u6700\u597d\u662f 4K \u663e\u793a\u5668\uff09\u7684\u53f0\u5f0f\u673a\u3002\u6211\u4eec\u53d1\u73b0 HP Z840 \u7684\u6027\u80fd\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u9ad8\u7aef\u7b14\u8bb0\u672c\u7535\u8111\u7684\u5f00\u53d1\u4f53\u9a8c\u901a\u5e38\u4e0d\u5982\u6027\u80fd\u5f3a\u5927\u7684\u53f0\u5f0f\u673a\uff0c\u4f46\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u914d\u5907\u72ec\u7acb NVidia GPU\uff08\u81f3\u5c11\u662f M2000 \u6216\u66f4\u9ad8\u7248\u672c\uff09\u300164GB RAM\u3001SSD \u4ee5\u53ca 4K \u663e\u793a\u5668\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\u6211\u4eec\u53d1\u73b0\u8054\u60f3 P50 \u7b49\u578b\u53f7\u7684\u7b14\u8bb0\u672c\u7535\u8111\u80fd\u591f\u5f88\u597d\u5730\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u4ec5\u914d\u5907\u96c6\u6210\u663e\u5361\u7684\u7b14\u8bb0\u672c\u7535\u8111\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002","title":"\u786c\u4ef6"},{"location":"dev_workflow/#airsim","text":"","title":"\u66f4\u65b0\u548c\u66f4\u6539 AirSim \u4ee3\u7801"},{"location":"dev_workflow/#_4","text":"AirSim \u88ab\u8bbe\u8ba1\u4e3a\u63d2\u4ef6\u5f62\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u5b83\u65e0\u6cd5\u72ec\u7acb\u8fd0\u884c\uff0c\u9700\u8981\u5c06\u5176\u653e\u5165 Unreal \u9879\u76ee\u4e2d\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u73af\u5883\u201d\uff09\u3002\u56e0\u6b64\uff0c\u6784\u5efa\u548c\u6d4b\u8bd5 AirSim \u5206\u4e3a 2 \u4e2a\u6b65\u9aa4\uff1a(1) \u6784\u5efa\u63d2\u4ef6 (2) \u5728 Unreal \u9879\u76ee\u4e2d\u90e8\u7f72\u63d2\u4ef6\u5e76\u8fd0\u884c\u8be5\u9879\u76ee\u3002 \u7b2c\u4e00\u6b65\u662f\u901a\u8fc7 AirSim \u6839\u76ee\u5f55\u4e0b\u7684 build.cmd \u5b8c\u6210\u7684\u3002\u6b64\u547d\u4ee4\u5c06\u66f4\u65b0 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u63d2\u4ef6\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u8981\u90e8\u7f72\u63d2\u4ef6\uff0c\u60a8\u53ea\u9700\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 Unreal \u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002\u63a5\u4e0b\u6765\uff0c\u60a8\u5e94\u8be5\u5220\u9664 Unreal \u9879\u76ee\u4e2d\u7684\u6240\u6709\u4e2d\u95f4\u6587\u4ef6\uff0c\u7136\u540e\u4e3a Unreal \u9879\u76ee\u91cd\u65b0\u751f\u6210 .sln \u6587\u4ef6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5728 Unreal\\Environments\\Blocks \u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u4fbf\u7684 .bat \u6587\u4ef6\uff1a clean.bat \u548c GenerateProjectFiles.bat \u3002\u56e0\u6b64\uff0c\u53ea\u9700\u4ece Unreal \u9879\u76ee\u7684\u6839\u76ee\u5f55\u6309\u987a\u5e8f\u8fd0\u884c\u8fd9\u4e24\u4e2a bat \u6587\u4ef6\u5373\u53ef\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 Visual Studio \u4e2d\u6253\u5f00\u65b0\u7684 .sln \u6587\u4ef6\u5e76\u6309 F5 \u8fd0\u884c\u5b83\u3002","title":"\u6982\u8ff0"},{"location":"dev_workflow/#_5","text":"\u4ee5\u4e0b\u662f\u6211\u4eec\u5728 AirSim \u4e2d\u8fdb\u884c\u66f4\u6539\u5e76\u6d4b\u8bd5\u7684\u6b65\u9aa4\u3002\u5728 AirSim \u4ee3\u7801\u4e2d\u8fdb\u884c\u5f00\u53d1\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4f7f\u7528 Blocks \u9879\u76ee \u3002\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u9879\u76ee\uff0c\u56e0\u6b64\u7f16\u8bd1\u65f6\u95f4\u76f8\u5bf9\u8f83\u5feb\u3002\u901a\u5e38\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a REM //Use x64 Native Tools Command Prompt for VS 2019 REM //Navigate to AirSim repo folder git pull build.cmd cd Unreal\\Environments\\Blocks update_from_git.bat start Blocks.sln \u4e0a\u8ff0\u547d\u4ee4\u9996\u5148\u6784\u5efa AirSim \u63d2\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u4fbf\u6377\u7684 update_from_git.bat \u5c06\u5176\u90e8\u7f72\u5230 Blocks \u9879\u76ee\u4e2d\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 Visual Studio \u89e3\u51b3\u65b9\u6848\u4e2d\u5de5\u4f5c\uff0c\u4fee\u6539\u4ee3\u7801\uff0c\u7136\u540e\u53ea\u9700\u6309 F5 \u5373\u53ef\u6784\u5efa\u3001\u8fd0\u884c\u5e76\u6d4b\u8bd5\u66f4\u6539\u3002\u8c03\u8bd5\u3001\u65ad\u70b9\u7b49\u529f\u80fd\u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u5b8c\u6210\u4ee3\u7801\u66f4\u6539\u540e\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u66f4\u6539\u63a8\u9001\u56de AirSim \u4ed3\u5e93\u6216\u60a8\u81ea\u5df1\u7684 fork\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5c06\u65b0\u63d2\u4ef6\u90e8\u7f72\u5230\u60a8\u7684\u81ea\u5b9a\u4e49 Unreal \u9879\u76ee\u4e2d\u3002\u4e3a\u6b64\uff0c\u8bf7\u8fd4\u56de\u547d\u4ee4\u63d0\u793a\u7b26\u5e76\u9996\u5148\u66f4\u65b0 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff1a REM //Use x64 Native Tools Command Prompt for VS 2019 REM //run this from Unreal\\Environments\\Blocks update_to_git.bat build.cmd \u4e0a\u8ff0\u547d\u4ee4\u4f1a\u5c06\u60a8\u7684\u4ee3\u7801\u66f4\u6539\u4ece Unreal \u9879\u76ee\u6587\u4ef6\u5939\u8f6c\u79fb\u56de Unreal\\Plugins \u6587\u4ef6\u5939\u3002\u73b0\u5728\uff0c\u60a8\u7684\u66f4\u6539\u5df2\u51c6\u5907\u597d\u63a8\u9001\u5230 AirSim \u4ee3\u7801\u5e93\u6216\u60a8\u81ea\u5df1\u7684\u5206\u652f\u3002\u60a8\u4e5f\u53ef\u4ee5\u5c06 Unreal\\Plugins \u590d\u5236\u5230\u60a8\u7684\u81ea\u5b9a\u4e49 Unreal \u5f15\u64ce\u9879\u76ee\u4e2d\uff0c\u5e76\u68c0\u67e5\u60a8\u7684\u81ea\u5b9a\u4e49\u9879\u76ee\u662f\u5426\u4e00\u5207\u6b63\u5e38\u3002","title":"\u6b65\u9aa4"},{"location":"dev_workflow/#take-away","text":"\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u548c\u63d2\u4ef6\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u4ee5\u53ca\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u4f60\u5e94\u8be5\u5c31\u80fd\u8f7b\u677e\u5730\u9075\u5faa\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u4e86\u3002\u4e0d\u5fc5\u5bb3\u6015\u6253\u5f00 .bat \u6587\u4ef6\u6765\u67e5\u770b\u5b83\u7684\u5185\u90e8\u529f\u80fd\u3002\u8fd9\u4e9b\u6587\u4ef6\u975e\u5e38\u7b80\u6d01\u660e\u4e86\uff08\u5f53\u7136\uff0cbuild.cmd \u9664\u5916\u2014\u2014\u4e0d\u8981\u6df1\u5165\u7814\u7a76\u5b83\uff09\u3002","title":"Take Away"},{"location":"dev_workflow/#faq","text":"","title":"FAQ"},{"location":"dev_workflow/#blocks","text":"\u5f53\u4f60\u5728 Visual Studio \u4e2d\u6309\u4e0b F5 \u6216 F6 \u5f00\u59cb\u6784\u5efa\u65f6\uff0c\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u4f1a\u542f\u52a8\uff0c\u5e76\u5c1d\u8bd5\u67e5\u627e\u662f\u5426\u6709\u4efb\u4f55\u6587\u4ef6\u662f\u810f\u7684\u4ee5\u53ca\u9700\u8981\u6784\u5efa\u54ea\u4e9b\u6587\u4ef6\u3002\u9057\u61be\u7684\u662f\uff0c\u5b83\u7ecf\u5e38\u65e0\u6cd5\u8bc6\u522b\u90a3\u4e9b\u4e0d\u662f\u4f7f\u7528\u865a\u5e7b\u5934\u6587\u4ef6\u548c\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\u7684\u4ee3\u7801\u7684\u810f\u6587\u4ef6\u3002\u6240\u4ee5\uff0c\u8bc0\u7a8d\u662f\u5c06\u67d0\u4e2a\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u59cb\u7ec8\u80fd\u8bc6\u522b\u7684\u6587\u4ef6\u8bbe\u7f6e\u4e3a\u810f\u6587\u4ef6\u3002\u6211\u6700\u559c\u6b22\u7684\u6587\u4ef6\u662f AirSimGameMode.cpp\u3002\u53ea\u9700\u63d2\u5165\u4e00\u884c\uff0c\u5220\u9664\u5b83\u5e76\u4fdd\u5b58\u6587\u4ef6\u5373\u53ef\u3002","title":"\u6211\u5bf9 Blocks \u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4f46\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002"},{"location":"dev_workflow/#visual-studio","text":"\u522b\u8fd9\u4e48\u505a\uff01\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf \u5047\u8bbe \u4f60\u6b63\u5728\u4f7f\u7528 Visual Studio\uff0c\u5e76\u4e14\u5b83\u4f1a\u6267\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u6765\u4e0e Visual Studio \u96c6\u6210\u3002\u5982\u679c\u4f60\u575a\u6301\u4f7f\u7528\u5176\u4ed6\u7f16\u8f91\u5668\uff0c\u8bf7\u67e5\u9605\u5982\u4f55\u5728\u865a\u5e7b\u9879\u76ee\u4e2d\u8fdb\u884c\u547d\u4ee4\u884c\u6784\u5efa\uff0c\u6216\u8005\u67e5\u770b\u4f60\u7684\u7f16\u8f91\u5668\u6587\u6863\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u5176\u4e0e\u865a\u5e7b\u6784\u5efa\u7cfb\u7edf\u96c6\u6210\uff0c\u6216\u8005\u8fd0\u884c clean.bat + GenerateProjectFiles.bat \u4ee5\u786e\u4fdd VS \u89e3\u51b3\u65b9\u6848\u540c\u6b65\u3002","title":"\u6211\u5728 Visual Studio \u4e4b\u5916\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4f46\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002"},{"location":"dev_workflow/#_6","text":"\u4e0d\u4f1a\uff01\u867d\u7136\u60a8\u786e\u5b9e\u5728\u4f7f\u7528 Visual Studio \u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u5b9e\u9645\u4e0a\u662f\u7531 Unreal Build \u7cfb\u7edf\u751f\u6210\u7684\u3002\u5982\u679c\u60a8\u60f3\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u65b0\u6587\u4ef6\uff0c\u8bf7\u5148\u5173\u95ed Visual Studio\uff0c\u5728\u6240\u9700\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c GenerateProjectFiles.bat \uff0c\u5b83\u5c06\u626b\u63cf\u9879\u76ee\u4e2d\u7684\u6240\u6709\u6587\u4ef6\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa .sln \u6587\u4ef6\u3002\u73b0\u5728\u6253\u5f00\u8fd9\u4e2a\u65b0\u7684 .sln \u6587\u4ef6\uff0c\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002","title":"\u6211\u6b63\u5728\u5c1d\u8bd5\u5728\u865a\u5e7b\u9879\u76ee\u4e2d\u6dfb\u52a0\u65b0\u6587\u4ef6\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002"},{"location":"dev_workflow/#unrealplugins-unreal","text":"\u9996\u5148\u786e\u4fdd\u9879\u76ee\u7684 .uproject \u6587\u4ef6\u5f15\u7528\u4e86\u8be5\u63d2\u4ef6\u3002\u7136\u540e\u786e\u4fdd\u5df2\u6309\u7167\u4e0a\u6587\u6982\u8ff0\u4e2d\u6240\u8ff0\u8fd0\u884c clean.bat \u548c GenerateProjectFiles.bat \u3002","title":"\u6211\u590d\u5236\u4e86 Unreal\\Plugins \u6587\u4ef6\u5939\uff0c\u4f46\u5728 Unreal \u9879\u76ee\u4e2d\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94\u3002"},{"location":"dev_workflow/#airsim-unreal","text":"\u4f60\u771f\u8d70\u8fd0\uff01\u6211\u4eec\u6709\u4e2a build_all_ue_projects.bat \u6587\u4ef6\uff0c\u5b83\u6b63\u597d\u80fd\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u522b\u628a\u5b83\u5f53\u6210\u9ed1\u76d2\u5b50\uff08\u81f3\u5c11\u73b0\u5728\u8fd8\u522b\uff09\uff0c\u6253\u5f00\u5b83\u770b\u770b\u5b83\u80fd\u505a\u4ec0\u4e48\u3002\u5b83\u6709 4 \u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u8bbe\u7f6e\u3002\u5982\u679c\u672a\u63d0\u4f9b\u8fd9\u4e9b\u53c2\u6570\uff0c\u5b83\u4eec\u5c06\u5728\u4e0b\u4e00\u7ec4\u8bed\u53e5\u4e2d\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002\u4f60\u53ef\u80fd\u9700\u8981\u66f4\u6539\u8def\u5f84\u7684\u9ed8\u8ba4\u503c\u3002\u8fd9\u4e2a\u6279\u5904\u7406\u6587\u4ef6\u4f1a\u6784\u5efa AirSim \u63d2\u4ef6\uff0c\u5c06\u5176\u90e8\u7f72\u5230\u6240\u6709\u5217\u51fa\u7684\u9879\u76ee\uff08\u8bf7\u53c2\u9605\u6279\u5904\u7406\u6587\u4ef6\u540e\u9762\u7684 CALL \u8bed\u53e5\uff09\uff0c\u4e3a\u8fd9\u4e9b\u9879\u76ee\u8fd0\u884c\u6253\u5305\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5165\u6307\u5b9a\u6587\u4ef6\u5939\u2014\u2014\u6240\u6709\u64cd\u4f5c\u53ea\u9700\u4e00\u6b65\uff01\u8fd9\u5c31\u662f\u6211\u4eec\u7528\u6765\u521b\u5efa\u81ea\u5df1\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u7684\u5de5\u5177\u3002","title":"\u6211\u6709\u591a\u4e2a\u4f7f\u7528 AirSim \u63d2\u4ef6\u7684 Unreal \u9879\u76ee\u3002\u5982\u4f55\u8f7b\u677e\u66f4\u65b0\u5b83\u4eec\uff1f"},{"location":"dev_workflow/#airsim_1","text":"\u5728\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u521b\u5efa\u529f\u80fd\u5206\u652f\u3002\u5728 Blocks \u73af\u5883\u4e2d\u6d4b\u8bd5\u4ee3\u7801\u66f4\u6539\u540e\uff0c\u8bf7\u6309\u7167 \u5e38\u89c4\u6b65\u9aa4 \u8fdb\u884c\u8d21\u732e\uff0c\u5c31\u50cf\u5176\u4ed6 GitHub \u9879\u76ee\u4e00\u6837\u3002\u8bf7\u4f7f\u7528 rebase \u548c squash \u5408\u5e76\uff0c\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605 Git \u5408\u5e76\u548c rebase \u7b80\u4ecb\uff1a\u5b83\u4eec\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec \u3002","title":"\u6211\u5982\u4f55\u56de\u9988 AirSim\uff1f"},{"location":"distance_sensor/","text":"Distance Sensor # By default, Distance Sensor points to the front of the vehicle. It can be pointed in any direction by modifying the settings Configurable Parameters - Parameter Description X Y Z Position of the sensor relative to the vehicle (in NED, in meters) (Default (0,0,0)-Multirotor, (0,0,-1)-Car) Yaw Pitch Roll Orientation of the sensor relative to the vehicle (degrees) (Default (0,0,0)) MinDistance Minimum distance measured by distance sensor (metres, only used to fill Mavlink message for PX4) (Default 0.2m) MaxDistance Maximum distance measured by distance sensor (metres) (Default 40.0m) ExternalController Whether data is to be sent to external controller such as ArduPilot or PX4 if being used (default true ) For example, to make the sensor point towards the ground (for altitude measurement similar to barometer), the orientation can be modified as follows - \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , \"Yaw\" : 0 , \"Pitch\" : -90 , \"Roll\" : 0 } Note: For Cars, the sensor is placed 1 meter above the vehicle center by default. This is required since otherwise the sensor gives strange data due it being inside the vehicle. This doesn't affect the sensor values say when measuring the distance between 2 cars. See PythonClient/car/distance_sensor_multi.py for an example usage.","title":"\u8ddd\u79bb\u4f20\u611f\u5668"},{"location":"distance_sensor/#distance-sensor","text":"By default, Distance Sensor points to the front of the vehicle. It can be pointed in any direction by modifying the settings Configurable Parameters - Parameter Description X Y Z Position of the sensor relative to the vehicle (in NED, in meters) (Default (0,0,0)-Multirotor, (0,0,-1)-Car) Yaw Pitch Roll Orientation of the sensor relative to the vehicle (degrees) (Default (0,0,0)) MinDistance Minimum distance measured by distance sensor (metres, only used to fill Mavlink message for PX4) (Default 0.2m) MaxDistance Maximum distance measured by distance sensor (metres) (Default 40.0m) ExternalController Whether data is to be sent to external controller such as ArduPilot or PX4 if being used (default true ) For example, to make the sensor point towards the ground (for altitude measurement similar to barometer), the orientation can be modified as follows - \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , \"Yaw\" : 0 , \"Pitch\" : -90 , \"Roll\" : 0 } Note: For Cars, the sensor is placed 1 meter above the vehicle center by default. This is required since otherwise the sensor gives strange data due it being inside the vehicle. This doesn't affect the sensor values say when measuring the distance between 2 cars. See PythonClient/car/distance_sensor_multi.py for an example usage.","title":"Distance Sensor"},{"location":"docker_ubuntu/","text":"Linux \u4e2d Docker \u4e0a\u7684 AirSim # \u6211\u4eec\u6709 2 \u79cd Docker \u9009\u9879\u3002\u60a8\u53ef\u4ee5\u6784\u5efa\u955c\u50cf\u6765\u8fd0\u884c AirSim Linux \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5 \u4ece\u6e90\u4ee3\u7801 \u7f16\u8bd1\u865a\u5e7b\u5f15\u64ce + AirSim\u3002 \u4e8c\u8fdb\u5236\u6587\u4ef6 # \u8981\u6c42\uff1a # \u5b89\u88c5 nvidia-docker2 \u6784\u5efa docker \u955c\u50cf # \u4ee5\u4e0b\u662f\u9ed8\u8ba4\u53c2\u6570\u3002 --base_image : \u8fd9\u662f\u6211\u4eec\u5c06\u5b89\u88c5 airsim \u7684\u955c\u50cf\u3002\u6211\u4eec\u5df2\u7ecf\u5728 Ubuntu 18.04 \u548c CUDA 10.0 \u4e0a\u6d4b\u8bd5\u8fc7\u3002\u60a8\u53ef\u4ee5\u81ea\u884c\u627f\u62c5\u98ce\u9669\uff0c\u6307\u5b9a\u4efb\u4f55 NVIDIA cudagl \u7248\u672c\u3002 --target_image \u662f\u4f60\u7684 Docker \u955c\u50cf\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u4e3a airsim_binary \uff0c\u6807\u7b7e\u4e0e\u57fa\u7840\u955c\u50cf\u76f8\u540c\u3002 $ cd Airsim/docker ; $ python build_airsim_image.py \\ --base_image = nvidia/cudagl:10.0-devel-ubuntu18.04 \\ --target_image = airsim_binary:10.0-devel-ubuntu18.04 \u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u9a8c\u8bc1\u60a8\u662f\u5426\u6709\u955c\u50cf\uff1a $ docker images | grep airsim \u5728 Docker \u5bb9\u5668\u5185\u8fd0\u884c\u865a\u5e7b\u4e8c\u8fdb\u5236\u6587\u4ef6 # \u83b7\u53d6 Linux \u4e8c\u8fdb\u5236\u6587\u4ef6 \u6216\u5728 Ubuntu \u4e2d\u6253\u5305\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u3002\u6211\u4eec\u4ee5 Blocks \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e3a\u4f8b\u3002\u4f60\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u5b83\uff1a $ cd Airsim/docker ; $ ./download_blocks_env_binary.sh \u4fee\u6539\u5b83\u4ee5\u83b7\u53d6\u6240\u9700\u7684\u7279\u5b9a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u5728 Docker \u5bb9\u5668\u5185\u8fd0\u884c\u865a\u5e7b\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8bed\u6cd5\u5982\u4e0b\uff1a $ ./run_airsim_image_binary.sh DOCKER_IMAGE_NAME UNREAL_BINARY_SHELL_SCRIPT UNREAL_BINARY_ARGUMENTS -- headless \u5bf9\u4e8e Blocks\uff0c\u60a8\u53ef\u4ee5\u6267\u884c $ ./run_airsim_image_binary.sh airsim_binary:10.0-devel-ubuntu18.04 Blocks/Blocks.sh -windowed -ResX=1080 -ResY=720 DOCKER_IMAGE_NAME : \u4e0e\u4e0a\u4e00\u6b65 target_image \u53c2\u6570\u76f8\u540c\uff0c\u9ed8\u8ba4\u8f93\u5165 airsim_binary:10.0-devel-ubuntu18.04 UNREAL_BINARY_SHELL_SCRIPT : \u5bf9\u4e8e Blocks \u73af\u5883\uff0c\u5b83\u5c06\u662f Blocks/Blocks.sh UNREAL_BINARY_ARGUMENTS : \u5bf9\u4e8e airsim \u6765\u8bf4\uff0c\u6700\u76f8\u5173\u7684\u9009\u9879\u662f -windowed , -ResX , -ResY \u3002\u70b9\u51fb\u94fe\u63a5\u67e5\u770b\u6240\u6709\u9009\u9879\u3002 \u65e0\u5934\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff1a\u6700\u540e\u7684\u540e\u7f00\u4e3a -- headless \uff1a $ ./run_airsim_image_binary.sh Blocks/Blocks.sh -- headless \u6307\u5b9a settings.json Source # Requirements: # Install nvidia-docker2 Install ue4-docker Build Unreal Engine inside docker: # To get access to Unreal Engine's source code, register on Epic Games' website and link it to your github account, as explained in the Required Steps section here . Note that you don't need to do Step 2: Downloading UE4 on Linux ! Build unreal engine 4.19.2 docker image. We're going to use CUDA 10.0 in our example. $ ue4-docker build 4.19.2 --cuda=10.0 --no-full [optional] $ ue4-docker clean to free up some space. Details here ue4-docker supports all CUDA version listed on NVIDIA's cudagl dockerhub here . Please see this page for advanced configurations using ue4-docker Disk space: The unreal images and containers can take up a lot of space, especially if you try more than one version. Here's a list of useful links to monitor space used by docker and clean up intermediate builds: Large container images primer docker system df docker container prune docker image prune docker system prune Building AirSim inside UE4 docker container: # Build AirSim docker image (which lays over the unreal image we just built) Below are the default arguments. --base_image : This is image over which we'll install airsim. We've tested on adamrehn/ue4-engine:4.19.2-cudagl10.0 . See ue4-docker for other versions. --target_image is the desired name of your docker image. Defaults to airsim_source with same tag as the base image $ cd Airsim/docker ; $ python build_airsim_image.py \\ --source \\ ----base_image adamrehn/ue4-engine:4.19.2-cudagl10.0 \\ --target_image = airsim_source:4.19.2-cudagl10.0 Running AirSim container # Run the airsim source image we built by: ./run_airsim_image_source.sh airsim_source:4.19.2-cudagl10.0 Syntax is ./run_airsim_image_source.sh DOCKER_IMAGE_NAME -- headless -- headless : suffix this to run in optional headless mode. Inside the container, you can see UnrealEngine and AirSim under /home/ue4 . Start unreal engine inside the container: ue4@HOSTMACHINE:~$ /home/ue4/UnrealEngine/Engine/Binaries/Linux/UE4Editor Specifying an airsim settings.json Continue with AirSim's Linux docs . [Misc] Packaging Unreal Environments in airsim_source containers # Let's take the Blocks environment as an example. In the following script, specify the full path to your unreal uproject file by project and the directory where you want the binaries to be placed by archivedirectory $ /home/ue4/UnrealEngine/Engine/Build/BatchFiles/RunUAT.sh BuildCookRun -platform = Linux -clientconfig = Shipping -serverconfig = Shipping -noP4 -cook -allmaps -build -stage -prereqs -pak -archive \\ -archivedirectory = /home/ue4/Binaries/Blocks/ \\ -project = /home/ue4/AirSim/Unreal/Environments/Blocks/Blocks.uproject This would create a Blocks binary in /home/ue4/Binaries/Blocks/ . You can test it by running /home/ue4/Binaries/Blocks/LinuxNoEditor/Blocks.sh -windowed Specifying settings.json # airsim_binary docker image: # We're mapping the host machine's PATH/TO/Airsim/docker/settings.json to the docker container's /home/airsim_user/Documents/AirSim/settings.json . Hence, we can load any settings file by simply modifying PATH_TO_YOUR/settings.json by modifying the following snippets in run_airsim_image_binary.sh nvidia-docker run --runtime = nvidia -it \\ -v $PATH_TO_YOUR /settings.json:/home/airsim_user/Documents/AirSim/settings.json \\ -v $UNREAL_BINARY_PATH : $UNREAL_BINARY_PATH \\ -e SDL_VIDEODRIVER = $SDL_VIDEODRIVER_VALUE \\ -e SDL_HINT_CUDA_DEVICE = '0' \\ --net = host \\ --env = \"DISPLAY= $DISPLAY \" \\ --env = \"QT_X11_NO_MITSHM=1\" \\ --volume = \"/tmp/.X11-unix:/tmp/.X11-unix:rw\" \\ -env = \"XAUTHORITY= $XAUTH \" \\ --volume = \" $XAUTH : $XAUTH \" \\ --rm \\ $DOCKER_IMAGE_NAME \\ /bin/bash -c \" $UNREAL_BINARY_COMMAND \" Note: Docker version >=19.03 (check using docker -v ), natively supports Nvidia GPUs, so run using --gpus all flag as given - docker run --gpus all -it \\ ... airsim_source docker image: # We're mapping the host machine's PATH/TO/Airsim/docker/settings.json to the docker container's /home/airsim_user/Documents/AirSim/settings.json . Hence, we can load any settings file by simply modifying PATH_TO_YOUR/settings.json by modifying the following snippets in run_airsim_image_source.sh : nvidia-docker run --runtime = nvidia -it \\ -v $( pwd ) /settings.json:/home/airsim_user/Documents/AirSim/settings.json \\ -e SDL_VIDEODRIVER = $SDL_VIDEODRIVER_VALUE \\ -e SDL_HINT_CUDA_DEVICE = '0' \\ --net = host \\ --env = \"DISPLAY= $DISPLAY \" \\ --env = \"QT_X11_NO_MITSHM=1\" \\ --volume = \"/tmp/.X11-unix:/tmp/.X11-unix:rw\" \\ -env = \"XAUTHORITY= $XAUTH \" \\ --volume = \" $XAUTH : $XAUTH \" \\ --rm \\ $DOCKER_IMAGE_NAME","title":"Linux \u4e0a\u7684 Docker"},{"location":"docker_ubuntu/#linux-docker-airsim","text":"\u6211\u4eec\u6709 2 \u79cd Docker \u9009\u9879\u3002\u60a8\u53ef\u4ee5\u6784\u5efa\u955c\u50cf\u6765\u8fd0\u884c AirSim Linux \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5 \u4ece\u6e90\u4ee3\u7801 \u7f16\u8bd1\u865a\u5e7b\u5f15\u64ce + AirSim\u3002","title":"Linux \u4e2d Docker \u4e0a\u7684 AirSim"},{"location":"docker_ubuntu/#_1","text":"","title":"\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"docker_ubuntu/#_2","text":"\u5b89\u88c5 nvidia-docker2","title":"\u8981\u6c42\uff1a"},{"location":"docker_ubuntu/#docker","text":"\u4ee5\u4e0b\u662f\u9ed8\u8ba4\u53c2\u6570\u3002 --base_image : \u8fd9\u662f\u6211\u4eec\u5c06\u5b89\u88c5 airsim \u7684\u955c\u50cf\u3002\u6211\u4eec\u5df2\u7ecf\u5728 Ubuntu 18.04 \u548c CUDA 10.0 \u4e0a\u6d4b\u8bd5\u8fc7\u3002\u60a8\u53ef\u4ee5\u81ea\u884c\u627f\u62c5\u98ce\u9669\uff0c\u6307\u5b9a\u4efb\u4f55 NVIDIA cudagl \u7248\u672c\u3002 --target_image \u662f\u4f60\u7684 Docker \u955c\u50cf\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u4e3a airsim_binary \uff0c\u6807\u7b7e\u4e0e\u57fa\u7840\u955c\u50cf\u76f8\u540c\u3002 $ cd Airsim/docker ; $ python build_airsim_image.py \\ --base_image = nvidia/cudagl:10.0-devel-ubuntu18.04 \\ --target_image = airsim_binary:10.0-devel-ubuntu18.04 \u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u9a8c\u8bc1\u60a8\u662f\u5426\u6709\u955c\u50cf\uff1a $ docker images | grep airsim","title":"\u6784\u5efa docker \u955c\u50cf"},{"location":"docker_ubuntu/#docker_1","text":"\u83b7\u53d6 Linux \u4e8c\u8fdb\u5236\u6587\u4ef6 \u6216\u5728 Ubuntu \u4e2d\u6253\u5305\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u3002\u6211\u4eec\u4ee5 Blocks \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e3a\u4f8b\u3002\u4f60\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u5b83\uff1a $ cd Airsim/docker ; $ ./download_blocks_env_binary.sh \u4fee\u6539\u5b83\u4ee5\u83b7\u53d6\u6240\u9700\u7684\u7279\u5b9a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u5728 Docker \u5bb9\u5668\u5185\u8fd0\u884c\u865a\u5e7b\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8bed\u6cd5\u5982\u4e0b\uff1a $ ./run_airsim_image_binary.sh DOCKER_IMAGE_NAME UNREAL_BINARY_SHELL_SCRIPT UNREAL_BINARY_ARGUMENTS -- headless \u5bf9\u4e8e Blocks\uff0c\u60a8\u53ef\u4ee5\u6267\u884c $ ./run_airsim_image_binary.sh airsim_binary:10.0-devel-ubuntu18.04 Blocks/Blocks.sh -windowed -ResX=1080 -ResY=720 DOCKER_IMAGE_NAME : \u4e0e\u4e0a\u4e00\u6b65 target_image \u53c2\u6570\u76f8\u540c\uff0c\u9ed8\u8ba4\u8f93\u5165 airsim_binary:10.0-devel-ubuntu18.04 UNREAL_BINARY_SHELL_SCRIPT : \u5bf9\u4e8e Blocks \u73af\u5883\uff0c\u5b83\u5c06\u662f Blocks/Blocks.sh UNREAL_BINARY_ARGUMENTS : \u5bf9\u4e8e airsim \u6765\u8bf4\uff0c\u6700\u76f8\u5173\u7684\u9009\u9879\u662f -windowed , -ResX , -ResY \u3002\u70b9\u51fb\u94fe\u63a5\u67e5\u770b\u6240\u6709\u9009\u9879\u3002 \u65e0\u5934\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff1a\u6700\u540e\u7684\u540e\u7f00\u4e3a -- headless \uff1a $ ./run_airsim_image_binary.sh Blocks/Blocks.sh -- headless \u6307\u5b9a settings.json","title":"\u5728 Docker \u5bb9\u5668\u5185\u8fd0\u884c\u865a\u5e7b\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"docker_ubuntu/#source","text":"","title":"Source"},{"location":"docker_ubuntu/#requirements","text":"Install nvidia-docker2 Install ue4-docker","title":"Requirements:"},{"location":"docker_ubuntu/#build-unreal-engine-inside-docker","text":"To get access to Unreal Engine's source code, register on Epic Games' website and link it to your github account, as explained in the Required Steps section here . Note that you don't need to do Step 2: Downloading UE4 on Linux ! Build unreal engine 4.19.2 docker image. We're going to use CUDA 10.0 in our example. $ ue4-docker build 4.19.2 --cuda=10.0 --no-full [optional] $ ue4-docker clean to free up some space. Details here ue4-docker supports all CUDA version listed on NVIDIA's cudagl dockerhub here . Please see this page for advanced configurations using ue4-docker Disk space: The unreal images and containers can take up a lot of space, especially if you try more than one version. Here's a list of useful links to monitor space used by docker and clean up intermediate builds: Large container images primer docker system df docker container prune docker image prune docker system prune","title":"Build Unreal Engine inside docker:"},{"location":"docker_ubuntu/#building-airsim-inside-ue4-docker-container","text":"Build AirSim docker image (which lays over the unreal image we just built) Below are the default arguments. --base_image : This is image over which we'll install airsim. We've tested on adamrehn/ue4-engine:4.19.2-cudagl10.0 . See ue4-docker for other versions. --target_image is the desired name of your docker image. Defaults to airsim_source with same tag as the base image $ cd Airsim/docker ; $ python build_airsim_image.py \\ --source \\ ----base_image adamrehn/ue4-engine:4.19.2-cudagl10.0 \\ --target_image = airsim_source:4.19.2-cudagl10.0","title":"Building AirSim inside UE4 docker container:"},{"location":"docker_ubuntu/#running-airsim-container","text":"Run the airsim source image we built by: ./run_airsim_image_source.sh airsim_source:4.19.2-cudagl10.0 Syntax is ./run_airsim_image_source.sh DOCKER_IMAGE_NAME -- headless -- headless : suffix this to run in optional headless mode. Inside the container, you can see UnrealEngine and AirSim under /home/ue4 . Start unreal engine inside the container: ue4@HOSTMACHINE:~$ /home/ue4/UnrealEngine/Engine/Binaries/Linux/UE4Editor Specifying an airsim settings.json Continue with AirSim's Linux docs .","title":"Running AirSim container"},{"location":"docker_ubuntu/#misc-packaging-unreal-environments-in-airsim_source-containers","text":"Let's take the Blocks environment as an example. In the following script, specify the full path to your unreal uproject file by project and the directory where you want the binaries to be placed by archivedirectory $ /home/ue4/UnrealEngine/Engine/Build/BatchFiles/RunUAT.sh BuildCookRun -platform = Linux -clientconfig = Shipping -serverconfig = Shipping -noP4 -cook -allmaps -build -stage -prereqs -pak -archive \\ -archivedirectory = /home/ue4/Binaries/Blocks/ \\ -project = /home/ue4/AirSim/Unreal/Environments/Blocks/Blocks.uproject This would create a Blocks binary in /home/ue4/Binaries/Blocks/ . You can test it by running /home/ue4/Binaries/Blocks/LinuxNoEditor/Blocks.sh -windowed","title":"[Misc] Packaging Unreal Environments in airsim_source containers"},{"location":"docker_ubuntu/#specifying-settingsjson","text":"","title":"Specifying settings.json"},{"location":"docker_ubuntu/#airsim_binary-docker-image","text":"We're mapping the host machine's PATH/TO/Airsim/docker/settings.json to the docker container's /home/airsim_user/Documents/AirSim/settings.json . Hence, we can load any settings file by simply modifying PATH_TO_YOUR/settings.json by modifying the following snippets in run_airsim_image_binary.sh nvidia-docker run --runtime = nvidia -it \\ -v $PATH_TO_YOUR /settings.json:/home/airsim_user/Documents/AirSim/settings.json \\ -v $UNREAL_BINARY_PATH : $UNREAL_BINARY_PATH \\ -e SDL_VIDEODRIVER = $SDL_VIDEODRIVER_VALUE \\ -e SDL_HINT_CUDA_DEVICE = '0' \\ --net = host \\ --env = \"DISPLAY= $DISPLAY \" \\ --env = \"QT_X11_NO_MITSHM=1\" \\ --volume = \"/tmp/.X11-unix:/tmp/.X11-unix:rw\" \\ -env = \"XAUTHORITY= $XAUTH \" \\ --volume = \" $XAUTH : $XAUTH \" \\ --rm \\ $DOCKER_IMAGE_NAME \\ /bin/bash -c \" $UNREAL_BINARY_COMMAND \" Note: Docker version >=19.03 (check using docker -v ), natively supports Nvidia GPUs, so run using --gpus all flag as given - docker run --gpus all -it \\ ...","title":"airsim_binary docker image:"},{"location":"docker_ubuntu/#airsim_source-docker-image","text":"We're mapping the host machine's PATH/TO/Airsim/docker/settings.json to the docker container's /home/airsim_user/Documents/AirSim/settings.json . Hence, we can load any settings file by simply modifying PATH_TO_YOUR/settings.json by modifying the following snippets in run_airsim_image_source.sh : nvidia-docker run --runtime = nvidia -it \\ -v $( pwd ) /settings.json:/home/airsim_user/Documents/AirSim/settings.json \\ -e SDL_VIDEODRIVER = $SDL_VIDEODRIVER_VALUE \\ -e SDL_HINT_CUDA_DEVICE = '0' \\ --net = host \\ --env = \"DISPLAY= $DISPLAY \" \\ --env = \"QT_X11_NO_MITSHM=1\" \\ --volume = \"/tmp/.X11-unix:/tmp/.X11-unix:rw\" \\ -env = \"XAUTHORITY= $XAUTH \" \\ --volume = \" $XAUTH : $XAUTH \" \\ --rm \\ $DOCKER_IMAGE_NAME","title":"airsim_source docker image:"},{"location":"drone_survey/","text":"Implementing a Drone Survey script # Moved here from https://github.com/microsoft/AirSim/wiki/Implementing-a-Drone-Survey-script Ever wanted to capture a bunch of top-down pictures of a certain location? Well, the Python API makes this really simple. See the code available here . Let's assume we want the following variables: Variable Description boxsize The overall size of the square box to survey stripewidth How far apart to drive the swim lanes, this can depend on the type of camera lens, for example. altitude The height to fly the survey. speed The speed of the survey can depend on how fast your camera can snap shots. So with these we can compute a square path box using this code: path = [] distance = 0 while x < self . boxsize : distance += self . boxsize path . append ( Vector3r ( x , self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , self . boxsize , z )) distance += self . boxsize path . append ( Vector3r ( x , - self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , - self . boxsize , z )) distance += self . boxsize Assuming we start in the corner of the box, increment x by the stripe width, then fly the full y-dimension of -boxsize to +boxsize , so in this case, boxsize is half the size of the actual box we will be covering. Once we have this list of Vector3r objects, we can fly this path very simply with the following call: result = self . client . moveOnPath ( path , self . velocity , trip_time , DrivetrainType . ForwardOnly , YawMode ( False , 0 ), lookahead , 1 ) We can compute an appropriate trip_time timeout by dividing the distance of the path and the speed we are flying. The lookahead needed here for smooth path interpolation can be computed from the velocity using self.velocity + (self.velocity/2) . The more lookahead, the smoother the turns. This is why you see in the screenshot that the ends of each swimland are smooth turns rather than a square box pattern. This can result in a smoother video from your camera also. That's it, pretty simple, eh? Now of course you can add a lot more intelligence to this, make it avoid known obstacles on your map, make it climb up and down a hillside so you can survey a slope, etc. Lots of fun to be had.","title":"\u4f7f\u7528\u65e0\u4eba\u673a\u8fdb\u884c\u6d4b\u91cf"},{"location":"drone_survey/#implementing-a-drone-survey-script","text":"Moved here from https://github.com/microsoft/AirSim/wiki/Implementing-a-Drone-Survey-script Ever wanted to capture a bunch of top-down pictures of a certain location? Well, the Python API makes this really simple. See the code available here . Let's assume we want the following variables: Variable Description boxsize The overall size of the square box to survey stripewidth How far apart to drive the swim lanes, this can depend on the type of camera lens, for example. altitude The height to fly the survey. speed The speed of the survey can depend on how fast your camera can snap shots. So with these we can compute a square path box using this code: path = [] distance = 0 while x < self . boxsize : distance += self . boxsize path . append ( Vector3r ( x , self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , self . boxsize , z )) distance += self . boxsize path . append ( Vector3r ( x , - self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , - self . boxsize , z )) distance += self . boxsize Assuming we start in the corner of the box, increment x by the stripe width, then fly the full y-dimension of -boxsize to +boxsize , so in this case, boxsize is half the size of the actual box we will be covering. Once we have this list of Vector3r objects, we can fly this path very simply with the following call: result = self . client . moveOnPath ( path , self . velocity , trip_time , DrivetrainType . ForwardOnly , YawMode ( False , 0 ), lookahead , 1 ) We can compute an appropriate trip_time timeout by dividing the distance of the path and the speed we are flying. The lookahead needed here for smooth path interpolation can be computed from the velocity using self.velocity + (self.velocity/2) . The more lookahead, the smoother the turns. This is why you see in the screenshot that the ends of each swimland are smooth turns rather than a square box pattern. This can result in a smoother video from your camera also. That's it, pretty simple, eh? Now of course you can add a lot more intelligence to this, make it avoid known obstacles on your map, make it climb up and down a hillside so you can survey a slope, etc. Lots of fun to be had.","title":"Implementing a Drone Survey script"},{"location":"event_sim/","text":"AirSim \u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e Python \u7684\u4e8b\u4ef6\u76f8\u673a\u6a21\u62df\u5668\uff0c\u65e8\u5728\u5b9e\u73b0\u6027\u80fd\u548c\u4e0e\u6a21\u62df\u4e00\u8d77\u5b9e\u65f6\u8fd0\u884c\u7684\u80fd\u529b\u3002 \u4e8b\u4ef6\u76f8\u673a # \u4e8b\u4ef6\u76f8\u673a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u89c6\u89c9\u4f20\u611f\u5668\uff0c\u5b83\u6d4b\u91cf\u5bf9\u6570\u4eae\u5ea6\u7684\u53d8\u5316\uff0c\u5e76\u4ec5\u62a5\u544a\u201c\u4e8b\u4ef6\u201d\u3002\u6bcf\u4e2a\u4e8b\u4ef6\u7531\u4e00\u7ec4\u56db\u4e2a\u503c\u7ec4\u6210\uff0c\u6bcf\u5f53\u5bf9\u6570\u4eae\u5ea6\u7684\u7edd\u5bf9\u53d8\u5316\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\u65f6\u5c31\u4f1a\u751f\u6210\u3002\u4e8b\u4ef6\u5305\u542b\u6d4b\u91cf\u7684\u65f6\u95f4\u6233\u3001\u50cf\u7d20\u4f4d\u7f6e\uff08x \u548c y \u5750\u6807\uff09\u548c\u6781\u6027\uff1a\u6839\u636e\u5bf9\u6570\u4eae\u5ea6\u662f\u589e\u52a0\u8fd8\u662f\u51cf\u5c11\uff0c\u6781\u6027\u4e3a +1/-1\u3002\u5927\u591a\u6570\u4e8b\u4ef6\u76f8\u673a\u7684\u65f6\u95f4\u5206\u8fa8\u7387\u4e3a\u5fae\u79d2\u7ea7\uff0c\u8fd9\u4f7f\u5176\u901f\u5ea6\u660e\u663e\u5feb\u4e8e RGB \u4f20\u611f\u5668\uff0c\u5e76\u4e14\u8fd8\u5177\u6709\u9ad8\u52a8\u6001\u8303\u56f4\u548c\u4f4e\u8fd0\u52a8\u6a21\u7cca\u7684\u7279\u70b9\u3002\u6709\u5173\u4e8b\u4ef6\u76f8\u673a\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 RPG-UZH \u7684\u672c\u6559\u7a0b \u3002 AirSim event simulator # The AirSim event simulator uses two consecutive RGB images (converted to grayscale), and computes \"past events\" that would have occurred during the transition based on the change in log luminance between the images. These events are reported as a stream of bytes, following this format: <x> <y> <timestamp> <pol> x and y are the pixel locations of the event firing, timestamp is the global timestamp in microseconds and pol is either +1/-1 depending on whether the brightness increased or decreased. Along with this bytestream, an accumulation of events over a 2D frame is also constructed, known as an 'event image' that visualizes +1 events as red and -1 as blue pixels. An example event image is shown below: Usage # An example script to run the event simulator alongside AirSim is located at https://github.com/microsoft/AirSim/blob/main/PythonClient/eventcamera_sim/test_event_sim.py. The following optional command-line arguments can be passed to this script. args.width, args.height (float): Simulated event camera resolution args.save (bool): Whether or not to save the event data to a file, args.debug (bool): Whether or not to display the simulated events as an image The implementation of the actual event simulation, written in Python and numba, is at https://github.com/microsoft/AirSim/blob/main/PythonClient/eventcamera_sim/event_simulator.py. The event simulator is initialized as follows, with the arguments controlling the resolution of the camera. from event_simulator import * ev_sim = EventSimulator(W, H) The actual computation of the events is triggered through an image_callback function, which is executed every time a new RGB image is obtained. The first time this function is called, due to the lack of a 'previous' image, it acts as an initialization of the event sim. event_img, events = ev_sim.image_callback(img, ts_delta) This function, which behaves similar to a callback (called every time a new image is received) returns an event image as a one dimensional array of +1/-1 values, thus indicating only whether events were seen at each pixel, but not the timing/number of events. This one dimensional array can be converted into the red/blue event image as seen in the function convert_event_img_rgb . events is a numpy array of events, each of format <x> <y> <timestamp> <pol> . Through this function, the event sim computes the difference between the past and the current image, and computes a stream of events which is then returned as a numpy array. This can then be appended to a file. There are quite a few parameters that can be tuned to achieve a level of visual fidelity/performance of the event simulation. The main factors to tune are the following: The resolution of the camera. The log luminance threshold TOL that determines whether or not a detected change counts as an event. Note: There is also currently a max limit on the number of events generated per pair of images, which can also be tuned. Algorithm # The working of the event simulator loosely follows this set of operations: 1. Take the difference between the log intensities of the current and previous frames. 2. Iterating over all pixels, calculate the polarity for each each pixel based on a threshold of change in log intensity. 3. Determine the number of events to be fired per pixel, based on extent of intensity change over the threshold. Let \\(N_{max}\\) be the maximum number of events that can occur at a single pixel, then the total number of firings to be simulated at pixel location \\(u\\) would be \\(N_e(u) = min(N_{max}, \\frac{\\Delta L(u)}{TOL})\\) . 4. Determine the timestamps for each interpolated event by interpolating between the amount of time that has elapsed between the captures of the previous and current images. \\(t = t_{prev} + \\frac{\\Delta T}{N_e(u)}\\) 5. Generate the output bytestream by simulating events at every pixel and sort by timestamp.","title":"\u4e8b\u4ef6\u76f8\u673a"},{"location":"event_sim/#_1","text":"\u4e8b\u4ef6\u76f8\u673a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u89c6\u89c9\u4f20\u611f\u5668\uff0c\u5b83\u6d4b\u91cf\u5bf9\u6570\u4eae\u5ea6\u7684\u53d8\u5316\uff0c\u5e76\u4ec5\u62a5\u544a\u201c\u4e8b\u4ef6\u201d\u3002\u6bcf\u4e2a\u4e8b\u4ef6\u7531\u4e00\u7ec4\u56db\u4e2a\u503c\u7ec4\u6210\uff0c\u6bcf\u5f53\u5bf9\u6570\u4eae\u5ea6\u7684\u7edd\u5bf9\u53d8\u5316\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\u65f6\u5c31\u4f1a\u751f\u6210\u3002\u4e8b\u4ef6\u5305\u542b\u6d4b\u91cf\u7684\u65f6\u95f4\u6233\u3001\u50cf\u7d20\u4f4d\u7f6e\uff08x \u548c y \u5750\u6807\uff09\u548c\u6781\u6027\uff1a\u6839\u636e\u5bf9\u6570\u4eae\u5ea6\u662f\u589e\u52a0\u8fd8\u662f\u51cf\u5c11\uff0c\u6781\u6027\u4e3a +1/-1\u3002\u5927\u591a\u6570\u4e8b\u4ef6\u76f8\u673a\u7684\u65f6\u95f4\u5206\u8fa8\u7387\u4e3a\u5fae\u79d2\u7ea7\uff0c\u8fd9\u4f7f\u5176\u901f\u5ea6\u660e\u663e\u5feb\u4e8e RGB \u4f20\u611f\u5668\uff0c\u5e76\u4e14\u8fd8\u5177\u6709\u9ad8\u52a8\u6001\u8303\u56f4\u548c\u4f4e\u8fd0\u52a8\u6a21\u7cca\u7684\u7279\u70b9\u3002\u6709\u5173\u4e8b\u4ef6\u76f8\u673a\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 RPG-UZH \u7684\u672c\u6559\u7a0b \u3002","title":"\u4e8b\u4ef6\u76f8\u673a"},{"location":"event_sim/#airsim-event-simulator","text":"The AirSim event simulator uses two consecutive RGB images (converted to grayscale), and computes \"past events\" that would have occurred during the transition based on the change in log luminance between the images. These events are reported as a stream of bytes, following this format: <x> <y> <timestamp> <pol> x and y are the pixel locations of the event firing, timestamp is the global timestamp in microseconds and pol is either +1/-1 depending on whether the brightness increased or decreased. Along with this bytestream, an accumulation of events over a 2D frame is also constructed, known as an 'event image' that visualizes +1 events as red and -1 as blue pixels. An example event image is shown below:","title":"AirSim event simulator"},{"location":"event_sim/#usage","text":"An example script to run the event simulator alongside AirSim is located at https://github.com/microsoft/AirSim/blob/main/PythonClient/eventcamera_sim/test_event_sim.py. The following optional command-line arguments can be passed to this script. args.width, args.height (float): Simulated event camera resolution args.save (bool): Whether or not to save the event data to a file, args.debug (bool): Whether or not to display the simulated events as an image The implementation of the actual event simulation, written in Python and numba, is at https://github.com/microsoft/AirSim/blob/main/PythonClient/eventcamera_sim/event_simulator.py. The event simulator is initialized as follows, with the arguments controlling the resolution of the camera. from event_simulator import * ev_sim = EventSimulator(W, H) The actual computation of the events is triggered through an image_callback function, which is executed every time a new RGB image is obtained. The first time this function is called, due to the lack of a 'previous' image, it acts as an initialization of the event sim. event_img, events = ev_sim.image_callback(img, ts_delta) This function, which behaves similar to a callback (called every time a new image is received) returns an event image as a one dimensional array of +1/-1 values, thus indicating only whether events were seen at each pixel, but not the timing/number of events. This one dimensional array can be converted into the red/blue event image as seen in the function convert_event_img_rgb . events is a numpy array of events, each of format <x> <y> <timestamp> <pol> . Through this function, the event sim computes the difference between the past and the current image, and computes a stream of events which is then returned as a numpy array. This can then be appended to a file. There are quite a few parameters that can be tuned to achieve a level of visual fidelity/performance of the event simulation. The main factors to tune are the following: The resolution of the camera. The log luminance threshold TOL that determines whether or not a detected change counts as an event. Note: There is also currently a max limit on the number of events generated per pair of images, which can also be tuned.","title":"Usage"},{"location":"event_sim/#algorithm","text":"The working of the event simulator loosely follows this set of operations: 1. Take the difference between the log intensities of the current and previous frames. 2. Iterating over all pixels, calculate the polarity for each each pixel based on a threshold of change in log intensity. 3. Determine the number of events to be fired per pixel, based on extent of intensity change over the threshold. Let \\(N_{max}\\) be the maximum number of events that can occur at a single pixel, then the total number of firings to be simulated at pixel location \\(u\\) would be \\(N_e(u) = min(N_{max}, \\frac{\\Delta L(u)}{TOL})\\) . 4. Determine the timestamps for each interpolated event by interpolating between the amount of time that has elapsed between the captures of the previous and current images. \\(t = t_{prev} + \\frac{\\Delta T}{N_e(u)}\\) 5. Generate the output bytestream by simulating events at every pixel and sort by timestamp.","title":"Algorithm"},{"location":"faq/","text":"FAQ # General # Unreal editor is slow when it is not the active window My mouse disappears in Unreal Where is the setting file and how do I modify it? How do I arm my drone? When making API call I get error I'm getting Eigen not found error when compiling Unreal project. Something went wrong. How do I debug? What do the colors mean in the Segmentation View? Unreal 4.xx doesn't look as good as 4.yy Can I use an XBox controller to fly? Can I build a hexacopter with AirSim? How do I use AirSim with multiple vehicles? What computer do you need? How do I report issues? General # Unreal editor is slow when it is not the active window # Go to Edit/Editor Preferences, select \"All Settings\" and type \"CPU\" in the search box. It should find the setting titled \"Use Less CPU when in Background\", and you want to uncheck this checkbox. My mouse disappears in Unreal # Yes, Unreal steals the mouse, and we don't draw one. So to get your mouse back just use Alt+TAB to switch to a different window. To avoid this entirely, go to Project settings >in Unreal Editor, go to Input tab and disable all settings for mouse capture. Where is the setting file and how do I modify it? # AirSim will create empty settings file at ~/Documents/AirSim/settings.json . You can view the available settings options . How do I arm my drone? # If you're using simple_flight, your vehicle is already armed and ready to fly. For PX4 you can arm by holding both sticks on remote control down and to the center. When making API call I get error # If you are getting this error, TypeError: unsupported operand type(s) for *: 'AsyncIOLoop' and 'float' its probably due to upgraded version of tornado package with version > 5.0 in Python that conflicts with msgpack-rpc-python which requires tornado package < 5.0. To fix this >you can update the package like this: pip install --upgrade msgpack-rpc-python But this might break something (for example, PyTorch 0.4+) because it will uninstall newer tornado and re-install older one. To avoid this you should create new conda >environment . I'm getting Eigen not found error when compiling Unreal project. # This is most likely because AirSim wasn't built and Plugin folder was copied in Unreal project folder. To fix this make sure you build AirSim first (run > build.cmd in Windows). Something went wrong. How do I debug? # First turn on C++ exceptions from the Exceptions window: and copy the stack trace of all exceptions you see there during execution that look relevant (for example, there might be an initial exception from VSPerf140 that you can >ignore) then paste these call stacks into a new AirSim GitHub issue, thanks. What do the colors mean in the Segmentation View? # See Camera Views for information on the camera views and how to change them. Unreal 4.xx doesn't look as good as 4.yy # Unreal 4.15 added the ability for Foliage LOD dithering to be disabled on a case-by-case basis by unchecking the Dithered LOD Transition checkbox in the foliage materials. >Note that all materials used on all LODs need to have the checkbox checked in order for dithered LOD transitions to work. When checked the transition of generated foliage will >be a lot smoother and will look better than 4.14. Can I use an XBox controller to fly? # See XBox controller for details. Can I build a hexacopter with AirSim? # See how to build a hexacopter . How do I use AirSim with multiple vehicles? # Here is multi-vehicle setup guide . What computer do you need? # It depends on how big your Unreal Environment is. The Blocks environment that comes with AirSim is very basic and works on typical laptops. The Modular Neighborhood Pack that we use ourselves for research requires GPUs with at least 4GB of RAM. The Open World environment needs GPU with 8GB RAM. Our typical development machines have 32GB of RAM and NVIDIA TitanX and a fast hard drive . How do I report issues? # It's a good idea to include your configuration like below. If you can also include logs, that could also expedite the investigation. Operating System: Windows 10 64bit CPU: Intel Core i7 GPU: Nvidia GTX 1080 RAM: 32 GB Flight Controller: Pixhawk v2 Remote Control: Futaba If you have modified the default ~/Document/AirSim/settings.json , please include your settings also. If you are using PX4 then try to capture log from MavLink or PX4 . File an issue through GitHub Issues . Others # Linux Build FAQ Windows Build FAQ PX4 Setup FAQ Remote Control FAQ Unreal Blocks Environment FAQ Unreal Custom Environment FAQ Packaging AirSim","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#general","text":"Unreal editor is slow when it is not the active window My mouse disappears in Unreal Where is the setting file and how do I modify it? How do I arm my drone? When making API call I get error I'm getting Eigen not found error when compiling Unreal project. Something went wrong. How do I debug? What do the colors mean in the Segmentation View? Unreal 4.xx doesn't look as good as 4.yy Can I use an XBox controller to fly? Can I build a hexacopter with AirSim? How do I use AirSim with multiple vehicles? What computer do you need? How do I report issues?","title":"General"},{"location":"faq/#general_1","text":"","title":"General"},{"location":"faq/#unreal-editor-is-slow-when-it-is-not-the-active-window","text":"Go to Edit/Editor Preferences, select \"All Settings\" and type \"CPU\" in the search box. It should find the setting titled \"Use Less CPU when in Background\", and you want to uncheck this checkbox.","title":"Unreal editor is slow when it is not the active window"},{"location":"faq/#my-mouse-disappears-in-unreal","text":"Yes, Unreal steals the mouse, and we don't draw one. So to get your mouse back just use Alt+TAB to switch to a different window. To avoid this entirely, go to Project settings >in Unreal Editor, go to Input tab and disable all settings for mouse capture.","title":"My mouse disappears in Unreal"},{"location":"faq/#where-is-the-setting-file-and-how-do-i-modify-it","text":"AirSim will create empty settings file at ~/Documents/AirSim/settings.json . You can view the available settings options .","title":"Where is the setting file and how do I modify it?"},{"location":"faq/#how-do-i-arm-my-drone","text":"If you're using simple_flight, your vehicle is already armed and ready to fly. For PX4 you can arm by holding both sticks on remote control down and to the center.","title":"How do I arm my drone?"},{"location":"faq/#when-making-api-call-i-get-error","text":"If you are getting this error, TypeError: unsupported operand type(s) for *: 'AsyncIOLoop' and 'float' its probably due to upgraded version of tornado package with version > 5.0 in Python that conflicts with msgpack-rpc-python which requires tornado package < 5.0. To fix this >you can update the package like this: pip install --upgrade msgpack-rpc-python But this might break something (for example, PyTorch 0.4+) because it will uninstall newer tornado and re-install older one. To avoid this you should create new conda >environment .","title":"When making API call I get error"},{"location":"faq/#im-getting-eigen-not-found-error-when-compiling-unreal-project","text":"This is most likely because AirSim wasn't built and Plugin folder was copied in Unreal project folder. To fix this make sure you build AirSim first (run > build.cmd in Windows).","title":"I'm getting Eigen not found error when compiling Unreal project."},{"location":"faq/#something-went-wrong-how-do-i-debug","text":"First turn on C++ exceptions from the Exceptions window: and copy the stack trace of all exceptions you see there during execution that look relevant (for example, there might be an initial exception from VSPerf140 that you can >ignore) then paste these call stacks into a new AirSim GitHub issue, thanks.","title":"Something went wrong. How do I debug?"},{"location":"faq/#what-do-the-colors-mean-in-the-segmentation-view","text":"See Camera Views for information on the camera views and how to change them.","title":"What do the colors mean in the Segmentation View?"},{"location":"faq/#unreal-4xx-doesnt-look-as-good-as-4yy","text":"Unreal 4.15 added the ability for Foliage LOD dithering to be disabled on a case-by-case basis by unchecking the Dithered LOD Transition checkbox in the foliage materials. >Note that all materials used on all LODs need to have the checkbox checked in order for dithered LOD transitions to work. When checked the transition of generated foliage will >be a lot smoother and will look better than 4.14.","title":"Unreal 4.xx doesn't look as good as 4.yy"},{"location":"faq/#can-i-use-an-xbox-controller-to-fly","text":"See XBox controller for details.","title":"Can I use an XBox controller to fly?"},{"location":"faq/#can-i-build-a-hexacopter-with-airsim","text":"See how to build a hexacopter .","title":"Can I build a hexacopter with AirSim?"},{"location":"faq/#how-do-i-use-airsim-with-multiple-vehicles","text":"Here is multi-vehicle setup guide .","title":"How do I use AirSim with multiple vehicles?"},{"location":"faq/#what-computer-do-you-need","text":"It depends on how big your Unreal Environment is. The Blocks environment that comes with AirSim is very basic and works on typical laptops. The Modular Neighborhood Pack that we use ourselves for research requires GPUs with at least 4GB of RAM. The Open World environment needs GPU with 8GB RAM. Our typical development machines have 32GB of RAM and NVIDIA TitanX and a fast hard drive .","title":"What computer do you need?"},{"location":"faq/#how-do-i-report-issues","text":"It's a good idea to include your configuration like below. If you can also include logs, that could also expedite the investigation. Operating System: Windows 10 64bit CPU: Intel Core i7 GPU: Nvidia GTX 1080 RAM: 32 GB Flight Controller: Pixhawk v2 Remote Control: Futaba If you have modified the default ~/Document/AirSim/settings.json , please include your settings also. If you are using PX4 then try to capture log from MavLink or PX4 . File an issue through GitHub Issues .","title":"How do I report issues?"},{"location":"faq/#others","text":"Linux Build FAQ Windows Build FAQ PX4 Setup FAQ Remote Control FAQ Unreal Blocks Environment FAQ Unreal Custom Environment FAQ Packaging AirSim","title":"Others"},{"location":"flight_controller/","text":"\u98de\u884c\u63a7\u5236\u5668 # \u4ec0\u4e48\u662f\u98de\u884c\u63a7\u5236\u5668\uff1f # \u201c\u7b49\u7b49\uff01\u201d\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u201c\u4e3a\u4ec0\u4e48\u6a21\u62df\u5668\u9700\u8981\u98de\u884c\u63a7\u5236\u5668\uff1f\u201d\u98de\u884c\u63a7\u5236\u5668\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63a5\u6536\u671f\u671b\u72b6\u6001\u4f5c\u4e3a\u8f93\u5165\uff0c\u5229\u7528\u4f20\u611f\u5668\u6570\u636e\u4f30\u7b97\u5b9e\u9645\u72b6\u6001\uff0c\u7136\u540e\u9a71\u52a8\u6267\u884c\u5668\uff0c\u4f7f\u5b9e\u9645\u72b6\u6001\u5c3d\u53ef\u80fd\u63a5\u8fd1\u671f\u671b\u72b6\u6001\u3002\u5bf9\u4e8e\u56db\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u671f\u671b\u72b6\u6001\u53ef\u4ee5\u6307\u5b9a\u4e3a\u6eda\u8f6c\u3001\u4fef\u4ef0\u548c\u504f\u822a\u3002\u7136\u540e\uff0c\u5b83\u4f7f\u7528\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\u4f30\u7b97\u5b9e\u9645\u7684\u6eda\u8f6c\u3001\u4fef\u4ef0\u548c\u504f\u822a\u3002\u4e4b\u540e\uff0c\u5b83\u4f1a\u751f\u6210\u76f8\u5e94\u7684\u7535\u673a\u4fe1\u53f7\uff0c\u4f7f\u5b9e\u9645\u72b6\u6001\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u66f4\u591a\u6df1\u5165\u5185\u5bb9\uff0c\u8bf7\u53c2\u9605 \u8bba\u6587 \u3002 \u6a21\u62df\u5668\u5982\u4f55\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\uff1f # \u6a21\u62df\u5668\u5229\u7528\u98de\u884c\u63a7\u5236\u5668\u4ea7\u751f\u7684\u7535\u673a\u4fe1\u53f7\u6765\u8ba1\u7b97\u6bcf\u4e2a\u6267\u884c\u5668\uff08\u4f8b\u5982\u56db\u65cb\u7ffc\u98de\u884c\u5668\u7684\u87ba\u65cb\u6868\uff09\u4ea7\u751f\u7684\u529b\u548c\u63a8\u529b\u3002\u7136\u540e\uff0c\u7269\u7406\u5f15\u64ce\u4f1a\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u6765\u8ba1\u7b97\u98de\u884c\u5668\u7684\u52a8\u529b\u5b66\u7279\u6027\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u751f\u6210\u6a21\u62df\u4f20\u611f\u5668\u6570\u636e\u5e76\u5c06\u5176\u53cd\u9988\u7ed9\u98de\u884c\u63a7\u5236\u5668\u3002\u60a8\u53ef\u4ee5\u9605\u8bfb \u8bba\u6587 \uff0c\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u4ec0\u4e48\u662f\u786c\u4ef6\u5728\u73af\u548c\u8f6f\u4ef6\u5728\u73af\uff1f # \u786c\u4ef6\u5728\u73af\uff08HITL \u6216 HIL\uff09\u662f\u6307\u98de\u884c\u63a7\u5236\u5668\u5728\u5b9e\u9645\u786c\u4ef6\uff08\u4f8b\u5982 Naze32 \u6216 Pixhawk \u82af\u7247\uff09\u4e2d\u8fd0\u884c\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 USB \u7aef\u53e3\u5c06\u6b64\u786c\u4ef6\u8fde\u63a5\u5230 PC\u3002\u6a21\u62df\u5668\u4e0e\u8bbe\u5907\u901a\u4fe1\uff0c\u83b7\u53d6\u6267\u884c\u5668\u4fe1\u53f7\u5e76\u53d1\u9001\u6a21\u62df\u4f20\u611f\u5668\u6570\u636e\u3002\u8fd9\u663e\u7136\u662f\u6700\u63a5\u8fd1\u771f\u5b9e\u60c5\u51b5\u7684\u3002\u7136\u800c\uff0c\u5b83\u901a\u5e38\u9700\u8981\u66f4\u591a\u6b65\u9aa4\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5e76\u4e14\u901a\u5e38\u96be\u4ee5\u8c03\u8bd5\u3002\u4e00\u4e2a\u5927\u95ee\u9898\u662f\uff0c\u6a21\u62df\u5668\u65f6\u949f\u548c\u8bbe\u5907\u65f6\u949f\u7684\u8fd0\u884c\u901f\u5ea6\u548c\u7cbe\u5ea6\u5404\u4e0d\u76f8\u540c\u3002\u6b64\u5916\uff0cUSB \u8fde\u63a5\uff08\u901a\u5e38\u53ea\u6709 USB 2.0\uff09\u53ef\u80fd\u4e0d\u8db3\u4ee5\u5b9e\u73b0\u5b9e\u65f6\u901a\u4fe1\u3002 \u5728\u201c\u8f6f\u4ef6\u5728\u73af\u201d\u4eff\u771f\uff08SITL \u6216 SIL\uff09\u6a21\u5f0f\u4e0b\uff0c\u56fa\u4ef6\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u5728\u5355\u72ec\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u3002\u8fd9\u901a\u5e38\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u60a8\u73b0\u5728\u65e0\u9700\u63a5\u89e6\u4efb\u4f55\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u4ee3\u7801\u8def\u5f84\u3002\u6b64\u5916\uff0c\u60a8\u7684\u4ee3\u7801\u73b0\u5728\u4e0d\u518d\u4f7f\u7528\u901a\u5e38\u7531\u4e13\u7528\u786c\u4ef6\u677f\u63d0\u4f9b\u7684\u5b9e\u65f6\u65f6\u949f\u8fd0\u884c\u3002\u5bf9\u4e8e\u8bbe\u8ba1\u7cbe\u826f\u4e14\u5e26\u6709\u8f6f\u4ef6\u65f6\u949f\u7684\u98de\u884c\u63a7\u5236\u5668\u6765\u8bf4\uff0c\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u4e0d\u503c\u5f97\u62c5\u5fc3\u3002 \u652f\u6301\u54ea\u4e9b\u98de\u884c\u63a7\u5236\u5668\uff1f # AirSim \u5185\u7f6e\u4e86\u540d\u4e3a simple_flight \u7684\u98de\u884c\u63a7\u5236\u5668\uff0c\u5e76\u9ed8\u8ba4\u4f7f\u7528\u3002\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u5373\u53ef\u4f7f\u7528\u6216\u914d\u7f6e\u5b83\u3002AirSim \u8fd8\u652f\u6301 PX4 \u548c ArduPilot \u4f5c\u4e3a\u9ad8\u7ea7\u7528\u6237\u7684\u5916\u90e8\u98de\u884c\u63a7\u5236\u5668\u3002 \u4e0d\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\u4f7f\u7528 AirSim # \u662f\u7684\uff0c\u73b0\u5728\u53ef\u4ee5\u4e0d\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\u4f7f\u7528 AirSim\u3002\u8bf7\u53c2\u9605 \u6b64\u5904\u7684\u8bf4\u660e \uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u3002\u5982\u679c\u60a8\u4e0d\u9700\u8981\u98de\u884c\u5668\u52a8\u529b\u5b66\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u6b64\u6a21\u5f0f\u3002","title":"\u98de\u884c\u63a7\u5236\u5668"},{"location":"flight_controller/#_1","text":"","title":"\u98de\u884c\u63a7\u5236\u5668"},{"location":"flight_controller/#_2","text":"\u201c\u7b49\u7b49\uff01\u201d\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u201c\u4e3a\u4ec0\u4e48\u6a21\u62df\u5668\u9700\u8981\u98de\u884c\u63a7\u5236\u5668\uff1f\u201d\u98de\u884c\u63a7\u5236\u5668\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63a5\u6536\u671f\u671b\u72b6\u6001\u4f5c\u4e3a\u8f93\u5165\uff0c\u5229\u7528\u4f20\u611f\u5668\u6570\u636e\u4f30\u7b97\u5b9e\u9645\u72b6\u6001\uff0c\u7136\u540e\u9a71\u52a8\u6267\u884c\u5668\uff0c\u4f7f\u5b9e\u9645\u72b6\u6001\u5c3d\u53ef\u80fd\u63a5\u8fd1\u671f\u671b\u72b6\u6001\u3002\u5bf9\u4e8e\u56db\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u671f\u671b\u72b6\u6001\u53ef\u4ee5\u6307\u5b9a\u4e3a\u6eda\u8f6c\u3001\u4fef\u4ef0\u548c\u504f\u822a\u3002\u7136\u540e\uff0c\u5b83\u4f7f\u7528\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\u4f30\u7b97\u5b9e\u9645\u7684\u6eda\u8f6c\u3001\u4fef\u4ef0\u548c\u504f\u822a\u3002\u4e4b\u540e\uff0c\u5b83\u4f1a\u751f\u6210\u76f8\u5e94\u7684\u7535\u673a\u4fe1\u53f7\uff0c\u4f7f\u5b9e\u9645\u72b6\u6001\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u66f4\u591a\u6df1\u5165\u5185\u5bb9\uff0c\u8bf7\u53c2\u9605 \u8bba\u6587 \u3002","title":"\u4ec0\u4e48\u662f\u98de\u884c\u63a7\u5236\u5668\uff1f"},{"location":"flight_controller/#_3","text":"\u6a21\u62df\u5668\u5229\u7528\u98de\u884c\u63a7\u5236\u5668\u4ea7\u751f\u7684\u7535\u673a\u4fe1\u53f7\u6765\u8ba1\u7b97\u6bcf\u4e2a\u6267\u884c\u5668\uff08\u4f8b\u5982\u56db\u65cb\u7ffc\u98de\u884c\u5668\u7684\u87ba\u65cb\u6868\uff09\u4ea7\u751f\u7684\u529b\u548c\u63a8\u529b\u3002\u7136\u540e\uff0c\u7269\u7406\u5f15\u64ce\u4f1a\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u6765\u8ba1\u7b97\u98de\u884c\u5668\u7684\u52a8\u529b\u5b66\u7279\u6027\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u751f\u6210\u6a21\u62df\u4f20\u611f\u5668\u6570\u636e\u5e76\u5c06\u5176\u53cd\u9988\u7ed9\u98de\u884c\u63a7\u5236\u5668\u3002\u60a8\u53ef\u4ee5\u9605\u8bfb \u8bba\u6587 \uff0c\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u6a21\u62df\u5668\u5982\u4f55\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\uff1f"},{"location":"flight_controller/#_4","text":"\u786c\u4ef6\u5728\u73af\uff08HITL \u6216 HIL\uff09\u662f\u6307\u98de\u884c\u63a7\u5236\u5668\u5728\u5b9e\u9645\u786c\u4ef6\uff08\u4f8b\u5982 Naze32 \u6216 Pixhawk \u82af\u7247\uff09\u4e2d\u8fd0\u884c\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 USB \u7aef\u53e3\u5c06\u6b64\u786c\u4ef6\u8fde\u63a5\u5230 PC\u3002\u6a21\u62df\u5668\u4e0e\u8bbe\u5907\u901a\u4fe1\uff0c\u83b7\u53d6\u6267\u884c\u5668\u4fe1\u53f7\u5e76\u53d1\u9001\u6a21\u62df\u4f20\u611f\u5668\u6570\u636e\u3002\u8fd9\u663e\u7136\u662f\u6700\u63a5\u8fd1\u771f\u5b9e\u60c5\u51b5\u7684\u3002\u7136\u800c\uff0c\u5b83\u901a\u5e38\u9700\u8981\u66f4\u591a\u6b65\u9aa4\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5e76\u4e14\u901a\u5e38\u96be\u4ee5\u8c03\u8bd5\u3002\u4e00\u4e2a\u5927\u95ee\u9898\u662f\uff0c\u6a21\u62df\u5668\u65f6\u949f\u548c\u8bbe\u5907\u65f6\u949f\u7684\u8fd0\u884c\u901f\u5ea6\u548c\u7cbe\u5ea6\u5404\u4e0d\u76f8\u540c\u3002\u6b64\u5916\uff0cUSB \u8fde\u63a5\uff08\u901a\u5e38\u53ea\u6709 USB 2.0\uff09\u53ef\u80fd\u4e0d\u8db3\u4ee5\u5b9e\u73b0\u5b9e\u65f6\u901a\u4fe1\u3002 \u5728\u201c\u8f6f\u4ef6\u5728\u73af\u201d\u4eff\u771f\uff08SITL \u6216 SIL\uff09\u6a21\u5f0f\u4e0b\uff0c\u56fa\u4ef6\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u5728\u5355\u72ec\u7684\u7535\u8def\u677f\u4e0a\u8fd0\u884c\u3002\u8fd9\u901a\u5e38\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u60a8\u73b0\u5728\u65e0\u9700\u63a5\u89e6\u4efb\u4f55\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u4ee3\u7801\u8def\u5f84\u3002\u6b64\u5916\uff0c\u60a8\u7684\u4ee3\u7801\u73b0\u5728\u4e0d\u518d\u4f7f\u7528\u901a\u5e38\u7531\u4e13\u7528\u786c\u4ef6\u677f\u63d0\u4f9b\u7684\u5b9e\u65f6\u65f6\u949f\u8fd0\u884c\u3002\u5bf9\u4e8e\u8bbe\u8ba1\u7cbe\u826f\u4e14\u5e26\u6709\u8f6f\u4ef6\u65f6\u949f\u7684\u98de\u884c\u63a7\u5236\u5668\u6765\u8bf4\uff0c\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u4e0d\u503c\u5f97\u62c5\u5fc3\u3002","title":"\u4ec0\u4e48\u662f\u786c\u4ef6\u5728\u73af\u548c\u8f6f\u4ef6\u5728\u73af\uff1f"},{"location":"flight_controller/#_5","text":"AirSim \u5185\u7f6e\u4e86\u540d\u4e3a simple_flight \u7684\u98de\u884c\u63a7\u5236\u5668\uff0c\u5e76\u9ed8\u8ba4\u4f7f\u7528\u3002\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u5373\u53ef\u4f7f\u7528\u6216\u914d\u7f6e\u5b83\u3002AirSim \u8fd8\u652f\u6301 PX4 \u548c ArduPilot \u4f5c\u4e3a\u9ad8\u7ea7\u7528\u6237\u7684\u5916\u90e8\u98de\u884c\u63a7\u5236\u5668\u3002","title":"\u652f\u6301\u54ea\u4e9b\u98de\u884c\u63a7\u5236\u5668\uff1f"},{"location":"flight_controller/#airsim","text":"\u662f\u7684\uff0c\u73b0\u5728\u53ef\u4ee5\u4e0d\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\u4f7f\u7528 AirSim\u3002\u8bf7\u53c2\u9605 \u6b64\u5904\u7684\u8bf4\u660e \uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u3002\u5982\u679c\u60a8\u4e0d\u9700\u8981\u98de\u884c\u5668\u52a8\u529b\u5b66\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u6b64\u6a21\u5f0f\u3002","title":"\u4e0d\u4f7f\u7528\u98de\u884c\u63a7\u5236\u5668\u4f7f\u7528 AirSim"},{"location":"gazebo_drone/","text":"Welcome to GazeboDrone # GazeboDrone allows connecting a gazebo drone to the AirSim drone, using the gazebo drone as a flight dynamic model (FDM) and AirSim to generate environmental sensor data. It can be used for Multicopters , Fixed-wings or any other vehicle. Dependencies # Gazebo # Make sure you have installed gazebo dependencies: sudo apt-get install libgazebo9-dev AirLib # This project is built with GCC 8, so AirLib needs to be built with GCC 8 too. Run from your AirSim root folder: ./clean.sh ./setup.sh ./build.sh --gcc AirSim simulator # The AirSim UE plugin needs to be built with clang, so you can't use the one compiled in the previous step. You can use our binaries or you can clone AirSim again in another folder and buid it without the above option, then you can run Blocks or your own environment. AirSim settings # Inside your settings.json file you need to add this line: \"PhysicsEngineName\":\"ExternalPhysicsEngine\" . You may want to change the visual model of the AirSim drone, for that you can follow this tutorial. Build # Execute this from your AirSim root folder: cd GazeboDrone mkdir build && cd build cmake -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 .. make Run # First run the AirSim simulator and your Gazebo model and then execute this from your AirSim root folder: cd GazeboDrone/build ./GazeboDrone","title":"\u5bfc\u5165 Gazebo \u6a21\u578b"},{"location":"gazebo_drone/#welcome-to-gazebodrone","text":"GazeboDrone allows connecting a gazebo drone to the AirSim drone, using the gazebo drone as a flight dynamic model (FDM) and AirSim to generate environmental sensor data. It can be used for Multicopters , Fixed-wings or any other vehicle.","title":"Welcome to GazeboDrone"},{"location":"gazebo_drone/#dependencies","text":"","title":"Dependencies"},{"location":"gazebo_drone/#gazebo","text":"Make sure you have installed gazebo dependencies: sudo apt-get install libgazebo9-dev","title":"Gazebo"},{"location":"gazebo_drone/#airlib","text":"This project is built with GCC 8, so AirLib needs to be built with GCC 8 too. Run from your AirSim root folder: ./clean.sh ./setup.sh ./build.sh --gcc","title":"AirLib"},{"location":"gazebo_drone/#airsim-simulator","text":"The AirSim UE plugin needs to be built with clang, so you can't use the one compiled in the previous step. You can use our binaries or you can clone AirSim again in another folder and buid it without the above option, then you can run Blocks or your own environment.","title":"AirSim simulator"},{"location":"gazebo_drone/#airsim-settings","text":"Inside your settings.json file you need to add this line: \"PhysicsEngineName\":\"ExternalPhysicsEngine\" . You may want to change the visual model of the AirSim drone, for that you can follow this tutorial.","title":"AirSim settings"},{"location":"gazebo_drone/#build","text":"Execute this from your AirSim root folder: cd GazeboDrone mkdir build && cd build cmake -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 .. make","title":"Build"},{"location":"gazebo_drone/#run","text":"First run the AirSim simulator and your Gazebo model and then execute this from your AirSim root folder: cd GazeboDrone/build ./GazeboDrone","title":"Run"},{"location":"hard_drive/","text":"Busy Hard Drive # It is not required, but we recommend running your Unreal Environment on a Solid State Drive (SSD). Between debugging, logging, and Unreal asset loading the hard drive can become your bottle neck. It is normal that your hard drive will be slammed while Unreal is loading the environment, but if your hard drive performance looks like this while the Unreal game is running then you will probably not get a good flying experience. In fact, if the hard drive is this busy, chances are the drone will not fly properly at all. For some unknown reason this I/O bottle neck also interferes with the drone control loop and if that loop doesn't run at a high rate (300-500 Hz) then the drone will not fly. Not surprising, the control loop inside the PX4 firmware that runs on a Pixhawk flight controller runs at 1000 Hz. Reducing I/O # If you can't whip off to Fry's Electronics and pick up an overpriced super fast SSD this weekend, then the following steps can be taken to reduce the hard drive I/O: First run the Unreal Environment using Cooked content outside of the UE Editor or any debugging environment, and package the content to your fastest SSD drive. You can do that using this menu option: If you must use the UE editor (because you are actively modifying game assets), then at least don't run that in a debugger. If you are using Visual Studio use start without debugging. If you must debug the app, and you are using Visual Studio debugger, stop then Visual Studio from logging Intellitrace information. Go to Tools/Options/Debugging/Intellitrace, and turn off the main checkbox. Turn off any Unreal Analytics that your environment may have enabled, especially any file logging. I/O from Page Faults # If your system is running out of RAM it may start paging memory to disk. If your operating system has enabled paging to disk, make sure it is paging to your fastest SSD. Or if you have enough RAM disable paging all together. In fact, if you disable paging and the game stops working you will know for sure you are running out of RAM. Obviously, shutting down any other unnecessary apps should also free up memory so you don't run out. Ideal Runtime performance # This is what my slow hard drive looks like when flying from UE editor. You can see it's very busy, but the drone still flies ok: This is what my fast SSD looks like when the drone is flying in an Unreal Cooked app (no UE editor, no debugger). Not surprisingly it is flying perfectly in this case:","title":"\u786c\u76d8\u7e41\u5fd9\u65f6\u7684\u63d0\u793a"},{"location":"hard_drive/#busy-hard-drive","text":"It is not required, but we recommend running your Unreal Environment on a Solid State Drive (SSD). Between debugging, logging, and Unreal asset loading the hard drive can become your bottle neck. It is normal that your hard drive will be slammed while Unreal is loading the environment, but if your hard drive performance looks like this while the Unreal game is running then you will probably not get a good flying experience. In fact, if the hard drive is this busy, chances are the drone will not fly properly at all. For some unknown reason this I/O bottle neck also interferes with the drone control loop and if that loop doesn't run at a high rate (300-500 Hz) then the drone will not fly. Not surprising, the control loop inside the PX4 firmware that runs on a Pixhawk flight controller runs at 1000 Hz.","title":"Busy Hard Drive"},{"location":"hard_drive/#reducing-io","text":"If you can't whip off to Fry's Electronics and pick up an overpriced super fast SSD this weekend, then the following steps can be taken to reduce the hard drive I/O: First run the Unreal Environment using Cooked content outside of the UE Editor or any debugging environment, and package the content to your fastest SSD drive. You can do that using this menu option: If you must use the UE editor (because you are actively modifying game assets), then at least don't run that in a debugger. If you are using Visual Studio use start without debugging. If you must debug the app, and you are using Visual Studio debugger, stop then Visual Studio from logging Intellitrace information. Go to Tools/Options/Debugging/Intellitrace, and turn off the main checkbox. Turn off any Unreal Analytics that your environment may have enabled, especially any file logging.","title":"Reducing I/O"},{"location":"hard_drive/#io-from-page-faults","text":"If your system is running out of RAM it may start paging memory to disk. If your operating system has enabled paging to disk, make sure it is paging to your fastest SSD. Or if you have enough RAM disable paging all together. In fact, if you disable paging and the game stops working you will know for sure you are running out of RAM. Obviously, shutting down any other unnecessary apps should also free up memory so you don't run out.","title":"I/O from Page Faults"},{"location":"hard_drive/#ideal-runtime-performance","text":"This is what my slow hard drive looks like when flying from UE editor. You can see it's very busy, but the drone still flies ok: This is what my fast SSD looks like when the drone is flying in an Unreal Cooked app (no UE editor, no debugger). Not surprisingly it is flying perfectly in this case:","title":"Ideal Runtime performance"},{"location":"hello_drone/","text":"Hello Drone # Hello Drone \u5982\u4f55\u5de5\u4f5c\uff1f # Hello Drone \u4f7f\u7528 RPC \u5ba2\u6237\u7aef\u8fde\u63a5\u5230 AirSim \u81ea\u52a8\u542f\u52a8\u7684 RPC \u670d\u52a1\u5668\u3002RPC \u670d\u52a1\u5668\u5c06\u6240\u6709\u547d\u4ee4\u8def\u7531\u5230\u5b9e\u73b0 MultirotorApiBase \u7684\u7c7b\u3002\u672c\u8d28\u4e0a\uff0cMultirotorApiBase \u5b9a\u4e49\u4e86\u6211\u4eec\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u7528\u4e8e\u4ece quadrotor \u83b7\u53d6\u6570\u636e\u5e76\u53d1\u56de\u547d\u4ee4\u3002\u6211\u4eec\u76ee\u524d\u5df2\u7ecf\u4e3a\u57fa\u4e8e MavLink \u7684\u8f66\u8f86\u7684 MultirotorApiBase \u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\u3002DJI \u65e0\u4eba\u673a\u5e73\u53f0\uff08\u7279\u522b\u662f Matrice\uff09\u7684\u5b9e\u73b0\u6b63\u5728\u8fdb\u884c\u4e2d\u3002","title":"Hello Drone"},{"location":"hello_drone/#hello-drone","text":"","title":"Hello Drone"},{"location":"hello_drone/#hello-drone_1","text":"Hello Drone \u4f7f\u7528 RPC \u5ba2\u6237\u7aef\u8fde\u63a5\u5230 AirSim \u81ea\u52a8\u542f\u52a8\u7684 RPC \u670d\u52a1\u5668\u3002RPC \u670d\u52a1\u5668\u5c06\u6240\u6709\u547d\u4ee4\u8def\u7531\u5230\u5b9e\u73b0 MultirotorApiBase \u7684\u7c7b\u3002\u672c\u8d28\u4e0a\uff0cMultirotorApiBase \u5b9a\u4e49\u4e86\u6211\u4eec\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u7528\u4e8e\u4ece quadrotor \u83b7\u53d6\u6570\u636e\u5e76\u53d1\u56de\u547d\u4ee4\u3002\u6211\u4eec\u76ee\u524d\u5df2\u7ecf\u4e3a\u57fa\u4e8e MavLink \u7684\u8f66\u8f86\u7684 MultirotorApiBase \u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\u3002DJI \u65e0\u4eba\u673a\u5e73\u53f0\uff08\u7279\u522b\u662f Matrice\uff09\u7684\u5b9e\u73b0\u6b63\u5728\u8fdb\u884c\u4e2d\u3002","title":"Hello Drone \u5982\u4f55\u5de5\u4f5c\uff1f"},{"location":"image_apis/","text":"Image APIs # Please read general API doc first if you are not familiar with AirSim APIs. Getting a Single Image # Here's a sample code to get a single image from camera named \"0\". The returned value is bytes of png format image. To get uncompressed and other format as well as available cameras please see next sections. Python # import airsim #pip install airsim # for car use CarClient() client = airsim . MultirotorClient () png_image = client . simGetImage ( \"0\" , airsim . ImageType . Scene ) # do something with image C++ # #include \"vehicles/multirotor/api/MultirotorRpcLibClient.hpp\" int getOneImage () { using namespace msr :: airlib ; // for car use CarRpcLibClient MultirotorRpcLibClient client ; std :: vector < uint8_t > png_image = client . simGetImage ( \"0\" , VehicleCameraBase :: ImageType :: Scene ); // do something with images } Getting Images with More Flexibility # The simGetImages API which is slightly more complex to use than simGetImage API, for example, you can get left camera view, right camera view and depth image from left camera in a single API call. The simGetImages API also allows you to get uncompressed images as well as floating point single channel images (instead of 3 channel (RGB), each 8 bit). Python # import airsim #pip install airsim # for car use CarClient() client = airsim . MultirotorClient () responses = client . simGetImages ([ # png format airsim . ImageRequest ( 0 , airsim . ImageType . Scene ), # uncompressed RGB array bytes airsim . ImageRequest ( 1 , airsim . ImageType . Scene , False , False ), # floating point uncompressed image airsim . ImageRequest ( 1 , airsim . ImageType . DepthPlanar , True )]) # do something with response which contains image data, pose, timestamp etc Using AirSim Images with NumPy # If you plan to use numpy for image manipulation, you should get uncompressed RGB image and then convert to numpy like this: responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . Scene , False , False )]) response = responses [ 0 ] # get numpy array img1d = np . fromstring ( response . image_data_uint8 , dtype = np . uint8 ) # reshape array to 4 channel image array H X W X 4 img_rgb = img1d . reshape ( response . height , response . width , 3 ) # original image is fliped vertically img_rgb = np . flipud ( img_rgb ) # write to png airsim . write_png ( os . path . normpath ( filename + '.png' ), img_rgb ) Quick Tips # The API simGetImage returns binary string literal which means you can simply dump it in binary file to create a .png file. However if you want to process it in any other way than you can handy function airsim.string_to_uint8_array . This converts binary string literal to NumPy uint8 array. The API simGetImages can accept request for multiple image types from any cameras in single call. You can specify if image is png compressed, RGB uncompressed or float array. For png compressed images, you get binary string literal . For float array you get Python list of float64. You can convert this float array to NumPy 2D array using airsim.list_to_2d_float_array(response.image_data_float, response.width, response.height) You can also save float array to .pfm file (Portable Float Map format) using airsim.write_pfm() function. If you are looking to query position and orientation information in sync with a call to one of the image APIs, you can use client.simPause(True) and client.simPause(False) to pause the simulation while calling the image API and querying the desired physics state, ensuring that the physics state remains the same immediately after the image API call. C++ # int getStereoAndDepthImages () { using namespace msr :: airlib ; typedef VehicleCameraBase :: ImageRequest ImageRequest ; typedef VehicleCameraBase :: ImageResponse ImageResponse ; typedef VehicleCameraBase :: ImageType ImageType ; // for car use // CarRpcLibClient client; MultirotorRpcLibClient client ; // get right, left and depth images. First two as png, second as float16. std :: vector < ImageRequest > request = { //png format ImageRequest ( \"0\" , ImageType :: Scene ), //uncompressed RGB array bytes ImageRequest ( \"1\" , ImageType :: Scene , false , false ), //floating point uncompressed image ImageRequest ( \"1\" , ImageType :: DepthPlanar , true ) }; const std :: vector < ImageResponse >& response = client . simGetImages ( request ); // do something with response which contains image data, pose, timestamp etc } Ready to Run Complete Examples # Python # For a more complete ready to run sample code please see sample code in AirSimClient project for multirotors or HelloCar sample . This code also demonstrates simple activities such as saving images in files or using numpy to manipulate images. C++ # For a more complete ready to run sample code please see sample code in HelloDrone project for multirotors or HelloCar project . See also other example code that generates specified number of stereo images along with ground truth depth and disparity and saving it to pfm format . Available Cameras # These are the default cameras already available in each vehicle. Apart from these, you can add more cameras to the vehicles and external cameras which are not attached to any vehicle through the settings . Car # The cameras on car can be accessed by following names in API calls: front_center , front_right , front_left , fpv and back_center . Here FPV camera is driver's head position in the car. Multirotor # The cameras on the drone can be accessed by following names in API calls: front_center , front_right , front_left , bottom_center and back_center . Computer Vision Mode # Camera names are same as in multirotor. Backward compatibility for camera names # Before AirSim v1.2, cameras were accessed using ID numbers instead of names. For backward compatibility you can still use following ID numbers for above camera names in same order as above: \"0\" , \"1\" , \"2\" , \"3\" , \"4\" . In addition, camera name \"\" is also available to access the default camera which is generally the camera \"0\" . \"\u8ba1\u7b97\u673a\u89c6\u89c9\" \u6a21\u5f0f # \u60a8\u53ef\u4ee5\u5728\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u4e0b\u4f7f\u7528 AirSim\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u7269\u7406\u5f15\u64ce\u5c06\u88ab\u7981\u7528\uff0c\u5e76\u4e14\u6ca1\u6709\u98de\u884c\u5668\uff0c\u53ea\u6709\u6444\u50cf\u5934\uff08\u5982\u679c\u60a8\u60f3\u8981\u98de\u884c\u5668\u4f46\u4e0d\u5305\u542b\u5176\u8fd0\u52a8\u5b66\u7279\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u65cb\u7ffc\u6a21\u5f0f\u548c\u7269\u7406\u5f15\u64ce ExternalPhysicsEngine \uff09\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u79fb\u52a8\uff08\u4f7f\u7528 F1 \u67e5\u770b\u6309\u952e\u5e2e\u52a9\uff09\u3002\u60a8\u53ef\u4ee5\u6309\u4e0b\u5f55\u5236\u6309\u94ae\u6765\u8fde\u7eed\u751f\u6210\u56fe\u50cf\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528 API \u6765\u79fb\u52a8\u6444\u50cf\u5934\u5e76\u62cd\u6444\u56fe\u50cf\u3002 \u8981\u6fc0\u6d3b\u6b64\u6a21\u5f0f\uff0c\u8bf7\u7f16\u8f91\u60a8\u53ef\u4ee5\u5728 Documents\\AirSim \u6587\u4ef6\u5939\uff08\u6216 Linux \u4e0a\u7684 ~/Documents/AirSim\uff09\u4e2d\u627e\u5230\u7684 settings.json \uff0c\u5e76\u786e\u4fdd\u6839\u7ea7\u522b\u5b58\u5728\u4ee5\u4e0b\u503c\uff1a { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"ComputerVision\" } \u4ee5\u4e0b\u662f\u79fb\u52a8\u6444\u50cf\u5934\u5e76\u62cd\u6444\u56fe\u50cf\u7684 Python \u4ee3\u7801\u793a\u4f8b \u3002 \u6b64\u6a21\u5f0f\u53d7\u5230 UnrealCV \u9879\u76ee \u7684\u542f\u53d1\u3002 Setting Pose in Computer Vision Mode # To move around the environment using APIs you can use simSetVehiclePose API. This API takes position and orientation and sets that on the invisible vehicle where the front-center camera is located. All rest of the cameras move along keeping the relative position. If you don't want to change position (or orientation) then just set components of position (or orientation) to floating point nan values. The simGetVehiclePose allows to retrieve the current pose. You can also use simGetGroundTruthKinematics to get the quantities kinematics quantities for the movement. Many other non-vehicle specific APIs are also available such as segmentation APIs, collision APIs and camera APIs. Camera APIs # The simGetCameraInfo returns the pose (in world frame, NED coordinates, SI units) and FOV (in degrees) for the specified camera. Please see example usage . The simSetCameraPose sets the pose for the specified camera while taking an input pose as a combination of relative position and a quaternion in NED frame. The handy airsim.to_quaternion() function allows to convert pitch, roll, yaw to quaternion. For example, to set camera-0 to 15-degree pitch while maintaining the same position, you can use: camera_pose = airsim.Pose(airsim.Vector3r(0, 0, 0), airsim.to_quaternion(0.261799, 0, 0)) #PRY in radians client.simSetCameraPose(0, camera_pose); simSetCameraFov allows changing the Field-of-View of the camera at runtime. simSetDistortionParams , simGetDistortionParams allow setting and fetching the distortion parameters K1, K2, K3, P1, P2 All Camera APIs take in 3 common parameters apart from the API-specific ones, camera_name (str), vehicle_name (str) and external (bool, to indicate External Camera ). Camera and vehicle name is used to get the specific camera, if external is set to true , then the vehicle name is ignored. Also see external_camera.py for example usage of these APIs. Gimbal # You can set stabilization for pitch, roll or yaw for any camera using settings . Please see example usage . Changing Resolution and Camera Parameters # To change resolution, FOV etc, you can use settings.json . For example, below addition in settings.json sets parameters for scene capture and uses \"Computer Vision\" mode described above. If you omit any setting then below default values will be used. For more information see settings doc . If you are using stereo camera, currently the distance between left and right is fixed at 25 cm. { \"SettingsVersion\" : 1.2 , \"CameraDefaults\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"Width\" : 256 , \"Height\" : 144 , \"FOV_Degrees\" : 90 , \"AutoExposureSpeed\" : 100 , \"MotionBlurAmount\" : 0 } ] }, \"SimMode\" : \"ComputerVision\" } What Does Pixel Values Mean in Different Image Types? # Available ImageType Values # Scene = 0 , DepthPlanar = 1 , DepthPerspective = 2 , DepthVis = 3 , DisparityNormalized = 4 , Segmentation = 5 , SurfaceNormals = 6 , Infrared = 7 , OpticalFlow = 8 , OpticalFlowVis = 9 DepthPlanar and DepthPerspective # You normally want to retrieve the depth image as float (i.e. set pixels_as_float = true ) and specify ImageType = DepthPlanar or ImageType = DepthPerspective in ImageRequest . For ImageType = DepthPlanar , you get depth in camera plane, i.e., all points that are plane-parallel to the camera have same depth. For ImageType = DepthPerspective , you get depth from camera using a projection ray that hits that pixel. Depending on your use case, planner depth or perspective depth may be the ground truth image that you want. For example, you may be able to feed perspective depth to ROS package such as depth_image_proc to generate a point cloud. Or planner depth may be more compatible with estimated depth image generated by stereo algorithms such as SGM. DepthVis # When you specify ImageType = DepthVis in ImageRequest , you get an image that helps depth visualization. In this case, each pixel value is interpolated from black to white depending on depth in camera plane in meters. The pixels with pure white means depth of 100m or more while pure black means depth of 0 meters. DisparityNormalized # You normally want to retrieve disparity image as float (i.e. set pixels_as_float = true and specify ImageType = DisparityNormalized in ImageRequest ) in which case each pixel is (Xl - Xr)/Xmax , which is thereby normalized to values between 0 to 1. Segmentation # When you specify ImageType = Segmentation in ImageRequest , you get an image that gives you ground truth segmentation of the scene. At the startup, AirSim assigns value 0 to 255 to each mesh available in environment. This value is then mapped to a specific color in the pallet . The RGB values for each object ID can be found in this file . You can assign a specific value (limited to the range 0-255) to a specific mesh using APIs. For example, below Python code sets the object ID for the mesh called \"Ground\" to 20 in Blocks environment and hence changes its color in Segmentation view: success = client . simSetSegmentationObjectID ( \"Ground\" , 20 ); The return value is a boolean type that lets you know if the mesh was found. Notice that typical Unreal environments, like Blocks, usually have many other meshes that comprises of same object, for example, \"Ground_2\", \"Ground_3\" and so on. As it is tedious to set object ID for all of these meshes, AirSim also supports regular expressions. For example, the code below sets all meshes which have names starting with \"ground\" (ignoring case) to 21 with just one line: success = client . simSetSegmentationObjectID ( \"ground[\\w]*\" , 21 , True ); The return value is true if at least one mesh was found using regular expression matching. It is recommended that you request uncompressed image using this API to ensure you get precise RGB values for segmentation image: responses = client . simGetImages ([ ImageRequest ( 0 , AirSimImageType . Segmentation , False , False )]) img1d = np . fromstring ( response . image_data_uint8 , dtype = np . uint8 ) #get numpy array img_rgb = img1d . reshape ( response . height , response . width , 3 ) #reshape array to 3 channel image array H X W X 3 img_rgb = np . flipud ( img_rgb ) #original image is fliped vertically #find unique colors print ( np . unique ( img_rgb [:,:, 0 ], return_counts = True )) #red print ( np . unique ( img_rgb [:,:, 1 ], return_counts = True )) #green print ( np . unique ( img_rgb [:,:, 2 ], return_counts = True )) #blue A complete ready-to-run example can be found in segmentation.py . Unsetting object ID # An object's ID can be set to -1 to make it not show up on the segmentation image. How to Find Mesh Names? # To get desired ground truth segmentation you will need to know the names of the meshes in your Unreal environment. To do this, you will need to open up Unreal Environment in Unreal Editor and then inspect the names of the meshes you are interested in using the World Outliner. For example, below we see the mesh names for the ground in Blocks environment in right panel in the editor: If you don't know how to open Unreal Environment in Unreal Editor then try following the guide for building from source . Once you decide on the meshes you are interested, note down their names and use above API to set their object IDs. There are few settings available to change object ID generation behavior. Changing Colors for Object IDs # At present the color for each object ID is fixed as in this pallet . We will be adding ability to change colors for object IDs to desired values shortly. In the meantime you can open the segmentation image in your favorite image editor and get the RGB values you are interested in. Startup Object IDs # At the start, AirSim assigns object ID to each object found in environment of type UStaticMeshComponent or ALandscapeProxy . It then either uses mesh name or owner name (depending on settings), lower cases it, removes any chars below ASCII 97 to remove numbers and some punctuations, sums int value of all chars and modulo 255 to generate the object ID. In other words, all object with same alphabet chars would get same object ID. This heuristic is simple and effective for many Unreal environments but may not be what you want. In that case, please use above APIs to change object IDs to your desired values. There are few settings available to change this behavior. Getting Object ID for Mesh # The simGetSegmentationObjectID API allows you get object ID for given mesh name. Infrared # Currently this is just a map from object ID to grey scale 0-255. So any mesh with object ID 42 shows up with color (42, 42, 42). Please see segmentation section for more details on how to set object IDs. Typically noise setting can be applied for this image type to get slightly more realistic effect. We are still working on adding other infrared artifacts and any contributions are welcome. OpticalFlow and OpticalFlowVis # These image types return information about motion perceived by the point of view of the camera. OpticalFlow returns a 2-channel image where the channels correspond to vx and vy respectively. OpticalFlowVis is similar to OpticalFlow but converts flow data to RGB for a more 'visual' output. Example Code # A complete example of setting vehicle positions at random locations and orientations and then taking images can be found in GenerateImageGenerator.hpp . This example generates specified number of stereo images and ground truth disparity image and saving it to pfm format .","title":"\u56fe\u50cf APIs"},{"location":"image_apis/#image-apis","text":"Please read general API doc first if you are not familiar with AirSim APIs.","title":"Image APIs"},{"location":"image_apis/#getting-a-single-image","text":"Here's a sample code to get a single image from camera named \"0\". The returned value is bytes of png format image. To get uncompressed and other format as well as available cameras please see next sections.","title":"Getting a Single Image"},{"location":"image_apis/#python","text":"import airsim #pip install airsim # for car use CarClient() client = airsim . MultirotorClient () png_image = client . simGetImage ( \"0\" , airsim . ImageType . Scene ) # do something with image","title":"Python"},{"location":"image_apis/#c","text":"#include \"vehicles/multirotor/api/MultirotorRpcLibClient.hpp\" int getOneImage () { using namespace msr :: airlib ; // for car use CarRpcLibClient MultirotorRpcLibClient client ; std :: vector < uint8_t > png_image = client . simGetImage ( \"0\" , VehicleCameraBase :: ImageType :: Scene ); // do something with images }","title":"C++"},{"location":"image_apis/#getting-images-with-more-flexibility","text":"The simGetImages API which is slightly more complex to use than simGetImage API, for example, you can get left camera view, right camera view and depth image from left camera in a single API call. The simGetImages API also allows you to get uncompressed images as well as floating point single channel images (instead of 3 channel (RGB), each 8 bit).","title":"Getting Images with More Flexibility"},{"location":"image_apis/#python_1","text":"import airsim #pip install airsim # for car use CarClient() client = airsim . MultirotorClient () responses = client . simGetImages ([ # png format airsim . ImageRequest ( 0 , airsim . ImageType . Scene ), # uncompressed RGB array bytes airsim . ImageRequest ( 1 , airsim . ImageType . Scene , False , False ), # floating point uncompressed image airsim . ImageRequest ( 1 , airsim . ImageType . DepthPlanar , True )]) # do something with response which contains image data, pose, timestamp etc","title":"Python"},{"location":"image_apis/#using-airsim-images-with-numpy","text":"If you plan to use numpy for image manipulation, you should get uncompressed RGB image and then convert to numpy like this: responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . Scene , False , False )]) response = responses [ 0 ] # get numpy array img1d = np . fromstring ( response . image_data_uint8 , dtype = np . uint8 ) # reshape array to 4 channel image array H X W X 4 img_rgb = img1d . reshape ( response . height , response . width , 3 ) # original image is fliped vertically img_rgb = np . flipud ( img_rgb ) # write to png airsim . write_png ( os . path . normpath ( filename + '.png' ), img_rgb )","title":"Using AirSim Images with NumPy"},{"location":"image_apis/#quick-tips","text":"The API simGetImage returns binary string literal which means you can simply dump it in binary file to create a .png file. However if you want to process it in any other way than you can handy function airsim.string_to_uint8_array . This converts binary string literal to NumPy uint8 array. The API simGetImages can accept request for multiple image types from any cameras in single call. You can specify if image is png compressed, RGB uncompressed or float array. For png compressed images, you get binary string literal . For float array you get Python list of float64. You can convert this float array to NumPy 2D array using airsim.list_to_2d_float_array(response.image_data_float, response.width, response.height) You can also save float array to .pfm file (Portable Float Map format) using airsim.write_pfm() function. If you are looking to query position and orientation information in sync with a call to one of the image APIs, you can use client.simPause(True) and client.simPause(False) to pause the simulation while calling the image API and querying the desired physics state, ensuring that the physics state remains the same immediately after the image API call.","title":"Quick Tips"},{"location":"image_apis/#c_1","text":"int getStereoAndDepthImages () { using namespace msr :: airlib ; typedef VehicleCameraBase :: ImageRequest ImageRequest ; typedef VehicleCameraBase :: ImageResponse ImageResponse ; typedef VehicleCameraBase :: ImageType ImageType ; // for car use // CarRpcLibClient client; MultirotorRpcLibClient client ; // get right, left and depth images. First two as png, second as float16. std :: vector < ImageRequest > request = { //png format ImageRequest ( \"0\" , ImageType :: Scene ), //uncompressed RGB array bytes ImageRequest ( \"1\" , ImageType :: Scene , false , false ), //floating point uncompressed image ImageRequest ( \"1\" , ImageType :: DepthPlanar , true ) }; const std :: vector < ImageResponse >& response = client . simGetImages ( request ); // do something with response which contains image data, pose, timestamp etc }","title":"C++"},{"location":"image_apis/#ready-to-run-complete-examples","text":"","title":"Ready to Run Complete Examples"},{"location":"image_apis/#python_2","text":"For a more complete ready to run sample code please see sample code in AirSimClient project for multirotors or HelloCar sample . This code also demonstrates simple activities such as saving images in files or using numpy to manipulate images.","title":"Python"},{"location":"image_apis/#c_2","text":"For a more complete ready to run sample code please see sample code in HelloDrone project for multirotors or HelloCar project . See also other example code that generates specified number of stereo images along with ground truth depth and disparity and saving it to pfm format .","title":"C++"},{"location":"image_apis/#available-cameras","text":"These are the default cameras already available in each vehicle. Apart from these, you can add more cameras to the vehicles and external cameras which are not attached to any vehicle through the settings .","title":"Available Cameras"},{"location":"image_apis/#car","text":"The cameras on car can be accessed by following names in API calls: front_center , front_right , front_left , fpv and back_center . Here FPV camera is driver's head position in the car.","title":"Car"},{"location":"image_apis/#multirotor","text":"The cameras on the drone can be accessed by following names in API calls: front_center , front_right , front_left , bottom_center and back_center .","title":"Multirotor"},{"location":"image_apis/#computer-vision-mode","text":"Camera names are same as in multirotor.","title":"Computer Vision Mode"},{"location":"image_apis/#backward-compatibility-for-camera-names","text":"Before AirSim v1.2, cameras were accessed using ID numbers instead of names. For backward compatibility you can still use following ID numbers for above camera names in same order as above: \"0\" , \"1\" , \"2\" , \"3\" , \"4\" . In addition, camera name \"\" is also available to access the default camera which is generally the camera \"0\" .","title":"Backward compatibility for camera names"},{"location":"image_apis/#_1","text":"\u60a8\u53ef\u4ee5\u5728\u6240\u8c13\u7684\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u201d\u6a21\u5f0f\u4e0b\u4f7f\u7528 AirSim\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u7269\u7406\u5f15\u64ce\u5c06\u88ab\u7981\u7528\uff0c\u5e76\u4e14\u6ca1\u6709\u98de\u884c\u5668\uff0c\u53ea\u6709\u6444\u50cf\u5934\uff08\u5982\u679c\u60a8\u60f3\u8981\u98de\u884c\u5668\u4f46\u4e0d\u5305\u542b\u5176\u8fd0\u52a8\u5b66\u7279\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u65cb\u7ffc\u6a21\u5f0f\u548c\u7269\u7406\u5f15\u64ce ExternalPhysicsEngine \uff09\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u79fb\u52a8\uff08\u4f7f\u7528 F1 \u67e5\u770b\u6309\u952e\u5e2e\u52a9\uff09\u3002\u60a8\u53ef\u4ee5\u6309\u4e0b\u5f55\u5236\u6309\u94ae\u6765\u8fde\u7eed\u751f\u6210\u56fe\u50cf\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528 API \u6765\u79fb\u52a8\u6444\u50cf\u5934\u5e76\u62cd\u6444\u56fe\u50cf\u3002 \u8981\u6fc0\u6d3b\u6b64\u6a21\u5f0f\uff0c\u8bf7\u7f16\u8f91\u60a8\u53ef\u4ee5\u5728 Documents\\AirSim \u6587\u4ef6\u5939\uff08\u6216 Linux \u4e0a\u7684 ~/Documents/AirSim\uff09\u4e2d\u627e\u5230\u7684 settings.json \uff0c\u5e76\u786e\u4fdd\u6839\u7ea7\u522b\u5b58\u5728\u4ee5\u4e0b\u503c\uff1a { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"ComputerVision\" } \u4ee5\u4e0b\u662f\u79fb\u52a8\u6444\u50cf\u5934\u5e76\u62cd\u6444\u56fe\u50cf\u7684 Python \u4ee3\u7801\u793a\u4f8b \u3002 \u6b64\u6a21\u5f0f\u53d7\u5230 UnrealCV \u9879\u76ee \u7684\u542f\u53d1\u3002","title":"\"\u8ba1\u7b97\u673a\u89c6\u89c9\" \u6a21\u5f0f"},{"location":"image_apis/#setting-pose-in-computer-vision-mode","text":"To move around the environment using APIs you can use simSetVehiclePose API. This API takes position and orientation and sets that on the invisible vehicle where the front-center camera is located. All rest of the cameras move along keeping the relative position. If you don't want to change position (or orientation) then just set components of position (or orientation) to floating point nan values. The simGetVehiclePose allows to retrieve the current pose. You can also use simGetGroundTruthKinematics to get the quantities kinematics quantities for the movement. Many other non-vehicle specific APIs are also available such as segmentation APIs, collision APIs and camera APIs.","title":"Setting Pose in Computer Vision Mode"},{"location":"image_apis/#camera-apis","text":"The simGetCameraInfo returns the pose (in world frame, NED coordinates, SI units) and FOV (in degrees) for the specified camera. Please see example usage . The simSetCameraPose sets the pose for the specified camera while taking an input pose as a combination of relative position and a quaternion in NED frame. The handy airsim.to_quaternion() function allows to convert pitch, roll, yaw to quaternion. For example, to set camera-0 to 15-degree pitch while maintaining the same position, you can use: camera_pose = airsim.Pose(airsim.Vector3r(0, 0, 0), airsim.to_quaternion(0.261799, 0, 0)) #PRY in radians client.simSetCameraPose(0, camera_pose); simSetCameraFov allows changing the Field-of-View of the camera at runtime. simSetDistortionParams , simGetDistortionParams allow setting and fetching the distortion parameters K1, K2, K3, P1, P2 All Camera APIs take in 3 common parameters apart from the API-specific ones, camera_name (str), vehicle_name (str) and external (bool, to indicate External Camera ). Camera and vehicle name is used to get the specific camera, if external is set to true , then the vehicle name is ignored. Also see external_camera.py for example usage of these APIs.","title":"Camera APIs"},{"location":"image_apis/#gimbal","text":"You can set stabilization for pitch, roll or yaw for any camera using settings . Please see example usage .","title":"Gimbal"},{"location":"image_apis/#changing-resolution-and-camera-parameters","text":"To change resolution, FOV etc, you can use settings.json . For example, below addition in settings.json sets parameters for scene capture and uses \"Computer Vision\" mode described above. If you omit any setting then below default values will be used. For more information see settings doc . If you are using stereo camera, currently the distance between left and right is fixed at 25 cm. { \"SettingsVersion\" : 1.2 , \"CameraDefaults\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"Width\" : 256 , \"Height\" : 144 , \"FOV_Degrees\" : 90 , \"AutoExposureSpeed\" : 100 , \"MotionBlurAmount\" : 0 } ] }, \"SimMode\" : \"ComputerVision\" }","title":"Changing Resolution and Camera Parameters"},{"location":"image_apis/#what-does-pixel-values-mean-in-different-image-types","text":"","title":"What Does Pixel Values Mean in Different Image Types?"},{"location":"image_apis/#available-imagetype-values","text":"Scene = 0 , DepthPlanar = 1 , DepthPerspective = 2 , DepthVis = 3 , DisparityNormalized = 4 , Segmentation = 5 , SurfaceNormals = 6 , Infrared = 7 , OpticalFlow = 8 , OpticalFlowVis = 9","title":"Available ImageType Values"},{"location":"image_apis/#depthplanar-and-depthperspective","text":"You normally want to retrieve the depth image as float (i.e. set pixels_as_float = true ) and specify ImageType = DepthPlanar or ImageType = DepthPerspective in ImageRequest . For ImageType = DepthPlanar , you get depth in camera plane, i.e., all points that are plane-parallel to the camera have same depth. For ImageType = DepthPerspective , you get depth from camera using a projection ray that hits that pixel. Depending on your use case, planner depth or perspective depth may be the ground truth image that you want. For example, you may be able to feed perspective depth to ROS package such as depth_image_proc to generate a point cloud. Or planner depth may be more compatible with estimated depth image generated by stereo algorithms such as SGM.","title":"DepthPlanar and DepthPerspective"},{"location":"image_apis/#depthvis","text":"When you specify ImageType = DepthVis in ImageRequest , you get an image that helps depth visualization. In this case, each pixel value is interpolated from black to white depending on depth in camera plane in meters. The pixels with pure white means depth of 100m or more while pure black means depth of 0 meters.","title":"DepthVis"},{"location":"image_apis/#disparitynormalized","text":"You normally want to retrieve disparity image as float (i.e. set pixels_as_float = true and specify ImageType = DisparityNormalized in ImageRequest ) in which case each pixel is (Xl - Xr)/Xmax , which is thereby normalized to values between 0 to 1.","title":"DisparityNormalized"},{"location":"image_apis/#segmentation","text":"When you specify ImageType = Segmentation in ImageRequest , you get an image that gives you ground truth segmentation of the scene. At the startup, AirSim assigns value 0 to 255 to each mesh available in environment. This value is then mapped to a specific color in the pallet . The RGB values for each object ID can be found in this file . You can assign a specific value (limited to the range 0-255) to a specific mesh using APIs. For example, below Python code sets the object ID for the mesh called \"Ground\" to 20 in Blocks environment and hence changes its color in Segmentation view: success = client . simSetSegmentationObjectID ( \"Ground\" , 20 ); The return value is a boolean type that lets you know if the mesh was found. Notice that typical Unreal environments, like Blocks, usually have many other meshes that comprises of same object, for example, \"Ground_2\", \"Ground_3\" and so on. As it is tedious to set object ID for all of these meshes, AirSim also supports regular expressions. For example, the code below sets all meshes which have names starting with \"ground\" (ignoring case) to 21 with just one line: success = client . simSetSegmentationObjectID ( \"ground[\\w]*\" , 21 , True ); The return value is true if at least one mesh was found using regular expression matching. It is recommended that you request uncompressed image using this API to ensure you get precise RGB values for segmentation image: responses = client . simGetImages ([ ImageRequest ( 0 , AirSimImageType . Segmentation , False , False )]) img1d = np . fromstring ( response . image_data_uint8 , dtype = np . uint8 ) #get numpy array img_rgb = img1d . reshape ( response . height , response . width , 3 ) #reshape array to 3 channel image array H X W X 3 img_rgb = np . flipud ( img_rgb ) #original image is fliped vertically #find unique colors print ( np . unique ( img_rgb [:,:, 0 ], return_counts = True )) #red print ( np . unique ( img_rgb [:,:, 1 ], return_counts = True )) #green print ( np . unique ( img_rgb [:,:, 2 ], return_counts = True )) #blue A complete ready-to-run example can be found in segmentation.py .","title":"Segmentation"},{"location":"image_apis/#unsetting-object-id","text":"An object's ID can be set to -1 to make it not show up on the segmentation image.","title":"Unsetting object ID"},{"location":"image_apis/#how-to-find-mesh-names","text":"To get desired ground truth segmentation you will need to know the names of the meshes in your Unreal environment. To do this, you will need to open up Unreal Environment in Unreal Editor and then inspect the names of the meshes you are interested in using the World Outliner. For example, below we see the mesh names for the ground in Blocks environment in right panel in the editor: If you don't know how to open Unreal Environment in Unreal Editor then try following the guide for building from source . Once you decide on the meshes you are interested, note down their names and use above API to set their object IDs. There are few settings available to change object ID generation behavior.","title":"How to Find Mesh Names?"},{"location":"image_apis/#changing-colors-for-object-ids","text":"At present the color for each object ID is fixed as in this pallet . We will be adding ability to change colors for object IDs to desired values shortly. In the meantime you can open the segmentation image in your favorite image editor and get the RGB values you are interested in.","title":"Changing Colors for Object IDs"},{"location":"image_apis/#startup-object-ids","text":"At the start, AirSim assigns object ID to each object found in environment of type UStaticMeshComponent or ALandscapeProxy . It then either uses mesh name or owner name (depending on settings), lower cases it, removes any chars below ASCII 97 to remove numbers and some punctuations, sums int value of all chars and modulo 255 to generate the object ID. In other words, all object with same alphabet chars would get same object ID. This heuristic is simple and effective for many Unreal environments but may not be what you want. In that case, please use above APIs to change object IDs to your desired values. There are few settings available to change this behavior.","title":"Startup Object IDs"},{"location":"image_apis/#getting-object-id-for-mesh","text":"The simGetSegmentationObjectID API allows you get object ID for given mesh name.","title":"Getting Object ID for Mesh"},{"location":"image_apis/#infrared","text":"Currently this is just a map from object ID to grey scale 0-255. So any mesh with object ID 42 shows up with color (42, 42, 42). Please see segmentation section for more details on how to set object IDs. Typically noise setting can be applied for this image type to get slightly more realistic effect. We are still working on adding other infrared artifacts and any contributions are welcome.","title":"Infrared"},{"location":"image_apis/#opticalflow-and-opticalflowvis","text":"These image types return information about motion perceived by the point of view of the camera. OpticalFlow returns a 2-channel image where the channels correspond to vx and vy respectively. OpticalFlowVis is similar to OpticalFlow but converts flow data to RGB for a more 'visual' output.","title":"OpticalFlow and OpticalFlowVis"},{"location":"image_apis/#example-code","text":"A complete example of setting vehicle positions at random locations and orientations and then taking images can be found in GenerateImageGenerator.hpp . This example generates specified number of stereo images and ground truth disparity image and saving it to pfm format .","title":"Example Code"},{"location":"lidar/","text":"How to Use Lidar in AirSim # AirSim supports Lidar for multirotors and cars. The enablement of lidar and the other lidar settings can be configured via AirSimSettings json. Please see general sensors for information on configruation of general/shared sensor settings. Enabling lidar on a vehicle # By default, lidars are not enabled. To enable lidar, set the SensorType and Enabled attributes in settings json. \"Lidar1\" : { \"SensorType\" : 6 , \"Enabled\" : true , } Multiple lidars can be enabled on a vehicle. Lidar configuration # The following parameters can be configured right now via settings json. Parameter Description NumberOfChannels Number of channels/lasers of the lidar Range Range, in meters PointsPerSecond Number of points captured per second RotationsPerSecond Rotations per second HorizontalFOVStart Horizontal FOV start for the lidar, in degrees HorizontalFOVEnd Horizontal FOV end for the lidar, in degrees VerticalFOVUpper Vertical FOV upper limit for the lidar, in degrees VerticalFOVLower Vertical FOV lower limit for the lidar, in degrees X Y Z Position of the lidar relative to the vehicle (in NED, in meters) Roll Pitch Yaw Orientation of the lidar relative to the vehicle (in degrees, yaw-pitch-roll order to front vector +X) DataFrame Frame for the points in output (\"VehicleInertialFrame\" or \"SensorLocalFrame\") ExternalController Whether data is to be sent to external controller such as ArduPilot or PX4 if being used (default true ) (PX4 doesn't send Lidar data currently) e.g. { \"SeeDocsAt\" : \"https://microsoft.github.io/AirSim/settings/\" , \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"simpleflight\" , \"AutoCreate\" : true , \"Sensors\" : { \"LidarSensor1\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 100000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"HorizontalFOVStart\" : -20 , \"HorizontalFOVEnd\" : 20 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" }, \"LidarSensor2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 4 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" } } } } } Server side visualization for debugging # By default, the lidar points are not drawn on the viewport. To enable the drawing of hit laser points on the viewport, please enable setting DrawDebugPoints via settings json. \"Lidar1\" : { ... \"DrawDebugPoints\" : true }, Note: Enabling DrawDebugPoints can cause excessive memory usage and crash in releases v1.3.1 , v1.3.0 . This has been fixed in the main branch and should work in later releases Client API # Use getLidarData() API to retrieve the Lidar data. The API returns a Point-Cloud as a flat array of floats along with the timestamp of the capture and lidar pose. Point-Cloud: The floats represent [x,y,z] coordinate for each point hit within the range in the last scan. The frame for the points in the output is configurable using \"DataFrame\" attribute - \"\" or VehicleInertialFrame -- default; returned points are in vehicle inertial frame (in NED, in meters) SensorLocalFrame -- returned points are in lidar local frame (in NED, in meters) Lidar Pose: Lidar pose in the vehicle inertial frame (in NED, in meters) Can be used to transform points to other frames. Segmentation: The segmentation of each lidar point's collided object Python Examples # drone_lidar.py car_lidar.py sensorframe_lidar_pointcloud.py vehicleframe_lidar_pointcloud.py Coming soon # Visualization of lidar data on client side.","title":"\u6fc0\u5149\u96f7\u8fbe"},{"location":"lidar/#how-to-use-lidar-in-airsim","text":"AirSim supports Lidar for multirotors and cars. The enablement of lidar and the other lidar settings can be configured via AirSimSettings json. Please see general sensors for information on configruation of general/shared sensor settings.","title":"How to Use Lidar in AirSim"},{"location":"lidar/#enabling-lidar-on-a-vehicle","text":"By default, lidars are not enabled. To enable lidar, set the SensorType and Enabled attributes in settings json. \"Lidar1\" : { \"SensorType\" : 6 , \"Enabled\" : true , } Multiple lidars can be enabled on a vehicle.","title":"Enabling lidar on a vehicle"},{"location":"lidar/#lidar-configuration","text":"The following parameters can be configured right now via settings json. Parameter Description NumberOfChannels Number of channels/lasers of the lidar Range Range, in meters PointsPerSecond Number of points captured per second RotationsPerSecond Rotations per second HorizontalFOVStart Horizontal FOV start for the lidar, in degrees HorizontalFOVEnd Horizontal FOV end for the lidar, in degrees VerticalFOVUpper Vertical FOV upper limit for the lidar, in degrees VerticalFOVLower Vertical FOV lower limit for the lidar, in degrees X Y Z Position of the lidar relative to the vehicle (in NED, in meters) Roll Pitch Yaw Orientation of the lidar relative to the vehicle (in degrees, yaw-pitch-roll order to front vector +X) DataFrame Frame for the points in output (\"VehicleInertialFrame\" or \"SensorLocalFrame\") ExternalController Whether data is to be sent to external controller such as ArduPilot or PX4 if being used (default true ) (PX4 doesn't send Lidar data currently) e.g. { \"SeeDocsAt\" : \"https://microsoft.github.io/AirSim/settings/\" , \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"simpleflight\" , \"AutoCreate\" : true , \"Sensors\" : { \"LidarSensor1\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 100000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"HorizontalFOVStart\" : -20 , \"HorizontalFOVEnd\" : 20 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" }, \"LidarSensor2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 4 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" } } } } }","title":"Lidar configuration"},{"location":"lidar/#server-side-visualization-for-debugging","text":"By default, the lidar points are not drawn on the viewport. To enable the drawing of hit laser points on the viewport, please enable setting DrawDebugPoints via settings json. \"Lidar1\" : { ... \"DrawDebugPoints\" : true }, Note: Enabling DrawDebugPoints can cause excessive memory usage and crash in releases v1.3.1 , v1.3.0 . This has been fixed in the main branch and should work in later releases","title":"Server side visualization for debugging"},{"location":"lidar/#client-api","text":"Use getLidarData() API to retrieve the Lidar data. The API returns a Point-Cloud as a flat array of floats along with the timestamp of the capture and lidar pose. Point-Cloud: The floats represent [x,y,z] coordinate for each point hit within the range in the last scan. The frame for the points in the output is configurable using \"DataFrame\" attribute - \"\" or VehicleInertialFrame -- default; returned points are in vehicle inertial frame (in NED, in meters) SensorLocalFrame -- returned points are in lidar local frame (in NED, in meters) Lidar Pose: Lidar pose in the vehicle inertial frame (in NED, in meters) Can be used to transform points to other frames. Segmentation: The segmentation of each lidar point's collided object","title":"Client API"},{"location":"lidar/#python-examples","text":"drone_lidar.py car_lidar.py sensorframe_lidar_pointcloud.py vehicleframe_lidar_pointcloud.py","title":"Python Examples"},{"location":"lidar/#coming-soon","text":"Visualization of lidar data on client side.","title":"Coming soon"},{"location":"log_viewer/","text":"\u65e5\u5fd7\u67e5\u770b\u5668 # LogViewer \u662f\u4e00\u6b3e Windows WPF \u5e94\u7528\uff0c\u7528\u4e8e\u663e\u793a\u4ece\u865a\u5e7b\u6a21\u62df\u5668\u83b7\u53d6\u7684 MavLink \u6570\u636e\u6d41\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u76d1\u63a7\u65e0\u4eba\u673a\u98de\u884c\u8fc7\u7a0b\u4e2d\u7684\u8fd0\u884c\u60c5\u51b5\u3002 \u4f8b\u5982\uff0c\u4e0b\u56fe\u663e\u793a\u4e86\u6a21\u62df\u5668\u751f\u6210\u7684 x\u3001y \u548c z \u9640\u87ba\u4eea\u4f20\u611f\u5668\u4fe1\u606f\u7684\u5b9e\u65f6\u56fe\u8868\u3002 \u4f7f\u7528 # \u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5b83\u652f\u6301 .mavlink \u548c PX4 *.ulg \u6587\u4ef6\uff0c\u7136\u540e\u60a8\u5c06\u5728\u5de6\u4fa7\u7684\u6811\u72b6\u89c6\u56fe\u4e2d\u770b\u5230\u65e5\u5fd7\u7684\u5185\u5bb9\uff0c\u60a8\u9009\u62e9\u7684\u4efb\u4f55\u6307\u6807\u90fd\u5c06\u6dfb\u52a0\u5230\u53f3\u4fa7\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u6bcf\u4e2a\u56fe\u8868\u53f3\u4e0a\u89d2\u7684\u5c0f\u5173\u95ed\u6846\u5173\u95ed\u6bcf\u4e2a\u56fe\u8868\uff0c \u5e76\u4e14\u60a8\u53ef\u4ee5\u4f7f\u7528\u9876\u90e8\u5de5\u5177\u680f\u4e0a\u7684\u201c\u5206\u7ec4\u56fe\u8868\u201d\u6309\u94ae\u5c06\u56fe\u8868\u5206\u7ec4\uff0c\u4f7f\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u7eb5\u8f74\u3002 There is also a map option which will plot the GPS path the drone took. You can also load multiple log files so you can compare the data from each. Realtime # You can also get a realtime view if you connect the LogViewer before you run the simulation. For this to work you need to configure the settings.json with the following settings: { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"Vehicles\": { \"PX4\": { ..., \"LogViewerHostIp\": \"127.0.0.1\", \"LogViewerPort\": 14388, } } } Note: do not use the \"Logs\" setting when you want realtime LogViewer logging. Logging to a file using \"Logs\" is mutually exclusive with LogViewer logging. Simply press the blue connector button on the top right corner of the window, select the Socket tab , enter the port number 14388 , and your localhost network. If you are using WSL 2 on Windows then select vEthernet (WSL) . If you do choose vEthernet (WSL) then make sure you also set LocalHostIp and LogViewerHostIp to the matching WSL ethernet address, something like 172.31.64.1 . Then press the record button (triangle on the right hand side of the toolbar). Now start the simulator, and the data will start streaming into LogViewer. The drone view in Log Viewer shows the actual estimated position coming from the PX4, so that is a great way to check whether the PX4 is in sync with the simulator. Sometimes you can see some drift here as the attitude estimation catches up with reality, this can become more visible after a bad crash. Installation # If you can't build the LogViewer.sln, there is also a click once installer . Configuration # The magic port number 14388 can be configured in the simulator by editing the settings.json file . If you change the port number in LogViewer connection dialog then be sure to make the matching changes in your settings.json file. Debugging # See PX4 Logging for more information on how to use the LogViewer to debug situations you are setting.","title":"MavLink \u65e5\u5fd7\u67e5\u770b\u5668"},{"location":"log_viewer/#_1","text":"LogViewer \u662f\u4e00\u6b3e Windows WPF \u5e94\u7528\uff0c\u7528\u4e8e\u663e\u793a\u4ece\u865a\u5e7b\u6a21\u62df\u5668\u83b7\u53d6\u7684 MavLink \u6570\u636e\u6d41\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u76d1\u63a7\u65e0\u4eba\u673a\u98de\u884c\u8fc7\u7a0b\u4e2d\u7684\u8fd0\u884c\u60c5\u51b5\u3002 \u4f8b\u5982\uff0c\u4e0b\u56fe\u663e\u793a\u4e86\u6a21\u62df\u5668\u751f\u6210\u7684 x\u3001y \u548c z \u9640\u87ba\u4eea\u4f20\u611f\u5668\u4fe1\u606f\u7684\u5b9e\u65f6\u56fe\u8868\u3002","title":"\u65e5\u5fd7\u67e5\u770b\u5668"},{"location":"log_viewer/#_2","text":"\u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5b83\u652f\u6301 .mavlink \u548c PX4 *.ulg \u6587\u4ef6\uff0c\u7136\u540e\u60a8\u5c06\u5728\u5de6\u4fa7\u7684\u6811\u72b6\u89c6\u56fe\u4e2d\u770b\u5230\u65e5\u5fd7\u7684\u5185\u5bb9\uff0c\u60a8\u9009\u62e9\u7684\u4efb\u4f55\u6307\u6807\u90fd\u5c06\u6dfb\u52a0\u5230\u53f3\u4fa7\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u6bcf\u4e2a\u56fe\u8868\u53f3\u4e0a\u89d2\u7684\u5c0f\u5173\u95ed\u6846\u5173\u95ed\u6bcf\u4e2a\u56fe\u8868\uff0c \u5e76\u4e14\u60a8\u53ef\u4ee5\u4f7f\u7528\u9876\u90e8\u5de5\u5177\u680f\u4e0a\u7684\u201c\u5206\u7ec4\u56fe\u8868\u201d\u6309\u94ae\u5c06\u56fe\u8868\u5206\u7ec4\uff0c\u4f7f\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u7eb5\u8f74\u3002 There is also a map option which will plot the GPS path the drone took. You can also load multiple log files so you can compare the data from each.","title":"\u4f7f\u7528"},{"location":"log_viewer/#realtime","text":"You can also get a realtime view if you connect the LogViewer before you run the simulation. For this to work you need to configure the settings.json with the following settings: { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"Vehicles\": { \"PX4\": { ..., \"LogViewerHostIp\": \"127.0.0.1\", \"LogViewerPort\": 14388, } } } Note: do not use the \"Logs\" setting when you want realtime LogViewer logging. Logging to a file using \"Logs\" is mutually exclusive with LogViewer logging. Simply press the blue connector button on the top right corner of the window, select the Socket tab , enter the port number 14388 , and your localhost network. If you are using WSL 2 on Windows then select vEthernet (WSL) . If you do choose vEthernet (WSL) then make sure you also set LocalHostIp and LogViewerHostIp to the matching WSL ethernet address, something like 172.31.64.1 . Then press the record button (triangle on the right hand side of the toolbar). Now start the simulator, and the data will start streaming into LogViewer. The drone view in Log Viewer shows the actual estimated position coming from the PX4, so that is a great way to check whether the PX4 is in sync with the simulator. Sometimes you can see some drift here as the attitude estimation catches up with reality, this can become more visible after a bad crash.","title":"Realtime"},{"location":"log_viewer/#installation","text":"If you can't build the LogViewer.sln, there is also a click once installer .","title":"Installation"},{"location":"log_viewer/#configuration","text":"The magic port number 14388 can be configured in the simulator by editing the settings.json file . If you change the port number in LogViewer connection dialog then be sure to make the matching changes in your settings.json file.","title":"Configuration"},{"location":"log_viewer/#debugging","text":"See PX4 Logging for more information on how to use the LogViewer to debug situations you are setting.","title":"Debugging"},{"location":"map/","text":"\u4f4e\u7a7a\u98de\u884c\u5668\u76f8\u5173\u5730\u56fe # \u5730\u56fe(\u94fe\u63a5\u4e3a\u8be6\u7ec6\u4ecb\u7ecd) \u6982\u62ec(\u94fe\u63a5\u4e3a\u573a\u666f\u622a\u56fe) AbandonedPark \u5931\u843d\u7684\u516c\u56ed Africa \u975e\u6d32 AirSimNH \u57ce\u5e02\u8857\u533a Blocks \u65b9\u5757 Building_99 \u529e\u516c\u697c\u91cc CityEnviron \u57ce\u5e02\u73af\u5c9b Coastline \u6d77\u5cb8\u7ebf\u98ce\u666f LandscapeMountains \u5c71\u8109\u666f\u89c2 MSBuild2018 \u5931\u843d\u7684\u516c\u56ed TrapCamera \u5e72\u8349\u539f ZhangJiajie \u5f20\u5bb6\u754c \u4e8c\u8fdb\u5236\u7248\u672c\u4e0b\u8f7d\u94fe\u63a5 \u5730\u56fe\u8be6\u60c5","title":"\u5730\u56fe"},{"location":"map/#_1","text":"\u5730\u56fe(\u94fe\u63a5\u4e3a\u8be6\u7ec6\u4ecb\u7ecd) \u6982\u62ec(\u94fe\u63a5\u4e3a\u573a\u666f\u622a\u56fe) AbandonedPark \u5931\u843d\u7684\u516c\u56ed Africa \u975e\u6d32 AirSimNH \u57ce\u5e02\u8857\u533a Blocks \u65b9\u5757 Building_99 \u529e\u516c\u697c\u91cc CityEnviron \u57ce\u5e02\u73af\u5c9b Coastline \u6d77\u5cb8\u7ebf\u98ce\u666f LandscapeMountains \u5c71\u8109\u666f\u89c2 MSBuild2018 \u5931\u843d\u7684\u516c\u56ed TrapCamera \u5e72\u8349\u539f ZhangJiajie \u5f20\u5bb6\u754c \u4e8c\u8fdb\u5236\u7248\u672c\u4e0b\u8f7d\u94fe\u63a5 \u5730\u56fe\u8be6\u60c5","title":"\u4f4e\u7a7a\u98de\u884c\u5668\u76f8\u5173\u5730\u56fe"},{"location":"mavlinkcom/","text":"Welcome to MavLinkCom # MavLinkCom is a cross-platform C++ library that helps connect to and communicate with MavLink based vehicles. Specifically this library is designed to work well with PX4 based drones. Design # You can view and edit the Design.dgml diagram in Visual Studio. The following are the most important classes in this library. MavLinkNode # This is the base class for all MavLinkNodes (subclasses include MavLinkVehicle, MavLinkVideoClient and MavLinkVideoServer). The node connects to your mavlink enabled vehicle via a MavLinkConnection and provides methods for sending MavLinkMessages and MavLinkCommands and for subscribing to receive messages. This base class also stores the local system id and component id your app wants to use to identify itself to your remote vehicle. You can also call startHeartbeat to send regular heartbeat messages to keep the connection alive. MavLinkMessage # This is the encoded MavLinkMessage. For those who have used the mavlink.h C API, this is similar to mavlink_message_t. You do not create these manually, they are encoded from a strongly typed MavLinkMessageBase subclass. Strongly typed message and command classes # The MavLinkComGenerator parses the mavlink common.xml message definitions and generates all the MavLink* MavLinkMessageBase subclasses as well as a bunch of handy mavlink enums and a bunch of strongly typed MavLinkCommand subclasses. MavLinkMessageBase # This is the base class for a set of strongly typed message classes that are code generated by the MavLinkComGenerator project. This replaces the C messages defined in the mavlink C API and provides a slightly more object oriented way to send and receive messages via sendMessage on MavLinkNode. These classes have encode/decode methods that convert to and from the MavLinkMessage class. MavLinkCommand # This is the base class for a set of strongly typed command classes that are code generated by the MavLinkComGenerator project. This replaces the C definitions defined in the mavlink C API and provides a more object oriented way to send commands via the sendCommand method on MavLinkNode. The MavLinkNode takes care of turning these into the underlying mavlink COMMAND_LONG message. MavLinkConnection # This class provides static helper methods for creating connections to remote MavLink nodes, over serial ports, as well as UDP, or TCP sockets. This class provides a way to subscribe to receive messages from that node in a pub/sub way so you can have multiple subscribers on the same connection. MavLinkVehicle uses this to track various messages that define the overall vehicle state. MavLinkVehicle # MavLinkVehicle is a MavLinkNode that tracks various messages that define the overall vehicle state and provides a VehicleState struct containing a snapshot of that state, including home position, current orientation, local position, global position, and so on. This class also provides a bunch of helper methods that wrap commonly used commands providing simple method calls to do things like arm, disarm, takeoff, land, go to a local coordinate, and fly under offbaord control either by position or velocity control. MavLinkTcpServer # This helper class provides a way to setup a \"server\" that accepts MavLinkConnections from remote nodes. You can use this class to get a connection that you can then give to MavLinkVideoServer to serve images over MavLink. MavLinkFtpClient # This helper class takes a given MavLinkConnection and provides FTP client support for the MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL for vehicles that support the FTP capability. This class provides simple methods to list directory contents, and the get and put files. MavLinkVideoClient # This helper class takes a given MavLinkConnection and provides helper methods for requesting video from remote node and packaging up the MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE and MAVLINK_MSG_ID_ENCAPSULATED_DATA messages into simple to use MavLinkVideoFrames. MavLinkVideoServer # This helper class takes a given MavLinkConnection and provides the server side of the MavLinkVideoClient protocol, including helper methods for notifying when there is a video request to process (hasVideoRequest) and a method to send video frames (sendFrame) which will generate the right MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE and MAVLINK_MSG_ID_ENCAPSULATED_DATA sequence. Examples # The following code from the UnitTest project shows how to connect to a Pixhawk flight controller over USB serial port, then wait for the first heartbeat message to be received: auto connection = MavLinkConnection :: connectSerial ( \"drone\" , \"/dev/ttyACM0\" , 115200 , \"sh /etc/init.d/rc.usb \\n \" ); MavLinkHeartbeat heartbeat ; if ( ! waitForHeartbeat ( 10000 , heartbeat )) { throw std :: runtime_error ( \"Received no heartbeat from PX4 after 10 seconds\" ); } The following code connects to serial port, and then forwards all messages to and from QGroundControl to that drone using another connection that is joined to the drone stream. auto droneConnection = MavLinkConnection :: connectSerial ( \"drone\" , \"/dev/ttyACM0\" , 115200 , \"sh /etc/init.d/rc.usb \\n \" ); auto proxyConnection = MavLinkConnection :: connectRemoteUdp ( \"qgc\" , \"127.0.0.1\" , \"127.0.0.1\" , 14550 ); droneConnection -> join ( proxyConnection ); The following code then takes that connection and turns on heartBeats and starts tracking vehicle information using local system id 166 and component id 1. auto vehicle = std :: make_shared < MavLinkVehicle > ( 166 , 1 ); vehicle -> connect ( connection ); vehicle -> startHeartbeat (); std :: this_thread :: sleep_for ( std :: chrono :: seconds ( 5 )); VehicleState state = vehicle -> getVehicleState (); printf ( \"Home position is %s, %f,%f,%f \\n \" , state . home . is_set ? \"set\" : \"not set\" , state . home . global_pos . lat , state . home . global_pos . lon , state . home . global_pos . alt ); The following code uses the vehicle object to arm the drone and take off and wait for the takeoff altitude to be reached: bool rc = false ; if ( ! vehicle -> armDisarm ( true ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"arm command failed \\n \" ); return ; } if ( ! vehicle -> takeoff ( targetAlt ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"takeoff command failed \\n \" ); return ; } int version = vehicle -> getVehicleStateVersion (); while ( true ) { int newVersion = vehicle -> getVehicleStateVersion (); if ( version != newVersion ) { VehicleState state = vehicle -> getVehicleState (); float alt = state . local_est . pos . z ; if ( alt >= targetAlt - delta && alt <= targetAlt + delta ) { reached = true ; printf ( \"Target altitude reached \\n \" ); break ; } } else { std :: this_thread :: sleep_for ( std :: chrono :: milliseconds ( 10 )); } } The following code uses offboard control to make the drone fly in a circle with camera pointed at the center. Here we use the subscribe method to check each new local position message to indicate so we can compute the new velocity vector as soon as that new position is received. We request a high rate for those messages using setMessageInterval to ensure smooth circular orbit. vehicle -> setMessageInterval (( int ) MavLinkMessageIds :: MAVLINK_MSG_ID_LOCAL_POSITION_NED , 30 ); vehicle -> requestControl (); int subscription = vehicle -> getConnection () -> subscribe ( [ & ]( std :: shared_ptr < MavLinkConnection > connection , const MavLinkMessage & m ) { if ( m . msgid == ( int ) MavLinkMessageIds :: MAVLINK_MSG_ID_LOCAL_POSITION_NED ) { // convert generic msg to strongly typed message. MavLinkLocalPositionNed localPos ; localPos . decode ( msg ); float x = localPos . x ; float y = localPos . y ; float dx = x - cx ; float dy = y - cy ; float angle = atan2 ( dy , dx ); if ( angle < 0 ) angle += M_PI * 2 ; float tangent = angle + M_PI_2 ; double newvx = orbitSpeed * cos ( tangent ); double newvy = orbitSpeed * sin ( tangent ); float heading = angle + M_PI ; vehicle -> moveByLocalVelocityWithAltHold ( newvx , newvy , altitude , true , heading ); } }); The following code stops flying the drone in offboard mode and tells the drone to loiter at its current location. This version of the code shows how to use the AsyncResult without blocking on a wait call. vehicle -> releaseControl (); if ( vehicle -> loiter (). then ([ = ]( bool rc ) { printf ( \"loiter command %s \\n \" , rc ? \"succeeded\" : \"failed\" ); } The following code gets all configurable parameters from the drone and prints them: auto list = vehicle -> getParamList (); auto end = list . end (); int count = 0 ; for ( auto iter = list . begin (); iter < end ; iter ++ ) { count ++ ; MavLinkParameter p = * iter ; if ( p . type == MAV_PARAM_TYPE_REAL32 || p . type == MAV_PARAM_TYPE_REAL64 ) { printf ( \"%s=%f \\n \" , p . name . c_str (), p . value ); } else { printf ( \"%s=%d \\n \" , p . name . c_str (), static_cast < int > ( p . value )); } } The following code sets a parameter on the Pixhawk to disable the USB safety check (this is handy if you are controlling the Pixhawk over USB using another onboard computer that is part of the drone itself). You should NOT do this if you are connecting your PC or laptop to the drone over USB. MavLinkParameter p ; p . name = \"CBRK_USB_CHK\" ; p . value = 197848 ; if ( ! vehicle -> setParameter ( p ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"Setting the CBRK_USB_CHK failed\" ); } MavLinkVehicle actually has a helper method for this called allowFlightControlOverUsb, so now you know how it is implemented :-) Advanced Connections # You can wire up different configurations of mavlink pipelines using the MavLinkConnection class \"join\" method as shown below. Example 1, we connect to PX4 over serial, and proxy those messages through to QGroundControl and the LogViewer who are listening on remote ports. Example 2: simulation can talk to jMavSim and jMavSim connects to PX4. jMavSim can also manage multiple connections, so it can talk to unreal simulator. Another MavLinkConnection can be joined to proxy connections that jMavSim doesn't support, like the LogViewer or a remote camera node. Example 3: we use MavLinkConnection to connect to PX4 over serial, then join additional connections for all our remote nodes including jMavSim. Example 4: We can also do distributed systems to control the drone remotely:","title":"MavLinkCom"},{"location":"mavlinkcom/#welcome-to-mavlinkcom","text":"MavLinkCom is a cross-platform C++ library that helps connect to and communicate with MavLink based vehicles. Specifically this library is designed to work well with PX4 based drones.","title":"Welcome to MavLinkCom"},{"location":"mavlinkcom/#design","text":"You can view and edit the Design.dgml diagram in Visual Studio. The following are the most important classes in this library.","title":"Design"},{"location":"mavlinkcom/#mavlinknode","text":"This is the base class for all MavLinkNodes (subclasses include MavLinkVehicle, MavLinkVideoClient and MavLinkVideoServer). The node connects to your mavlink enabled vehicle via a MavLinkConnection and provides methods for sending MavLinkMessages and MavLinkCommands and for subscribing to receive messages. This base class also stores the local system id and component id your app wants to use to identify itself to your remote vehicle. You can also call startHeartbeat to send regular heartbeat messages to keep the connection alive.","title":"MavLinkNode"},{"location":"mavlinkcom/#mavlinkmessage","text":"This is the encoded MavLinkMessage. For those who have used the mavlink.h C API, this is similar to mavlink_message_t. You do not create these manually, they are encoded from a strongly typed MavLinkMessageBase subclass.","title":"MavLinkMessage"},{"location":"mavlinkcom/#strongly-typed-message-and-command-classes","text":"The MavLinkComGenerator parses the mavlink common.xml message definitions and generates all the MavLink* MavLinkMessageBase subclasses as well as a bunch of handy mavlink enums and a bunch of strongly typed MavLinkCommand subclasses.","title":"Strongly typed message and command classes"},{"location":"mavlinkcom/#mavlinkmessagebase","text":"This is the base class for a set of strongly typed message classes that are code generated by the MavLinkComGenerator project. This replaces the C messages defined in the mavlink C API and provides a slightly more object oriented way to send and receive messages via sendMessage on MavLinkNode. These classes have encode/decode methods that convert to and from the MavLinkMessage class.","title":"MavLinkMessageBase"},{"location":"mavlinkcom/#mavlinkcommand","text":"This is the base class for a set of strongly typed command classes that are code generated by the MavLinkComGenerator project. This replaces the C definitions defined in the mavlink C API and provides a more object oriented way to send commands via the sendCommand method on MavLinkNode. The MavLinkNode takes care of turning these into the underlying mavlink COMMAND_LONG message.","title":"MavLinkCommand"},{"location":"mavlinkcom/#mavlinkconnection","text":"This class provides static helper methods for creating connections to remote MavLink nodes, over serial ports, as well as UDP, or TCP sockets. This class provides a way to subscribe to receive messages from that node in a pub/sub way so you can have multiple subscribers on the same connection. MavLinkVehicle uses this to track various messages that define the overall vehicle state.","title":"MavLinkConnection"},{"location":"mavlinkcom/#mavlinkvehicle","text":"MavLinkVehicle is a MavLinkNode that tracks various messages that define the overall vehicle state and provides a VehicleState struct containing a snapshot of that state, including home position, current orientation, local position, global position, and so on. This class also provides a bunch of helper methods that wrap commonly used commands providing simple method calls to do things like arm, disarm, takeoff, land, go to a local coordinate, and fly under offbaord control either by position or velocity control.","title":"MavLinkVehicle"},{"location":"mavlinkcom/#mavlinktcpserver","text":"This helper class provides a way to setup a \"server\" that accepts MavLinkConnections from remote nodes. You can use this class to get a connection that you can then give to MavLinkVideoServer to serve images over MavLink.","title":"MavLinkTcpServer"},{"location":"mavlinkcom/#mavlinkftpclient","text":"This helper class takes a given MavLinkConnection and provides FTP client support for the MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL for vehicles that support the FTP capability. This class provides simple methods to list directory contents, and the get and put files.","title":"MavLinkFtpClient"},{"location":"mavlinkcom/#mavlinkvideoclient","text":"This helper class takes a given MavLinkConnection and provides helper methods for requesting video from remote node and packaging up the MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE and MAVLINK_MSG_ID_ENCAPSULATED_DATA messages into simple to use MavLinkVideoFrames.","title":"MavLinkVideoClient"},{"location":"mavlinkcom/#mavlinkvideoserver","text":"This helper class takes a given MavLinkConnection and provides the server side of the MavLinkVideoClient protocol, including helper methods for notifying when there is a video request to process (hasVideoRequest) and a method to send video frames (sendFrame) which will generate the right MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE and MAVLINK_MSG_ID_ENCAPSULATED_DATA sequence.","title":"MavLinkVideoServer"},{"location":"mavlinkcom/#examples","text":"The following code from the UnitTest project shows how to connect to a Pixhawk flight controller over USB serial port, then wait for the first heartbeat message to be received: auto connection = MavLinkConnection :: connectSerial ( \"drone\" , \"/dev/ttyACM0\" , 115200 , \"sh /etc/init.d/rc.usb \\n \" ); MavLinkHeartbeat heartbeat ; if ( ! waitForHeartbeat ( 10000 , heartbeat )) { throw std :: runtime_error ( \"Received no heartbeat from PX4 after 10 seconds\" ); } The following code connects to serial port, and then forwards all messages to and from QGroundControl to that drone using another connection that is joined to the drone stream. auto droneConnection = MavLinkConnection :: connectSerial ( \"drone\" , \"/dev/ttyACM0\" , 115200 , \"sh /etc/init.d/rc.usb \\n \" ); auto proxyConnection = MavLinkConnection :: connectRemoteUdp ( \"qgc\" , \"127.0.0.1\" , \"127.0.0.1\" , 14550 ); droneConnection -> join ( proxyConnection ); The following code then takes that connection and turns on heartBeats and starts tracking vehicle information using local system id 166 and component id 1. auto vehicle = std :: make_shared < MavLinkVehicle > ( 166 , 1 ); vehicle -> connect ( connection ); vehicle -> startHeartbeat (); std :: this_thread :: sleep_for ( std :: chrono :: seconds ( 5 )); VehicleState state = vehicle -> getVehicleState (); printf ( \"Home position is %s, %f,%f,%f \\n \" , state . home . is_set ? \"set\" : \"not set\" , state . home . global_pos . lat , state . home . global_pos . lon , state . home . global_pos . alt ); The following code uses the vehicle object to arm the drone and take off and wait for the takeoff altitude to be reached: bool rc = false ; if ( ! vehicle -> armDisarm ( true ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"arm command failed \\n \" ); return ; } if ( ! vehicle -> takeoff ( targetAlt ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"takeoff command failed \\n \" ); return ; } int version = vehicle -> getVehicleStateVersion (); while ( true ) { int newVersion = vehicle -> getVehicleStateVersion (); if ( version != newVersion ) { VehicleState state = vehicle -> getVehicleState (); float alt = state . local_est . pos . z ; if ( alt >= targetAlt - delta && alt <= targetAlt + delta ) { reached = true ; printf ( \"Target altitude reached \\n \" ); break ; } } else { std :: this_thread :: sleep_for ( std :: chrono :: milliseconds ( 10 )); } } The following code uses offboard control to make the drone fly in a circle with camera pointed at the center. Here we use the subscribe method to check each new local position message to indicate so we can compute the new velocity vector as soon as that new position is received. We request a high rate for those messages using setMessageInterval to ensure smooth circular orbit. vehicle -> setMessageInterval (( int ) MavLinkMessageIds :: MAVLINK_MSG_ID_LOCAL_POSITION_NED , 30 ); vehicle -> requestControl (); int subscription = vehicle -> getConnection () -> subscribe ( [ & ]( std :: shared_ptr < MavLinkConnection > connection , const MavLinkMessage & m ) { if ( m . msgid == ( int ) MavLinkMessageIds :: MAVLINK_MSG_ID_LOCAL_POSITION_NED ) { // convert generic msg to strongly typed message. MavLinkLocalPositionNed localPos ; localPos . decode ( msg ); float x = localPos . x ; float y = localPos . y ; float dx = x - cx ; float dy = y - cy ; float angle = atan2 ( dy , dx ); if ( angle < 0 ) angle += M_PI * 2 ; float tangent = angle + M_PI_2 ; double newvx = orbitSpeed * cos ( tangent ); double newvy = orbitSpeed * sin ( tangent ); float heading = angle + M_PI ; vehicle -> moveByLocalVelocityWithAltHold ( newvx , newvy , altitude , true , heading ); } }); The following code stops flying the drone in offboard mode and tells the drone to loiter at its current location. This version of the code shows how to use the AsyncResult without blocking on a wait call. vehicle -> releaseControl (); if ( vehicle -> loiter (). then ([ = ]( bool rc ) { printf ( \"loiter command %s \\n \" , rc ? \"succeeded\" : \"failed\" ); } The following code gets all configurable parameters from the drone and prints them: auto list = vehicle -> getParamList (); auto end = list . end (); int count = 0 ; for ( auto iter = list . begin (); iter < end ; iter ++ ) { count ++ ; MavLinkParameter p = * iter ; if ( p . type == MAV_PARAM_TYPE_REAL32 || p . type == MAV_PARAM_TYPE_REAL64 ) { printf ( \"%s=%f \\n \" , p . name . c_str (), p . value ); } else { printf ( \"%s=%d \\n \" , p . name . c_str (), static_cast < int > ( p . value )); } } The following code sets a parameter on the Pixhawk to disable the USB safety check (this is handy if you are controlling the Pixhawk over USB using another onboard computer that is part of the drone itself). You should NOT do this if you are connecting your PC or laptop to the drone over USB. MavLinkParameter p ; p . name = \"CBRK_USB_CHK\" ; p . value = 197848 ; if ( ! vehicle -> setParameter ( p ). wait ( 3000 , & rc ) || ! rc ) { printf ( \"Setting the CBRK_USB_CHK failed\" ); } MavLinkVehicle actually has a helper method for this called allowFlightControlOverUsb, so now you know how it is implemented :-)","title":"Examples"},{"location":"mavlinkcom/#advanced-connections","text":"You can wire up different configurations of mavlink pipelines using the MavLinkConnection class \"join\" method as shown below. Example 1, we connect to PX4 over serial, and proxy those messages through to QGroundControl and the LogViewer who are listening on remote ports. Example 2: simulation can talk to jMavSim and jMavSim connects to PX4. jMavSim can also manage multiple connections, so it can talk to unreal simulator. Another MavLinkConnection can be joined to proxy connections that jMavSim doesn't support, like the LogViewer or a remote camera node. Example 3: we use MavLinkConnection to connect to PX4 over serial, then join additional connections for all our remote nodes including jMavSim. Example 4: We can also do distributed systems to control the drone remotely:","title":"Advanced Connections"},{"location":"mavlinkcom_mocap/","text":"Welcome to MavLinkMoCap # This folder contains the MavLinkMoCap library which connects to a OptiTrack camera system for accurate indoor location. Dependencies: # OptiTrack Motive . MavLinkCom . Setup RigidBody # First you need to define a RigidBody named 'Quadrocopter' using Motive. See Rigid_Body_Tracking . MavLinkTest # Use MavLinkTest to talk to your PX4 drone, with \"-server:addr:port\", for example, when connected to drone wifi use: MavLinkMoCap -server:10.42.0.228:14590 \"-project:D:\\OptiTrack\\Motive Project 2016-12-19 04.09.42 PM.ttp\" This publishes the ATT_POS_MOCAP messages and you can proxy those through to the PX4 by running MavLinkTest on the dronebrain using: MavLinkTest -serial:/dev/ttyACM0,115200 -proxy:10.42.0.228:14590 Now the drone will get the ATT_POS_MOCAP and you should see the light turn green meaning it is now has a home position and is ready to fly.","title":"MavLink MoCap"},{"location":"mavlinkcom_mocap/#welcome-to-mavlinkmocap","text":"This folder contains the MavLinkMoCap library which connects to a OptiTrack camera system for accurate indoor location.","title":"Welcome to MavLinkMoCap"},{"location":"mavlinkcom_mocap/#dependencies","text":"OptiTrack Motive . MavLinkCom .","title":"Dependencies:"},{"location":"mavlinkcom_mocap/#setup-rigidbody","text":"First you need to define a RigidBody named 'Quadrocopter' using Motive. See Rigid_Body_Tracking .","title":"Setup RigidBody"},{"location":"mavlinkcom_mocap/#mavlinktest","text":"Use MavLinkTest to talk to your PX4 drone, with \"-server:addr:port\", for example, when connected to drone wifi use: MavLinkMoCap -server:10.42.0.228:14590 \"-project:D:\\OptiTrack\\Motive Project 2016-12-19 04.09.42 PM.ttp\" This publishes the ATT_POS_MOCAP messages and you can proxy those through to the PX4 by running MavLinkTest on the dronebrain using: MavLinkTest -serial:/dev/ttyACM0,115200 -proxy:10.42.0.228:14590 Now the drone will get the ATT_POS_MOCAP and you should see the light turn green meaning it is now has a home position and is ready to fly.","title":"MavLinkTest"},{"location":"meshes/","text":"How to Access Meshes in AIRSIM # AirSim supports the ability to access the static meshes that make up the scene. Mesh structure # Each mesh is represented with the below struct. struct MeshPositionVertexBuffersResponse { Vector3r position ; Quaternionr orientation ; std :: vector < float > vertices ; std :: vector < uint32_t > indices ; std :: string name ; }; The position and orientation are in the Unreal coordinate system. The mesh itself is a triangular mesh represented by the vertices and the indices. The triangular mesh type is typically called a Face-Vertex Mesh. This means every triplet of indices hold the indexes of the vertices that make up the triangle/face. The x,y,z coordinates of the vertices are all stored in a single vector. This means the vertices vector is Nx3 where N is number of vertices. The position of the vertices are the global positions in the Unreal coordinate system. This means they have already been transformed by the position and orientation. How to use # The API to get the meshes in the scene is quite simple. However, one should note that the function call is very expensive and should very rarely be called. In general this is ok because this function only accesses the static meshes which for most applications are not changing during the duration of your program. Note that you will have to use a 3rdparty library or your own custom code to actually interact with the received meshes. Below I utilize the Python bindings of libigl to visualize the received meshes. import airsim AIRSIM_HOST_IP = '127.0.0.1' client = airsim . VehicleClient ( ip = AIRSIM_HOST_IP ) client . confirmConnection () # List of returned meshes are received via this function meshes = client . simGetMeshPositionVertexBuffers () index = 0 for m in meshes : # Finds one of the cube meshes in the Blocks environment if 'cube' in m . name : # Code from here on relies on libigl. Libigl uses pybind11 to wrap C++ code. So here the built pyigl.so # library is in the same directory as this example code. # This is here as code for your own mesh library should require something similar from pyigl import * from iglhelpers import * # Convert the lists to numpy arrays vertex_list = np . array ( m . vertices , dtype = np . float32 ) indices = np . array ( m . indices , dtype = np . uint32 ) num_vertices = int ( len ( vertex_list ) / 3 ) num_indices = len ( indices ) # Libigl requires the shape to be Nx3 where N is number of vertices or indices # It also requires the actual type to be double(float64) for vertices and int64 for the triangles/indices vertices_reshaped = vertex_list . reshape (( num_vertices , 3 )) indices_reshaped = indices . reshape (( int ( num_indices / 3 ), 3 )) vertices_reshaped = vertices_reshaped . astype ( np . float64 ) indices_reshaped = indices_reshaped . astype ( np . int64 ) # Libigl function to convert to internal Eigen format v_eig = p2e ( vertices_reshaped ) i_eig = p2e ( indices_reshaped ) # View the mesh viewer = igl . glfw . Viewer () viewer . data () . set_mesh ( v_eig , i_eig ) viewer . launch () break","title":"\u7f51\u683c\u9876\u70b9\u7f13\u51b2\u533a"},{"location":"meshes/#how-to-access-meshes-in-airsim","text":"AirSim supports the ability to access the static meshes that make up the scene.","title":"How to Access Meshes in AIRSIM"},{"location":"meshes/#mesh-structure","text":"Each mesh is represented with the below struct. struct MeshPositionVertexBuffersResponse { Vector3r position ; Quaternionr orientation ; std :: vector < float > vertices ; std :: vector < uint32_t > indices ; std :: string name ; }; The position and orientation are in the Unreal coordinate system. The mesh itself is a triangular mesh represented by the vertices and the indices. The triangular mesh type is typically called a Face-Vertex Mesh. This means every triplet of indices hold the indexes of the vertices that make up the triangle/face. The x,y,z coordinates of the vertices are all stored in a single vector. This means the vertices vector is Nx3 where N is number of vertices. The position of the vertices are the global positions in the Unreal coordinate system. This means they have already been transformed by the position and orientation.","title":"Mesh structure"},{"location":"meshes/#how-to-use","text":"The API to get the meshes in the scene is quite simple. However, one should note that the function call is very expensive and should very rarely be called. In general this is ok because this function only accesses the static meshes which for most applications are not changing during the duration of your program. Note that you will have to use a 3rdparty library or your own custom code to actually interact with the received meshes. Below I utilize the Python bindings of libigl to visualize the received meshes. import airsim AIRSIM_HOST_IP = '127.0.0.1' client = airsim . VehicleClient ( ip = AIRSIM_HOST_IP ) client . confirmConnection () # List of returned meshes are received via this function meshes = client . simGetMeshPositionVertexBuffers () index = 0 for m in meshes : # Finds one of the cube meshes in the Blocks environment if 'cube' in m . name : # Code from here on relies on libigl. Libigl uses pybind11 to wrap C++ code. So here the built pyigl.so # library is in the same directory as this example code. # This is here as code for your own mesh library should require something similar from pyigl import * from iglhelpers import * # Convert the lists to numpy arrays vertex_list = np . array ( m . vertices , dtype = np . float32 ) indices = np . array ( m . indices , dtype = np . uint32 ) num_vertices = int ( len ( vertex_list ) / 3 ) num_indices = len ( indices ) # Libigl requires the shape to be Nx3 where N is number of vertices or indices # It also requires the actual type to be double(float64) for vertices and int64 for the triangles/indices vertices_reshaped = vertex_list . reshape (( num_vertices , 3 )) indices_reshaped = indices . reshape (( int ( num_indices / 3 ), 3 )) vertices_reshaped = vertices_reshaped . astype ( np . float64 ) indices_reshaped = indices_reshaped . astype ( np . int64 ) # Libigl function to convert to internal Eigen format v_eig = p2e ( vertices_reshaped ) i_eig = p2e ( indices_reshaped ) # View the mesh viewer = igl . glfw . Viewer () viewer . data () . set_mesh ( v_eig , i_eig ) viewer . launch () break","title":"How to use"},{"location":"modify_recording_data/","text":"\u4fee\u6539\u8bb0\u5f55\u6570\u636e # AirSim has a Recording feature to easily collect data and images. The Recording APIs also allows starting and stopping the recording using API. However, the data recorded by default might not be sufficient for your use cases, and it might be preferable to record additional data such as IMU, GPS sensors, Rotor speed for copters, etc. You can use the existing Python and C++ APIs to get the information and store it as required, especially for Lidar. Another option for adding small fields such as GPS or internal data such as Unreal position or something else is possible through modifying the recording methods inside AirSim. This page describes the specific methods which you might need to change. The recorded data is written in a airsim_rec.txt file in a tab-separated format, with images in an images/ folder. The entire folder is by default present in the Documents folder (or specified in settings) with the timestamp of when the recording started in %Y-%M-%D-%H-%M-%S format. Car vehicle records the following fields - VehicleName TimeStamp POS_X POS_Y POS_Z Q_W Q_X Q_Y Q_Z Throttle Steering Brake Gear Handbrake RPM Speed ImageFile For Multirotor - VehicleName TimeStamp POS_X POS_Y POS_Z Q_W Q_X Q_Y Q_Z ImageFile \u4ee3\u7801\u6539\u53d8 # Note that this requires building and using AirSim from source. You can compile a binary yourself after modifying if needed. The primary method which fills the data to be stored is PawnSimApi::getRecordFileLine , it's the base method for all the vehicles, and Car overrides it to log additional data, as can be seen in CarPawnSimApi::getRecordFileLine . To record additional data for multirotor, you can add a similar method in MultirotorPawnSimApi.cpp/h files which overrides the base class implementation and append other data. The currently logged data can also be modified and removed as needed. E.g. recording GPS, IMU and Barometer data also for multirotor - // MultirotorPawnSimApi.cpp std :: string MultirotorPawnSimApi::getRecordFileLine ( bool is_header_line ) const { std :: string common_line = PawnSimApi :: getRecordFileLine ( is_header_line ); if ( is_header_line ) { return common_line + \"Latitude \\t Longitude \\t Altitude \\t Pressure \\t AccX \\t AccY \\t AccZ \\t \" ; } const auto & state = vehicle_api_ -> getMultirotorState (); const auto & bar_data = vehicle_api_ -> getBarometerData ( \"\" ); const auto & imu_data = vehicle_api_ -> getImuData ( \"\" ); std :: ostringstream ss ; ss << common_line ; ss << state . gps_location . latitude << \" \\t \" << state . gps_location . longitude << \" \\t \" << state . gps_location . altitude << \" \\t \" ; ss << bar_data . pressure << \" \\t \" ; ss << imu_data . linear_acceleration . x () << \" \\t \" << imu_data . linear_acceleration . y () << \" \\t \" << imu_data . linear_acceleration . z () << \" \\t \" ; return ss . str (); } // MultirotorPawnSimApi.h virtual std :: string getRecordFileLine ( bool is_header_line ) const override ;","title":"\u4fee\u6539\u8bb0\u5f55\u6570\u636e"},{"location":"modify_recording_data/#_1","text":"AirSim has a Recording feature to easily collect data and images. The Recording APIs also allows starting and stopping the recording using API. However, the data recorded by default might not be sufficient for your use cases, and it might be preferable to record additional data such as IMU, GPS sensors, Rotor speed for copters, etc. You can use the existing Python and C++ APIs to get the information and store it as required, especially for Lidar. Another option for adding small fields such as GPS or internal data such as Unreal position or something else is possible through modifying the recording methods inside AirSim. This page describes the specific methods which you might need to change. The recorded data is written in a airsim_rec.txt file in a tab-separated format, with images in an images/ folder. The entire folder is by default present in the Documents folder (or specified in settings) with the timestamp of when the recording started in %Y-%M-%D-%H-%M-%S format. Car vehicle records the following fields - VehicleName TimeStamp POS_X POS_Y POS_Z Q_W Q_X Q_Y Q_Z Throttle Steering Brake Gear Handbrake RPM Speed ImageFile For Multirotor - VehicleName TimeStamp POS_X POS_Y POS_Z Q_W Q_X Q_Y Q_Z ImageFile","title":"\u4fee\u6539\u8bb0\u5f55\u6570\u636e"},{"location":"modify_recording_data/#_2","text":"Note that this requires building and using AirSim from source. You can compile a binary yourself after modifying if needed. The primary method which fills the data to be stored is PawnSimApi::getRecordFileLine , it's the base method for all the vehicles, and Car overrides it to log additional data, as can be seen in CarPawnSimApi::getRecordFileLine . To record additional data for multirotor, you can add a similar method in MultirotorPawnSimApi.cpp/h files which overrides the base class implementation and append other data. The currently logged data can also be modified and removed as needed. E.g. recording GPS, IMU and Barometer data also for multirotor - // MultirotorPawnSimApi.cpp std :: string MultirotorPawnSimApi::getRecordFileLine ( bool is_header_line ) const { std :: string common_line = PawnSimApi :: getRecordFileLine ( is_header_line ); if ( is_header_line ) { return common_line + \"Latitude \\t Longitude \\t Altitude \\t Pressure \\t AccX \\t AccY \\t AccZ \\t \" ; } const auto & state = vehicle_api_ -> getMultirotorState (); const auto & bar_data = vehicle_api_ -> getBarometerData ( \"\" ); const auto & imu_data = vehicle_api_ -> getImuData ( \"\" ); std :: ostringstream ss ; ss << common_line ; ss << state . gps_location . latitude << \" \\t \" << state . gps_location . longitude << \" \\t \" << state . gps_location . altitude << \" \\t \" ; ss << bar_data . pressure << \" \\t \" ; ss << imu_data . linear_acceleration . x () << \" \\t \" << imu_data . linear_acceleration . y () << \" \\t \" << imu_data . linear_acceleration . z () << \" \\t \" ; return ss . str (); } // MultirotorPawnSimApi.h virtual std :: string getRecordFileLine ( bool is_header_line ) const override ;","title":"\u4ee3\u7801\u6539\u53d8"},{"location":"multi_vehicle/","text":"Multiple Vehicles in AirSim # Since release 1.2, AirSim is fully enabled for multiple vehicles. This capability allows you to create multiple vehicles easily and use APIs to control them. Creating Multiple Vehicles # It's as easy as specifying them in settings.json . The Vehicles element allows you to specify list of vehicles you want to create along with their initial positions and orientations. The positions are specified in NED coordinates in SI units with origin set at Player Start component in Unreal environment. The orientation is specified as Yaw, Pitch and Roll in degrees. Creating Multiple Cars # { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Car\" , \"Vehicles\" : { \"Car1\" : { \"VehicleType\" : \"PhysXCar\" , \"X\" : 4 , \"Y\" : 0 , \"Z\" : -2 }, \"Car2\" : { \"VehicleType\" : \"PhysXCar\" , \"X\" : -4 , \"Y\" : 0 , \"Z\" : -2 , \"Yaw\" : 90 } } } Creating Multiple Drones # { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"SimpleFlight\" , \"X\" : 4 , \"Y\" : 0 , \"Z\" : -2 , \"Yaw\" : -180 }, \"Drone2\" : { \"VehicleType\" : \"SimpleFlight\" , \"X\" : 8 , \"Y\" : 0 , \"Z\" : -2 } } } Using APIs for Multiple Vehicles # The new APIs since AirSim 1.2 allows you to specify vehicle_name . This name corresponds to keys in json settings (for example, Car1 or Drone2 above). Example code for cars Example code for multirotors Using APIs for multi-vehicles requires specifying the vehicle_name , which needs to be hardcoded in the script or requires parsing of the settings file. There's also a simple API listVehicles() which returns a list (vector in C++) of strings containing names of the current vehicles. For example, with the above settings for 2 Cars - >>> client . listVehicles () [ 'Car1' , 'Car2' ] Demo # Creating vehicles at runtime through API # In the latest main branch of AirSim, the simAddVehicle API can be used to create vehicles at runtime. This is useful to create many such vehicles without needing to specify them in the settings. There are some limitations of this currently, described below - simAddVehicle takes in the following arguments: vehicle_name : Name of the vehicle to be created, this should be unique for each vehicle including any exisiting ones defined in the settings.json vehicle_type : Type of vehicle, e.g. \"simpleflight\". Currently only SimpleFlight, PhysXCar, ComputerVision are supported, in their respective SimModes. Other vehicle types including PX4 and ArduPilot-related aren't supported pose : Initial pose of the vehicle pawn_path : Vehicle blueprint path, default empty wbich uses the default blueprint for the vehicle type Returns: bool Whether vehicle was created The usual APIs can be used to control and interact with the vehicle once created, with the vehicle_name parameter. Specifying other settings such as additional cameras, etc. isn't possible currently, a future enhancement could be passing JSON string of settings for the vehicle. It also works with the listVehicles() API described above, so the vehicles spawned would be included in the list. For some examples, check out HelloSpawnedDrones.cpp - And runtime_car.py -","title":"\u591a\u8f66\u8f86"},{"location":"multi_vehicle/#multiple-vehicles-in-airsim","text":"Since release 1.2, AirSim is fully enabled for multiple vehicles. This capability allows you to create multiple vehicles easily and use APIs to control them.","title":"Multiple Vehicles in AirSim"},{"location":"multi_vehicle/#creating-multiple-vehicles","text":"It's as easy as specifying them in settings.json . The Vehicles element allows you to specify list of vehicles you want to create along with their initial positions and orientations. The positions are specified in NED coordinates in SI units with origin set at Player Start component in Unreal environment. The orientation is specified as Yaw, Pitch and Roll in degrees.","title":"Creating Multiple Vehicles"},{"location":"multi_vehicle/#creating-multiple-cars","text":"{ \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Car\" , \"Vehicles\" : { \"Car1\" : { \"VehicleType\" : \"PhysXCar\" , \"X\" : 4 , \"Y\" : 0 , \"Z\" : -2 }, \"Car2\" : { \"VehicleType\" : \"PhysXCar\" , \"X\" : -4 , \"Y\" : 0 , \"Z\" : -2 , \"Yaw\" : 90 } } }","title":"Creating Multiple Cars"},{"location":"multi_vehicle/#creating-multiple-drones","text":"{ \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"SimpleFlight\" , \"X\" : 4 , \"Y\" : 0 , \"Z\" : -2 , \"Yaw\" : -180 }, \"Drone2\" : { \"VehicleType\" : \"SimpleFlight\" , \"X\" : 8 , \"Y\" : 0 , \"Z\" : -2 } } }","title":"Creating Multiple Drones"},{"location":"multi_vehicle/#using-apis-for-multiple-vehicles","text":"The new APIs since AirSim 1.2 allows you to specify vehicle_name . This name corresponds to keys in json settings (for example, Car1 or Drone2 above). Example code for cars Example code for multirotors Using APIs for multi-vehicles requires specifying the vehicle_name , which needs to be hardcoded in the script or requires parsing of the settings file. There's also a simple API listVehicles() which returns a list (vector in C++) of strings containing names of the current vehicles. For example, with the above settings for 2 Cars - >>> client . listVehicles () [ 'Car1' , 'Car2' ]","title":"Using APIs for Multiple Vehicles"},{"location":"multi_vehicle/#demo","text":"","title":"Demo"},{"location":"multi_vehicle/#creating-vehicles-at-runtime-through-api","text":"In the latest main branch of AirSim, the simAddVehicle API can be used to create vehicles at runtime. This is useful to create many such vehicles without needing to specify them in the settings. There are some limitations of this currently, described below - simAddVehicle takes in the following arguments: vehicle_name : Name of the vehicle to be created, this should be unique for each vehicle including any exisiting ones defined in the settings.json vehicle_type : Type of vehicle, e.g. \"simpleflight\". Currently only SimpleFlight, PhysXCar, ComputerVision are supported, in their respective SimModes. Other vehicle types including PX4 and ArduPilot-related aren't supported pose : Initial pose of the vehicle pawn_path : Vehicle blueprint path, default empty wbich uses the default blueprint for the vehicle type Returns: bool Whether vehicle was created The usual APIs can be used to control and interact with the vehicle once created, with the vehicle_name parameter. Specifying other settings such as additional cameras, etc. isn't possible currently, a future enhancement could be passing JSON string of settings for the vehicle. It also works with the listVehicles() API described above, so the vehicles spawned would be included in the list. For some examples, check out HelloSpawnedDrones.cpp - And runtime_car.py -","title":"Creating vehicles at runtime through API"},{"location":"object_detection/","text":"Object Detection # About # This feature lets you generate object detection using existing cameras in AirSim, similar to detection DNN. Using the API you can control which object to detect by name and radius from camera. One can control these settings for each camera, image type and vehicle combination separately. API # Set mesh name to detect in wildcard format simAddDetectionFilterMeshName(camera_name, image_type, mesh_name, vehicle_name = '') Clear all mesh names previously added simClearDetectionMeshNames(camera_name, image_type, vehicle_name = '') Set detection radius in cm simSetDetectionFilterRadius(camera_name, image_type, radius_cm, vehicle_name = '') Get detections simGetDetections(camera_name, image_type, vehicle_name = '') The return value of simGetDetections is a DetectionInfo array: DetectionInfo name = '' geo_point = GeoPoint () box2D = Box2D () box3D = Box3D () relative_pose = Pose () Usage example # Python script detection.py shows how to set detection parameters and shows the result in OpenCV capture. A minimal example using API with Blocks environment to detect Cylinder objects: camera_name = \"0\" image_type = airsim . ImageType . Scene client = airsim . MultirotorClient () client . confirmConnection () client . simSetDetectionFilterRadius ( camera_name , image_type , 80 * 100 ) # in [cm] client . simAddDetectionFilterMeshName ( camera_name , image_type , \"Cylinder_*\" ) client . simGetDetections ( camera_name , image_type ) detections = client . simClearDetectionMeshNames ( camera_name , image_type ) Output result: Cylinder : < DetectionInfo > { 'box2D' : < Box2D > { 'max' : < Vector2r > { 'x_val' : 617.025634765625 , 'y_val' : 583.5487060546875 }, 'min' : < Vector2r > { 'x_val' : 485.74359130859375 , 'y_val' : 438.33465576171875 }}, 'box3D' : < Box3D > { 'max' : < Vector3r > { 'x_val' : 4.900000095367432 , 'y_val' : 0.7999999523162842 , 'z_val' : 0.5199999809265137 }, 'min' : < Vector3r > { 'x_val' : 3.8999998569488525 , 'y_val' : - 0.19999998807907104 , 'z_val' : 1.5199999809265137 }}, 'geo_point' : < GeoPoint > { 'altitude' : 16.979999542236328 , 'latitude' : 32.28772183970703 , 'longitude' : 34.864785008379876 }, 'name' : 'Cylinder9_2' , 'relative_pose' : < Pose > { 'orientation' : < Quaternionr > { 'w_val' : 0.9929741621017456 , 'x_val' : 0.0038591264747083187 , 'y_val' : - 0.11333247274160385 , 'z_val' : 0.03381215035915375 }, 'position' : < Vector3r > { 'x_val' : 4.400000095367432 , 'y_val' : 0.29999998211860657 , 'z_val' : 1.0199999809265137 }}}","title":"Object Detection"},{"location":"object_detection/#object-detection","text":"","title":"Object Detection"},{"location":"object_detection/#about","text":"This feature lets you generate object detection using existing cameras in AirSim, similar to detection DNN. Using the API you can control which object to detect by name and radius from camera. One can control these settings for each camera, image type and vehicle combination separately.","title":"About"},{"location":"object_detection/#api","text":"Set mesh name to detect in wildcard format simAddDetectionFilterMeshName(camera_name, image_type, mesh_name, vehicle_name = '') Clear all mesh names previously added simClearDetectionMeshNames(camera_name, image_type, vehicle_name = '') Set detection radius in cm simSetDetectionFilterRadius(camera_name, image_type, radius_cm, vehicle_name = '') Get detections simGetDetections(camera_name, image_type, vehicle_name = '') The return value of simGetDetections is a DetectionInfo array: DetectionInfo name = '' geo_point = GeoPoint () box2D = Box2D () box3D = Box3D () relative_pose = Pose ()","title":"API"},{"location":"object_detection/#usage-example","text":"Python script detection.py shows how to set detection parameters and shows the result in OpenCV capture. A minimal example using API with Blocks environment to detect Cylinder objects: camera_name = \"0\" image_type = airsim . ImageType . Scene client = airsim . MultirotorClient () client . confirmConnection () client . simSetDetectionFilterRadius ( camera_name , image_type , 80 * 100 ) # in [cm] client . simAddDetectionFilterMeshName ( camera_name , image_type , \"Cylinder_*\" ) client . simGetDetections ( camera_name , image_type ) detections = client . simClearDetectionMeshNames ( camera_name , image_type ) Output result: Cylinder : < DetectionInfo > { 'box2D' : < Box2D > { 'max' : < Vector2r > { 'x_val' : 617.025634765625 , 'y_val' : 583.5487060546875 }, 'min' : < Vector2r > { 'x_val' : 485.74359130859375 , 'y_val' : 438.33465576171875 }}, 'box3D' : < Box3D > { 'max' : < Vector3r > { 'x_val' : 4.900000095367432 , 'y_val' : 0.7999999523162842 , 'z_val' : 0.5199999809265137 }, 'min' : < Vector3r > { 'x_val' : 3.8999998569488525 , 'y_val' : - 0.19999998807907104 , 'z_val' : 1.5199999809265137 }}, 'geo_point' : < GeoPoint > { 'altitude' : 16.979999542236328 , 'latitude' : 32.28772183970703 , 'longitude' : 34.864785008379876 }, 'name' : 'Cylinder9_2' , 'relative_pose' : < Pose > { 'orientation' : < Quaternionr > { 'w_val' : 0.9929741621017456 , 'x_val' : 0.0038591264747083187 , 'y_val' : - 0.11333247274160385 , 'z_val' : 0.03381215035915375 }, 'position' : < Vector3r > { 'x_val' : 4.400000095367432 , 'y_val' : 0.29999998211860657 , 'z_val' : 1.0199999809265137 }}}","title":"Usage example"},{"location":"orbit/","text":"An Orbit Trajectory # Moved here from https://github.com/microsoft/AirSim/wiki/An-Orbit-Trajectory Have you ever wanted to fly a nice smooth circular orbit? This can be handy for capturing 3D objects from all sides especially if you get multiple orbits at different altitudes. So the PythonClient/multirotor folder contains a script named Orbit that will do precisely that. See demo video The demo video was created by running this command line: python orbit.py --radius 10 --altitude 5 --speed 1 --center \"0,1\" --iterations 1 This flies a 10 meter radius orbit around the center location at (startpos + radius * [0,1]), in other words, the center is located radius meters away in the direction of the provided center vector. It also keeps the front-facing camera on the drone always pointing at the center of the circle. If you watch the flight using LogViewer you will see a nice circular pattern get traced out on the GPS map: The core of the algorithm is not that complicated. At each point on the circle, we look ahead by a small delta in degrees, called the lookahead_angle , where that angle is computed based on our desired velocity. We then find that lookahead point on the circle using sin/cosine and make that our \"target point\". Calculating the velocity then is easy, just subtract our current position from that point and feed that into the AirSim method moveByVelocityZ .","title":"\u8f68\u9053\u8f68\u8ff9"},{"location":"orbit/#an-orbit-trajectory","text":"Moved here from https://github.com/microsoft/AirSim/wiki/An-Orbit-Trajectory Have you ever wanted to fly a nice smooth circular orbit? This can be handy for capturing 3D objects from all sides especially if you get multiple orbits at different altitudes. So the PythonClient/multirotor folder contains a script named Orbit that will do precisely that. See demo video The demo video was created by running this command line: python orbit.py --radius 10 --altitude 5 --speed 1 --center \"0,1\" --iterations 1 This flies a 10 meter radius orbit around the center location at (startpos + radius * [0,1]), in other words, the center is located radius meters away in the direction of the provided center vector. It also keeps the front-facing camera on the drone always pointing at the center of the circle. If you watch the flight using LogViewer you will see a nice circular pattern get traced out on the GPS map: The core of the algorithm is not that complicated. At each point on the circle, we look ahead by a small delta in degrees, called the lookahead_angle , where that angle is computed based on our desired velocity. We then find that lookahead point on the circle using sin/cosine and make that our \"target point\". Calculating the velocity then is easy, just subtract our current position from that point and feed that into the AirSim method moveByVelocityZ .","title":"An Orbit Trajectory"},{"location":"pfm/","text":"pfm Format # Pfm (or Portable FloatMap) image format stores image as floating point pixels and hence are not restricted to usual 0-255 pixel value range. This is useful for HDR images or images that describes something other than colors like depth. One of the good viewer to view this file format is PfmPad . We don't recommend Maverick photo viewer because it doesn't seem to show depth images properly. AirSim has code to write pfm file for C++ and read as well as write for Python .","title":"pfm \u683c\u5f0f"},{"location":"pfm/#pfm-format","text":"Pfm (or Portable FloatMap) image format stores image as floating point pixels and hence are not restricted to usual 0-255 pixel value range. This is useful for HDR images or images that describes something other than colors like depth. One of the good viewer to view this file format is PfmPad . We don't recommend Maverick photo viewer because it doesn't seem to show depth images properly. AirSim has code to write pfm file for C++ and read as well as write for Python .","title":"pfm Format"},{"location":"playback/","text":"\u56de\u653e # AirSim \u652f\u6301\u56de\u653e\u4f7f\u7528 MavLinkTest \u5e94\u7528\u8bb0\u5f55\u7684 *.mavlink \u65e5\u5fd7\u6587\u4ef6\u4e2d\u7684\u9ad8\u7ea7\u547d\u4ee4\uff0c\u4ee5\u4fbf\u6bd4\u8f83\u771f\u5b9e\u98de\u884c\u548c\u6a21\u62df\u98de\u884c\u3002 recording.mavlink \u662f\u4f7f\u7528\u771f\u5b9e\u65e0\u4eba\u673a\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u884c\u6355\u83b7\u7684\u65e5\u5fd7\u6587\u4ef6\u793a\u4f8b\uff1a MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. \u7136\u540e\u65e5\u5fd7\u6587\u4ef6\u5305\u542b\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5176\u4e2d\u5305\u62ec\u51e0\u4e2a\u201c\u8f68\u9053(orbit)\u201d\u547d\u4ee4\uff0c\u751f\u6210\u7684\u98de\u884c GPS \u5730\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u5e76\u6392\u6bd4\u8f83 # \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 MavLinkTest \u8bb0\u5f55\u7684 *.mavlink \u65e5\u5fd7\u6587\u4ef6\u590d\u5236\u5230\u8fd0\u884c Unreal \u6a21\u62df\u5668\uff08\u5e26 AirSim \u63d2\u4ef6\uff09\u7684\u7535\u8111\u4e0a\u3002\u5f53\u6a21\u62df\u5668\u8fd0\u884c\uff0c\u5e76\u4e14\u65e0\u4eba\u673a\u505c\u5728\u5730\u56fe\u4e0a\u8db3\u591f\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\u7684\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b MavLinkTest \u547d\u4ee4\u884c\uff1a MavLinkTest -server:127.0.0.1:14550 \u8fd9\u6837\u5c31\u8fde\u63a5\u5230\u6a21\u62df\u5668\u4e86\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a PlayLog recording.mavlink \u60a8\u5728\u771f\u5b9e\u65e0\u4eba\u673a\u4e0a\u6267\u884c\u7684\u76f8\u540c\u547d\u4ee4\u73b0\u5728\u5c06\u5728\u6a21\u62df\u5668\u4e2d\u518d\u6b21\u64ad\u653e\u3002\u7136\u540e\u60a8\u53ef\u4ee5\u6309\u201ct\u201d\u952e\u67e5\u770b\u8f68\u8ff9\uff0c\u5b83\u4f1a\u663e\u793a\u771f\u5b9e\u65e0\u4eba\u673a\u548c\u6a21\u62df\u65e0\u4eba\u673a\u7684\u8f68\u8ff9\u3002\u6bcf\u6b21\u518d\u6b21\u6309\u201ct\u201d\u952e\u65f6\uff0c\u60a8\u53ef\u4ee5\u91cd\u7f6e\u7ebf\u6761\uff0c\u4f7f\u5b83\u4eec\u540c\u6b65\u5230\u5f53\u524d\u4f4d\u7f6e\u3002\u8fd9\u6837\uff0c\u6211\u5c31\u80fd\u6355\u6349\u5230\u672c\u6b21\u5f55\u5236\u4e2d\u6267\u884c\u7684\u201c\u8f68\u9053(orbit)\u201d\u547d\u4ee4\u7684\u5e76\u6392\u8f68\u8ff9\uff0c\u4ece\u800c\u751f\u6210\u4e0b\u9762\u7684\u56fe\u7247\u3002\u7c89\u8272\u7ebf\u662f\u6a21\u62df\u98de\u884c\uff0c\u7ea2\u8272\u7ebf\u662f\u771f\u5b9e\u98de\u884c\uff1a \u6ce8\u610f \u6211\u4f7f\u7528\u6a21\u62df\u5668\u4e2d\u7684\u201c\uff1b\u201d\u952e\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u76f8\u673a\u4f4d\u7f6e\u6765\u62cd\u6444\u8fd9\u5f20\u7167\u7247\u3002 \u53c2\u6570 # \u5c06\u6a21\u62df\u5668\u8bbe\u7f6e\u4e3a\u4e0e\u771f\u5b9e\u65e0\u4eba\u673a\u76f8\u540c\u7684\u4e00\u4e9b\u98de\u884c\u53c2\u6570\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c \u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4f7f\u7528\u4e86\u4f4e\u4e8e\u6b63\u5e38\u5de1\u822a\u901f\u5ea6\u3001\u8f83\u6162\u7684\u8d77\u98de\u901f\u5ea6\uff0c\u5e76\u4e14\u544a\u8bc9\u6a21\u62df\u5668 \u5728\u89e3\u9664\u6b66\u88c5\u4e4b\u524d\u7b49\u5f85\u5f88\u957f\u65f6\u95f4\uff08COM_DISARM_LAND\uff09\u5e76\u5173\u95ed\u5b89\u5168\u5f00\u5173 NAV_RCL_ACT \u548c NAV_DLL_ACT \uff08\u5728\u771f\u5b9e\u65e0\u4eba\u673a\u4e0a \u4e0d\u8981 \u8fd9\u6837\u505a\uff09\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 param MPC_XY_CRUISE 2 param MPC_XY_VEL_MAX 2 param MPC_TKO_SPEED 1 param COM_DISARM_LAND 60 param NAV_RCL_ACT 0 param NAV_DLL_ACT 0","title":"\u64ad\u653e\u65e5\u5fd7"},{"location":"playback/#_1","text":"AirSim \u652f\u6301\u56de\u653e\u4f7f\u7528 MavLinkTest \u5e94\u7528\u8bb0\u5f55\u7684 *.mavlink \u65e5\u5fd7\u6587\u4ef6\u4e2d\u7684\u9ad8\u7ea7\u547d\u4ee4\uff0c\u4ee5\u4fbf\u6bd4\u8f83\u771f\u5b9e\u98de\u884c\u548c\u6a21\u62df\u98de\u884c\u3002 recording.mavlink \u662f\u4f7f\u7528\u771f\u5b9e\u65e0\u4eba\u673a\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u884c\u6355\u83b7\u7684\u65e5\u5fd7\u6587\u4ef6\u793a\u4f8b\uff1a MavLinkTest -serial:/dev/ttyACM0,115200 -logdir:. \u7136\u540e\u65e5\u5fd7\u6587\u4ef6\u5305\u542b\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5176\u4e2d\u5305\u62ec\u51e0\u4e2a\u201c\u8f68\u9053(orbit)\u201d\u547d\u4ee4\uff0c\u751f\u6210\u7684\u98de\u884c GPS \u5730\u56fe\u5982\u4e0b\u6240\u793a\uff1a","title":"\u56de\u653e"},{"location":"playback/#_2","text":"\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 MavLinkTest \u8bb0\u5f55\u7684 *.mavlink \u65e5\u5fd7\u6587\u4ef6\u590d\u5236\u5230\u8fd0\u884c Unreal \u6a21\u62df\u5668\uff08\u5e26 AirSim \u63d2\u4ef6\uff09\u7684\u7535\u8111\u4e0a\u3002\u5f53\u6a21\u62df\u5668\u8fd0\u884c\uff0c\u5e76\u4e14\u65e0\u4eba\u673a\u505c\u5728\u5730\u56fe\u4e0a\u8db3\u591f\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\u7684\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b MavLinkTest \u547d\u4ee4\u884c\uff1a MavLinkTest -server:127.0.0.1:14550 \u8fd9\u6837\u5c31\u8fde\u63a5\u5230\u6a21\u62df\u5668\u4e86\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a PlayLog recording.mavlink \u60a8\u5728\u771f\u5b9e\u65e0\u4eba\u673a\u4e0a\u6267\u884c\u7684\u76f8\u540c\u547d\u4ee4\u73b0\u5728\u5c06\u5728\u6a21\u62df\u5668\u4e2d\u518d\u6b21\u64ad\u653e\u3002\u7136\u540e\u60a8\u53ef\u4ee5\u6309\u201ct\u201d\u952e\u67e5\u770b\u8f68\u8ff9\uff0c\u5b83\u4f1a\u663e\u793a\u771f\u5b9e\u65e0\u4eba\u673a\u548c\u6a21\u62df\u65e0\u4eba\u673a\u7684\u8f68\u8ff9\u3002\u6bcf\u6b21\u518d\u6b21\u6309\u201ct\u201d\u952e\u65f6\uff0c\u60a8\u53ef\u4ee5\u91cd\u7f6e\u7ebf\u6761\uff0c\u4f7f\u5b83\u4eec\u540c\u6b65\u5230\u5f53\u524d\u4f4d\u7f6e\u3002\u8fd9\u6837\uff0c\u6211\u5c31\u80fd\u6355\u6349\u5230\u672c\u6b21\u5f55\u5236\u4e2d\u6267\u884c\u7684\u201c\u8f68\u9053(orbit)\u201d\u547d\u4ee4\u7684\u5e76\u6392\u8f68\u8ff9\uff0c\u4ece\u800c\u751f\u6210\u4e0b\u9762\u7684\u56fe\u7247\u3002\u7c89\u8272\u7ebf\u662f\u6a21\u62df\u98de\u884c\uff0c\u7ea2\u8272\u7ebf\u662f\u771f\u5b9e\u98de\u884c\uff1a \u6ce8\u610f \u6211\u4f7f\u7528\u6a21\u62df\u5668\u4e2d\u7684\u201c\uff1b\u201d\u952e\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u76f8\u673a\u4f4d\u7f6e\u6765\u62cd\u6444\u8fd9\u5f20\u7167\u7247\u3002","title":"\u5e76\u6392\u6bd4\u8f83"},{"location":"playback/#_3","text":"\u5c06\u6a21\u62df\u5668\u8bbe\u7f6e\u4e3a\u4e0e\u771f\u5b9e\u65e0\u4eba\u673a\u76f8\u540c\u7684\u4e00\u4e9b\u98de\u884c\u53c2\u6570\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c \u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4f7f\u7528\u4e86\u4f4e\u4e8e\u6b63\u5e38\u5de1\u822a\u901f\u5ea6\u3001\u8f83\u6162\u7684\u8d77\u98de\u901f\u5ea6\uff0c\u5e76\u4e14\u544a\u8bc9\u6a21\u62df\u5668 \u5728\u89e3\u9664\u6b66\u88c5\u4e4b\u524d\u7b49\u5f85\u5f88\u957f\u65f6\u95f4\uff08COM_DISARM_LAND\uff09\u5e76\u5173\u95ed\u5b89\u5168\u5f00\u5173 NAV_RCL_ACT \u548c NAV_DLL_ACT \uff08\u5728\u771f\u5b9e\u65e0\u4eba\u673a\u4e0a \u4e0d\u8981 \u8fd9\u6837\u505a\uff09\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 param MPC_XY_CRUISE 2 param MPC_XY_VEL_MAX 2 param MPC_TKO_SPEED 1 param COM_DISARM_LAND 60 param NAV_RCL_ACT 0 param NAV_DLL_ACT 0","title":"\u53c2\u6570"},{"location":"point_clouds/","text":"Point Clouds # Moved here from https://github.com/microsoft/AirSim/wiki/Point-Clouds A Python script point_cloud.py shows how to convert the depth image returned from AirSim into a point cloud. The following depth image was captured using the Modular Neighborhood environment: And with the appropriate projection matrix, the OpenCV reprojectImageTo3D function can turn this into a point cloud. The following is the result, which is also available here: https://skfb.ly/68r7y . SketchFab can upload the resulting file cloud.asc and render it for you. PS: you may notice the scene is reflected on the Y axis, so I may have a sign wrong in the projection matrix. An exercise for the reader :-)","title":"\u6784\u5efa\u70b9\u4e91"},{"location":"point_clouds/#point-clouds","text":"Moved here from https://github.com/microsoft/AirSim/wiki/Point-Clouds A Python script point_cloud.py shows how to convert the depth image returned from AirSim into a point cloud. The following depth image was captured using the Modular Neighborhood environment: And with the appropriate projection matrix, the OpenCV reprojectImageTo3D function can turn this into a point cloud. The following is the result, which is also available here: https://skfb.ly/68r7y . SketchFab can upload the resulting file cloud.asc and render it for you. PS: you may notice the scene is reflected on the Y axis, so I may have a sign wrong in the projection matrix. An exercise for the reader :-)","title":"Point Clouds"},{"location":"px4_build/","text":"Building PX4 # Source code # Getting the PX4 source code is easy: sudo apt-get install git git clone https://github.com/PX4/PX4-Autopilot.git --recursive bash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-sim-tools cd PX4-Autopilot Now to build it you will need the right tools. PX4 Build tools # The full instructions are available on the dev.px4.io website, but we've copied the relevant subset of those instructions here for your convenience. (Note that BashOnWindows ) can be used to build the PX4 firmware, just follow the BashOnWindows instructions at the bottom of this page) then proceed with the Ubuntu setup for PX4. Build SITL version # Now you can make the SITL version that runs in posix, from the Firmware folder you created above: make px4_sitl_default none_iris Note: this build system is quite special, it knows how to update git submodules (and there's a lot of them), then it runs cmake (if necessary), then it runs the build itself. So in a way the root Makefile is a meta-meta makefile :-) You might see prompts like this: ******************************************************************************* * IF YOU DID NOT CHANGE THIS FILE ( OR YOU DON 'T KNOW WHAT A SUBMODULE IS): * * Hit ' u ' and <ENTER> to update ALL submodules and resolve this. * * ( performs git submodule sync --recursive * * and git submodule update --init --recursive ) * ******************************************************************************* Every time you see this prompt type 'u' on your keyboard. It shouldn't take long, about 2 minutes. If all succeeds, the last line will link the px4 app, which you can then run using the following: make px4_sitl_default none_iris And you should see output that looks like this: creating new parameters file creating new dataman file ______ __ __ ___ | ___ \\ \\ \\ / / / | | |_/ / \\ V / / /| | | __/ / \\ / /_| | | | / /^\\ \\ \\___ | \\_| \\/ \\/ |_/ px4 starting. 18446744073709551615 WARNING: setRealtimeSched failed (not run as root?) ERROR [param] importing from 'rootfs/eeprom/parameters' failed (-1) Command 'param' failed, returned 1 SYS_AUTOSTART: curr: 0 -> new: 4010 SYS_MC_EST_GROUP: curr: 2 -> new: 1 INFO [dataman] Unkown restart, data manager file 'rootfs/fs/microsd/dataman' size is 11797680 bytes BAT_N_CELLS: curr: 0 -> new: 3 CAL_GYRO0_ID: curr: 0 -> new: 2293768 CAL_ACC0_ID: curr: 0 -> new: 1376264 CAL_ACC1_ID: curr: 0 -> new: 1310728 CAL_MAG0_ID: curr: 0 -> new: 196616 so this is good, first run sets up the px4 parameters for SITL mode. Second run has less output. This app is also an interactive console where you can type commands. Type 'help' to see what they are and just type ctrl-C to kill it. You can do that and restart it any time, that's a great way to reset any wonky state if you need to (it's equivalent to a Pixhawk hardware reboot). ARM embedded tools # If you plan to build the PX4 firmware for real Pixhawk hardware then you will need the gcc cross-compiler for ARM Cortex-M4 chipset. You can get this compiler by PX4 DevGuide, specifically this is in their ubuntu_sim_nuttx.sh setup script. After following those setup instructions you can verify the install by entering this command arm-none-eabi-gcc --version . You should see the following output: arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 7-2017-q4-major) 7.2.1 20170904 (release) [ARM/embedded-7-branch revision 255204] Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Build PX4 for ARM hardware # Now you can build the PX4 firmware for running on real pixhawk hardware: make px4_fmu-v4 This build will take a little longer because it is building a lot more including the NuttX real time OS, all the drivers for the sensors in the Pixhawk flight controller, and more. It is also running the compiler in super size-squeezing mode so it can fit all that in a 1 megabyte ROM !! One nice tid bit is you can plug in your pixhawk USB, and type make px4fmu-v2_default upload to flash the hardware with these brand new bits, so you don't need to use QGroundControl for that. Some Useful Parameters # PX4 has many customizable parameters (over 700 of them, in fact) and to get best results with AirSim we have found the following parameters are handy: // be sure to enable the new position estimator module: param set SYS_MC_EST_GROUP 2 // increase default limits on cruise speed so you can move around a large map more quickly. param MPC_XY_CRUISE 10 param MPC_XY_VEL_MAX 10 param MPC_Z_VEL_MAX_DN 2 // increase timeout for auto-disarm on landing so that any long running app doesn't have to worry about it param COM_DISARM_LAND 60 // make it possible to fly without radio control attached (do NOT do this one on a real drone) param NAV_RCL_ACT 0 // enable new syslogger to get more information from PX4 logs param set SYS_LOGGER 1 Using BashOnWindows # See Bash on Windows Toolchain .","title":"\u6784\u5efa PX4"},{"location":"px4_build/#building-px4","text":"","title":"Building PX4"},{"location":"px4_build/#source-code","text":"Getting the PX4 source code is easy: sudo apt-get install git git clone https://github.com/PX4/PX4-Autopilot.git --recursive bash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-sim-tools cd PX4-Autopilot Now to build it you will need the right tools.","title":"Source code"},{"location":"px4_build/#px4-build-tools","text":"The full instructions are available on the dev.px4.io website, but we've copied the relevant subset of those instructions here for your convenience. (Note that BashOnWindows ) can be used to build the PX4 firmware, just follow the BashOnWindows instructions at the bottom of this page) then proceed with the Ubuntu setup for PX4.","title":"PX4 Build tools"},{"location":"px4_build/#build-sitl-version","text":"Now you can make the SITL version that runs in posix, from the Firmware folder you created above: make px4_sitl_default none_iris Note: this build system is quite special, it knows how to update git submodules (and there's a lot of them), then it runs cmake (if necessary), then it runs the build itself. So in a way the root Makefile is a meta-meta makefile :-) You might see prompts like this: ******************************************************************************* * IF YOU DID NOT CHANGE THIS FILE ( OR YOU DON 'T KNOW WHAT A SUBMODULE IS): * * Hit ' u ' and <ENTER> to update ALL submodules and resolve this. * * ( performs git submodule sync --recursive * * and git submodule update --init --recursive ) * ******************************************************************************* Every time you see this prompt type 'u' on your keyboard. It shouldn't take long, about 2 minutes. If all succeeds, the last line will link the px4 app, which you can then run using the following: make px4_sitl_default none_iris And you should see output that looks like this: creating new parameters file creating new dataman file ______ __ __ ___ | ___ \\ \\ \\ / / / | | |_/ / \\ V / / /| | | __/ / \\ / /_| | | | / /^\\ \\ \\___ | \\_| \\/ \\/ |_/ px4 starting. 18446744073709551615 WARNING: setRealtimeSched failed (not run as root?) ERROR [param] importing from 'rootfs/eeprom/parameters' failed (-1) Command 'param' failed, returned 1 SYS_AUTOSTART: curr: 0 -> new: 4010 SYS_MC_EST_GROUP: curr: 2 -> new: 1 INFO [dataman] Unkown restart, data manager file 'rootfs/fs/microsd/dataman' size is 11797680 bytes BAT_N_CELLS: curr: 0 -> new: 3 CAL_GYRO0_ID: curr: 0 -> new: 2293768 CAL_ACC0_ID: curr: 0 -> new: 1376264 CAL_ACC1_ID: curr: 0 -> new: 1310728 CAL_MAG0_ID: curr: 0 -> new: 196616 so this is good, first run sets up the px4 parameters for SITL mode. Second run has less output. This app is also an interactive console where you can type commands. Type 'help' to see what they are and just type ctrl-C to kill it. You can do that and restart it any time, that's a great way to reset any wonky state if you need to (it's equivalent to a Pixhawk hardware reboot).","title":"Build SITL version"},{"location":"px4_build/#arm-embedded-tools","text":"If you plan to build the PX4 firmware for real Pixhawk hardware then you will need the gcc cross-compiler for ARM Cortex-M4 chipset. You can get this compiler by PX4 DevGuide, specifically this is in their ubuntu_sim_nuttx.sh setup script. After following those setup instructions you can verify the install by entering this command arm-none-eabi-gcc --version . You should see the following output: arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 7-2017-q4-major) 7.2.1 20170904 (release) [ARM/embedded-7-branch revision 255204] Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.","title":"ARM embedded tools"},{"location":"px4_build/#build-px4-for-arm-hardware","text":"Now you can build the PX4 firmware for running on real pixhawk hardware: make px4_fmu-v4 This build will take a little longer because it is building a lot more including the NuttX real time OS, all the drivers for the sensors in the Pixhawk flight controller, and more. It is also running the compiler in super size-squeezing mode so it can fit all that in a 1 megabyte ROM !! One nice tid bit is you can plug in your pixhawk USB, and type make px4fmu-v2_default upload to flash the hardware with these brand new bits, so you don't need to use QGroundControl for that.","title":"Build PX4 for ARM hardware"},{"location":"px4_build/#some-useful-parameters","text":"PX4 has many customizable parameters (over 700 of them, in fact) and to get best results with AirSim we have found the following parameters are handy: // be sure to enable the new position estimator module: param set SYS_MC_EST_GROUP 2 // increase default limits on cruise speed so you can move around a large map more quickly. param MPC_XY_CRUISE 10 param MPC_XY_VEL_MAX 10 param MPC_Z_VEL_MAX_DN 2 // increase timeout for auto-disarm on landing so that any long running app doesn't have to worry about it param COM_DISARM_LAND 60 // make it possible to fly without radio control attached (do NOT do this one on a real drone) param NAV_RCL_ACT 0 // enable new syslogger to get more information from PX4 logs param set SYS_LOGGER 1","title":"Some Useful Parameters"},{"location":"px4_build/#using-bashonwindows","text":"See Bash on Windows Toolchain .","title":"Using BashOnWindows"},{"location":"px4_lockstep/","text":"LockStep # The latest version of PX4 supports a new lockstep feature when communicating with the simulator over TCP. Lockstep is an important feature because it synchronizes PX4 and the simulator so they essentially use the same clock time. This makes PX4 behave normally even during unusually long delays in Simulator performance. It is recommended that when you are running a lockstep enabled version of PX4 in SITL mode that you tell AirSim to use a SteppableClock , and set UseTcp to true and LockStep to true . { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"ClockType\": \"SteppableClock\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"UseTcp\": true, \"LockStep\": true, ... This causes AirSim to not use a \"realtime\" clock, but instead it advances the clock in step which each sensor update sent to PX4. This way PX4 thinks time is progressing smoothly no matter how long it takes AirSim to really process that update loop. This has the following advantages: AirSim can be used on slow machines that cannot process updates quickly. You can debug AirSim and hit a breakpoint, and when you resume PX4 will behave normally. You can enable very slow sensors like the Lidar with large number of simulated points, and PX4 will still behave normally. There will be some side effects to lockstep , namely, slower update loops caused by running AirSim on an underpowered machine or from expensive sensors (like Lidar) will create some visible jerkiness in the simulated flight if you look at the updates on screen in realtime. Disabling LockStep # If you are running PX4 in cygwin, there is an open issue with lockstep . PX4 is configured to use lockstep by default. To disable this feature, first disable it in PX4 : Navigate to boards/px4/sitl/ in your local PX4 repository Edit default.cmake and find the following line: set(ENABLE_LOCKSTEP_SCHEDULER yes) Change this line to: set(ENABLE_LOCKSTEP_SCHEDULER no) Disable it in AirSim by setting LockStep to false and either removing any \"ClockType\": \"SteppableClock\" setting or resetting ClockType back to default: { ... \"ClockType\": \"\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"LockStep\": false, ... Now you can run PX4 SITL as you normally would ( make px4_sitl_default none_iris ) and it will use the host system time without waiting on AirSim.","title":"PX4 Lockstep"},{"location":"px4_lockstep/#lockstep","text":"The latest version of PX4 supports a new lockstep feature when communicating with the simulator over TCP. Lockstep is an important feature because it synchronizes PX4 and the simulator so they essentially use the same clock time. This makes PX4 behave normally even during unusually long delays in Simulator performance. It is recommended that when you are running a lockstep enabled version of PX4 in SITL mode that you tell AirSim to use a SteppableClock , and set UseTcp to true and LockStep to true . { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"ClockType\": \"SteppableClock\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"UseTcp\": true, \"LockStep\": true, ... This causes AirSim to not use a \"realtime\" clock, but instead it advances the clock in step which each sensor update sent to PX4. This way PX4 thinks time is progressing smoothly no matter how long it takes AirSim to really process that update loop. This has the following advantages: AirSim can be used on slow machines that cannot process updates quickly. You can debug AirSim and hit a breakpoint, and when you resume PX4 will behave normally. You can enable very slow sensors like the Lidar with large number of simulated points, and PX4 will still behave normally. There will be some side effects to lockstep , namely, slower update loops caused by running AirSim on an underpowered machine or from expensive sensors (like Lidar) will create some visible jerkiness in the simulated flight if you look at the updates on screen in realtime.","title":"LockStep"},{"location":"px4_lockstep/#disabling-lockstep","text":"If you are running PX4 in cygwin, there is an open issue with lockstep . PX4 is configured to use lockstep by default. To disable this feature, first disable it in PX4 : Navigate to boards/px4/sitl/ in your local PX4 repository Edit default.cmake and find the following line: set(ENABLE_LOCKSTEP_SCHEDULER yes) Change this line to: set(ENABLE_LOCKSTEP_SCHEDULER no) Disable it in AirSim by setting LockStep to false and either removing any \"ClockType\": \"SteppableClock\" setting or resetting ClockType back to default: { ... \"ClockType\": \"\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"LockStep\": false, ... Now you can run PX4 SITL as you normally would ( make px4_sitl_default none_iris ) and it will use the host system time without waiting on AirSim.","title":"Disabling LockStep"},{"location":"px4_logging/","text":"PX4/MavLink Logging # Thanks to Chris Lovett for developing various tools for PX4/MavLink logging mentioned on this page! Logging MavLink Messages # AirSim can capture mavlink log files if you add the following to the PX4 section of your settings.json file: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"PX4\" : { ... , \"Logs\" : \"c:/temp/mavlink\" } } } AirSim will create a timestamped log file in this folder for each \"armed/disarmed\" flight session. You will then see log files organized by date in d:\\temp\\logs, specifically *input.mavlink and *output.mavlink files. MavLink LogViewer # For MavLink enabled drones, you can also use our Log Viewer to visualize the streams of data. If you enable this form of realtime logging you should not use the \"Logs\" setting above, these two forms of logging are mutually exclusive. PX4 Log in SITL Mode # In SITL mode, please a log file is produced when drone is armed. The SITL terminal will contain the path to the log file, it should look something like this INFO [logger] Opened log file: rootfs/fs/microsd/log/2017-03-27/20_02_49.ulg PX4 Log in HITL Mode # If you are using Pixhawk hardware in HIL mode, then set parameter SYS_LOGGER=1 using QGroundControl. PX4 will write log file on device which you can download at later date using QGroundControl. Debugging a bad flight # You can use these *.mavlink log files to debug a bad flight using the LogViewer . For example, AirSim/PX4 flight may misbehave if you run it on an under powered computer. The following shows what might happen in that situation. In this flight we ran a simple commander takeoff test as performed by PythonClient/multirotor/stability_test.py and the flight started off fine, but then went crazy at the end and the drone crashed. So why is that? What can the log file show? Here we've plotted the following 5 metrics: - hil_gps.alt - the simulated altitude sent from AirSim to PX4 - telemetry.update_rate - the rate AirSim is performing the critical drone update loop in updates per second. - telemetry.update_time - the average time taken inside AirSim performing the critical drone update loop. - telemetry.actuation_delay - this is a very interesting metric measuring how long it takes PX4 to send back updated actuator controls message (motor power) - actuator_controls.0 - the actuator controls signal from PX4 for the first rotor. What we see then with these metrics is that things started off nicely, with nice flat altitude, high update rate in the 275 to 300 fps range, and a nice low update time inside AirSim around 113 microseconds, and a nice low actuation delay in the round trip from PX4. The actuator controls also stabilize quickly to a nice flat line. But then the update_time starts to climb, at the same time the actuation_delay climbs and we see a little tip in actuator_controls. This dip should not happen, the PX4 is panicking over loss of update rate but it recovers. But then we see actuator controls go crazy, a huge spike in actuation delay, and around this time we see a message from AirSim saying lockstep disabled . A delay over 100 millisecond triggers AirSim into jumping out of lockstep mode and the PX4 goes nuts and the drone crashes. The button line is that if a simple takeoff cannot maintain steady smooth flight and you see these kinds of spikes and uneven update rates then it means you are running AirSim on a computer that does not have enough horsepower. This is what a simple takeoff and hover and land should look like: Here you see the update_rate sticking the target of 333 updates per second. You also see the update_time a nice flat 39 microseconds and the actuator_delay somewhere between 1.1 and 1.7 milliseconds, and the resulting actuator_controls a lovely flat line.","title":"PX4/MavLink \u65e5\u5fd7\u8bb0\u5f55"},{"location":"px4_logging/#px4mavlink-logging","text":"Thanks to Chris Lovett for developing various tools for PX4/MavLink logging mentioned on this page!","title":"PX4/MavLink Logging"},{"location":"px4_logging/#logging-mavlink-messages","text":"AirSim can capture mavlink log files if you add the following to the PX4 section of your settings.json file: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"PX4\" : { ... , \"Logs\" : \"c:/temp/mavlink\" } } } AirSim will create a timestamped log file in this folder for each \"armed/disarmed\" flight session. You will then see log files organized by date in d:\\temp\\logs, specifically *input.mavlink and *output.mavlink files.","title":"Logging MavLink Messages"},{"location":"px4_logging/#mavlink-logviewer","text":"For MavLink enabled drones, you can also use our Log Viewer to visualize the streams of data. If you enable this form of realtime logging you should not use the \"Logs\" setting above, these two forms of logging are mutually exclusive.","title":"MavLink LogViewer"},{"location":"px4_logging/#px4-log-in-sitl-mode","text":"In SITL mode, please a log file is produced when drone is armed. The SITL terminal will contain the path to the log file, it should look something like this INFO [logger] Opened log file: rootfs/fs/microsd/log/2017-03-27/20_02_49.ulg","title":"PX4 Log in SITL Mode"},{"location":"px4_logging/#px4-log-in-hitl-mode","text":"If you are using Pixhawk hardware in HIL mode, then set parameter SYS_LOGGER=1 using QGroundControl. PX4 will write log file on device which you can download at later date using QGroundControl.","title":"PX4 Log in HITL Mode"},{"location":"px4_logging/#debugging-a-bad-flight","text":"You can use these *.mavlink log files to debug a bad flight using the LogViewer . For example, AirSim/PX4 flight may misbehave if you run it on an under powered computer. The following shows what might happen in that situation. In this flight we ran a simple commander takeoff test as performed by PythonClient/multirotor/stability_test.py and the flight started off fine, but then went crazy at the end and the drone crashed. So why is that? What can the log file show? Here we've plotted the following 5 metrics: - hil_gps.alt - the simulated altitude sent from AirSim to PX4 - telemetry.update_rate - the rate AirSim is performing the critical drone update loop in updates per second. - telemetry.update_time - the average time taken inside AirSim performing the critical drone update loop. - telemetry.actuation_delay - this is a very interesting metric measuring how long it takes PX4 to send back updated actuator controls message (motor power) - actuator_controls.0 - the actuator controls signal from PX4 for the first rotor. What we see then with these metrics is that things started off nicely, with nice flat altitude, high update rate in the 275 to 300 fps range, and a nice low update time inside AirSim around 113 microseconds, and a nice low actuation delay in the round trip from PX4. The actuator controls also stabilize quickly to a nice flat line. But then the update_time starts to climb, at the same time the actuation_delay climbs and we see a little tip in actuator_controls. This dip should not happen, the PX4 is panicking over loss of update rate but it recovers. But then we see actuator controls go crazy, a huge spike in actuation delay, and around this time we see a message from AirSim saying lockstep disabled . A delay over 100 millisecond triggers AirSim into jumping out of lockstep mode and the PX4 goes nuts and the drone crashes. The button line is that if a simple takeoff cannot maintain steady smooth flight and you see these kinds of spikes and uneven update rates then it means you are running AirSim on a computer that does not have enough horsepower. This is what a simple takeoff and hover and land should look like: Here you see the update_rate sticking the target of 333 updates per second. You also see the update_time a nice flat 39 microseconds and the actuator_delay somewhere between 1.1 and 1.7 milliseconds, and the resulting actuator_controls a lovely flat line.","title":"Debugging a bad flight"},{"location":"px4_multi_vehicle/","text":"Setting up multi-vehicle PX4 simulation # The PX4 SITL stack comes with a sitl_multiple_run.sh shell script that runs multiple instances of the PX4 binary. This would allow the SITL stack to listen to connections from multiple AirSim vehicles on multiple TCP ports starting from 4560. However, the provided script does not let us view the PX4 console. If you want to run the instances manually while being able to view each instance's console ( Recommended ) see this section Setting up multiple instances of PX4 Software-in-Loop # Note you have to build PX4 with make px4_sitl_default none_iris as shown here before trying to run multiple PX4 instances. From your bash (or Cygwin) terminal go to the PX4 Firmware directory and run the sitl_multiple_run.sh script while specifying the number of vehicles you need cd PX4-Autopilot ./Tools/sitl_multiple_run.sh 2 # 2 here is the number of vehicles/instances This starts multiple instances that listen to TCP ports 4560 to 4560+i where 'i' is the number of vehicles/instances specified You should get a confirmation message that says that old instances have been stopped and new instances have been started killing running instances starting instance 0 in /cygdrive/c/PX4/home/PX4/Firmware/build/px4_sitl_default/instance_0 starting instance 1 in /cygdrive/c/PX4/home/PX4/Firmware/build/px4_sitl_default/instance_1 Now edit AirSim settings file to make sure you have matching TCP port settings for the set number of vehicles and to make sure that both vehicles do not spawn on the same point. For example, these settings would spawn two PX4Multirotors where one of them would try to connect to PX4 SITL at port 4560 and the other at port 4561 . It also makes sure the vehicles spawn at 0,1,0 and 0,-1,0 to avoid collision: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"X\" : 0 , \"Y\" : 1 , \"Z\" : 0 }, \"Drone2\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"UseTcp\" : true , \"TcpPort\" : 4561 , \"ControlPortLocal\" : 14541 , \"ControlPortRemote\" : 14581 , \"X\" : 0 , \"Y\" : -1 , \"Z\" : 0 } } } You can add more than two vehicles but you will need to make sure you adjust the TCP port for each (ie: vehicle 3's port would be 4562 and so on..) and adjust the spawn point. Now run your Unreal AirSim environment and it should connect to SITL PX4 via TCP. If you are running the instances with the PX4 console visible , you should see a bunch of messages from each SITL PX4 window. Specifically, the following messages tell you that AirSim is connected properly and GPS fusion is stable: INFO [simulator] Simulator connected on UDP port 14560 INFO [mavlink] partner IP: 127.0.0.1 INFO [ecl/EKF] EKF GPS checks passed (WGS-84 origin set) INFO [ecl/EKF] EKF commencing GPS fusion If you do not see these messages then check your port settings. You should also be able to use QGroundControl with SITL mode. Make sure there is no Pixhawk hardware plugged in, otherwise QGroundControl will choose to use that instead. Note that as we don't have a physical board, an RC cannot be connected directly to it. So the alternatives are either use XBox 360 Controller or connect your RC using USB (for example, in case of FrSky Taranis X9D Plus) or using trainer USB cable to your PC. This makes your RC look like a joystick. You will need to do extra set up in QGroundControl to use virtual joystick for RC control. You do not need to do this unless you plan to fly a drone manually in AirSim. Autonomous flight using the Python API does not require RC, see No Remote Control . Starting SITL instances with PX4 console # If you want to start your SITL instances while being able to view the PX4 console, you will need to run the shell scripts found here rather than sitl_multiple_run.sh . Here is how you would do so: Note This script also assumes PX4 is built with make px4_sitl_default none_iris as shown here before trying to run multiple PX4 instances. From your bash (or Cygwin) terminal go to the PX4 directory and get the scripts (place them in a subdirectory called Scripts win the PX4 directory as shown) cd PX4 mkdir -p Scripts cd Scripts wget https://github.com/microsoft/AirSim/raw/main/PX4Scripts/sitl_kill.sh wget https://github.com/microsoft/AirSim/raw/main/PX4Scripts/run_airsim_sitl.sh Note the shell scripts expect the Scripts and Firmware directories to be within the same parent directory. Also, you may need to make the scripts executable by running chmod +x sitl_kill.sh and chmod +x run_airsim_sitl.sh . Run the sitl_kill.sh script to kill all active PX4 SITL instances ./sitl_kill.sh Run the run_airsim_sitl.sh script while specifying which instance you would like to run in the current terminal window (the first instance would be numbered 0) ./run_airsim_sitl.sh 0 # first instance = 0 You should see the PX4 instance starting and waiting for AirSim's connection as it would with a single instance. ______ __ __ ___ | ___ \\ \\ \\ / / / | | |_/ / \\ V / / /| | | __/ / \\ / /_| | | | / /^\\ \\ \\___ | \\_| \\/ \\/ |_/ px4 starting. INFO [px4] Calling startup script: /bin/sh /cygdrive/c/PX4/home/PX4/Firmware/etc/init.d-posix/rcS 0 INFO [dataman] Unknown restart, data manager file './dataman' size is 11798680 bytes INFO [simulator] Waiting for simulator to connect on TCP port 4560 4. Open a new terminal and go to the Scripts directory and start the next instance cd PX4 cd Scripts ./run_airsim_sitl.sh 1 # ,2,3,4,..,etc Repeat step 4 for as many instances as you would like to start Run your Unreal AirSim environment and it should connect to SITL PX4 via TCP (assuming your settings.json file has the right ports).","title":"\u8f6f\u4ef6\u5728\u73af\u4e2d\u7684 PX4 \u591a\u8f66\u8f86"},{"location":"px4_multi_vehicle/#setting-up-multi-vehicle-px4-simulation","text":"The PX4 SITL stack comes with a sitl_multiple_run.sh shell script that runs multiple instances of the PX4 binary. This would allow the SITL stack to listen to connections from multiple AirSim vehicles on multiple TCP ports starting from 4560. However, the provided script does not let us view the PX4 console. If you want to run the instances manually while being able to view each instance's console ( Recommended ) see this section","title":"Setting up multi-vehicle PX4 simulation"},{"location":"px4_multi_vehicle/#setting-up-multiple-instances-of-px4-software-in-loop","text":"Note you have to build PX4 with make px4_sitl_default none_iris as shown here before trying to run multiple PX4 instances. From your bash (or Cygwin) terminal go to the PX4 Firmware directory and run the sitl_multiple_run.sh script while specifying the number of vehicles you need cd PX4-Autopilot ./Tools/sitl_multiple_run.sh 2 # 2 here is the number of vehicles/instances This starts multiple instances that listen to TCP ports 4560 to 4560+i where 'i' is the number of vehicles/instances specified You should get a confirmation message that says that old instances have been stopped and new instances have been started killing running instances starting instance 0 in /cygdrive/c/PX4/home/PX4/Firmware/build/px4_sitl_default/instance_0 starting instance 1 in /cygdrive/c/PX4/home/PX4/Firmware/build/px4_sitl_default/instance_1 Now edit AirSim settings file to make sure you have matching TCP port settings for the set number of vehicles and to make sure that both vehicles do not spawn on the same point. For example, these settings would spawn two PX4Multirotors where one of them would try to connect to PX4 SITL at port 4560 and the other at port 4561 . It also makes sure the vehicles spawn at 0,1,0 and 0,-1,0 to avoid collision: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"X\" : 0 , \"Y\" : 1 , \"Z\" : 0 }, \"Drone2\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"UseTcp\" : true , \"TcpPort\" : 4561 , \"ControlPortLocal\" : 14541 , \"ControlPortRemote\" : 14581 , \"X\" : 0 , \"Y\" : -1 , \"Z\" : 0 } } } You can add more than two vehicles but you will need to make sure you adjust the TCP port for each (ie: vehicle 3's port would be 4562 and so on..) and adjust the spawn point. Now run your Unreal AirSim environment and it should connect to SITL PX4 via TCP. If you are running the instances with the PX4 console visible , you should see a bunch of messages from each SITL PX4 window. Specifically, the following messages tell you that AirSim is connected properly and GPS fusion is stable: INFO [simulator] Simulator connected on UDP port 14560 INFO [mavlink] partner IP: 127.0.0.1 INFO [ecl/EKF] EKF GPS checks passed (WGS-84 origin set) INFO [ecl/EKF] EKF commencing GPS fusion If you do not see these messages then check your port settings. You should also be able to use QGroundControl with SITL mode. Make sure there is no Pixhawk hardware plugged in, otherwise QGroundControl will choose to use that instead. Note that as we don't have a physical board, an RC cannot be connected directly to it. So the alternatives are either use XBox 360 Controller or connect your RC using USB (for example, in case of FrSky Taranis X9D Plus) or using trainer USB cable to your PC. This makes your RC look like a joystick. You will need to do extra set up in QGroundControl to use virtual joystick for RC control. You do not need to do this unless you plan to fly a drone manually in AirSim. Autonomous flight using the Python API does not require RC, see No Remote Control .","title":"Setting up multiple instances of PX4 Software-in-Loop"},{"location":"px4_multi_vehicle/#starting-sitl-instances-with-px4-console","text":"If you want to start your SITL instances while being able to view the PX4 console, you will need to run the shell scripts found here rather than sitl_multiple_run.sh . Here is how you would do so: Note This script also assumes PX4 is built with make px4_sitl_default none_iris as shown here before trying to run multiple PX4 instances. From your bash (or Cygwin) terminal go to the PX4 directory and get the scripts (place them in a subdirectory called Scripts win the PX4 directory as shown) cd PX4 mkdir -p Scripts cd Scripts wget https://github.com/microsoft/AirSim/raw/main/PX4Scripts/sitl_kill.sh wget https://github.com/microsoft/AirSim/raw/main/PX4Scripts/run_airsim_sitl.sh Note the shell scripts expect the Scripts and Firmware directories to be within the same parent directory. Also, you may need to make the scripts executable by running chmod +x sitl_kill.sh and chmod +x run_airsim_sitl.sh . Run the sitl_kill.sh script to kill all active PX4 SITL instances ./sitl_kill.sh Run the run_airsim_sitl.sh script while specifying which instance you would like to run in the current terminal window (the first instance would be numbered 0) ./run_airsim_sitl.sh 0 # first instance = 0 You should see the PX4 instance starting and waiting for AirSim's connection as it would with a single instance. ______ __ __ ___ | ___ \\ \\ \\ / / / | | |_/ / \\ V / / /| | | __/ / \\ / /_| | | | / /^\\ \\ \\___ | \\_| \\/ \\/ |_/ px4 starting. INFO [px4] Calling startup script: /bin/sh /cygdrive/c/PX4/home/PX4/Firmware/etc/init.d-posix/rcS 0 INFO [dataman] Unknown restart, data manager file './dataman' size is 11798680 bytes INFO [simulator] Waiting for simulator to connect on TCP port 4560 4. Open a new terminal and go to the Scripts directory and start the next instance cd PX4 cd Scripts ./run_airsim_sitl.sh 1 # ,2,3,4,..,etc Repeat step 4 for as many instances as you would like to start Run your Unreal AirSim environment and it should connect to SITL PX4 via TCP (assuming your settings.json file has the right ports).","title":"Starting SITL instances with PX4 console"},{"location":"px4_setup/","text":"PX4 Setup for AirSim # The PX4 software stack is an open source very popular flight controller with support for wide variety of boards and sensors as well as built-in capability for higher level tasks such as mission planning. Please visit px4.io for more information. Warning : While all releases of AirSim are always tested with PX4 to ensure the support, setting up PX4 is not a trivial task. Unless you have at least intermediate level of experience with PX4 stack, we recommend you use simple_flight , which is now a default in AirSim. Supported Hardware # The following Pixhawk hardware has been tested with AirSim: Pixhawk PX4 2.4.8 PixFalcon PixRacer Pixhawk 2.1 Pixhawk 4 mini from Holybro Pixhawk 4 from Holybro Version 1.11.2 of the PX4 firmware also works on the Pixhawk 4 devices. Setting up PX4 Hardware-in-Loop # For this you will need one of the supported device listed above. For manual flight you will also need RC + transmitter. Make sure your RC receiver is bound with its RC transmitter. Connect the RC transmitter to the flight controller's RC port. Refer to your RC manual and PX4 docs for more information. Download QGroundControl , launch it and connect your flight controller to the USB port. Use QGroundControl to flash the latest PX4 Flight Stack. See also initial firmware setup video . In QGroundControl, configure your Pixhawk for HIL simulation by selecting the HIL Quadrocopter X airframe. After PX4 reboots, check that \"HIL Quadrocopter X\" is indeed selected. In QGroundControl, go to Radio tab and calibrate (make sure the remote control is on and the receiver is showing the indicator for the binding). Go to the Flight Mode tab and chose one of the remote control switches as \"Mode Channel\". Then set (for example) Stabilized and Attitude flight modes for two positions of the switch. Go to the Tuning section of QGroundControl and set appropriate values. For example, for Fly Sky's FS-TH9X remote control, the following settings give a more realistic feel: Hover Throttle = mid+1 mark, Roll and pitch sensitivity = mid-3 mark, Altitude and position control sensitivity = mid-2 mark. In AirSim settings file, specify PX4 for your vehicle config like this: { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"ClockType\": \"SteppableClock\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"UseSerial\": true, \"LockStep\": true, \"Sensors\":{ \"Barometer\":{ \"SensorType\": 1, \"Enabled\": true, \"PressureFactorSigma\": 0.0001825 } }, \"Parameters\": { \"NAV_RCL_ACT\": 0, \"NAV_DLL_ACT\": 0, \"COM_OBL_ACT\": 1, \"LPE_LAT\": 47.641468, \"LPE_LON\": -122.140165 } } } } Notice the PX4 [simulator] is using TCP, which is why we need to add: \"UseTcp\": true, . Notice we are also enabling LockStep , see PX4 LockStep for more information. The Barometer setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit which allows PX4 to achieve GPS lock more quickly. After above setup you should be able to use a remote control (RC) to fly with AirSim. You can usually arm the vehicle by lowering and bringing two sticks of RC together down and in-wards. You don't need QGroundControl after the initial setup. Typically the Stabilized (instead of Manual) mode gives better experience for beginners. See PX4 Basic Flying Guide . You can also control the drone from Python APIs . See Walkthrough Demo Video and Unreal AirSim Setup Video that shows you all the setup steps in this document. Setting up PX4 Software-in-Loop # The PX4 SITL mode doesn't require you to have separate device such as a Pixhawk or Pixracer. This is in fact the recommended way to use PX4 with simulators by PX4 team. However, this is indeed harder to set up. Please see this dedicated page for setting up PX4 in SITL mode. FAQ # Drone doesn't fly properly, it just goes \"crazy\". # There are a few reasons that can cause this. First, make sure your drone doesn't fall down large distance when starting the simulator. This might happen if you have created a custom Unreal environment and Player Start is placed too high above the ground. It seems that when this happens internal calibration in PX4 gets confused. You should also use QGroundControl and make sure you can arm and takeoff in QGroundControl properly. Finally, this also can be a machine performance issue in some rare cases, check your hard drive performance . Can I use Arducopter or other MavLink implementations? # Our code is tested with the PX4 firmware . We have not tested Arducopter or other mavlink implementations. Some of the flight API's do use the PX4 custom modes in the MAV_CMD_DO_SET_MODE messages (like PX4_CUSTOM_MAIN_MODE_AUTO) It is not finding my Pixhawk hardware # Check your settings.json file for this line \"SerialPort\":\"*,115200\". The asterisk here means \"find any serial port that looks like a Pixhawk device, but this doesn't always work for all types of Pixhawk hardware. So on Windows you can find the actual COM port using Device Manager, look under \"Ports (COM & LPT), plug the device in and see what new COM port shows up. Let's say you see a new port named \"USB Serial Port (COM5)\". Well, then change the SerialPort setting to this: \"SerialPort\":\"COM5,115200\". On Linux, the device can be found by running \"ls /dev/serial/by-id\" if you see a device name listed that looks like this usb-3D_Robotics_PX4_FMU_v2.x_0-if00 then you can use that name to connect, like this: \"SerialPort\":\"/dev/serial/by-id/usb-3D_Robotics_PX4_FMU_v2.x_0-if00\". Note this long name is actually a symbolic link to the real name, if you use \"ls -l ...\" you can find that symbolic link, it is usually something like \"/dev/ttyACM0\", so this will also work \"SerialPort\":\"/dev/ttyACM0,115200\". But that mapping is similar to windows, it is automatically assigned and can change, whereas the long name will work even if the actual TTY serial device mapping changes. WARN [commander] Takeoff denied, disarm and re-try # This happens if you try and take off when PX4 still has not computed the home position. PX4 will report the home position once it is happy with the GPS signal, and you will see these messages: INFO [commander] home: 47.6414680, -122.1401672, 119.99 INFO [tone_alarm] home_set Up until this point in time, however, the PX4 will reject takeoff commands. When I tell the drone to do something it always lands # For example, you use DroneShell moveToPosition -z -20 -x 50 -y 0 which it does, but when it gets to the target location the drone starts to land. This is the default behavior of PX4 when offboard mode completes. To set the drone to hover instead set this PX4 parameter: param set COM_OBL_ACT 1 I get message length mismatches errors # You might need to set MAV_PROTO_VER parameter in QGC to \"Always use version 1\". Please see this issue more details.","title":"AirSim \u7684 PX4 \u8bbe\u7f6e"},{"location":"px4_setup/#px4-setup-for-airsim","text":"The PX4 software stack is an open source very popular flight controller with support for wide variety of boards and sensors as well as built-in capability for higher level tasks such as mission planning. Please visit px4.io for more information. Warning : While all releases of AirSim are always tested with PX4 to ensure the support, setting up PX4 is not a trivial task. Unless you have at least intermediate level of experience with PX4 stack, we recommend you use simple_flight , which is now a default in AirSim.","title":"PX4 Setup for AirSim"},{"location":"px4_setup/#supported-hardware","text":"The following Pixhawk hardware has been tested with AirSim: Pixhawk PX4 2.4.8 PixFalcon PixRacer Pixhawk 2.1 Pixhawk 4 mini from Holybro Pixhawk 4 from Holybro Version 1.11.2 of the PX4 firmware also works on the Pixhawk 4 devices.","title":"Supported Hardware"},{"location":"px4_setup/#setting-up-px4-hardware-in-loop","text":"For this you will need one of the supported device listed above. For manual flight you will also need RC + transmitter. Make sure your RC receiver is bound with its RC transmitter. Connect the RC transmitter to the flight controller's RC port. Refer to your RC manual and PX4 docs for more information. Download QGroundControl , launch it and connect your flight controller to the USB port. Use QGroundControl to flash the latest PX4 Flight Stack. See also initial firmware setup video . In QGroundControl, configure your Pixhawk for HIL simulation by selecting the HIL Quadrocopter X airframe. After PX4 reboots, check that \"HIL Quadrocopter X\" is indeed selected. In QGroundControl, go to Radio tab and calibrate (make sure the remote control is on and the receiver is showing the indicator for the binding). Go to the Flight Mode tab and chose one of the remote control switches as \"Mode Channel\". Then set (for example) Stabilized and Attitude flight modes for two positions of the switch. Go to the Tuning section of QGroundControl and set appropriate values. For example, for Fly Sky's FS-TH9X remote control, the following settings give a more realistic feel: Hover Throttle = mid+1 mark, Roll and pitch sensitivity = mid-3 mark, Altitude and position control sensitivity = mid-2 mark. In AirSim settings file, specify PX4 for your vehicle config like this: { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"ClockType\": \"SteppableClock\", \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"UseSerial\": true, \"LockStep\": true, \"Sensors\":{ \"Barometer\":{ \"SensorType\": 1, \"Enabled\": true, \"PressureFactorSigma\": 0.0001825 } }, \"Parameters\": { \"NAV_RCL_ACT\": 0, \"NAV_DLL_ACT\": 0, \"COM_OBL_ACT\": 1, \"LPE_LAT\": 47.641468, \"LPE_LON\": -122.140165 } } } } Notice the PX4 [simulator] is using TCP, which is why we need to add: \"UseTcp\": true, . Notice we are also enabling LockStep , see PX4 LockStep for more information. The Barometer setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit which allows PX4 to achieve GPS lock more quickly. After above setup you should be able to use a remote control (RC) to fly with AirSim. You can usually arm the vehicle by lowering and bringing two sticks of RC together down and in-wards. You don't need QGroundControl after the initial setup. Typically the Stabilized (instead of Manual) mode gives better experience for beginners. See PX4 Basic Flying Guide . You can also control the drone from Python APIs . See Walkthrough Demo Video and Unreal AirSim Setup Video that shows you all the setup steps in this document.","title":"Setting up PX4 Hardware-in-Loop"},{"location":"px4_setup/#setting-up-px4-software-in-loop","text":"The PX4 SITL mode doesn't require you to have separate device such as a Pixhawk or Pixracer. This is in fact the recommended way to use PX4 with simulators by PX4 team. However, this is indeed harder to set up. Please see this dedicated page for setting up PX4 in SITL mode.","title":"Setting up PX4 Software-in-Loop"},{"location":"px4_setup/#faq","text":"","title":"FAQ"},{"location":"px4_setup/#drone-doesnt-fly-properly-it-just-goes-crazy","text":"There are a few reasons that can cause this. First, make sure your drone doesn't fall down large distance when starting the simulator. This might happen if you have created a custom Unreal environment and Player Start is placed too high above the ground. It seems that when this happens internal calibration in PX4 gets confused. You should also use QGroundControl and make sure you can arm and takeoff in QGroundControl properly. Finally, this also can be a machine performance issue in some rare cases, check your hard drive performance .","title":"Drone doesn't fly properly, it just goes \"crazy\"."},{"location":"px4_setup/#can-i-use-arducopter-or-other-mavlink-implementations","text":"Our code is tested with the PX4 firmware . We have not tested Arducopter or other mavlink implementations. Some of the flight API's do use the PX4 custom modes in the MAV_CMD_DO_SET_MODE messages (like PX4_CUSTOM_MAIN_MODE_AUTO)","title":"Can I use Arducopter or other MavLink implementations?"},{"location":"px4_setup/#it-is-not-finding-my-pixhawk-hardware","text":"Check your settings.json file for this line \"SerialPort\":\"*,115200\". The asterisk here means \"find any serial port that looks like a Pixhawk device, but this doesn't always work for all types of Pixhawk hardware. So on Windows you can find the actual COM port using Device Manager, look under \"Ports (COM & LPT), plug the device in and see what new COM port shows up. Let's say you see a new port named \"USB Serial Port (COM5)\". Well, then change the SerialPort setting to this: \"SerialPort\":\"COM5,115200\". On Linux, the device can be found by running \"ls /dev/serial/by-id\" if you see a device name listed that looks like this usb-3D_Robotics_PX4_FMU_v2.x_0-if00 then you can use that name to connect, like this: \"SerialPort\":\"/dev/serial/by-id/usb-3D_Robotics_PX4_FMU_v2.x_0-if00\". Note this long name is actually a symbolic link to the real name, if you use \"ls -l ...\" you can find that symbolic link, it is usually something like \"/dev/ttyACM0\", so this will also work \"SerialPort\":\"/dev/ttyACM0,115200\". But that mapping is similar to windows, it is automatically assigned and can change, whereas the long name will work even if the actual TTY serial device mapping changes.","title":"It is not finding my Pixhawk hardware"},{"location":"px4_setup/#warn-commander-takeoff-denied-disarm-and-re-try","text":"This happens if you try and take off when PX4 still has not computed the home position. PX4 will report the home position once it is happy with the GPS signal, and you will see these messages: INFO [commander] home: 47.6414680, -122.1401672, 119.99 INFO [tone_alarm] home_set Up until this point in time, however, the PX4 will reject takeoff commands.","title":"WARN  [commander] Takeoff denied, disarm and re-try"},{"location":"px4_setup/#when-i-tell-the-drone-to-do-something-it-always-lands","text":"For example, you use DroneShell moveToPosition -z -20 -x 50 -y 0 which it does, but when it gets to the target location the drone starts to land. This is the default behavior of PX4 when offboard mode completes. To set the drone to hover instead set this PX4 parameter: param set COM_OBL_ACT 1","title":"When I tell the drone to do something it always lands"},{"location":"px4_setup/#i-get-message-length-mismatches-errors","text":"You might need to set MAV_PROTO_VER parameter in QGC to \"Always use version 1\". Please see this issue more details.","title":"I get message length mismatches errors"},{"location":"px4_sitl/","text":"Setting up PX4 Software-in-Loop # The PX4 software provides a \"software-in-loop\" simulation (SITL) version of their stack that runs in Linux. If you are on Windows then you can use the Cygwin Toolchain or you can use the Windows subsystem for Linux and follow the PX4 Linux toolchain setup. If you are using WSL2 please read these additional instructions . Note that every time you stop the unreal app you have to restart the px4 app. From your bash terminal follow these steps for Linux and follow all the instructions under NuttX based hardware to install prerequisites. We've also included our own copy of the PX4 build instructions which is a bit more concise about what we need exactly. Get the PX4 source code and build the posix SITL version of PX4: mkdir -p PX4 cd PX4 git clone https://github.com/PX4/PX4-Autopilot.git --recursive bash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-nuttx --no-sim-tools cd PX4-Autopilot And find the latest stable release from https://github.com/PX4/PX4-Autopilot/releases and checkout the source code matching that release, for example: git checkout v1.11.3 Use following command to build and start PX4 firmware in SITL mode: make px4_sitl_default none_iris If you are using older version v1.8.* use this command instead: make posix_sitl_ekf2 none_iris . You should see a message saying the SITL PX4 app is waiting for the simulator (AirSim) to connect. You will also see information about which ports are configured for mavlink connection to the PX4 app. The default ports have changed recently, so check them closely to make sure AirSim settings are correct. INFO [simulator] Waiting for simulator to connect on TCP port 4560 INFO [init] Mixer: etc/mixers/quad_w.main.mix on /dev/pwm_output0 INFO [mavlink] mode: Normal, data rate: 4000000 B/s on udp port 14570 remote port 14550 INFO [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540 Note: this is also an interactive PX4 console, type help to see the list of commands you can enter here. They are mostly low level PX4 commands, but some of them can be useful for debugging. Now edit AirSim settings file to make sure you have matching UDP and TCP port settings: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"ClockType\" : \"SteppableClock\" , \"Vehicles\" : { \"PX4\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"LockStep\" : true , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"Sensors\" :{ \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 } }, \"Parameters\" : { \"NAV_RCL_ACT\" : 0 , \"NAV_DLL_ACT\" : 0 , \"COM_OBL_ACT\" : 1 , \"LPE_LAT\" : 47.641468 , \"LPE_LON\" : -122.140165 } } } } Notice the PX4 [simulator] is using TCP, which is why we need to add: \"UseTcp\": true, . Notice we are also enabling LockStep , see PX4 LockStep for more information. The Barometer setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit which allows PX4 to achieve GPS lock more quickly. Open incoming TCP port 4560 and incoming UDP port 14540 using your firewall configuration. Now run your Unreal AirSim environment and it should connect to SITL PX4 via TCP. You should see a bunch of messages from the SITL PX4 window. Specifically, the following messages tell you that AirSim is connected properly and GPS fusion is stable: INFO [simulator] Simulator connected on UDP port 14560 INFO [mavlink] partner IP: 127.0.0.1 INFO [ecl/EKF] EKF GPS checks passed (WGS-84 origin set) INFO [ecl/EKF] EKF commencing GPS fusion If you do not see these messages then check your port settings. You should also be able to use QGroundControl with SITL mode. Make sure there is no Pixhawk hardware plugged in, otherwise QGroundControl will choose to use that instead. Note that as we don't have a physical board, an RC cannot be connected directly to it. So the alternatives are either use XBox 360 Controller or connect your RC using USB (for example, in case of FrSky Taranis X9D Plus) or using trainer USB cable to your PC. This makes your RC look like a joystick. You will need to do extra set up in QGroundControl to use virtual joystick for RC control. You do not need to do this unless you plan to fly a drone manually in AirSim. Autonomous flight using the Python API does not require RC, see No Remote Control below. Setting GPS origin # Notice the above settings are provided in the params section of the settings.json file: \"LPE_LAT\": 47.641468, \"LPE_LON\": -122.140165, PX4 SITL mode needs to be configured to get the home location correct. The home location needs to be set to the same coordinates defined in OriginGeopoint . You can also run the following in the SITL PX4 console window to check that these values are set correctly. param show LPE_LAT param show LPE_LON Smooth Offboard Transitions # Notice the above setting is provided in the params section of the settings.json file: \"COM_OBL_ACT\": 1 This tells the drone automatically hover after each offboard control command finishes (the default setting is to land). Hovering is a smoother transition between multiple offboard commands. You can check this setting by running the following PX4 console command: param show COM_OBL_ACT Check the Home Position # If you are using DroneShell to execute commands (arm, takeoff, etc) then you should wait until the Home position is set. You will see the PX4 SITL console output this message: INFO [commander] home: 47.6414680, -122.1401672, 119.99 INFO [tone_alarm] home_set Now DroneShell 'pos' command should report this position and the commands should be accepted by PX4. If you attempt to takeoff without a home position you will see the message: WARN [commander] Takeoff denied, disarm and re-try After home position is set check the local position reported by 'pos' command : Local position: x=-0.0326988, y=0.00656854, z=5.48506 If the z coordinate is large like this then takeoff might not work as expected. Resetting the SITL and simulation should fix that problem. WSL 2 # Windows Subsystem for Linux version 2 operates in a Virtual Machine. This requires additional setup - see additional instructions . No Remote Control # Notice the above setting is provided in the params section of the settings.json file: \"NAV_RCL_ACT\": 0, \"NAV_DLL_ACT\": 0, This is required if you plan to fly the SITL mode PX4 with no remote control, just using python scripts, for example. These parameters stop the PX4 from triggering \"failsafe mode on\" every time a move command is finished. You can use the following PX4 command to check these values are set correctly: param show NAV_RCL_ACT param show NAV_DLL_ACT NOTE: Do NOT do this on a real drone as it is too dangerous to fly without these failsafe measures. Manually set parameters # You can also run the following in the PX4 console to set all these parameters manually: param set NAV_RCL_ACT 0 param set NAV_DLL_ACT 0 Setting up multi-vehicle simulation # You can simulate multiple drones in SITL mode using AirSim. However, this requires setting up multiple instances of the PX4 firmware simulator to be able to listen for each vehicle's connection on a separate TCP port (4560, 4561, etc). Please see this dedicated page for instructions on setting up multiple instances of PX4 in SITL mode. Using VirtualBox Ubuntu # If you want to run the above posix_sitl in a VirtualBox Ubuntu machine then it will have a different ip address from localhost. So in this case you need to edit the settings file and change the UdpIp and SitlIp to the ip address of your virtual machine set the LocalIpAddress to the address of your host machine running the Unreal engine. Remote Controller # There are several options for flying the simulated drone using a remote control or joystick like xbox gamepad. See remote controllers","title":"\u8f6f\u4ef6\u5728\u73af\u4e2d\u7684 PX4"},{"location":"px4_sitl/#setting-up-px4-software-in-loop","text":"The PX4 software provides a \"software-in-loop\" simulation (SITL) version of their stack that runs in Linux. If you are on Windows then you can use the Cygwin Toolchain or you can use the Windows subsystem for Linux and follow the PX4 Linux toolchain setup. If you are using WSL2 please read these additional instructions . Note that every time you stop the unreal app you have to restart the px4 app. From your bash terminal follow these steps for Linux and follow all the instructions under NuttX based hardware to install prerequisites. We've also included our own copy of the PX4 build instructions which is a bit more concise about what we need exactly. Get the PX4 source code and build the posix SITL version of PX4: mkdir -p PX4 cd PX4 git clone https://github.com/PX4/PX4-Autopilot.git --recursive bash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-nuttx --no-sim-tools cd PX4-Autopilot And find the latest stable release from https://github.com/PX4/PX4-Autopilot/releases and checkout the source code matching that release, for example: git checkout v1.11.3 Use following command to build and start PX4 firmware in SITL mode: make px4_sitl_default none_iris If you are using older version v1.8.* use this command instead: make posix_sitl_ekf2 none_iris . You should see a message saying the SITL PX4 app is waiting for the simulator (AirSim) to connect. You will also see information about which ports are configured for mavlink connection to the PX4 app. The default ports have changed recently, so check them closely to make sure AirSim settings are correct. INFO [simulator] Waiting for simulator to connect on TCP port 4560 INFO [init] Mixer: etc/mixers/quad_w.main.mix on /dev/pwm_output0 INFO [mavlink] mode: Normal, data rate: 4000000 B/s on udp port 14570 remote port 14550 INFO [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540 Note: this is also an interactive PX4 console, type help to see the list of commands you can enter here. They are mostly low level PX4 commands, but some of them can be useful for debugging. Now edit AirSim settings file to make sure you have matching UDP and TCP port settings: { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"ClockType\" : \"SteppableClock\" , \"Vehicles\" : { \"PX4\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"LockStep\" : true , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"Sensors\" :{ \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 } }, \"Parameters\" : { \"NAV_RCL_ACT\" : 0 , \"NAV_DLL_ACT\" : 0 , \"COM_OBL_ACT\" : 1 , \"LPE_LAT\" : 47.641468 , \"LPE_LON\" : -122.140165 } } } } Notice the PX4 [simulator] is using TCP, which is why we need to add: \"UseTcp\": true, . Notice we are also enabling LockStep , see PX4 LockStep for more information. The Barometer setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit which allows PX4 to achieve GPS lock more quickly. Open incoming TCP port 4560 and incoming UDP port 14540 using your firewall configuration. Now run your Unreal AirSim environment and it should connect to SITL PX4 via TCP. You should see a bunch of messages from the SITL PX4 window. Specifically, the following messages tell you that AirSim is connected properly and GPS fusion is stable: INFO [simulator] Simulator connected on UDP port 14560 INFO [mavlink] partner IP: 127.0.0.1 INFO [ecl/EKF] EKF GPS checks passed (WGS-84 origin set) INFO [ecl/EKF] EKF commencing GPS fusion If you do not see these messages then check your port settings. You should also be able to use QGroundControl with SITL mode. Make sure there is no Pixhawk hardware plugged in, otherwise QGroundControl will choose to use that instead. Note that as we don't have a physical board, an RC cannot be connected directly to it. So the alternatives are either use XBox 360 Controller or connect your RC using USB (for example, in case of FrSky Taranis X9D Plus) or using trainer USB cable to your PC. This makes your RC look like a joystick. You will need to do extra set up in QGroundControl to use virtual joystick for RC control. You do not need to do this unless you plan to fly a drone manually in AirSim. Autonomous flight using the Python API does not require RC, see No Remote Control below.","title":"Setting up PX4 Software-in-Loop"},{"location":"px4_sitl/#setting-gps-origin","text":"Notice the above settings are provided in the params section of the settings.json file: \"LPE_LAT\": 47.641468, \"LPE_LON\": -122.140165, PX4 SITL mode needs to be configured to get the home location correct. The home location needs to be set to the same coordinates defined in OriginGeopoint . You can also run the following in the SITL PX4 console window to check that these values are set correctly. param show LPE_LAT param show LPE_LON","title":"Setting GPS origin"},{"location":"px4_sitl/#smooth-offboard-transitions","text":"Notice the above setting is provided in the params section of the settings.json file: \"COM_OBL_ACT\": 1 This tells the drone automatically hover after each offboard control command finishes (the default setting is to land). Hovering is a smoother transition between multiple offboard commands. You can check this setting by running the following PX4 console command: param show COM_OBL_ACT","title":"Smooth Offboard Transitions"},{"location":"px4_sitl/#check-the-home-position","text":"If you are using DroneShell to execute commands (arm, takeoff, etc) then you should wait until the Home position is set. You will see the PX4 SITL console output this message: INFO [commander] home: 47.6414680, -122.1401672, 119.99 INFO [tone_alarm] home_set Now DroneShell 'pos' command should report this position and the commands should be accepted by PX4. If you attempt to takeoff without a home position you will see the message: WARN [commander] Takeoff denied, disarm and re-try After home position is set check the local position reported by 'pos' command : Local position: x=-0.0326988, y=0.00656854, z=5.48506 If the z coordinate is large like this then takeoff might not work as expected. Resetting the SITL and simulation should fix that problem.","title":"Check the Home Position"},{"location":"px4_sitl/#wsl-2","text":"Windows Subsystem for Linux version 2 operates in a Virtual Machine. This requires additional setup - see additional instructions .","title":"WSL 2"},{"location":"px4_sitl/#no-remote-control","text":"Notice the above setting is provided in the params section of the settings.json file: \"NAV_RCL_ACT\": 0, \"NAV_DLL_ACT\": 0, This is required if you plan to fly the SITL mode PX4 with no remote control, just using python scripts, for example. These parameters stop the PX4 from triggering \"failsafe mode on\" every time a move command is finished. You can use the following PX4 command to check these values are set correctly: param show NAV_RCL_ACT param show NAV_DLL_ACT NOTE: Do NOT do this on a real drone as it is too dangerous to fly without these failsafe measures.","title":"No Remote Control"},{"location":"px4_sitl/#manually-set-parameters","text":"You can also run the following in the PX4 console to set all these parameters manually: param set NAV_RCL_ACT 0 param set NAV_DLL_ACT 0","title":"Manually set parameters"},{"location":"px4_sitl/#setting-up-multi-vehicle-simulation","text":"You can simulate multiple drones in SITL mode using AirSim. However, this requires setting up multiple instances of the PX4 firmware simulator to be able to listen for each vehicle's connection on a separate TCP port (4560, 4561, etc). Please see this dedicated page for instructions on setting up multiple instances of PX4 in SITL mode.","title":"Setting up multi-vehicle simulation"},{"location":"px4_sitl/#using-virtualbox-ubuntu","text":"If you want to run the above posix_sitl in a VirtualBox Ubuntu machine then it will have a different ip address from localhost. So in this case you need to edit the settings file and change the UdpIp and SitlIp to the ip address of your virtual machine set the LocalIpAddress to the address of your host machine running the Unreal engine.","title":"Using VirtualBox Ubuntu"},{"location":"px4_sitl/#remote-controller","text":"There are several options for flying the simulated drone using a remote control or joystick like xbox gamepad. See remote controllers","title":"Remote Controller"},{"location":"px4_sitl_wsl2/","text":"PX4 Software-in-Loop with WSL 2 # The Windows subsystem for Linux version 2 uses a Virtual Machine which has a separate IP address from your Windows host machine. This means PX4 cannot find AirSim using \"localhost\" which is the default behavior for PX4. You will notice that on Windows ipconfig returns a new ethernet adapter for WSL like this (notice the vEthernet has (WSL) in the name: Ethernet adapter vEthernet (WSL): Connection-specific DNS Suffix . : Link-local IPv6 Address . . . . . : fe80::1192:f9a5:df88:53ba%44 IPv4 Address. . . . . . . . . . . : 172.31.64.1 Subnet Mask . . . . . . . . . . . : 255.255.240.0 Default Gateway . . . . . . . . . : This address 172.31.64.1 is the address that WSL 2 can use to reach your Windows host machine. Starting with this PX4 Change Request (which correlates to version v1.12.0-beta1 or newer) PX4 in SITL mode can now connect to AirSim on a different (remote) IP address. To enable this make sure you have a version of PX4 containing this fix and set the following environment variable in linux: export PX4_SIM_HOST_ADDR = 172 .31.64.1 Note: Be sure to update the above address 172.31.64.1 to match what you see from your ipconfig command. Open incoming TCP port 4560 and incoming UDP port 14540 using your firewall configuration. Now on the linux side run ip address show and copy the eth0 inet address, it should be something like 172.31.66.156 . This is the address Windows needs to know in order to find PX4. Edit your AirSim settings file and add LocalHostIp to tell AirSim to use the WSL ethernet adapter address instead of the default localhost . This will cause AirSim to open the TCP port on that adapter which is the address that the PX4 app will be looking for. Also tell AirSim to connect the ControlIp UDP channel by setting ControlIp to the magic string remote . This resolves to the WSL 2 remote ip address found in the TCP socket. { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"ClockType\" : \"SteppableClock\" , \"Vehicles\" : { \"PX4\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"LockStep\" : true , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlIp\" : \"remote\" , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"LocalHostIp\" : \"172.31.64.1\" , \"Sensors\" :{ \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 } }, \"Parameters\" : { \"NAV_RCL_ACT\" : 0 , \"NAV_DLL_ACT\" : 0 , \"COM_OBL_ACT\" : 1 , \"LPE_LAT\" : 47.641468 , \"LPE_LON\" : -122.140165 } } } } See PX4 LockStep for more information. The \"Barometer\" setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit. If your local repo does not include this PX4 commit , please edit the Linux file in ROMFS/px4fmu_common/init.d-posix/rcS and make sure it is looking for the PX4_SIM_HOST_ADDR environment variable and is passing that through to the PX4 simulator like this: # If PX4_SIM_HOST_ADDR environment variable is empty use localhost. if [ -z \" ${ PX4_SIM_HOST_ADDR } \" ] ; then echo \"PX4 SIM HOST: localhost\" simulator start -c $simulator_tcp_port else echo \"PX4 SIM HOST: $PX4_SIM_HOST_ADDR \" simulator start -t $PX4_SIM_HOST_ADDR $simulator_tcp_port fi Note: this code might already be there depending on the version of PX4 you are using. Note: please be patient when waiting for the message: INFO [simulator] Simulator connected on TCP port 4560. It can take a little longer to establish the remote connection than it does with localhost . Now you can proceed with the steps shown in Setting up PX4 Software-in-Loop .","title":"\u5e26\u6709 WSL 2 \u7684 PX4 SITL"},{"location":"px4_sitl_wsl2/#px4-software-in-loop-with-wsl-2","text":"The Windows subsystem for Linux version 2 uses a Virtual Machine which has a separate IP address from your Windows host machine. This means PX4 cannot find AirSim using \"localhost\" which is the default behavior for PX4. You will notice that on Windows ipconfig returns a new ethernet adapter for WSL like this (notice the vEthernet has (WSL) in the name: Ethernet adapter vEthernet (WSL): Connection-specific DNS Suffix . : Link-local IPv6 Address . . . . . : fe80::1192:f9a5:df88:53ba%44 IPv4 Address. . . . . . . . . . . : 172.31.64.1 Subnet Mask . . . . . . . . . . . : 255.255.240.0 Default Gateway . . . . . . . . . : This address 172.31.64.1 is the address that WSL 2 can use to reach your Windows host machine. Starting with this PX4 Change Request (which correlates to version v1.12.0-beta1 or newer) PX4 in SITL mode can now connect to AirSim on a different (remote) IP address. To enable this make sure you have a version of PX4 containing this fix and set the following environment variable in linux: export PX4_SIM_HOST_ADDR = 172 .31.64.1 Note: Be sure to update the above address 172.31.64.1 to match what you see from your ipconfig command. Open incoming TCP port 4560 and incoming UDP port 14540 using your firewall configuration. Now on the linux side run ip address show and copy the eth0 inet address, it should be something like 172.31.66.156 . This is the address Windows needs to know in order to find PX4. Edit your AirSim settings file and add LocalHostIp to tell AirSim to use the WSL ethernet adapter address instead of the default localhost . This will cause AirSim to open the TCP port on that adapter which is the address that the PX4 app will be looking for. Also tell AirSim to connect the ControlIp UDP channel by setting ControlIp to the magic string remote . This resolves to the WSL 2 remote ip address found in the TCP socket. { \"SettingsVersion\" : 1.2 , \"SimMode\" : \"Multirotor\" , \"ClockType\" : \"SteppableClock\" , \"Vehicles\" : { \"PX4\" : { \"VehicleType\" : \"PX4Multirotor\" , \"UseSerial\" : false , \"LockStep\" : true , \"UseTcp\" : true , \"TcpPort\" : 4560 , \"ControlIp\" : \"remote\" , \"ControlPortLocal\" : 14540 , \"ControlPortRemote\" : 14580 , \"LocalHostIp\" : \"172.31.64.1\" , \"Sensors\" :{ \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 } }, \"Parameters\" : { \"NAV_RCL_ACT\" : 0 , \"NAV_DLL_ACT\" : 0 , \"COM_OBL_ACT\" : 1 , \"LPE_LAT\" : 47.641468 , \"LPE_LON\" : -122.140165 } } } } See PX4 LockStep for more information. The \"Barometer\" setting keeps PX4 happy because the default AirSim barometer has a bit too much noise generation. This setting clamps that down a bit. If your local repo does not include this PX4 commit , please edit the Linux file in ROMFS/px4fmu_common/init.d-posix/rcS and make sure it is looking for the PX4_SIM_HOST_ADDR environment variable and is passing that through to the PX4 simulator like this: # If PX4_SIM_HOST_ADDR environment variable is empty use localhost. if [ -z \" ${ PX4_SIM_HOST_ADDR } \" ] ; then echo \"PX4 SIM HOST: localhost\" simulator start -c $simulator_tcp_port else echo \"PX4 SIM HOST: $PX4_SIM_HOST_ADDR \" simulator start -t $PX4_SIM_HOST_ADDR $simulator_tcp_port fi Note: this code might already be there depending on the version of PX4 you are using. Note: please be patient when waiting for the message: INFO [simulator] Simulator connected on TCP port 4560. It can take a little longer to establish the remote connection than it does with localhost . Now you can proceed with the steps shown in Setting up PX4 Software-in-Loop .","title":"PX4 Software-in-Loop with WSL 2"},{"location":"reinforcement_learning/","text":"AirSim \u4e2d\u7684\u5f3a\u5316\u5b66\u4e60 # \u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728 AirSim \u4e2d\u5b9e\u73b0 DQN\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\u4f7f\u7528 OpenAI Gym \u5c01\u88c5 AirSim API \u7684\u5305\u88c5\u5668\uff0c\u5e76\u4f7f\u7528\u6807\u51c6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u7a33\u5b9a\u57fa\u7ebf\u5b9e\u73b0\u3002\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\uff0c\u6211\u4eec\u5efa\u8bae\u5b89\u88c5 stable-baselines3\uff08\u8bf7\u53c2\u9605 https://github.com/DLR-RM/stable-baselines3\uff09\u3002 \u514d\u8d23\u58f0\u660e # \u8fd9\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\u3002\u4e0b\u9762\u6211\u4eec\u5206\u4eab\u7684\u662f\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u548c\u8c03\u6574\u4ee5\u83b7\u5f97\u66f4\u4f73\u6027\u80fd\u7684\u6846\u67b6\u3002 Gym wrapper # \u4e3a\u4e86\u5c06 AirSim \u7528\u4f5c\u8bad\u7ec3\u73af\u5883\uff0c\u6211\u4eec\u6269\u5c55\u5e76\u91cd\u65b0\u5b9e\u73b0\u4e86 AirSim \u53ca\u5176\u76f8\u5173\u4efb\u52a1\u6240\u9700\u7684\u57fa\u7840\u65b9\u6cd5\uff0c\u4f8b\u5982 step \u3001 _get_obs \u3001 _compute_reward \u548c reset \u3002\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u7528\u4e8e\u6c7d\u8f66\u548c\u65e0\u4eba\u673a\u7684\u793a\u4f8b\u73af\u5883\u4f4d\u4e8e PythonClient/reinforcement_learning/*_env.py \u4e2d\u3002 RL \u4e0e\u6c7d\u8f66 # \u6e90\u4ee3\u7801 \u6b64\u793a\u4f8b\u9002\u7528\u4e8e \u53d1\u884c\u7248 \u4e2d\u63d0\u4f9b\u7684 AirSimNeighborhood \u73af\u5883\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4ece\u6a21\u62df\u4e2d\u83b7\u53d6\u56fe\u50cf\u5e76\u5bf9\u5176\u8fdb\u884c\u9002\u5f53\u7684\u8f6c\u6362\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4ece\u81ea\u6211\u76f8\u673a\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a 84x84 \u7684\u8f93\u5165\u5230\u7f51\u7edc\u3002\uff08\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4f20\u611f\u5668\u6a21\u6001\u548c\u4f20\u611f\u5668\u8f93\u5165\u2014\u2014\u5f53\u7136\uff0c\u60a8\u9700\u8981\u76f8\u5e94\u5730\u4fee\u6539\u4ee3\u7801\uff09\u3002 responses = client.simGetImages([ImageRequest(0, AirSimImageType.DepthPerspective, True, False)]) current_state = transform_input(responses) \u6211\u4eec\u8fdb\u4e00\u6b65\u5b9a\u4e49\u4e86\u4ee3\u7406\u53ef\u4ee5\u6267\u884c\u7684 6 \u4e2a\u52a8\u4f5c\uff08\u5239\u8f66\u3001\u76f4\u884c\u5e26\u6cb9\u95e8\u3001\u5de6\u8f6c\u5e26\u6cb9\u95e8\u5168\u5f00\u3001\u53f3\u8f6c\u5e26\u6cb9\u95e8\u5168\u5f00\u3001\u5de6\u8f6c\u534a\u5f00\u5e26\u6cb9\u95e8\u3001\u53f3\u8f6c\u534a\u5f00\u5e26\u6cb9\u95e8\uff09\u3002\u8fd9\u901a\u8fc7\u51fd\u6570 interpret_action \u5b9e\u73b0\uff1a def interpret_action(action): car_controls.brake = 0 car_controls.throttle = 1 if action == 0: car_controls.throttle = 0 car_controls.brake = 1 elif action == 1: car_controls.steering = 0 elif action == 2: car_controls.steering = 0.5 elif action == 3: car_controls.steering = -0.5 elif action == 4: car_controls.steering = 0.25 else: car_controls.steering = -0.25 return car_controls \u7136\u540e\uff0c\u6211\u4eec\u5728 _compute_reward \u4e2d\u5c06\u5956\u52b1\u51fd\u6570\u5b9a\u4e49\u4e3a\u8f66\u8f86\u884c\u9a76\u901f\u5ea6\u4e0e\u504f\u79bb\u4e2d\u5fc3\u7ebf\u8ddd\u79bb\u7684\u51f8\u7ec4\u5408\u3002\u5f53\u4ee3\u7406\u5feb\u901f\u884c\u9a76\u5e76\u4fdd\u6301\u5728\u8f66\u9053\u4e2d\u5fc3\u65f6\uff0c\u4ee3\u7406\u5c06\u83b7\u5f97\u9ad8\u5956\u52b1\u3002 def _compute_reward(car_state): MAX_SPEED = 300 MIN_SPEED = 10 thresh_dist = 3.5 beta = 3 z = 0 pts = [np.array([0, -1, z]), np.array([130, -1, z]), np.array([130, 125, z]), np.array([0, 125, z]), np.array([0, -1, z]), np.array([130, -1, z]), np.array([130, -128, z]), np.array([0, -128, z]), np.array([0, -1, z])] pd = car_state.position car_pt = np.array(list(pd.values())) dist = 10000000 for i in range(0, len(pts)-1): dist = min(dist, np.linalg.norm(np.cross((car_pt - pts[i]), (car_pt - pts[i+1])))/np.linalg.norm(pts[i]-pts[i+1])) #print(dist) if dist > thresh_dist: reward = -3 else: reward_dist = (math.exp(-beta*dist) - 0.5) reward_speed = (((car_state.speed - MIN_SPEED)/(MAX_SPEED - MIN_SPEED)) - 0.5) reward = reward_dist + reward_speed return reward \u8ba1\u7b97\u5956\u52b1\u51fd\u6570\u968f\u540e\u8fd8\u4f1a\u5224\u65ad\u8be5\u573a\u666f\u662f\u5426\u5df2\u7ec8\u6b62\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u78b0\u649e\uff09\u3002\u6211\u4eec\u4f1a\u89c2\u5bdf\u8f66\u8f86\u7684\u901f\u5ea6\uff0c\u5982\u679c\u901f\u5ea6\u4f4e\u4e8e\u9608\u503c\uff0c\u5219\u8ba4\u4e3a\u8be5\u573a\u666f\u5df2\u7ec8\u6b62\u3002 done = 0 if reward < -1: done = 1 if car_controls.brake == 0: if car_state.speed <= 5: done = 1 return done \u7136\u540e\uff0c\u4e3b\u5faa\u73af\u4f9d\u6b21\u6267\u884c\u83b7\u53d6\u56fe\u50cf\u3001\u6839\u636e\u5f53\u524d\u7b56\u7565\u8ba1\u7b97\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3001\u83b7\u5f97\u5956\u52b1\u7b49\u6b65\u9aa4\u3002\u5982\u679c\u56de\u5408\u7ed3\u675f\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7 reset() \u5c06\u8f66\u8f86\u91cd\u7f6e\u4e3a\u539f\u59cb\u72b6\u6001\uff1a client.reset() client.enableApiControl(True) client.armDisarm(True) car_control = interpret_action(1) // Reset position and drive straight for one second client.setCarControls(car_control) time.sleep(1) \u4e00\u65e6\u5728 car_env.py \u4e2d\u5b9a\u4e49\u4e86 gym \u98ce\u683c\u7684\u73af\u5883\u5305\u88c5\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 stable-baselines3 \u8fd0\u884c DQN \u8bad\u7ec3\u5faa\u73af\u3002DQN \u8bad\u7ec3\u7684\u914d\u7f6e\u5982\u4e0b\uff0c\u8be6\u89c1 dqn_car.py \u3002 model = DQN( \"CnnPolicy\", env, learning_rate=0.00025, verbose=1, batch_size=32, train_freq=4, target_update_interval=10000, learning_starts=200000, buffer_size=500000, max_grad_norm=10, exploration_fraction=0.1, exploration_final_eps=0.01, device=\"cuda\", tensorboard_log=\"./tb_logs/\", ) \u53ef\u4ee5\u5b9a\u4e49\u8bad\u7ec3\u73af\u5883\u548c\u8bc4\u4f30\u73af\u5883\uff08\u53c2\u89c1 dqn_car.py \u4e2d\u7684 EvalCallback \uff09\u3002\u8bc4\u4f30\u73af\u5883\u53ef\u4ee5\u4e0e\u8bad\u7ec3\u73af\u5883\u4e0d\u540c\uff0c\u5177\u6709\u4e0d\u540c\u7684\u7ec8\u6b62\u6761\u4ef6/\u573a\u666f\u914d\u7f6e\u3002Tensorboard \u65e5\u5fd7\u76ee\u5f55\u4e5f\u4f5c\u4e3a DQN \u53c2\u6570\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u3002\u6700\u540e\uff0c model.learn() \u542f\u52a8 DQN \u8bad\u7ec3\u5faa\u73af\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4ece stable-baselines3 \u4e2d\u4f7f\u7528 PPO\u3001A3C \u7b49\u5b9e\u73b0\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u6267\u884c dqn_car.py \u4e4b\u524d\uff0c\u9700\u8981\u542f\u52a8\u5e76\u8fd0\u884c\u6a21\u62df\u3002\u4e0b\u65b9\u89c6\u9891\u5c55\u793a\u4e86 DQN \u8bad\u7ec3\u7684\u524d\u51e0\u8f6e\u3002 RL \u4e0e\u56db\u65cb\u7ffc\u98de\u884c\u5668 # \u6e90\u4ee3\u7801 \u6b64\u793a\u4f8b\u9002\u7528\u4e8e \u53d1\u884c\u7248 \u4e2d\u53ef\u7528\u7684 AirSimMountainLandscape \u73af\u5883\u3002 \u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u4e8e\u56db\u65cb\u7ffc\u98de\u884c\u5668\u7684\u5404\u79cd\u81ea\u4e3b\u98de\u884c\u573a\u666f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u56db\u65cb\u7ffc\u98de\u884c\u5668\u6cbf\u9ad8\u538b\u7535\u7ebf\u98de\u884c\uff08\u4f8b\u5982\uff0c\u80fd\u6e90\u57fa\u7840\u8bbe\u65bd\u5de1\u68c0\u5e94\u7528\uff09\u3002 \u8fd9\u91cc\u6709\u4e03\u4e2a\u79bb\u6563\u52a8\u4f5c\uff0c\u5206\u522b\u5bf9\u5e94\u56db\u65cb\u7ffc\u98de\u884c\u5668\u53ef\u4ee5\u79fb\u52a8\u7684\u4e0d\u540c\u65b9\u5411\uff086 \u4e2a\u65b9\u5411 + 1 \u4e2a\u60ac\u505c\u52a8\u4f5c\uff09\u3002 def interpret_action(self, action): if action == 0: quad_offset = (self.step_length, 0, 0) elif action == 1: quad_offset = (0, self.step_length, 0) elif action == 2: quad_offset = (0, 0, self.step_length) elif action == 3: quad_offset = (-self.step_length, 0, 0) elif action == 4: quad_offset = (0, -self.step_length, 0) elif action == 5: quad_offset = (0, 0, -self.step_length) else: quad_offset = (0, 0, 0) \u5956\u52b1\u518d\u6b21\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u51b3\u5b9a\u4e86\u56db\u8f6e\u8f66\u7684\u884c\u9a76\u901f\u5ea6\u4ee5\u53ca\u5b83\u4e0e\u5df2\u77e5\u7535\u529b\u7ebf\u7684\u8ddd\u79bb\u3002 def compute_reward(quad_state, quad_vel, collision_info): thresh_dist = 7 beta = 1 z = -10 pts = [np.array([-0.55265, -31.9786, -19.0225]),np.array([48.59735, -63.3286, -60.07256]),np.array([193.5974, -55.0786, -46.32256]),np.array([369.2474, 35.32137, -62.5725]),np.array([541.3474, 143.6714, -32.07256]),] quad_pt = np.array(list((self.state[\"position\"].x_val, self.state[\"position\"].y_val,self.state[\"position\"].z_val,))) if self.state[\"collision\"]: reward = -100 else: dist = 10000000 for i in range(0, len(pts) - 1): dist = min(dist, np.linalg.norm(np.cross((quad_pt - pts[i]), (quad_pt - pts[i + 1]))) / np.linalg.norm(pts[i] - pts[i + 1])) if dist > thresh_dist: reward = -10 else: reward_dist = math.exp(-beta * dist) - 0.5 reward_speed = (np.linalg.norm([self.state[\"velocity\"].x_val, self.state[\"velocity\"].y_val, self.state[\"velocity\"].z_val,])- 0.5) reward = reward_dist + reward_speed \u5982\u679c\u4e8b\u4ef6\u504f\u79bb\u5df2\u77e5\u7535\u529b\u7ebf\u5750\u6807\u592a\u8fdc\uff0c\u6211\u4eec\u4f1a\u8ba4\u4e3a\u8be5\u4e8b\u4ef6\u7ec8\u6b62\uff0c\u7136\u540e\u5c06\u65e0\u4eba\u673a\u91cd\u7f6e\u5230\u5176\u8d77\u70b9\u3002 \u4e00\u65e6\u5728 drone_env.py \u4e2d\u5b9a\u4e49\u4e86 gym \u98ce\u683c\u7684\u73af\u5883\u5305\u88c5\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 stable-baselines3 \u8fd0\u884c DQN \u8bad\u7ec3\u5faa\u73af\u3002DQN \u8bad\u7ec3\u7684\u914d\u7f6e\u5982\u4e0b\uff0c\u8be6\u89c1 dqn_drone.py \u3002 model = DQN( \"CnnPolicy\", env, learning_rate=0.00025, verbose=1, batch_size=32, train_freq=4, target_update_interval=10000, learning_starts=10000, buffer_size=500000, max_grad_norm=10, exploration_fraction=0.1, exploration_final_eps=0.01, device=\"cuda\", tensorboard_log=\"./tb_logs/\", ) \u53ef\u4ee5\u5b9a\u4e49\u8bad\u7ec3\u73af\u5883\u548c\u8bc4\u4f30\u73af\u5883\uff08\u53c2\u89c1 dqn_drone.py \u4e2d\u7684 EvalCallback \uff09\u3002\u8bc4\u4f30\u73af\u5883\u53ef\u4ee5\u4e0e\u8bad\u7ec3\u73af\u5883\u4e0d\u540c\uff0c\u5177\u6709\u4e0d\u540c\u7684\u7ec8\u6b62\u6761\u4ef6/\u573a\u666f\u914d\u7f6e\u3002Tensorboard \u65e5\u5fd7\u76ee\u5f55\u4e5f\u88ab\u5b9a\u4e49\u4e3a DQN \u53c2\u6570\u7684\u4e00\u90e8\u5206\u3002\u6700\u540e\uff0c model.learn() \u542f\u52a8 DQN \u8bad\u7ec3\u5faa\u73af\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528 stable-baselines3 \u4e2d\u7684 PPO\u3001A3C \u7b49\u5b9e\u73b0\u3002 \u4ee5\u4e0b\u662f\u8bad\u7ec3\u671f\u95f4\u524d\u51e0\u4ee3\u7684\u89c6\u9891\u3002 \u76f8\u5173\u5185\u5bb9 # \u53e6\u8bf7\u53c2\u9605 Microsoft \u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u4eba\u8f66\u5e93\u7ae0\u8282\u7684 \u81ea\u52a8\u9a7e\u9a76\u624b\u518c \u3002","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"reinforcement_learning/#airsim","text":"\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728 AirSim \u4e2d\u5b9e\u73b0 DQN\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\u4f7f\u7528 OpenAI Gym \u5c01\u88c5 AirSim API \u7684\u5305\u88c5\u5668\uff0c\u5e76\u4f7f\u7528\u6807\u51c6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u7a33\u5b9a\u57fa\u7ebf\u5b9e\u73b0\u3002\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\uff0c\u6211\u4eec\u5efa\u8bae\u5b89\u88c5 stable-baselines3\uff08\u8bf7\u53c2\u9605 https://github.com/DLR-RM/stable-baselines3\uff09\u3002","title":"AirSim \u4e2d\u7684\u5f3a\u5316\u5b66\u4e60"},{"location":"reinforcement_learning/#_1","text":"\u8fd9\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\u3002\u4e0b\u9762\u6211\u4eec\u5206\u4eab\u7684\u662f\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u548c\u8c03\u6574\u4ee5\u83b7\u5f97\u66f4\u4f73\u6027\u80fd\u7684\u6846\u67b6\u3002","title":"\u514d\u8d23\u58f0\u660e"},{"location":"reinforcement_learning/#gym-wrapper","text":"\u4e3a\u4e86\u5c06 AirSim \u7528\u4f5c\u8bad\u7ec3\u73af\u5883\uff0c\u6211\u4eec\u6269\u5c55\u5e76\u91cd\u65b0\u5b9e\u73b0\u4e86 AirSim \u53ca\u5176\u76f8\u5173\u4efb\u52a1\u6240\u9700\u7684\u57fa\u7840\u65b9\u6cd5\uff0c\u4f8b\u5982 step \u3001 _get_obs \u3001 _compute_reward \u548c reset \u3002\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u7528\u4e8e\u6c7d\u8f66\u548c\u65e0\u4eba\u673a\u7684\u793a\u4f8b\u73af\u5883\u4f4d\u4e8e PythonClient/reinforcement_learning/*_env.py \u4e2d\u3002","title":"Gym wrapper"},{"location":"reinforcement_learning/#rl","text":"\u6e90\u4ee3\u7801 \u6b64\u793a\u4f8b\u9002\u7528\u4e8e \u53d1\u884c\u7248 \u4e2d\u63d0\u4f9b\u7684 AirSimNeighborhood \u73af\u5883\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4ece\u6a21\u62df\u4e2d\u83b7\u53d6\u56fe\u50cf\u5e76\u5bf9\u5176\u8fdb\u884c\u9002\u5f53\u7684\u8f6c\u6362\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4ece\u81ea\u6211\u76f8\u673a\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a 84x84 \u7684\u8f93\u5165\u5230\u7f51\u7edc\u3002\uff08\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4f20\u611f\u5668\u6a21\u6001\u548c\u4f20\u611f\u5668\u8f93\u5165\u2014\u2014\u5f53\u7136\uff0c\u60a8\u9700\u8981\u76f8\u5e94\u5730\u4fee\u6539\u4ee3\u7801\uff09\u3002 responses = client.simGetImages([ImageRequest(0, AirSimImageType.DepthPerspective, True, False)]) current_state = transform_input(responses) \u6211\u4eec\u8fdb\u4e00\u6b65\u5b9a\u4e49\u4e86\u4ee3\u7406\u53ef\u4ee5\u6267\u884c\u7684 6 \u4e2a\u52a8\u4f5c\uff08\u5239\u8f66\u3001\u76f4\u884c\u5e26\u6cb9\u95e8\u3001\u5de6\u8f6c\u5e26\u6cb9\u95e8\u5168\u5f00\u3001\u53f3\u8f6c\u5e26\u6cb9\u95e8\u5168\u5f00\u3001\u5de6\u8f6c\u534a\u5f00\u5e26\u6cb9\u95e8\u3001\u53f3\u8f6c\u534a\u5f00\u5e26\u6cb9\u95e8\uff09\u3002\u8fd9\u901a\u8fc7\u51fd\u6570 interpret_action \u5b9e\u73b0\uff1a def interpret_action(action): car_controls.brake = 0 car_controls.throttle = 1 if action == 0: car_controls.throttle = 0 car_controls.brake = 1 elif action == 1: car_controls.steering = 0 elif action == 2: car_controls.steering = 0.5 elif action == 3: car_controls.steering = -0.5 elif action == 4: car_controls.steering = 0.25 else: car_controls.steering = -0.25 return car_controls \u7136\u540e\uff0c\u6211\u4eec\u5728 _compute_reward \u4e2d\u5c06\u5956\u52b1\u51fd\u6570\u5b9a\u4e49\u4e3a\u8f66\u8f86\u884c\u9a76\u901f\u5ea6\u4e0e\u504f\u79bb\u4e2d\u5fc3\u7ebf\u8ddd\u79bb\u7684\u51f8\u7ec4\u5408\u3002\u5f53\u4ee3\u7406\u5feb\u901f\u884c\u9a76\u5e76\u4fdd\u6301\u5728\u8f66\u9053\u4e2d\u5fc3\u65f6\uff0c\u4ee3\u7406\u5c06\u83b7\u5f97\u9ad8\u5956\u52b1\u3002 def _compute_reward(car_state): MAX_SPEED = 300 MIN_SPEED = 10 thresh_dist = 3.5 beta = 3 z = 0 pts = [np.array([0, -1, z]), np.array([130, -1, z]), np.array([130, 125, z]), np.array([0, 125, z]), np.array([0, -1, z]), np.array([130, -1, z]), np.array([130, -128, z]), np.array([0, -128, z]), np.array([0, -1, z])] pd = car_state.position car_pt = np.array(list(pd.values())) dist = 10000000 for i in range(0, len(pts)-1): dist = min(dist, np.linalg.norm(np.cross((car_pt - pts[i]), (car_pt - pts[i+1])))/np.linalg.norm(pts[i]-pts[i+1])) #print(dist) if dist > thresh_dist: reward = -3 else: reward_dist = (math.exp(-beta*dist) - 0.5) reward_speed = (((car_state.speed - MIN_SPEED)/(MAX_SPEED - MIN_SPEED)) - 0.5) reward = reward_dist + reward_speed return reward \u8ba1\u7b97\u5956\u52b1\u51fd\u6570\u968f\u540e\u8fd8\u4f1a\u5224\u65ad\u8be5\u573a\u666f\u662f\u5426\u5df2\u7ec8\u6b62\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u78b0\u649e\uff09\u3002\u6211\u4eec\u4f1a\u89c2\u5bdf\u8f66\u8f86\u7684\u901f\u5ea6\uff0c\u5982\u679c\u901f\u5ea6\u4f4e\u4e8e\u9608\u503c\uff0c\u5219\u8ba4\u4e3a\u8be5\u573a\u666f\u5df2\u7ec8\u6b62\u3002 done = 0 if reward < -1: done = 1 if car_controls.brake == 0: if car_state.speed <= 5: done = 1 return done \u7136\u540e\uff0c\u4e3b\u5faa\u73af\u4f9d\u6b21\u6267\u884c\u83b7\u53d6\u56fe\u50cf\u3001\u6839\u636e\u5f53\u524d\u7b56\u7565\u8ba1\u7b97\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3001\u83b7\u5f97\u5956\u52b1\u7b49\u6b65\u9aa4\u3002\u5982\u679c\u56de\u5408\u7ed3\u675f\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7 reset() \u5c06\u8f66\u8f86\u91cd\u7f6e\u4e3a\u539f\u59cb\u72b6\u6001\uff1a client.reset() client.enableApiControl(True) client.armDisarm(True) car_control = interpret_action(1) // Reset position and drive straight for one second client.setCarControls(car_control) time.sleep(1) \u4e00\u65e6\u5728 car_env.py \u4e2d\u5b9a\u4e49\u4e86 gym \u98ce\u683c\u7684\u73af\u5883\u5305\u88c5\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 stable-baselines3 \u8fd0\u884c DQN \u8bad\u7ec3\u5faa\u73af\u3002DQN \u8bad\u7ec3\u7684\u914d\u7f6e\u5982\u4e0b\uff0c\u8be6\u89c1 dqn_car.py \u3002 model = DQN( \"CnnPolicy\", env, learning_rate=0.00025, verbose=1, batch_size=32, train_freq=4, target_update_interval=10000, learning_starts=200000, buffer_size=500000, max_grad_norm=10, exploration_fraction=0.1, exploration_final_eps=0.01, device=\"cuda\", tensorboard_log=\"./tb_logs/\", ) \u53ef\u4ee5\u5b9a\u4e49\u8bad\u7ec3\u73af\u5883\u548c\u8bc4\u4f30\u73af\u5883\uff08\u53c2\u89c1 dqn_car.py \u4e2d\u7684 EvalCallback \uff09\u3002\u8bc4\u4f30\u73af\u5883\u53ef\u4ee5\u4e0e\u8bad\u7ec3\u73af\u5883\u4e0d\u540c\uff0c\u5177\u6709\u4e0d\u540c\u7684\u7ec8\u6b62\u6761\u4ef6/\u573a\u666f\u914d\u7f6e\u3002Tensorboard \u65e5\u5fd7\u76ee\u5f55\u4e5f\u4f5c\u4e3a DQN \u53c2\u6570\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u3002\u6700\u540e\uff0c model.learn() \u542f\u52a8 DQN \u8bad\u7ec3\u5faa\u73af\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4ece stable-baselines3 \u4e2d\u4f7f\u7528 PPO\u3001A3C \u7b49\u5b9e\u73b0\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u6267\u884c dqn_car.py \u4e4b\u524d\uff0c\u9700\u8981\u542f\u52a8\u5e76\u8fd0\u884c\u6a21\u62df\u3002\u4e0b\u65b9\u89c6\u9891\u5c55\u793a\u4e86 DQN \u8bad\u7ec3\u7684\u524d\u51e0\u8f6e\u3002","title":"RL \u4e0e\u6c7d\u8f66"},{"location":"reinforcement_learning/#rl_1","text":"\u6e90\u4ee3\u7801 \u6b64\u793a\u4f8b\u9002\u7528\u4e8e \u53d1\u884c\u7248 \u4e2d\u53ef\u7528\u7684 AirSimMountainLandscape \u73af\u5883\u3002 \u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u4e8e\u56db\u65cb\u7ffc\u98de\u884c\u5668\u7684\u5404\u79cd\u81ea\u4e3b\u98de\u884c\u573a\u666f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u56db\u65cb\u7ffc\u98de\u884c\u5668\u6cbf\u9ad8\u538b\u7535\u7ebf\u98de\u884c\uff08\u4f8b\u5982\uff0c\u80fd\u6e90\u57fa\u7840\u8bbe\u65bd\u5de1\u68c0\u5e94\u7528\uff09\u3002 \u8fd9\u91cc\u6709\u4e03\u4e2a\u79bb\u6563\u52a8\u4f5c\uff0c\u5206\u522b\u5bf9\u5e94\u56db\u65cb\u7ffc\u98de\u884c\u5668\u53ef\u4ee5\u79fb\u52a8\u7684\u4e0d\u540c\u65b9\u5411\uff086 \u4e2a\u65b9\u5411 + 1 \u4e2a\u60ac\u505c\u52a8\u4f5c\uff09\u3002 def interpret_action(self, action): if action == 0: quad_offset = (self.step_length, 0, 0) elif action == 1: quad_offset = (0, self.step_length, 0) elif action == 2: quad_offset = (0, 0, self.step_length) elif action == 3: quad_offset = (-self.step_length, 0, 0) elif action == 4: quad_offset = (0, -self.step_length, 0) elif action == 5: quad_offset = (0, 0, -self.step_length) else: quad_offset = (0, 0, 0) \u5956\u52b1\u518d\u6b21\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u51b3\u5b9a\u4e86\u56db\u8f6e\u8f66\u7684\u884c\u9a76\u901f\u5ea6\u4ee5\u53ca\u5b83\u4e0e\u5df2\u77e5\u7535\u529b\u7ebf\u7684\u8ddd\u79bb\u3002 def compute_reward(quad_state, quad_vel, collision_info): thresh_dist = 7 beta = 1 z = -10 pts = [np.array([-0.55265, -31.9786, -19.0225]),np.array([48.59735, -63.3286, -60.07256]),np.array([193.5974, -55.0786, -46.32256]),np.array([369.2474, 35.32137, -62.5725]),np.array([541.3474, 143.6714, -32.07256]),] quad_pt = np.array(list((self.state[\"position\"].x_val, self.state[\"position\"].y_val,self.state[\"position\"].z_val,))) if self.state[\"collision\"]: reward = -100 else: dist = 10000000 for i in range(0, len(pts) - 1): dist = min(dist, np.linalg.norm(np.cross((quad_pt - pts[i]), (quad_pt - pts[i + 1]))) / np.linalg.norm(pts[i] - pts[i + 1])) if dist > thresh_dist: reward = -10 else: reward_dist = math.exp(-beta * dist) - 0.5 reward_speed = (np.linalg.norm([self.state[\"velocity\"].x_val, self.state[\"velocity\"].y_val, self.state[\"velocity\"].z_val,])- 0.5) reward = reward_dist + reward_speed \u5982\u679c\u4e8b\u4ef6\u504f\u79bb\u5df2\u77e5\u7535\u529b\u7ebf\u5750\u6807\u592a\u8fdc\uff0c\u6211\u4eec\u4f1a\u8ba4\u4e3a\u8be5\u4e8b\u4ef6\u7ec8\u6b62\uff0c\u7136\u540e\u5c06\u65e0\u4eba\u673a\u91cd\u7f6e\u5230\u5176\u8d77\u70b9\u3002 \u4e00\u65e6\u5728 drone_env.py \u4e2d\u5b9a\u4e49\u4e86 gym \u98ce\u683c\u7684\u73af\u5883\u5305\u88c5\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 stable-baselines3 \u8fd0\u884c DQN \u8bad\u7ec3\u5faa\u73af\u3002DQN \u8bad\u7ec3\u7684\u914d\u7f6e\u5982\u4e0b\uff0c\u8be6\u89c1 dqn_drone.py \u3002 model = DQN( \"CnnPolicy\", env, learning_rate=0.00025, verbose=1, batch_size=32, train_freq=4, target_update_interval=10000, learning_starts=10000, buffer_size=500000, max_grad_norm=10, exploration_fraction=0.1, exploration_final_eps=0.01, device=\"cuda\", tensorboard_log=\"./tb_logs/\", ) \u53ef\u4ee5\u5b9a\u4e49\u8bad\u7ec3\u73af\u5883\u548c\u8bc4\u4f30\u73af\u5883\uff08\u53c2\u89c1 dqn_drone.py \u4e2d\u7684 EvalCallback \uff09\u3002\u8bc4\u4f30\u73af\u5883\u53ef\u4ee5\u4e0e\u8bad\u7ec3\u73af\u5883\u4e0d\u540c\uff0c\u5177\u6709\u4e0d\u540c\u7684\u7ec8\u6b62\u6761\u4ef6/\u573a\u666f\u914d\u7f6e\u3002Tensorboard \u65e5\u5fd7\u76ee\u5f55\u4e5f\u88ab\u5b9a\u4e49\u4e3a DQN \u53c2\u6570\u7684\u4e00\u90e8\u5206\u3002\u6700\u540e\uff0c model.learn() \u542f\u52a8 DQN \u8bad\u7ec3\u5faa\u73af\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528 stable-baselines3 \u4e2d\u7684 PPO\u3001A3C \u7b49\u5b9e\u73b0\u3002 \u4ee5\u4e0b\u662f\u8bad\u7ec3\u671f\u95f4\u524d\u51e0\u4ee3\u7684\u89c6\u9891\u3002","title":"RL \u4e0e\u56db\u65cb\u7ffc\u98de\u884c\u5668"},{"location":"reinforcement_learning/#_2","text":"\u53e6\u8bf7\u53c2\u9605 Microsoft \u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u4eba\u8f66\u5e93\u7ae0\u8282\u7684 \u81ea\u52a8\u9a7e\u9a76\u624b\u518c \u3002","title":"\u76f8\u5173\u5185\u5bb9"},{"location":"remote_control/","text":"\u9065\u63a7 # \u8981\u624b\u52a8\u98de\u884c\uff0c\u60a8\u9700\u8981\u9065\u63a7\u5668\u6216 RC(Remote Control)\u3002\u5982\u679c\u6ca1\u6709\u9065\u63a7\u5668\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u4ee5\u7f16\u7a0b\u65b9\u5f0f\u98de\u884c\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u64cd\u63a7\u98de\u884c\u3002 \u9ed8\u8ba4\u914d\u7f6e\u7684\u9065\u63a7\u8bbe\u7f6e # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 simple_flight \u4f5c\u4e3a\u5176\u98de\u884c\u63a7\u5236\u5668\uff0c\u901a\u8fc7 USB \u7aef\u53e3\u5c06 RC \u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 XBox \u63a7\u5236\u5668\u6216 FrSky Taranis X9D Plus \u3002\u8bf7\u6ce8\u610f\uff0cXBox 360 \u63a7\u5236\u5668\u4e0d\u591f\u7cbe\u51c6\uff0c\u5982\u679c\u60a8\u60f3\u8981\u66f4\u771f\u5b9e\u7684\u6e38\u620f\u4f53\u9a8c\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u4e0b\u65b9\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002 \u5176\u4ed6\u8bbe\u5907 # AirSim \u53ef\u4ee5\u68c0\u6d4b\u5404\u79cd\u8bbe\u5907\uff0c\u4f46\u9664\u4e0a\u8ff0\u8bbe\u5907\u5916\uff0c\u5176\u4ed6\u8bbe\u5907\u53ef\u80fd\u9700\u8981\u989d\u5916\u914d\u7f6e\u3002\u672a\u6765\u6211\u4eec\u5c06\u6dfb\u52a0\u901a\u8fc7 settings.json \u8bbe\u7f6e\u6b64\u914d\u7f6e\u7684\u529f\u80fd\u3002\u76ee\u524d\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5 x360ce \u7b49\u53d8\u901a\u65b9\u6cd5\uff0c\u6216\u66f4\u6539 SimJoystick.cpp \u6587\u4ef6 \u4e2d\u7684\u4ee3\u7801\u3002 FrSky Taranis X9D Plus \u6ce8\u610f\u4e8b\u9879 # FrSky Taranis X9D Plus \u662f\u4e00\u6b3e\u771f\u6b63\u7684\u65e0\u4eba\u673a\u9065\u63a7\u5668\uff0c\u5176\u4f18\u52bf\u5728\u4e8e\u5b83\u914d\u5907 USB \u7aef\u53e3\uff0c\u53ef\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8111\u3002\u60a8\u53ef\u4ee5 \u4e0b\u8f7d AirSim \u914d\u7f6e\u6587\u4ef6 \uff0c\u5e76 \u6309\u7167\u672c\u6559\u7a0b \u5c06\u5176\u5bfc\u5165\u60a8\u7684\u9065\u63a7\u5668\u3002\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u5728\u9065\u63a7\u5668\u4e2d\u770b\u5230\u6240\u6709\u901a\u9053\u5747\u5df2\u6b63\u786e\u914d\u7f6e\u7684\u201csim\u201d\u6a21\u578b\u3002 Linux \u6ce8\u610f\u4e8b\u9879 # \u76ee\u524d Linux \u4e0a\u7684\u9ed8\u8ba4\u914d\u7f6e\u9002\u7528\u4e8e Xbox \u63a7\u5236\u5668\u3002\u8fd9\u610f\u5473\u7740\u5176\u4ed6\u8bbe\u5907\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u672a\u6765\u6211\u4eec\u5c06\u5728 settings.json \u4e2d\u6dfb\u52a0\u914d\u7f6e RC \u7684\u529f\u80fd\uff0c\u4f46\u76ee\u524d\u60a8 \u53ef\u80fd \u9700\u8981\u4fee\u6539 SimJoystick.cpp file \u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u624d\u80fd\u4f7f\u7528\u5176\u4ed6\u8bbe\u5907\u3002 PX4 \u7684\u9065\u63a7\u8bbe\u7f6e # AirSim \u652f\u6301 PX4 \u98de\u884c\u63a7\u5236\u5668\uff0c\u4f46\u8bbe\u7f6e\u65b9\u6cd5\u6709\u6240\u4e0d\u540c\u3002\u56db\u65cb\u7ffc\u98de\u884c\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u9065\u63a7\u9009\u9879\u3002\u6211\u4eec\u5df2\u6210\u529f\u5c06 FrSky Taranis X9D Plus\u3001FlySky FS-TH9X \u548c Futaba 14SG \u4e0e AirSim \u914d\u5408\u4f7f\u7528\u3002\u4ee5\u4e0b\u662f\u914d\u7f6e\u9065\u63a7\u5668\u7684\u8be6\u7ec6\u6b65\u9aa4\uff1a \u5982\u679c\u60a8\u8981\u4f7f\u7528\u786c\u4ef6\u5728\u73af\u6a21\u5f0f\uff0c\u60a8\u9700\u8981\u4e0e\u60a8\u7684 RC \u54c1\u724c\u5bf9\u5e94\u7684\u9065\u63a7\u5668\u8fdb\u884c\u7ed1\u5b9a\u3002\u60a8\u53ef\u4ee5\u5728 RC \u7684\u7528\u6237\u6307\u5357\u4e2d\u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002 \u5bf9\u4e8e\u786c\u4ef6\u5728\u73af\u6a21\u5f0f\uff0c\u60a8\u9700\u8981\u5c06\u53d1\u5c04\u5668\u8fde\u63a5\u5230 Pixhawk\u3002\u901a\u5e38\u60a8\u53ef\u4ee5\u627e\u5230\u5728\u7ebf\u6587\u6863\u6216 YouTube \u89c6\u9891\u6559\u7a0b\u6765\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u5728 QGroundControl \u4e2d\u6821\u51c6\u60a8\u7684 RC\u3002 . \u8bf7\u53c2\u9605 PX4 RC \u914d\u7f6e \u5e76\u53c2\u9605 \u672c\u6307\u5357 \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u4f7f\u7528 XBox 360 USB \u6e38\u620f\u624b\u67c4 # \u60a8\u4e5f\u53ef\u4ee5\u5728 SITL \u6a21\u5f0f\u4e0b\u4f7f\u7528 Xbox \u63a7\u5236\u5668\uff0c\u4f46\u5b83\u7684\u7cbe\u5ea6\u4e0d\u5982\u771f\u6b63\u7684 RC \u63a7\u5236\u5668\u3002\u6709\u5173\u5982\u4f55\u8bbe\u7f6e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Xbox \u63a7\u5236\u5668 \u3002 \u4f7f\u7528 Playstation 3 \u63a7\u5236\u5668 # \u5df2\u786e\u8ba4 Playstation 3 \u63a7\u5236\u5668\u53ef\u4ee5\u7528\u4f5c AirSim \u63a7\u5236\u5668\u3002\u4f46\u5728 Windows \u4e0a\uff0c\u9700\u8981\u4f7f\u7528\u6a21\u62df\u5668\u624d\u80fd\u4f7f\u5176\u770b\u8d77\u6765\u50cf Xbox 360 \u63a7\u5236\u5668\u3002\u7f51\u4e0a\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982 x360ce Xbox 360 \u63a7\u5236\u5668\u6a21\u62df\u5668 \u3002 DJI \u63a7\u5236\u5668 # Nils Tijtgat \u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u8ba9 DJI \u63a7\u5236\u5668\u4e0e AirSim \u534f\u540c\u5de5\u4f5c \u7684\u7cbe\u5f69\u535a\u5ba2\u3002 FAQ # \u6211\u6b63\u5728\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\uff0c\u4f46 AirSim \u8bf4\u6211\u7684 RC \u5728 USB \u4e0a\u672a\u88ab\u68c0\u6d4b\u5230\u3002 # \u5982\u679c\u60a8\u8fde\u63a5\u4e86\u591a\u4e2a\u9065\u63a7\u5668\u6216 XBox/Playstation \u6e38\u620f\u624b\u67c4\u7b49\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u6309\u4e0b Windows+S \u952e\u5e76\u641c\u7d22\u201c\u8bbe\u7f6e USB \u6e38\u620f\u63a7\u5236\u5668\u201d\uff08\u5728\u65e7\u7248 Windows \u4e2d\uff0c\u8bf7\u5c1d\u8bd5\u201c\u6e38\u620f\u6746\u201d\uff09\u3002\u8fd9\u5c06\u663e\u793a\u6240\u6709\u8fde\u63a5\u5230\u60a8\u7535\u8111\u7684\u6e38\u620f\u63a7\u5236\u5668\u3002\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230\u60a8\u7684\u63a7\u5236\u5668\uff0c\u5219\u8868\u793a Windows \u5c1a\u672a\u68c0\u6d4b\u5230\u5b83\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5148\u89e3\u51b3\u8be5\u95ee\u9898\u3002\u5982\u679c\u60a8\u770b\u5230\u4e86\u60a8\u7684\u63a7\u5236\u5668\uff0c\u4f46\u4e0d\u5728\u5217\u8868\u9876\u90e8\uff08\u5373\u7d22\u5f15 0\uff09\uff0c\u5219\u9700\u8981\u544a\u77e5 AirSim\uff0c\u56e0\u4e3a AirSim \u9ed8\u8ba4\u5c1d\u8bd5\u4f7f\u7528\u7d22\u5f15 0 \u5904\u7684 RC\u3002\u4e3a\u6b64\uff0c\u8bf7\u5bfc\u822a\u5230\u60a8\u7684 ~/Documents/AirSim \u6587\u4ef6\u5939\uff0c\u6253\u5f00 settings.json \u5e76\u6dfb\u52a0/\u4fee\u6539\u4ee5\u4e0b\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u8bbe\u7f6e\u544a\u77e5 AirSim \u4f7f\u7528\u7d22\u5f15 = 2 \u5904\u7684 RC\u3002 { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"RC\": { \"RemoteControlID\": 2 } } } } \u4f7f\u7528 XBox/PS3 \u63a7\u5236\u5668\u65f6\u8f66\u8f86\u4f3c\u4e4e\u4e0d\u7a33\u5b9a # \u666e\u901a\u6e38\u620f\u624b\u67c4\u7cbe\u5ea6\u4e0d\u9ad8\uff0c\u800c\u4e14\u6709\u5f88\u591a\u968f\u673a\u566a\u58f0\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u8fd8\u53ef\u80fd\u4f1a\u770b\u5230\u660e\u663e\u7684\u504f\u79fb\uff08\u4f8b\u5982\uff0c\u6447\u6746\u4f4d\u7f6e\u4e3a 0 \u65f6\uff0c\u8f93\u51fa\u4e0d\u4e3a 0\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u884c\u4e3a\u662f\u53ef\u4ee5\u9884\u6599\u7684\u3002 AirSim \u4e2d\u7684 RC \u6821\u51c6\u5728\u54ea\u91cc\uff1f # \u6211\u4eec\u5c1a\u672a\u5b9e\u73b0\u6b64\u529f\u80fd\u3002\u8fd9\u610f\u5473\u7740\u60a8\u7684 RC \u56fa\u4ef6\u76ee\u524d\u9700\u8981\u5177\u5907\u6821\u51c6\u529f\u80fd\u3002 \u6211\u7684 RC \u65e0\u6cd5\u4e0e PX4 \u8bbe\u7f6e\u914d\u5408\u4f7f\u7528\u3002 # \u9996\u5148\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u60a8\u7684\u9065\u63a7\u5668\u5728 QGroundControl \u4e2d\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5219\u80af\u5b9a\u65e0\u6cd5\u5728 AirSim \u4e2d\u6b63\u5e38\u5de5\u4f5c\u3002PX4 \u6a21\u5f0f\u9002\u5408\u5177\u6709\u4e2d\u7ea7\u4ee5\u4e0a\u7ecf\u9a8c\u7684\u7528\u6237\uff0c\u80fd\u591f\u5904\u7406\u4e0e PX4 \u76f8\u5173\u7684\u5404\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u5efa\u8bae\u60a8\u4ece PX4 \u8bba\u575b\u83b7\u53d6\u5e2e\u52a9\u3002","title":"\u8fdc\u7a0b\u63a7\u5236"},{"location":"remote_control/#_1","text":"\u8981\u624b\u52a8\u98de\u884c\uff0c\u60a8\u9700\u8981\u9065\u63a7\u5668\u6216 RC(Remote Control)\u3002\u5982\u679c\u6ca1\u6709\u9065\u63a7\u5668\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u4ee5\u7f16\u7a0b\u65b9\u5f0f\u98de\u884c\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u901a\u8fc7\u952e\u76d8\u64cd\u63a7\u98de\u884c\u3002","title":"\u9065\u63a7"},{"location":"remote_control/#_2","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f7f\u7528 simple_flight \u4f5c\u4e3a\u5176\u98de\u884c\u63a7\u5236\u5668\uff0c\u901a\u8fc7 USB \u7aef\u53e3\u5c06 RC \u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 XBox \u63a7\u5236\u5668\u6216 FrSky Taranis X9D Plus \u3002\u8bf7\u6ce8\u610f\uff0cXBox 360 \u63a7\u5236\u5668\u4e0d\u591f\u7cbe\u51c6\uff0c\u5982\u679c\u60a8\u60f3\u8981\u66f4\u771f\u5b9e\u7684\u6e38\u620f\u4f53\u9a8c\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u4e0b\u65b9\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002","title":"\u9ed8\u8ba4\u914d\u7f6e\u7684\u9065\u63a7\u8bbe\u7f6e"},{"location":"remote_control/#_3","text":"AirSim \u53ef\u4ee5\u68c0\u6d4b\u5404\u79cd\u8bbe\u5907\uff0c\u4f46\u9664\u4e0a\u8ff0\u8bbe\u5907\u5916\uff0c\u5176\u4ed6\u8bbe\u5907\u53ef\u80fd\u9700\u8981\u989d\u5916\u914d\u7f6e\u3002\u672a\u6765\u6211\u4eec\u5c06\u6dfb\u52a0\u901a\u8fc7 settings.json \u8bbe\u7f6e\u6b64\u914d\u7f6e\u7684\u529f\u80fd\u3002\u76ee\u524d\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5 x360ce \u7b49\u53d8\u901a\u65b9\u6cd5\uff0c\u6216\u66f4\u6539 SimJoystick.cpp \u6587\u4ef6 \u4e2d\u7684\u4ee3\u7801\u3002","title":"\u5176\u4ed6\u8bbe\u5907"},{"location":"remote_control/#frsky-taranis-x9d-plus","text":"FrSky Taranis X9D Plus \u662f\u4e00\u6b3e\u771f\u6b63\u7684\u65e0\u4eba\u673a\u9065\u63a7\u5668\uff0c\u5176\u4f18\u52bf\u5728\u4e8e\u5b83\u914d\u5907 USB \u7aef\u53e3\uff0c\u53ef\u76f4\u63a5\u8fde\u63a5\u5230\u7535\u8111\u3002\u60a8\u53ef\u4ee5 \u4e0b\u8f7d AirSim \u914d\u7f6e\u6587\u4ef6 \uff0c\u5e76 \u6309\u7167\u672c\u6559\u7a0b \u5c06\u5176\u5bfc\u5165\u60a8\u7684\u9065\u63a7\u5668\u3002\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u5728\u9065\u63a7\u5668\u4e2d\u770b\u5230\u6240\u6709\u901a\u9053\u5747\u5df2\u6b63\u786e\u914d\u7f6e\u7684\u201csim\u201d\u6a21\u578b\u3002","title":"FrSky Taranis X9D Plus \u6ce8\u610f\u4e8b\u9879"},{"location":"remote_control/#linux","text":"\u76ee\u524d Linux \u4e0a\u7684\u9ed8\u8ba4\u914d\u7f6e\u9002\u7528\u4e8e Xbox \u63a7\u5236\u5668\u3002\u8fd9\u610f\u5473\u7740\u5176\u4ed6\u8bbe\u5907\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u672a\u6765\u6211\u4eec\u5c06\u5728 settings.json \u4e2d\u6dfb\u52a0\u914d\u7f6e RC \u7684\u529f\u80fd\uff0c\u4f46\u76ee\u524d\u60a8 \u53ef\u80fd \u9700\u8981\u4fee\u6539 SimJoystick.cpp file \u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u624d\u80fd\u4f7f\u7528\u5176\u4ed6\u8bbe\u5907\u3002","title":"Linux \u6ce8\u610f\u4e8b\u9879"},{"location":"remote_control/#px4","text":"AirSim \u652f\u6301 PX4 \u98de\u884c\u63a7\u5236\u5668\uff0c\u4f46\u8bbe\u7f6e\u65b9\u6cd5\u6709\u6240\u4e0d\u540c\u3002\u56db\u65cb\u7ffc\u98de\u884c\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u9065\u63a7\u9009\u9879\u3002\u6211\u4eec\u5df2\u6210\u529f\u5c06 FrSky Taranis X9D Plus\u3001FlySky FS-TH9X \u548c Futaba 14SG \u4e0e AirSim \u914d\u5408\u4f7f\u7528\u3002\u4ee5\u4e0b\u662f\u914d\u7f6e\u9065\u63a7\u5668\u7684\u8be6\u7ec6\u6b65\u9aa4\uff1a \u5982\u679c\u60a8\u8981\u4f7f\u7528\u786c\u4ef6\u5728\u73af\u6a21\u5f0f\uff0c\u60a8\u9700\u8981\u4e0e\u60a8\u7684 RC \u54c1\u724c\u5bf9\u5e94\u7684\u9065\u63a7\u5668\u8fdb\u884c\u7ed1\u5b9a\u3002\u60a8\u53ef\u4ee5\u5728 RC \u7684\u7528\u6237\u6307\u5357\u4e2d\u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002 \u5bf9\u4e8e\u786c\u4ef6\u5728\u73af\u6a21\u5f0f\uff0c\u60a8\u9700\u8981\u5c06\u53d1\u5c04\u5668\u8fde\u63a5\u5230 Pixhawk\u3002\u901a\u5e38\u60a8\u53ef\u4ee5\u627e\u5230\u5728\u7ebf\u6587\u6863\u6216 YouTube \u89c6\u9891\u6559\u7a0b\u6765\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u5728 QGroundControl \u4e2d\u6821\u51c6\u60a8\u7684 RC\u3002 . \u8bf7\u53c2\u9605 PX4 RC \u914d\u7f6e \u5e76\u53c2\u9605 \u672c\u6307\u5357 \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"PX4 \u7684\u9065\u63a7\u8bbe\u7f6e"},{"location":"remote_control/#xbox-360-usb","text":"\u60a8\u4e5f\u53ef\u4ee5\u5728 SITL \u6a21\u5f0f\u4e0b\u4f7f\u7528 Xbox \u63a7\u5236\u5668\uff0c\u4f46\u5b83\u7684\u7cbe\u5ea6\u4e0d\u5982\u771f\u6b63\u7684 RC \u63a7\u5236\u5668\u3002\u6709\u5173\u5982\u4f55\u8bbe\u7f6e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Xbox \u63a7\u5236\u5668 \u3002","title":"\u4f7f\u7528 XBox 360 USB \u6e38\u620f\u624b\u67c4"},{"location":"remote_control/#playstation-3","text":"\u5df2\u786e\u8ba4 Playstation 3 \u63a7\u5236\u5668\u53ef\u4ee5\u7528\u4f5c AirSim \u63a7\u5236\u5668\u3002\u4f46\u5728 Windows \u4e0a\uff0c\u9700\u8981\u4f7f\u7528\u6a21\u62df\u5668\u624d\u80fd\u4f7f\u5176\u770b\u8d77\u6765\u50cf Xbox 360 \u63a7\u5236\u5668\u3002\u7f51\u4e0a\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982 x360ce Xbox 360 \u63a7\u5236\u5668\u6a21\u62df\u5668 \u3002","title":"\u4f7f\u7528 Playstation 3 \u63a7\u5236\u5668"},{"location":"remote_control/#dji","text":"Nils Tijtgat \u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u8ba9 DJI \u63a7\u5236\u5668\u4e0e AirSim \u534f\u540c\u5de5\u4f5c \u7684\u7cbe\u5f69\u535a\u5ba2\u3002","title":"DJI \u63a7\u5236\u5668"},{"location":"remote_control/#faq","text":"","title":"FAQ"},{"location":"remote_control/#airsim-rc-usb","text":"\u5982\u679c\u60a8\u8fde\u63a5\u4e86\u591a\u4e2a\u9065\u63a7\u5668\u6216 XBox/Playstation \u6e38\u620f\u624b\u67c4\u7b49\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u6309\u4e0b Windows+S \u952e\u5e76\u641c\u7d22\u201c\u8bbe\u7f6e USB \u6e38\u620f\u63a7\u5236\u5668\u201d\uff08\u5728\u65e7\u7248 Windows \u4e2d\uff0c\u8bf7\u5c1d\u8bd5\u201c\u6e38\u620f\u6746\u201d\uff09\u3002\u8fd9\u5c06\u663e\u793a\u6240\u6709\u8fde\u63a5\u5230\u60a8\u7535\u8111\u7684\u6e38\u620f\u63a7\u5236\u5668\u3002\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230\u60a8\u7684\u63a7\u5236\u5668\uff0c\u5219\u8868\u793a Windows \u5c1a\u672a\u68c0\u6d4b\u5230\u5b83\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5148\u89e3\u51b3\u8be5\u95ee\u9898\u3002\u5982\u679c\u60a8\u770b\u5230\u4e86\u60a8\u7684\u63a7\u5236\u5668\uff0c\u4f46\u4e0d\u5728\u5217\u8868\u9876\u90e8\uff08\u5373\u7d22\u5f15 0\uff09\uff0c\u5219\u9700\u8981\u544a\u77e5 AirSim\uff0c\u56e0\u4e3a AirSim \u9ed8\u8ba4\u5c1d\u8bd5\u4f7f\u7528\u7d22\u5f15 0 \u5904\u7684 RC\u3002\u4e3a\u6b64\uff0c\u8bf7\u5bfc\u822a\u5230\u60a8\u7684 ~/Documents/AirSim \u6587\u4ef6\u5939\uff0c\u6253\u5f00 settings.json \u5e76\u6dfb\u52a0/\u4fee\u6539\u4ee5\u4e0b\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u8bbe\u7f6e\u544a\u77e5 AirSim \u4f7f\u7528\u7d22\u5f15 = 2 \u5904\u7684 RC\u3002 { \"SettingsVersion\": 1.2, \"SimMode\": \"Multirotor\", \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"RC\": { \"RemoteControlID\": 2 } } } }","title":"\u6211\u6b63\u5728\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\uff0c\u4f46 AirSim \u8bf4\u6211\u7684 RC \u5728 USB \u4e0a\u672a\u88ab\u68c0\u6d4b\u5230\u3002"},{"location":"remote_control/#xboxps3","text":"\u666e\u901a\u6e38\u620f\u624b\u67c4\u7cbe\u5ea6\u4e0d\u9ad8\uff0c\u800c\u4e14\u6709\u5f88\u591a\u968f\u673a\u566a\u58f0\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u8fd8\u53ef\u80fd\u4f1a\u770b\u5230\u660e\u663e\u7684\u504f\u79fb\uff08\u4f8b\u5982\uff0c\u6447\u6746\u4f4d\u7f6e\u4e3a 0 \u65f6\uff0c\u8f93\u51fa\u4e0d\u4e3a 0\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u884c\u4e3a\u662f\u53ef\u4ee5\u9884\u6599\u7684\u3002","title":"\u4f7f\u7528 XBox/PS3 \u63a7\u5236\u5668\u65f6\u8f66\u8f86\u4f3c\u4e4e\u4e0d\u7a33\u5b9a"},{"location":"remote_control/#airsim-rc","text":"\u6211\u4eec\u5c1a\u672a\u5b9e\u73b0\u6b64\u529f\u80fd\u3002\u8fd9\u610f\u5473\u7740\u60a8\u7684 RC \u56fa\u4ef6\u76ee\u524d\u9700\u8981\u5177\u5907\u6821\u51c6\u529f\u80fd\u3002","title":"AirSim \u4e2d\u7684 RC \u6821\u51c6\u5728\u54ea\u91cc\uff1f"},{"location":"remote_control/#rc-px4","text":"\u9996\u5148\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u60a8\u7684\u9065\u63a7\u5668\u5728 QGroundControl \u4e2d\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5219\u80af\u5b9a\u65e0\u6cd5\u5728 AirSim \u4e2d\u6b63\u5e38\u5de5\u4f5c\u3002PX4 \u6a21\u5f0f\u9002\u5408\u5177\u6709\u4e2d\u7ea7\u4ee5\u4e0a\u7ecf\u9a8c\u7684\u7528\u6237\uff0c\u80fd\u591f\u5904\u7406\u4e0e PX4 \u76f8\u5173\u7684\u5404\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u5efa\u8bae\u60a8\u4ece PX4 \u8bba\u575b\u83b7\u53d6\u5e2e\u52a9\u3002","title":"\u6211\u7684 RC \u65e0\u6cd5\u4e0e PX4 \u8bbe\u7f6e\u914d\u5408\u4f7f\u7528\u3002"},{"location":"retexturing/","text":"\u8fd0\u884c\u65f6\u7eb9\u7406\u4ea4\u6362 # \u5982\u4f55\u8ba9\u53c2\u4e0e\u8005\u53ef\u91cd\u65b0\u7eb9\u7406\u5316 # \u8981\u5b9e\u73b0\u7eb9\u7406\u53ef\u4ea4\u6362\uff0cActor \u5fc5\u987b\u4ece\u7236\u7c7b TextureShuffleActor \u6d3e\u751f\u3002 \u7236\u7c7b\u53ef\u4ee5\u901a\u8fc7 Actor \u84dd\u56fe\u4e2d\u7684\u201c\u8bbe\u7f6e\u201d\u9009\u9879\u5361\u8fdb\u884c\u8bbe\u7f6e\u3002 \u5c06\u7236\u7c7b\u8bbe\u7f6e\u4e3a TextureShuffActor \u540e\uff0c\u8be5\u5bf9\u8c61\u5c06\u83b7\u5f97\u52a8\u6001\u6750\u8d28(DynamicMaterial) \u6210\u5458\u3002 \u573a\u666f\u4e2d\u6240\u6709\u53c2\u4e0e\u8005\u5b9e\u4f8b\u7684 DynamicMaterial \u90fd\u9700\u8981\u8bbe\u7f6e\u4e3a TextureSwappableMaterial\u3002 \u8b66\u544a \u5728\u84dd\u56fe\u7c7b\u4e2d\u9759\u6001\u8bbe\u7f6e\u52a8\u6001\u6750\u8d28\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u9519\u8bef\u3002\u5728\u84dd\u56fe\u7c7b\u4e2d\u7684\u6240\u6709 Actor \u5b9e\u4f8b\u4e0a\u8bbe\u7f6e\u8be5\u5c5e\u6027\u4f3c\u4e4e\u6548\u679c\u66f4\u597d\u3002 \u5982\u4f55\u5b9a\u4e49\u53ef\u4f9b\u9009\u62e9\u7684\u7eb9\u7406\u96c6 # \u901a\u5e38\uff0c\u67d0\u4e9b\u53c2\u4e0e\u8005\u5b50\u96c6\u4f1a\u5f7c\u6b64\u5171\u4eab\u4e00\u7ec4\u7eb9\u7406\u9009\u9879\u3002\uff08\u4f8b\u5982\uff0c\u5c5e\u4e8e\u540c\u4e00\u5efa\u7b51\u7269\u7684\u5899\u58c1\uff09 \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7684\u7fa4\u7ec4\u7f16\u8f91\u529f\u80fd\u53ef\u4ee5\u8f7b\u677e\u8bbe\u7f6e\u8fd9\u4e9b\u5206\u7ec4\u3002 \u9009\u62e9\u6240\u6709\u5e94\u5177\u6709\u76f8\u540c\u7eb9\u7406\u9009\u62e9\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u901a\u8fc7\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u540c\u65f6\u5c06\u7eb9\u7406\u6dfb\u52a0\u5230\u6240\u6709\u5b9e\u4f8b\u3002 \u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u4e3a\u53c2\u4e0e\u8005\u7ec4\u6dfb\u52a0\u63cf\u8ff0\u6027\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5c06\u7528\u4e8e\u5728 API \u4e2d\u5bf9\u5176\u8fdb\u884c\u5bfb\u5740\u3002 \u7406\u60f3\u7684\u505a\u6cd5\u662f\u4ece\u8f83\u5927\u7684\u5206\u7ec4\u5230\u8f83\u5c0f\u7684\u5206\u7ec4\uff0c\u53ea\u9700\u53d6\u6d88\u9009\u62e9\u53c2\u4e0e\u8005\u5373\u53ef\u7f29\u5c0f\u5206\u7ec4\u8303\u56f4\uff0c\u6700\u540e\u5e94\u7528\u4efb\u4f55\u5355\u4e2a\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u3002 \u5982\u4f55\u901a\u8fc7 API \u4ea4\u6362\u7eb9\u7406 # \u4ee5\u4e0b API \u9002\u7528\u4e8e C++ \u548c Python\u3002\uff08\u6b64\u5904\u663e\u793a C++\uff09 std :: vector < std :: string > simSwapTextures ( const std :: string & tags , int tex_id ); \u7531\u201c,\u201d\u6216\u201c\uff0c\u201d\u5206\u9694\u7684\u6807\u7b7e\u5b57\u7b26\u4e32\u6807\u8bc6\u8981\u5bf9\u54ea\u4e9b\u53c2\u4e0e\u8005\u6267\u884c\u4ea4\u6362\u3002 tex_id \u4e3a\u5206\u914d\u7ed9\u6bcf\u4e2a\u8fdb\u884c\u4ea4\u6362\u7684\u53c2\u4e0e\u8005\u7684\u7eb9\u7406\u6570\u7ec4\u63d0\u4f9b\u7d22\u5f15\u3002 \u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u4e0e\u63d0\u4f9b\u7684\u6807\u7b7e\u5339\u914d\u4e14\u5df2\u6267\u884c\u7eb9\u7406\u4ea4\u6362\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u5982\u679c tex_id \u8d85\u51fa\u4e86\u67d0\u4e9b\u5bf9\u8c61\u7eb9\u7406\u96c6\u7684\u8303\u56f4\uff0c\u5219\u5c06\u53d6\u53ef\u7528\u7eb9\u7406\u6570\u91cf\u7684\u6a21\u6570\u3002 \u6f14\u793a (Python): import airsim import time c = airsim . client . MultirotorClient () print ( c . simSwapTextures ( \"furniture\" , 0 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"chair\" , 1 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"table\" , 1 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"chair, right\" , 0 )) \u7ed3\u679c: [ 'RetexturableChair' , 'RetexturableChair2' , 'RetexturableTable' ] [ 'RetexturableChair' , 'RetexturableChair2' ] [ 'RetexturableTable' ] [ 'RetexturableChair2' ] \u8bf7\u6ce8\u610f\uff0c\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u8005\u9488\u5bf9\u76f8\u540c\u7684\u7d22\u5f15\u503c\u9009\u62e9\u4e86\u4e0d\u540c\u7684\u7eb9\u7406\u3002 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 simSetObjectMaterial \u548c simSetObjectMaterialFromTexture API \u5c06\u5bf9\u8c61\u7684\u6750\u8d28\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u6750\u8d28\u8d44\u6e90\u6216\u7eb9\u7406\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u6709\u5173\u4f7f\u7528\u8fd9\u4e9b API \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u7eb9\u7406 API \u3002","title":"\u57df\u968f\u673a\u5316"},{"location":"retexturing/#_1","text":"","title":"\u8fd0\u884c\u65f6\u7eb9\u7406\u4ea4\u6362"},{"location":"retexturing/#_2","text":"\u8981\u5b9e\u73b0\u7eb9\u7406\u53ef\u4ea4\u6362\uff0cActor \u5fc5\u987b\u4ece\u7236\u7c7b TextureShuffleActor \u6d3e\u751f\u3002 \u7236\u7c7b\u53ef\u4ee5\u901a\u8fc7 Actor \u84dd\u56fe\u4e2d\u7684\u201c\u8bbe\u7f6e\u201d\u9009\u9879\u5361\u8fdb\u884c\u8bbe\u7f6e\u3002 \u5c06\u7236\u7c7b\u8bbe\u7f6e\u4e3a TextureShuffActor \u540e\uff0c\u8be5\u5bf9\u8c61\u5c06\u83b7\u5f97\u52a8\u6001\u6750\u8d28(DynamicMaterial) \u6210\u5458\u3002 \u573a\u666f\u4e2d\u6240\u6709\u53c2\u4e0e\u8005\u5b9e\u4f8b\u7684 DynamicMaterial \u90fd\u9700\u8981\u8bbe\u7f6e\u4e3a TextureSwappableMaterial\u3002 \u8b66\u544a \u5728\u84dd\u56fe\u7c7b\u4e2d\u9759\u6001\u8bbe\u7f6e\u52a8\u6001\u6750\u8d28\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u9519\u8bef\u3002\u5728\u84dd\u56fe\u7c7b\u4e2d\u7684\u6240\u6709 Actor \u5b9e\u4f8b\u4e0a\u8bbe\u7f6e\u8be5\u5c5e\u6027\u4f3c\u4e4e\u6548\u679c\u66f4\u597d\u3002","title":"\u5982\u4f55\u8ba9\u53c2\u4e0e\u8005\u53ef\u91cd\u65b0\u7eb9\u7406\u5316"},{"location":"retexturing/#_3","text":"\u901a\u5e38\uff0c\u67d0\u4e9b\u53c2\u4e0e\u8005\u5b50\u96c6\u4f1a\u5f7c\u6b64\u5171\u4eab\u4e00\u7ec4\u7eb9\u7406\u9009\u9879\u3002\uff08\u4f8b\u5982\uff0c\u5c5e\u4e8e\u540c\u4e00\u5efa\u7b51\u7269\u7684\u5899\u58c1\uff09 \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7684\u7fa4\u7ec4\u7f16\u8f91\u529f\u80fd\u53ef\u4ee5\u8f7b\u677e\u8bbe\u7f6e\u8fd9\u4e9b\u5206\u7ec4\u3002 \u9009\u62e9\u6240\u6709\u5e94\u5177\u6709\u76f8\u540c\u7eb9\u7406\u9009\u62e9\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u901a\u8fc7\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u540c\u65f6\u5c06\u7eb9\u7406\u6dfb\u52a0\u5230\u6240\u6709\u5b9e\u4f8b\u3002 \u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u4e3a\u53c2\u4e0e\u8005\u7ec4\u6dfb\u52a0\u63cf\u8ff0\u6027\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5c06\u7528\u4e8e\u5728 API \u4e2d\u5bf9\u5176\u8fdb\u884c\u5bfb\u5740\u3002 \u7406\u60f3\u7684\u505a\u6cd5\u662f\u4ece\u8f83\u5927\u7684\u5206\u7ec4\u5230\u8f83\u5c0f\u7684\u5206\u7ec4\uff0c\u53ea\u9700\u53d6\u6d88\u9009\u62e9\u53c2\u4e0e\u8005\u5373\u53ef\u7f29\u5c0f\u5206\u7ec4\u8303\u56f4\uff0c\u6700\u540e\u5e94\u7528\u4efb\u4f55\u5355\u4e2a\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u3002","title":"\u5982\u4f55\u5b9a\u4e49\u53ef\u4f9b\u9009\u62e9\u7684\u7eb9\u7406\u96c6"},{"location":"retexturing/#api","text":"\u4ee5\u4e0b API \u9002\u7528\u4e8e C++ \u548c Python\u3002\uff08\u6b64\u5904\u663e\u793a C++\uff09 std :: vector < std :: string > simSwapTextures ( const std :: string & tags , int tex_id ); \u7531\u201c,\u201d\u6216\u201c\uff0c\u201d\u5206\u9694\u7684\u6807\u7b7e\u5b57\u7b26\u4e32\u6807\u8bc6\u8981\u5bf9\u54ea\u4e9b\u53c2\u4e0e\u8005\u6267\u884c\u4ea4\u6362\u3002 tex_id \u4e3a\u5206\u914d\u7ed9\u6bcf\u4e2a\u8fdb\u884c\u4ea4\u6362\u7684\u53c2\u4e0e\u8005\u7684\u7eb9\u7406\u6570\u7ec4\u63d0\u4f9b\u7d22\u5f15\u3002 \u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u4e0e\u63d0\u4f9b\u7684\u6807\u7b7e\u5339\u914d\u4e14\u5df2\u6267\u884c\u7eb9\u7406\u4ea4\u6362\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u5982\u679c tex_id \u8d85\u51fa\u4e86\u67d0\u4e9b\u5bf9\u8c61\u7eb9\u7406\u96c6\u7684\u8303\u56f4\uff0c\u5219\u5c06\u53d6\u53ef\u7528\u7eb9\u7406\u6570\u91cf\u7684\u6a21\u6570\u3002 \u6f14\u793a (Python): import airsim import time c = airsim . client . MultirotorClient () print ( c . simSwapTextures ( \"furniture\" , 0 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"chair\" , 1 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"table\" , 1 )) time . sleep ( 2 ) print ( c . simSwapTextures ( \"chair, right\" , 0 )) \u7ed3\u679c: [ 'RetexturableChair' , 'RetexturableChair2' , 'RetexturableTable' ] [ 'RetexturableChair' , 'RetexturableChair2' ] [ 'RetexturableTable' ] [ 'RetexturableChair2' ] \u8bf7\u6ce8\u610f\uff0c\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u8005\u9488\u5bf9\u76f8\u540c\u7684\u7d22\u5f15\u503c\u9009\u62e9\u4e86\u4e0d\u540c\u7684\u7eb9\u7406\u3002 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 simSetObjectMaterial \u548c simSetObjectMaterialFromTexture API \u5c06\u5bf9\u8c61\u7684\u6750\u8d28\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u6750\u8d28\u8d44\u6e90\u6216\u7eb9\u7406\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u6709\u5173\u4f7f\u7528\u8fd9\u4e9b API \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u7eb9\u7406 API \u3002","title":"\u5982\u4f55\u901a\u8fc7 API \u4ea4\u6362\u7eb9\u7406"},{"location":"sensors/","text":"AirSim \u4e2d\u7684\u4f20\u611f\u5668 # AirSim \u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u4f20\u611f\u5668\u3002 \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u4e0e\u4e00\u4e2a\u6307\u5b9a\u5176\u4f20\u611f\u5668\u7c7b\u578b\u7684\u6574\u6570\u679a\u4e3e\u76f8\u5173\u8054\u3002 Camera Barometer = 1 Imu = 2 Gps = 3 Magnetometer = 4 Distance Sensor = 5 Lidar = 6 \u7b14\u8bb0 : \u6444\u50cf\u5934\u7684\u914d\u7f6e\u4e0e\u5176\u4ed6\u4f20\u611f\u5668\u4e0d\u540c\uff0c\u5e76\u4e14\u6ca1\u6709\u4e0e\u4e4b\u5173\u8054\u7684\u679a\u4e3e\u3002\u8bf7\u53c2\u9605 \u5e38\u89c4\u8bbe\u7f6e \u548c \u56fe\u50cf API \uff0c\u4e86\u89e3\u6444\u50cf\u5934\u7684\u914d\u7f6e\u548c API\u3002 \u9ed8\u8ba4\u4f20\u611f\u5668 # \u5982\u679c\u5728 settings.json \u4e2d\u672a\u6307\u5b9a\u4efb\u4f55\u4f20\u611f\u5668\uff0c\u5219\u6839\u636e\u6a21\u62df\u6a21\u5f0f\u9ed8\u8ba4\u542f\u7528\u4ee5\u4e0b\u4f20\u611f\u5668\u3002 \u591a\u65cb\u7ffc # Imu Magnetometer Gps Barometer \u8f66 # Gps ComputerVision # None \u5728\u540e\u53f0\uff0c AirSimSettings.hpp \u4e2d\u7684 createDefaultSensorSettings \u65b9\u6cd5\u6839\u636e settings.json \u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6a21\u62df\u6a21\u5f0f\uff0c\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u8bbe\u7f6e\u4e0a\u8ff0\u4f20\u611f\u5668\u3002 \u914d\u7f6e\u9ed8\u8ba4\u4f20\u611f\u5668\u5217\u8868 # \u53ef\u4ee5\u5728\u8bbe\u7f6e json \u4e2d\u914d\u7f6e\u9ed8\u8ba4\u4f20\u611f\u5668\u5217\u8868\uff1a \"DefaultSensors\" : { \"Barometer\" : { \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.001825 , \"PressureFactorTau\" : 3600 , \"UncorrelatedNoiseSigma\" : 2.7 , \"UpdateLatency\" : 0 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 0 }, \"Imu\" : { \"SensorType\" : 2 , \"Enabled\" : true , \"AngularRandomWalk\" : 0.3 , \"GyroBiasStabilityTau\" : 500 , \"GyroBiasStability\" : 4.6 , \"VelocityRandomWalk\" : 0.24 , \"AccelBiasStabilityTau\" : 800 , \"AccelBiasStability\" : 36 }, \"Gps\" : { \"SensorType\" : 3 , \"Enabled\" : true , \"EphTimeConstant\" : 0.9 , \"EpvTimeConstant\" : 0.9 , \"EphInitial\" : 25 , \"EpvInitial\" : 25 , \"EphFinal\" : 0.1 , \"EpvFinal\" : 0.1 , \"EphMin3d\" : 3 , \"EphMin2d\" : 4 , \"UpdateLatency\" : 0.2 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 1 }, \"Magnetometer\" : { \"SensorType\" : 4 , \"Enabled\" : true , \"NoiseSigma\" : 0.005 , \"ScaleFactor\" : 1 , \"NoiseBias\" : 0 , \"UpdateLatency\" : 0 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 0 }, \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , \"MinDistance\" : 0.2 , \"MaxDistance\" : 40 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Yaw\" : 0 , \"Pitch\" : 0 , \"Roll\" : 0 , \"DrawDebugPoints\" : false }, \"Lidar2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 100000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"HorizontalFOVStart\" : -20 , \"HorizontalFOVEnd\" : 20 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" } }, \u914d\u7f6e\u7279\u5b9a\u8f66\u8f86\u4f20\u611f\u5668\u5217\u8868 # \u8f66\u8f86\u53ef\u4ee5\u8986\u76d6\u4e0a\u9762\u5217\u51fa\u7684\u90e8\u5206\u9ed8\u8ba4\u4f20\u611f\u5668\u3002\u6fc0\u5149\u96f7\u8fbe\u548c\u8ddd\u79bb\u4f20\u611f\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6dfb\u52a0\u5230\u8f66\u8f86\u4e2d\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6dfb\u52a0\u5b83\u4eec\u3002\u6bcf\u4e2a\u4f20\u611f\u5668\u5fc5\u987b\u5177\u6709\u6709\u6548\u7684 \u201cSensorType\u201d\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u90e8\u5206\u5c5e\u6027\u6765\u8986\u76d6\u4e0a\u9762\u663e\u793a\u7684\u9ed8\u8ba4\u503c\uff0c \u5e76\u4e14\u60a8\u53ef\u4ee5\u5c06 Enabled \u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"SimpleFlight\" , \"AutoCreate\" : true , ... \"Sensors\" : { \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 }, \"MyLidar1\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"DrawDebugPoints\" : true }, \"MyLidar2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 4 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"DrawDebugPoints\" : true } } } } \u4f20\u611f\u5668\u7279\u5b9a\u8bbe\u7f6e # \u6709\u5173\u8fd9\u4e9b\u4f20\u611f\u5668\u8bbe\u7f6e\u542b\u4e49\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u9875\u9762\uff1a \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u8bbe\u7f6e \u8ddd\u79bb\u4f20\u611f\u5668\u8bbe\u7f6e \u7528\u4e8e\u8c03\u8bd5\u7684\u670d\u52a1\u5668\u7aef\u53ef\u89c6\u5316 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8ddd\u79bb\u4f20\u611f\u5668\u89e6\u78b0\u7684\u70b9\u4e0d\u4f1a\u7ed8\u5236\u5728\u89c6\u53e3\u4e0a\u3002\u5982\u9700\u542f\u7528\u89e6\u78b0\u70b9\u7ed8\u5236\u529f\u80fd\uff0c\u8bf7\u901a\u8fc7\u8bbe\u7f6e json \u542f\u7528 DrawDebugPoints \u8bbe\u7f6e\u3002\u4f8b\u5982\uff1a \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , ... \"DrawDebugPoints\" : true } \u4f20\u611f\u5668 API # \u76f4\u63a5\u8df3\u8f6c\u5230 hello_drone.py \u6216 hello_drone.cpp \u67e5\u770b\u793a\u4f8b\u7528\u6cd5\uff0c\u6216\u8005\u53c2\u9605\u4e0b\u6587\u4e86\u89e3\u5b8c\u6574 API\u3002 \u6c14\u538b\u8ba1 # msr :: airlib :: BarometerBase :: Output getBarometerData ( const std :: string & barometer_name , const std :: string & vehicle_name ); barometer_data = client . getBarometerData ( barometer_name = \"\" , vehicle_name = \"\" ) IMU # msr :: airlib :: ImuBase :: Output getImuData ( const std :: string & imu_name = \"\" , const std :: string & vehicle_name = \"\" ); imu_data = client . getImuData ( imu_name = \"\" , vehicle_name = \"\" ) GPS # msr :: airlib :: GpsBase :: Output getGpsData ( const std :: string & gps_name = \"\" , const std :: string & vehicle_name = \"\" ); gps_data = client . getGpsData ( gps_name = \"\" , vehicle_name = \"\" ) Magnetometer # msr :: airlib :: MagnetometerBase :: Output getMagnetometerData ( const std :: string & magnetometer_name = \"\" , const std :: string & vehicle_name = \"\" ); magnetometer_data = client . getMagnetometerData ( magnetometer_name = \"\" , vehicle_name = \"\" ) Distance sensor # msr :: airlib :: DistanceSensorData getDistanceSensorData ( const std :: string & distance_sensor_name = \"\" , const std :: string & vehicle_name = \"\" ); distance_sensor_data = client . getDistanceSensorData ( distance_sensor_name = \"\" , vehicle_name = \"\" ) \u6fc0\u5149\u96f7\u8fbe # \u6709\u5173 Lidar API\uff0c\u8bf7\u53c2\u9605 lidar \u9875\u9762 \u3002","title":"\u4f20\u611f\u5668"},{"location":"sensors/#airsim","text":"AirSim \u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u4f20\u611f\u5668\u3002 \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u4e0e\u4e00\u4e2a\u6307\u5b9a\u5176\u4f20\u611f\u5668\u7c7b\u578b\u7684\u6574\u6570\u679a\u4e3e\u76f8\u5173\u8054\u3002 Camera Barometer = 1 Imu = 2 Gps = 3 Magnetometer = 4 Distance Sensor = 5 Lidar = 6 \u7b14\u8bb0 : \u6444\u50cf\u5934\u7684\u914d\u7f6e\u4e0e\u5176\u4ed6\u4f20\u611f\u5668\u4e0d\u540c\uff0c\u5e76\u4e14\u6ca1\u6709\u4e0e\u4e4b\u5173\u8054\u7684\u679a\u4e3e\u3002\u8bf7\u53c2\u9605 \u5e38\u89c4\u8bbe\u7f6e \u548c \u56fe\u50cf API \uff0c\u4e86\u89e3\u6444\u50cf\u5934\u7684\u914d\u7f6e\u548c API\u3002","title":"AirSim \u4e2d\u7684\u4f20\u611f\u5668"},{"location":"sensors/#_1","text":"\u5982\u679c\u5728 settings.json \u4e2d\u672a\u6307\u5b9a\u4efb\u4f55\u4f20\u611f\u5668\uff0c\u5219\u6839\u636e\u6a21\u62df\u6a21\u5f0f\u9ed8\u8ba4\u542f\u7528\u4ee5\u4e0b\u4f20\u611f\u5668\u3002","title":"\u9ed8\u8ba4\u4f20\u611f\u5668"},{"location":"sensors/#_2","text":"Imu Magnetometer Gps Barometer","title":"\u591a\u65cb\u7ffc"},{"location":"sensors/#_3","text":"Gps","title":"\u8f66"},{"location":"sensors/#computervision","text":"None \u5728\u540e\u53f0\uff0c AirSimSettings.hpp \u4e2d\u7684 createDefaultSensorSettings \u65b9\u6cd5\u6839\u636e settings.json \u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6a21\u62df\u6a21\u5f0f\uff0c\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u8bbe\u7f6e\u4e0a\u8ff0\u4f20\u611f\u5668\u3002","title":"ComputerVision"},{"location":"sensors/#_4","text":"\u53ef\u4ee5\u5728\u8bbe\u7f6e json \u4e2d\u914d\u7f6e\u9ed8\u8ba4\u4f20\u611f\u5668\u5217\u8868\uff1a \"DefaultSensors\" : { \"Barometer\" : { \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.001825 , \"PressureFactorTau\" : 3600 , \"UncorrelatedNoiseSigma\" : 2.7 , \"UpdateLatency\" : 0 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 0 }, \"Imu\" : { \"SensorType\" : 2 , \"Enabled\" : true , \"AngularRandomWalk\" : 0.3 , \"GyroBiasStabilityTau\" : 500 , \"GyroBiasStability\" : 4.6 , \"VelocityRandomWalk\" : 0.24 , \"AccelBiasStabilityTau\" : 800 , \"AccelBiasStability\" : 36 }, \"Gps\" : { \"SensorType\" : 3 , \"Enabled\" : true , \"EphTimeConstant\" : 0.9 , \"EpvTimeConstant\" : 0.9 , \"EphInitial\" : 25 , \"EpvInitial\" : 25 , \"EphFinal\" : 0.1 , \"EpvFinal\" : 0.1 , \"EphMin3d\" : 3 , \"EphMin2d\" : 4 , \"UpdateLatency\" : 0.2 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 1 }, \"Magnetometer\" : { \"SensorType\" : 4 , \"Enabled\" : true , \"NoiseSigma\" : 0.005 , \"ScaleFactor\" : 1 , \"NoiseBias\" : 0 , \"UpdateLatency\" : 0 , \"UpdateFrequency\" : 50 , \"StartupDelay\" : 0 }, \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , \"MinDistance\" : 0.2 , \"MaxDistance\" : 40 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Yaw\" : 0 , \"Pitch\" : 0 , \"Roll\" : 0 , \"DrawDebugPoints\" : false }, \"Lidar2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"RotationsPerSecond\" : 10 , \"PointsPerSecond\" : 100000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"Roll\" : 0 , \"Pitch\" : 0 , \"Yaw\" : 0 , \"VerticalFOVUpper\" : -15 , \"VerticalFOVLower\" : -25 , \"HorizontalFOVStart\" : -20 , \"HorizontalFOVEnd\" : 20 , \"DrawDebugPoints\" : true , \"DataFrame\" : \"SensorLocalFrame\" } },","title":"\u914d\u7f6e\u9ed8\u8ba4\u4f20\u611f\u5668\u5217\u8868"},{"location":"sensors/#_5","text":"\u8f66\u8f86\u53ef\u4ee5\u8986\u76d6\u4e0a\u9762\u5217\u51fa\u7684\u90e8\u5206\u9ed8\u8ba4\u4f20\u611f\u5668\u3002\u6fc0\u5149\u96f7\u8fbe\u548c\u8ddd\u79bb\u4f20\u611f\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6dfb\u52a0\u5230\u8f66\u8f86\u4e2d\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6dfb\u52a0\u5b83\u4eec\u3002\u6bcf\u4e2a\u4f20\u611f\u5668\u5fc5\u987b\u5177\u6709\u6709\u6548\u7684 \u201cSensorType\u201d\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u90e8\u5206\u5c5e\u6027\u6765\u8986\u76d6\u4e0a\u9762\u663e\u793a\u7684\u9ed8\u8ba4\u503c\uff0c \u5e76\u4e14\u60a8\u53ef\u4ee5\u5c06 Enabled \u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \"Vehicles\" : { \"Drone1\" : { \"VehicleType\" : \"SimpleFlight\" , \"AutoCreate\" : true , ... \"Sensors\" : { \"Barometer\" :{ \"SensorType\" : 1 , \"Enabled\" : true , \"PressureFactorSigma\" : 0.0001825 }, \"MyLidar1\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 16 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"DrawDebugPoints\" : true }, \"MyLidar2\" : { \"SensorType\" : 6 , \"Enabled\" : true , \"NumberOfChannels\" : 4 , \"PointsPerSecond\" : 10000 , \"X\" : 0 , \"Y\" : 0 , \"Z\" : -1 , \"DrawDebugPoints\" : true } } } }","title":"\u914d\u7f6e\u7279\u5b9a\u8f66\u8f86\u4f20\u611f\u5668\u5217\u8868"},{"location":"sensors/#_6","text":"\u6709\u5173\u8fd9\u4e9b\u4f20\u611f\u5668\u8bbe\u7f6e\u542b\u4e49\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u9875\u9762\uff1a \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u8bbe\u7f6e \u8ddd\u79bb\u4f20\u611f\u5668\u8bbe\u7f6e","title":"\u4f20\u611f\u5668\u7279\u5b9a\u8bbe\u7f6e"},{"location":"sensors/#_7","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8ddd\u79bb\u4f20\u611f\u5668\u89e6\u78b0\u7684\u70b9\u4e0d\u4f1a\u7ed8\u5236\u5728\u89c6\u53e3\u4e0a\u3002\u5982\u9700\u542f\u7528\u89e6\u78b0\u70b9\u7ed8\u5236\u529f\u80fd\uff0c\u8bf7\u901a\u8fc7\u8bbe\u7f6e json \u542f\u7528 DrawDebugPoints \u8bbe\u7f6e\u3002\u4f8b\u5982\uff1a \"Distance\" : { \"SensorType\" : 5 , \"Enabled\" : true , ... \"DrawDebugPoints\" : true }","title":"\u7528\u4e8e\u8c03\u8bd5\u7684\u670d\u52a1\u5668\u7aef\u53ef\u89c6\u5316"},{"location":"sensors/#api","text":"\u76f4\u63a5\u8df3\u8f6c\u5230 hello_drone.py \u6216 hello_drone.cpp \u67e5\u770b\u793a\u4f8b\u7528\u6cd5\uff0c\u6216\u8005\u53c2\u9605\u4e0b\u6587\u4e86\u89e3\u5b8c\u6574 API\u3002","title":"\u4f20\u611f\u5668 API"},{"location":"sensors/#_8","text":"msr :: airlib :: BarometerBase :: Output getBarometerData ( const std :: string & barometer_name , const std :: string & vehicle_name ); barometer_data = client . getBarometerData ( barometer_name = \"\" , vehicle_name = \"\" )","title":"\u6c14\u538b\u8ba1"},{"location":"sensors/#imu","text":"msr :: airlib :: ImuBase :: Output getImuData ( const std :: string & imu_name = \"\" , const std :: string & vehicle_name = \"\" ); imu_data = client . getImuData ( imu_name = \"\" , vehicle_name = \"\" )","title":"IMU"},{"location":"sensors/#gps","text":"msr :: airlib :: GpsBase :: Output getGpsData ( const std :: string & gps_name = \"\" , const std :: string & vehicle_name = \"\" ); gps_data = client . getGpsData ( gps_name = \"\" , vehicle_name = \"\" )","title":"GPS"},{"location":"sensors/#magnetometer","text":"msr :: airlib :: MagnetometerBase :: Output getMagnetometerData ( const std :: string & magnetometer_name = \"\" , const std :: string & vehicle_name = \"\" ); magnetometer_data = client . getMagnetometerData ( magnetometer_name = \"\" , vehicle_name = \"\" )","title":"Magnetometer"},{"location":"sensors/#distance-sensor","text":"msr :: airlib :: DistanceSensorData getDistanceSensorData ( const std :: string & distance_sensor_name = \"\" , const std :: string & vehicle_name = \"\" ); distance_sensor_data = client . getDistanceSensorData ( distance_sensor_name = \"\" , vehicle_name = \"\" )","title":"Distance sensor"},{"location":"sensors/#_9","text":"\u6709\u5173 Lidar API\uff0c\u8bf7\u53c2\u9605 lidar \u9875\u9762 \u3002","title":"\u6fc0\u5149\u96f7\u8fbe"},{"location":"settings/","text":"AirSim \u8bbe\u7f6e # \u8bbe\u7f6e\u5b58\u50a8\u5728\u54ea\u91cc\uff1f # AirSim \u6b63\u5728\u6309\u4ee5\u4e0b\u987a\u5e8f\u641c\u7d22\u8bbe\u7f6e\u5b9a\u4e49\u3002\u5c06\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\uff1a \u67e5\u770b -settings \u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u7684\uff08\u7edd\u5bf9\uff09\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\uff1a AirSim.exe -settings=\"C:\\path\\to\\settings.json\" \u5728 Linux \u7cfb\u7edf\u4e2d\uff1a ./Blocks.sh -settings=\"/home/$USER/path/to/settings.json\" \u67e5\u627e\u901a\u8fc7 -settings \u53c2\u6570\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\u7684 JSON \u6587\u6863\u3002 \u4f8b\u5982\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\uff1a AirSim.exe -settings={\"foo\":\"bar\"} \u5728 Linux \u7cfb\u7edf\u4e2d\uff1a ./Blocks.sh -settings={\"foo\":\"bar\"} \u5728\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u540d\u4e3a settings.json \u7684\u6587\u4ef6\u3002 \u8fd9\u5c06\u662f\u7f16\u8f91\u5668\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b9e\u9645\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6df1\u5c42\u4f4d\u7f6e\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e Blocks \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u641c\u7d22\u7684\u4f4d\u7f6e\u662f <path-of-binary>/LinuxNoEditor/Blocks/Binaries/Linux/settings.json \u3002 \u5728 \u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u4e2d \u641c\u7d22 settings.json \u8fd9\u662f\u5305\u542b\u542f\u52a8\u811a\u672c\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u9876\u7ea7\u76ee\u5f55\u3002\u4f8b\u5982\uff0cLinux\uff1a <path-of-binary>/LinuxNoEditor/settings.json \uff0cWindows\uff1a <path-of-binary>/WindowsNoEditor/settings.json \u8bf7\u6ce8\u610f\uff0c\u6b64\u8def\u5f84\u4f1a\u6839\u636e\u8c03\u7528\u4f4d\u7f6e\u800c\u53d8\u5316\u3002\u5728 Linux \u4e0a\uff0c\u5982\u679c\u4ece LinuxNoEditor \u6587\u4ef6\u5939\u5185\u90e8\uff08\u4f8b\u5982 ./Blocks.sh \uff09\u6267\u884c Blocks.sh \u811a\u672c\uff0c\u5219\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u8def\u5f84\u3002\u4f46\u662f\uff0c\u5982\u679c\u4ece LinuxNoEditor \u6587\u4ef6\u5939\u5916\u90e8\uff08\u4f8b\u5982 ./LinuxNoEditor/Blocks.sh \uff09\u542f\u52a8\uff0c\u5219\u5c06\u4f7f\u7528 <path-of-binary>/settings.json \u3002 \u5728 AirSim \u5b50\u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u540d\u4e3a settings.json \u7684\u6587\u4ef6\u3002\u5728 Windows \u7cfb\u7edf\u4e2d\uff0cAirSim \u5b50\u6587\u4ef6\u5939\u4f4d\u4e8e Documents\\AirSim \uff1b\u5728 Linux \u7cfb\u7edf\u4e2d\uff0cAirSim \u5b50\u6587\u4ef6\u5939\u4f4d\u4e8e ~/Documents/AirSim \u3002 \u8be5\u6587\u4ef6\u91c7\u7528\u5e38\u89c1\u7684 json \u683c\u5f0f \u3002\u9996\u6b21\u542f\u52a8\u65f6\uff0cAirSim \u4f1a\u5728\u7528\u6237\u4e3b\u6587\u4ef6\u5939\u4e2d\u521b\u5efa settings.json \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4e0d\u5305\u542b\u4efb\u4f55\u8bbe\u7f6e\u3002\u4e3a\u907f\u514d\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528 ASCII \u683c\u5f0f\u4fdd\u5b58 json \u6587\u4ef6\u3002 \u5982\u4f55\u5728\u6c7d\u8f66\u548c\u591a\u65cb\u7ffc\u98de\u884c\u5668\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff1f # \u9ed8\u8ba4\u4f7f\u7528\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002\u8981\u4f7f\u7528\u6c7d\u8f66\uff0c\u53ea\u9700\u8bbe\u7f6e \"SimMode\": \"Car\" \uff0c\u5982\u4e0b\u6240\u793a\uff1a { \"SettingsVersion\": 1.2, \"SimMode\": \"Car\" } \u8981\u9009\u62e9\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u8bf7\u8bbe\u7f6e \"SimMode\": \"Multirotor\" \u3002\u5982\u679c\u60a8\u60f3\u63d0\u793a\u7528\u6237\u9009\u62e9\u98de\u884c\u5668\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528 \"SimMode\": \"\" \u3002 \u53ef\u7528\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c # \u4ee5\u4e0b\u662f\u53ef\u7528\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c\u7684\u5b8c\u6574\u5217\u8868\u3002\u5982\u679c json \u6587\u4ef6\u4e2d\u7f3a\u5c11\u4efb\u4f55\u8bbe\u7f6e\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002\u67d0\u4e9b\u9ed8\u8ba4\u503c\u4ec5\u4ee5\u201c\"\"\u201d\u6307\u5b9a\uff0c\u8fd9\u610f\u5473\u7740\u5b9e\u9645\u503c\u53ef\u80fd\u6839\u636e\u60a8\u4f7f\u7528\u7684\u8f66\u8f86\u9009\u62e9\u3002\u4f8b\u5982\uff0c ViewMode \u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c\u4e3a \"\" \uff0c\u5bf9\u4e8e\u65e0\u4eba\u673a\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a \"FlyWithMe\" \uff0c\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a \"SpringArmChase\" \u3002 \u8b66\u544a\uff1a \u8bf7\u52ff\u5c06\u4ee5\u4e0b\u6240\u6709\u5185\u5bb9\u590d\u5236\u7c98\u8d34\u5230\u60a8\u7684 settings.json \u4e2d\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u4ec5\u6dfb\u52a0\u90a3\u4e9b\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u503c\u7684\u8bbe\u7f6e\u3002\u552f\u4e00\u5fc5\u9700\u7684\u5143\u7d20\u662f \"SettingsVersion\" \u3002 { \"SimMode\" : \"\" , \"ClockType\" : \"\" , \"ClockSpeed\" : 1 , \"LocalHostIp\" : \"127.0.0.1\" , \"ApiServerPort\" : 41451 , \"RecordUIVisible\" : true , \"LogMessagesVisible\" : true , \"ShowLosDebugLines\" : false , \"ViewMode\" : \"\" , \"RpcEnabled\" : true , \"EngineSound\" : true , \"PhysicsEngineName\" : \"\" , \"SpeedUnitFactor\" : 1.0 , \"SpeedUnitLabel\" : \"m/s\" , \"Wind\" : { \"X\" : 0 , \"Y\" : 0 , \"Z\" : 0 }, \"CameraDirector\" : { \"FollowDistance\" : -3 , \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"Recording\" : { \"RecordOnMove\" : false , \"RecordInterval\" : 0.05 , \"Folder\" : \"\" , \"Enabled\" : false , \"Cameras\" : [ { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"\" , \"Compress\" : true } ] }, \"CameraDefaults\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"Width\" : 256 , \"Height\" : 144 , \"FOV_Degrees\" : 90 , \"AutoExposureSpeed\" : 100 , \"AutoExposureBias\" : 0 , \"AutoExposureMaxBrightness\" : 0.64 , \"AutoExposureMinBrightness\" : 0.03 , \"MotionBlurAmount\" : 0 , \"TargetGamma\" : 1.0 , \"ProjectionMode\" : \"\" , \"OrthoWidth\" : 5.12 } ], \"NoiseSettings\" : [ { \"Enabled\" : false , \"ImageType\" : 0 , \"RandContrib\" : 0.2 , \"RandSpeed\" : 100000.0 , \"RandSize\" : 500.0 , \"RandDensity\" : 2 , \"HorzWaveContrib\" : 0.03 , \"HorzWaveStrength\" : 0.08 , \"HorzWaveVertSize\" : 1.0 , \"HorzWaveScreenSize\" : 1.0 , \"HorzNoiseLinesContrib\" : 1.0 , \"HorzNoiseLinesDensityY\" : 0.01 , \"HorzNoiseLinesDensityXY\" : 0.5 , \"HorzDistortionContrib\" : 1.0 , \"HorzDistortionStrength\" : 0.002 } ], \"Gimbal\" : { \"Stabilization\" : 0 , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN , \"UnrealEngine\" : { \"PixelFormatOverride\" : [ { \"ImageType\" : 0 , \"PixelFormat\" : 0 } ] } }, \"OriginGeopoint\" : { \"Latitude\" : 47.641468 , \"Longitude\" : -122.140165 , \"Altitude\" : 122 }, \"TimeOfDay\" : { \"Enabled\" : false , \"StartDateTime\" : \"\" , \"CelestialClockSpeed\" : 1 , \"StartDateTimeDst\" : false , \"UpdateIntervalSecs\" : 60 }, \"SubWindows\" : [ { \"WindowID\" : 0 , \"CameraName\" : \"0\" , \"ImageType\" : 3 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false }, { \"WindowID\" : 1 , \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false }, { \"WindowID\" : 2 , \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false } ], \"SegmentationSettings\" : { \"InitMethod\" : \"\" , \"MeshNamingMethod\" : \"\" , \"OverrideExisting\" : true }, \"PawnPaths\" : { \"BareboneCar\" : { \"PawnBP\" : \"Class'/AirSim/VehicleAdv/Vehicle/VehicleAdvPawn.VehicleAdvPawn_C'\" }, \"DefaultCar\" : { \"PawnBP\" : \"Class'/AirSim/VehicleAdv/SUV/SuvCarPawn.SuvCarPawn_C'\" }, \"DefaultQuadrotor\" : { \"PawnBP\" : \"Class'/AirSim/Blueprints/BP_FlyingPawn.BP_FlyingPawn_C'\" }, \"DefaultComputerVision\" : { \"PawnBP\" : \"Class'/AirSim/Blueprints/BP_ComputerVisionPawn.BP_ComputerVisionPawn_C'\" } }, \"Vehicles\" : { \"SimpleFlight\" : { \"VehicleType\" : \"SimpleFlight\" , \"DefaultVehicleState\" : \"Armed\" , \"AutoCreate\" : true , \"PawnPath\" : \"\" , \"EnableCollisionPassthrogh\" : false , \"EnableCollisions\" : true , \"AllowAPIAlways\" : true , \"EnableTrace\" : false , \"RC\" : { \"RemoteControlID\" : 0 , \"AllowAPIWhenDisconnected\" : false }, \"Cameras\" : { //same elements as CameraDefaults above, key as name }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"PhysXCar\" : { \"VehicleType\" : \"PhysXCar\" , \"DefaultVehicleState\" : \"\" , \"AutoCreate\" : true , \"PawnPath\" : \"\" , \"EnableCollisionPassthrogh\" : false , \"EnableCollisions\" : true , \"RC\" : { \"RemoteControlID\" : -1 }, \"Cameras\" : { \"MyCamera1\" : { //same elements as elements inside CameraDefaults above }, \"MyCamera2\" : { //same elements as elements inside CameraDefaults above }, }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN } }, \"ExternalCameras\" : { \"FixedCamera1\" : { // same elements as in CameraDefaults above }, \"FixedCamera2\" : { // same elements as in CameraDefaults above } } } SimMode # SimMode \u51b3\u5b9a\u4f7f\u7528\u54ea\u79cd\u6a21\u62df\u6a21\u5f0f\u3002\u4ee5\u4e0b\u662f\u5f53\u524d\u652f\u6301\u7684\u503c\uff1a - \"\" : \u63d0\u793a\u7528\u6237\u9009\u62e9\u98de\u884c\u5668\u7c7b\u578b\uff1a\u591a\u65cb\u7ffc\u98de\u884c\u5668\u6216\u6c7d\u8f66 - \"Multirotor\" : \u4f7f\u7528\u591a\u65cb\u7ffc\u98de\u884c\u5668\u6a21\u62df - \"Car\" : \u4f7f\u7528\u6c7d\u8f66\u6a21\u62df - \"ComputerVision\" : \u4ec5\u4f7f\u7528\u6444\u50cf\u5934\uff0c\u4e0d\u4f7f\u7528\u98de\u884c\u5668\u6216\u7269\u7406\u7cfb\u7edf ViewMode # ViewMode \u51b3\u5b9a\u4e86\u9ed8\u8ba4\u4f7f\u7528\u54ea\u4e2a\u6444\u50cf\u5934\u4ee5\u53ca\u6444\u50cf\u5934\u5982\u4f55\u8ddf\u968f\u98de\u884c\u5668\u3002\u5bf9\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u9ed8\u8ba4 ViewMode \u4e3a \"FlyWithMe\" \uff0c\u800c\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u9ed8\u8ba4 ViewMode \u4e3a \"SpringArmChase\" \u3002 FlyWithMe : \u4ee5 6 \u4e2a\u81ea\u7531\u5ea6\u4ece\u540e\u9762\u8ffd\u8d76\u8f66\u8f86 GroundObserver : \u4ece\u8ddd\u5730\u9762 6 \u82f1\u5c3a\u7684\u9ad8\u5ea6\u8ffd\u9010\u8f66\u8f86\uff0c\u4f46\u5728 XY \u5e73\u9762\u4e0a\u5177\u6709\u5b8c\u5168\u7684\u81ea\u7531\u3002 Fpv : \u4ece\u8f66\u8f86\u524d\u7f6e\u6444\u50cf\u5934\u67e5\u770b\u573a\u666f Manual : \u4e0d\u81ea\u52a8\u79fb\u52a8\u6444\u50cf\u5934\u3002\u4f7f\u7528\u7bad\u5934\u952e\u548c ASWD \u952e\u624b\u52a8\u79fb\u52a8\u6444\u50cf\u5934\u3002 SpringArmChase : \u4f7f\u7528\u5b89\u88c5\u5728\uff08\u9690\u5f62\uff09\u81c2\u4e0a\u7684\u6444\u50cf\u5934\u8ffd\u9010\u8f66\u8f86\uff0c\u8be5\u81c2\u901a\u8fc7\u5f39\u7c27\u8fde\u63a5\u5230\u8f66\u8f86\u4e0a\uff08\u56e0\u6b64\u5728\u8fd0\u52a8\u4e2d\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\uff09\u3002 NoDisplay : \u8fd9\u5c06\u51bb\u7ed3\u4e3b\u5c4f\u5e55\u7684\u6e32\u67d3\uff0c\u4f46\u5b50\u7a97\u53e3\u3001\u5f55\u5236\u548c API \u7684\u6e32\u67d3\u4ecd\u7136\u6709\u6548\u3002\u6b64\u6a21\u5f0f\u6709\u52a9\u4e8e\u5728\u201c\u65e0\u5934\u201d\u6a21\u5f0f\u4e0b\u8282\u7701\u8d44\u6e90\uff0c\u56e0\u4e3a\u5728\u201c\u65e0\u5934\u201d\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ea\u9700\u83b7\u53d6\u56fe\u50cf\uff0c\u800c\u4e0d\u5173\u5fc3\u4e3b\u5c4f\u5e55\u4e0a\u6e32\u67d3\u7684\u5185\u5bb9\u3002\u8fd9\u4e5f\u53ef\u80fd\u63d0\u9ad8\u5f55\u5236\u56fe\u50cf\u7684 FPS\u3002 TimeOfDay # \u6b64\u8bbe\u7f6e\u63a7\u5236\u73af\u5883\u4e2d\u592a\u9633\u7684\u4f4d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Enabled \u4e3a false\uff0c\u8fd9\u610f\u5473\u7740\u592a\u9633\u7684\u4f4d\u7f6e\u5c06\u4fdd\u7559\u5728\u73af\u5883\u4e2d\u7684\u9ed8\u8ba4\u4f4d\u7f6e\uff0c\u5e76\u4e14\u4e0d\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\u3002\u5982\u679c Enabled \u4e3a true\uff0c\u5219\u4f7f\u7528 OriginGeopoint \u90e8\u5206\u4e2d\u6307\u5b9a\u7684\u7ecf\u5ea6\u3001\u7eac\u5ea6\u548c\u9ad8\u5ea6\uff0c\u9488\u5bf9 StartDateTime \u4e2d\u6307\u5b9a\u7684\u65e5\u671f\uff08\u5b57\u7b26\u4e32\u683c\u5f0f\u4e3a %Y-%m-%d %H:%M:%S \uff09\u8ba1\u7b97\u592a\u9633\u4f4d\u7f6e\uff0c\u4f8b\u5982 2018-02-12 15:20:00 \u3002\u5982\u679c\u6b64\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c StartDateTimeDst \u4e3a true\uff0c\u5219\u6211\u4eec\u4f1a\u8c03\u6574\u590f\u4ee4\u65f6\u3002\u7136\u540e\uff0c\u592a\u9633\u7684\u4f4d\u7f6e\u5c06\u6309\u7167 UpdateIntervalSecs \u4e2d\u6307\u5b9a\u7684\u95f4\u9694\u6301\u7eed\u66f4\u65b0\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5e0c\u671b\u5929\u4f53\u65f6\u949f\u8fd0\u884c\u5f97\u6bd4\u6a21\u62df\u65f6\u949f\u66f4\u5feb\u6216\u66f4\u6162\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 CelestialClockSpeed \u6765\u6307\u5b9a\uff0c\u4f8b\u5982\uff0c\u503c 100 \u8868\u793a\u6a21\u62df\u65f6\u949f\u6bcf 1 \u79d2\uff0c\u592a\u9633\u7684\u4f4d\u7f6e\u5c31\u4f1a\u524d\u8fdb 100 \u79d2\uff0c\u56e0\u6b64\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u79fb\u52a8\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002 \u53e6\u8bf7\u53c2\u9605 \u65f6\u95f4 API \u3002 OriginGeopoint # \u6b64\u8bbe\u7f6e\u6307\u5b9a\u653e\u7f6e\u5728\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u70b9\u7ec4\u4ef6\u7684\u7eac\u5ea6\u3001\u7ecf\u5ea6\u548c\u6d77\u62d4\u9ad8\u5ea6\u3002\u98de\u884c\u5668\u7684\u8d77\u59cb\u70b9\u4f7f\u7528\u6b64\u53d8\u6362\u8ba1\u7b97\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u901a\u8fc7 API \u516c\u5f00\u7684\u5750\u6807\u5747\u4f7f\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u8f86\u8f66\u7684\u8d77\u59cb\u70b9\u5728 NED \u7cfb\u7edf\u4e2d\u4e3a (0, 0, 0)\u3002\u65f6\u95f4\u8bbe\u7f6e\u662f\u6839\u636e OriginGeopoint \u4e2d\u6307\u5b9a\u7684\u5730\u7406\u5750\u6807\u8ba1\u7b97\u7684\u3002 SubWindows # \u6b64\u8bbe\u7f6e\u51b3\u5b9a\u4e86\u6309\u4e0b 1\u30012\u30013 \u952e\u65f6\u53ef\u89c1\u7684 3 \u4e2a\u5b50\u7a97\u53e3\u4e2d\u5206\u522b\u663e\u793a\u7684\u5185\u5bb9\u3002 WindowID : \u53ef\u4ee5\u662f 0 \u5230 2 CameraName : \u8f66\u8f86\u4e0a\u662f\u5426\u6709\u4efb\u4f55 \u53ef\u7528\u6444\u50cf\u5934 \u6216\u5916\u90e8\u6444\u50cf\u5934 ImageType : \u6574\u6570\u503c\u6839\u636e ImageType \u679a\u4e3e \u51b3\u5b9a\u663e\u793a\u54ea\u79cd\u7c7b\u578b\u7684\u56fe\u50cf\u3002 VehicleName : \u6b64\u5b57\u7b26\u4e32\u7528\u4e8e\u6307\u5b9a\u8981\u4f7f\u7528\u6444\u50cf\u5934\u7684\u8f66\u8f86\uff0c\u5f53\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u4e86\u591a\u8f86\u8f66\u8f86\u65f6\u4f7f\u7528\u3002\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u4f8b\u5982\u8f66\u8f86\u540d\u79f0\u9519\u8bef\u6216\u53ea\u6709\u4e00\u8f86\u8f66\uff0c\u5219\u5c06\u4f7f\u7528\u7b2c\u4e00\u8f86\u8f66\u7684\u6444\u50cf\u5934\u3002 External : \u5982\u679c\u6444\u50cf\u5934\u662f\u5916\u7f6e\u6444\u50cf\u5934\uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a true \u3002\u5982\u679c\u4e3a true\uff0c\u5219 VehicleName \u53c2\u6570\u5c06\u88ab\u5ffd\u7565 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u5355\u8f86\u6c7d\u8f66\uff0c\u4e0b\u9762\u5206\u522b\u663e\u793a\u9a7e\u9a76\u5458\u89c6\u56fe\u3001\u524d\u4fdd\u9669\u6760\u89c6\u56fe\u548c\u540e\u89c6\u56fe\u4f5c\u4e3a\u573a\u666f\u3001\u6df1\u5ea6\u548c\u8868\u9762\u6cd5\u7ebf\u3002 \"SubWindows\" : [ { \"WindowID\" : 0 , \"ImageType\" : 0 , \"CameraName\" : \"3\" , \"Visible\" : true }, { \"WindowID\" : 1 , \"ImageType\" : 3 , \"CameraName\" : \"0\" , \"Visible\" : true }, { \"WindowID\" : 2 , \"ImageType\" : 6 , \"CameraName\" : \"4\" , \"Visible\" : true } ] \u5982\u679c\u6709\u591a\u8f86\u8f66\u8f86\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u6307\u5b9a\u4e0d\u540c\u7684\u8f66\u8f86\uff1a \"SubWindows\" : [ { \"WindowID\" : 0 , \"CameraName\" : \"0\" , \"ImageType\" : 3 , \"VehicleName\" : \"Car1\" , \"Visible\" : false }, { \"WindowID\" : 1 , \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"VehicleName\" : \"Car2\" , \"Visible\" : false }, { \"WindowID\" : 2 , \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"VehicleName\" : \"Car1\" , \"Visible\" : false } ] \u8bb0\u5f55 # \u8bb0\u5f55\u529f\u80fd\u5141\u8bb8\u60a8\u4ee5\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u8bb0\u5f55\u4f4d\u7f6e\u3001\u65b9\u5411\u3001\u901f\u5ea6\u7b49\u6570\u636e\u4ee5\u53ca\u6355\u83b7\u7684\u56fe\u50cf\u3002\u60a8\u53ef\u4ee5\u6309\u4e0b\u53f3\u4e0b\u89d2\u7684\u7ea2\u8272\u5f55\u5236\u6309\u94ae\u6216 R \u952e\u5f00\u59cb\u5f55\u5236\u3002\u6570\u636e\u5b58\u50a8\u5728 Documents\\AirSim \u6587\u4ef6\u5939\uff08\u6216\u4f7f\u7528 Folder \u6307\u5b9a\u7684\u6587\u4ef6\u5939\uff09\u4e2d\uff0c\u6bcf\u4e2a\u5f55\u5236\u4f1a\u8bdd\u90fd\u4f1a\u6709\u4e00\u4e2a\u5e26\u6709\u65f6\u95f4\u6233\u7684\u5b50\u6587\u4ef6\u5939\uff0c\u5e76\u4ee5\u5236\u8868\u7b26\u5206\u9694\u7684\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\u3002 RecordInterval : \u6307\u5b9a\u6355\u83b7\u4e24\u5e45\u56fe\u50cf\u4e4b\u95f4\u7684\u6700\u5c0f\u95f4\u9694\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 RecordOnMove : \u6307\u5b9a\u5982\u679c\u8f66\u8f86\u7684\u4f4d\u7f6e\u6216\u65b9\u5411\u6ca1\u6709\u6539\u53d8\u5219\u4e0d\u8bb0\u5f55\u5e27\u3002 Folder : \u7236\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u521b\u5efa\u5305\u542b\u65f6\u95f4\u6233\u7684\u8bb0\u5f55\u5b50\u6587\u4ef6\u5939\u3002\u5fc5\u987b\u6307\u5b9a\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u5c06\u4f7f\u7528 Documents/AirSim \u6587\u4ef6\u5939\u3002\u4f8b\u5982\uff1a \"Folder\": \"/home/<user>/Documents\" Enabled : \u8bb0\u5f55\u662f\u5426\u4ece\u5934\u5f00\u59cb\uff0c\u8bbe\u7f6e\u4e3a true \u8868\u793a\u6a21\u62df\u5f00\u59cb\u65f6\u81ea\u52a8\u5f00\u59cb\u8bb0\u5f55\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a false Cameras : \u6b64\u5143\u7d20\u63a7\u5236\u4f7f\u7528\u54ea\u4e9b\u6444\u50cf\u5934\u91c7\u96c6\u56fe\u50cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6444\u50cf\u5934 0 \u7684\u573a\u666f\u56fe\u50cf\u4f1a\u88ab\u8bb0\u5f55\u4e3a\u538b\u7f29\u7684 png \u683c\u5f0f\u3002\u6b64\u8bbe\u7f6e\u662f\u4e00\u4e2a JSON \u6570\u7ec4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u6444\u50cf\u5934\u91c7\u96c6\u56fe\u50cf\uff0c\u6bcf\u4e2a\u6444\u50cf\u5934\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684 \u56fe\u50cf\u7c7b\u578b \u3002 \u5f53 PixelsAsFloat \u4e3a\u771f\u65f6\uff0c\u56fe\u50cf\u5c06\u4fdd\u5b58\u4e3a pfm \u6587\u4ef6\u800c\u4e0d\u662f png \u6587\u4ef6\u3002 VehicleName \u9009\u9879\u5141\u8bb8\u60a8\u4e3a\u6bcf\u8f86\u8f66\u6307\u5b9a\u5355\u72ec\u7684\u6444\u50cf\u5934\u3002\u5982\u679c\u4e0d\u5b58\u5728 Cameras \u5143\u7d20\uff0c\u5219\u5c06\u8bb0\u5f55\u6bcf\u8f86\u8f66\u9ed8\u8ba4\u6444\u50cf\u5934\u7684 Scene \u56fe\u50cf\u3002 \u5982\u679c\u60a8\u4e0d\u60f3\u8bb0\u5f55\u4efb\u4f55\u56fe\u50cf\u800c\u53ea\u60f3\u8bb0\u5f55\u8f66\u8f86\u7684\u7269\u7406\u6570\u636e\uff0c\u8bf7\u6307\u5b9a Cameras \u5143\u7d20\u4f46\u5c06\u5176\u7559\u7a7a\uff0c\u5982\u4e0b\u6240\u793a\uff1a \"Cameras\": [] \u76ee\u524d\u4e0d\u652f\u6301\u5916\u63a5\u6444\u50cf\u5934\u8bb0\u5f55 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684 Cameras \u5143\u7d20\u8bb0\u5f55\u4e86 Car1 \u7684\u573a\u666f\u548c\u5206\u5272\u56fe\u50cf\u4ee5\u53ca Car2 \u7684\u573a\u666f\uff1a \"Cameras\" : [ { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car1\" , \"Compress\" : true }, { \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car1\" , \"Compress\" : true }, { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car2\" , \"Compress\" : true } ] \u67e5\u770b\u4fee\u6539\u8bb0\u5f55\u6570\u636e\u6765\u4e86\u89e3\u5982\u4f55 \u4fee\u6539\u6b63\u5728\u8bb0\u5f55\u7684 \u8fd0\u52a8\u5b66\u6570\u636e\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ClockSpeed # \u6b64\u8bbe\u7f6e\u5141\u8bb8\u60a8\u8bbe\u7f6e\u6a21\u62df\u65f6\u949f\u76f8\u5bf9\u4e8e\u6302\u949f\u7684\u901f\u5ea6\u3002\u4f8b\u5982\uff0c\u503c\u4e3a 5.0 \u8868\u793a\u5f53\u6302\u949f\u5df2\u8fc7\u53bb 1 \u79d2\u65f6\uff0c\u6a21\u62df\u65f6\u949f\u5df2\u8fc7\u53bb 5 \u79d2\uff08\u5373\u6a21\u62df\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\uff09\u3002\u503c\u4e3a 0.1 \u8868\u793a\u6a21\u62df\u65f6\u949f\u6bd4\u6302\u949f\u6162 10 \u500d\u3002\u503c\u4e3a 1 \u8868\u793a\u6a21\u62df\u5b9e\u65f6\u8fd0\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6a21\u62df\u65f6\u949f\u8fd0\u884c\u901f\u5ea6\u8d8a\u5feb\uff0c\u6a21\u62df\u8d28\u91cf\u53ef\u80fd\u4f1a\u4e0b\u964d\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4f2a\u5f71\uff0c\u4f8b\u5982\u7269\u4f53\u8d8a\u8fc7\u969c\u788d\u7269\uff0c\u56e0\u4e3a\u672a\u68c0\u6d4b\u5230\u78b0\u649e\u3002\u4f46\u662f\uff0c\u964d\u4f4e\u6a21\u62df\u65f6\u949f\u901f\u5ea6\uff08\u5373\u503c\u5c0f\u4e8e 1.0\uff09\u901a\u5e38\u53ef\u4ee5\u63d0\u9ad8\u6a21\u62df\u8d28\u91cf\u3002 \u5206\u5272\u8bbe\u7f6e # InitMethod \u51b3\u5b9a\u4e86\u542f\u52a8\u65f6\u5982\u4f55\u521d\u59cb\u5316\u5bf9\u8c61 ID \u4ee5\u751f\u6210 \u5206\u5272 \u3002\u503c\u4e3a \"\" \u6216 \"CommonObjectsRandomIDs\"\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u793a\u5728\u542f\u52a8\u65f6\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u968f\u673a ID\u3002\u8fd9\u5c06\u751f\u6210\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u968f\u673a\u989c\u8272\u7684\u5206\u5272\u89c6\u56fe\u3002\u503c\u4e3a \"None\" \u8868\u793a\u4e0d\u521d\u59cb\u5316\u5bf9\u8c61 ID\u3002\u8fd9\u5c06\u5bfc\u81f4\u5206\u5272\u89c6\u56fe\u5448\u73b0\u5355\u4e00\u7eaf\u8272\u3002\u5982\u679c\u60a8\u8ba1\u5212\u4f7f\u7528 API \u8bbe\u7f6e\u5bf9\u8c61 ID\uff0c\u6b64\u6a21\u5f0f\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u50cf CityEnviron \u8fd9\u6837\u7684\u5927\u578b\u73af\u5883\u4e2d\u8282\u7701\u542f\u52a8\u65f6\u7684\u5927\u91cf\u5ef6\u8fdf\u3002 \u5982\u679c OverrideExisting \u4e3a\u5047\uff0c\u5219\u521d\u59cb\u5316\u4e0d\u4f1a\u6539\u53d8\u5df2\u7ecf\u5206\u914d\u7684\u975e\u96f6\u5bf9\u8c61 ID\uff0c\u5426\u5219\u4f1a\u6539\u53d8\u3002 \u5982\u679c MeshNamingMethod \u4e3a\u201c\u201d\u6216\u201cOwnerName\u201d\uff0c\u5219\u6211\u4eec\u4f7f\u7528\u7f51\u683c\u7684\u6240\u6709\u8005\u540d\u79f0\u751f\u6210\u968f\u673a\u54c8\u5e0c\u503c\u4f5c\u4e3a\u5bf9\u8c61ID\u3002\u5982\u679c\u4e3a\u201cStaticMeshName\u201d\uff0c\u5219\u6211\u4eec\u4f7f\u7528\u9759\u6001\u7f51\u683c\u7684\u540d\u79f0\u751f\u6210\u968f\u673a\u54c8\u5e0c\u503c\u4f5c\u4e3a\u5bf9\u8c61ID\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u533a\u5206\u540c\u4e00\u4e2a\u9759\u6001\u7f51\u683c\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f46\u540d\u79f0\u901a\u5e38\u66f4\u76f4\u89c2\u3002 \u98ce\u7684\u8bbe\u7f6e # \u6b64\u8bbe\u7f6e\u6307\u5b9a\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u5317\u7eac\u65b9\u5411\u7684\u98ce\u901f\u3002\u503c\u4ee5\u7c73/\u79d2\u4e3a\u5355\u4f4d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u901f\u5ea6\u4e3a 0\uff0c\u5373\u65e0\u98ce\u3002 Camera Director \u8bbe\u7f6e # \u6b64\u5143\u7d20\u6307\u5b9a\u7528\u4e8e\u5728 ViewPort \u4e2d\u8ddf\u968f\u8f66\u8f86\u7684\u6444\u50cf\u673a\u7684\u8bbe\u7f6e\u3002 FollowDistance : \u6444\u50cf\u5934\u8ddf\u968f\u8f66\u8f86\u7684\u8ddd\u79bb\uff0c\u6c7d\u8f66\u9ed8\u8ba4\u4e3a-8\uff088\u7c73\uff09\uff0c\u5176\u4ed6\u9ed8\u8ba4\u4e3a-3\u3002 X, Y, Z, Yaw, Roll, Pitch : \u8fd9\u4e9b\u5143\u7d20\u5141\u8bb8\u60a8\u6307\u5b9a\u6444\u50cf\u673a\u76f8\u5bf9\u4e8e\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f4d\u7f6e\u91c7\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u5750\u6807\u7cfb\uff0c\u539f\u70b9\u8bbe\u7f6e\u4e3a\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u4f4d\u7f6e\u3002\u65b9\u5411\u4ee5\u5ea6\u4e3a\u5355\u4f4d\u3002 \u76f8\u673a\u8bbe\u7f6e # \u6839\u7ea7\u522b\u7684 CameraDefaults \u5143\u7d20\u6307\u5b9a\u6240\u6709\u6444\u50cf\u5934\u7684\u9ed8\u8ba4\u503c\u3002\u8fd9\u4e9b\u9ed8\u8ba4\u503c\u53ef\u4ee5\u5728\u201cVehicles\u201d\u7c7b\u4e2d\u7684 Cameras \u5143\u7d20\u4e2d\u4e3a\u5355\u4e2a\u6444\u50cf\u5934\u8986\u76d6\uff0c\u5177\u4f53\u65b9\u6cd5\u8bf7\u89c1\u540e\u6587\u3002 \u5173\u4e8e ImageType \u5143\u7d20\u7684\u6ce8\u91ca # JSON \u6570\u7ec4\u4e2d\u7684 ImageType \u5143\u7d20\u51b3\u5b9a\u4e86\u8bbe\u7f6e\u5e94\u7528\u4e8e\u54ea\u79cd\u56fe\u50cf\u7c7b\u578b\u3002\u6709\u6548\u503c\u5728 ImageType \u90e8\u5206 \u4e2d\u8fdb\u884c\u4e86\u8bf4\u660e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u652f\u6301\u7279\u6b8a\u503c ImageType: -1 \uff0c\u7528\u4e8e\u5c06\u8bbe\u7f6e\u5e94\u7528\u4e8e\u5916\u90e8\u6444\u50cf\u5934\uff08\u5373\u60a8\u6b63\u5728\u5c4f\u5e55\u4e0a\u67e5\u770b\u7684\u5185\u5bb9\uff09\u3002 \u4f8b\u5982\uff0c CaptureSettings \u5143\u7d20\u662f json \u6570\u7ec4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u591a\u79cd\u56fe\u50cf\u7c7b\u578b\u7684\u8bbe\u7f6e\u3002 CaptureSettings # CaptureSettings \u51b3\u5b9a\u4e86\u4e0d\u540c\u56fe\u50cf\u7c7b\u578b\uff08\u4f8b\u5982\u573a\u666f\u3001\u6df1\u5ea6\u3001\u89c6\u5dee\u3001\u8868\u9762\u6cd5\u7ebf\u548c\u5206\u5272\u89c6\u56fe\uff09\u7684\u6e32\u67d3\u65b9\u5f0f\u3002\u201cWidth\u201d\u3001\u201cHeight\u201d \u548c \u201cFOV\u201d \u7684\u8bbe\u7f6e\u542b\u4e49\u4e0d\u8a00\u81ea\u660e\u3002\u201cAutoExposureSpeed\u201d \u51b3\u5b9a\u4e86\u4eba\u773c\u9002\u5e94\u7684\u901f\u5ea6\u3002\u6211\u4eec\u901a\u5e38\u5c06\u5176\u8bbe\u7f6e\u4e3a\u8f83\u9ad8\u7684\u503c\uff08\u4f8b\u5982 100\uff09\uff0c\u4ee5\u907f\u514d\u56fe\u50cf\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4f2a\u5f71\u3002\u540c\u6837\uff0c\u6211\u4eec\u9ed8\u8ba4\u5c06\u201cMotionBlurAmount\u201d\u8bbe\u7f6e\u4e3a 0\uff0c\u4ee5\u907f\u514d\u5730\u9762\u5b9e\u51b5\u56fe\u50cf\u4e2d\u51fa\u73b0\u4f2a\u5f71\u3002 ProjectionMode \u51b3\u5b9a\u4e86\u91c7\u96c6\u76f8\u673a\u4f7f\u7528\u7684\u6295\u5f71\u65b9\u5f0f\uff0c\u53ef\u4ee5\u91c7\u7528\u201cperspective\u201d\uff08\u9ed8\u8ba4\uff09\u6216\u201corthographic\u201d\u503c\u3002\u5982\u679c\u6295\u5f71\u6a21\u5f0f\u4e3a\u201corthographic\u201d\uff0c\u5219 OrthoWidth \u51b3\u5b9a\u4e86\u91c7\u96c6\u6295\u5f71\u533a\u57df\u7684\u5bbd\u5ea6\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 \u6709\u5173\u5176\u4ed6\u8bbe\u7f6e\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 \u672c\u6587 \u3002 NoiseSettings # \u201c\u566a\u58f0\u8bbe\u7f6e ( NoiseSettings )\u201d \u5141\u8bb8\u4e3a\u6307\u5b9a\u7c7b\u578b\u7684\u56fe\u50cf\u6dfb\u52a0\u566a\u58f0\uff0c\u4ee5\u6a21\u62df\u76f8\u673a\u4f20\u611f\u5668\u566a\u58f0\u3001\u5e72\u6270\u548c\u5176\u4ed6\u4f2a\u5f71\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u6dfb\u52a0\u566a\u58f0\uff0c\u5373 Enabled: false \u3002\u5982\u679c\u8bbe\u7f6e\u4e3a Enabled: true \uff0c\u5219\u4f1a\u542f\u7528\u4ee5\u4e0b\u4e0d\u540c\u7c7b\u578b\u7684\u566a\u58f0\u548c\u5e72\u6270\u4f2a\u5f71\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8fdb\u4e00\u6b65\u8c03\u6574\u3002\u566a\u58f0\u6548\u679c\u901a\u8fc7\u7740\u8272\u5668\u5b9e\u73b0\uff0c\u8be5\u7740\u8272\u5668\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u4f5c\u4e3a\u540e\u671f\u5904\u7406\u6750\u8d28\u521b\u5efa\uff0c\u540d\u4e3a CameraSensorNoise \u3002 \u76f8\u673a\u566a\u58f0\u548c\u5e72\u6270\u6a21\u62df\u6f14\u793a\uff1a \u968f\u673a\u566a\u58f0 # \u8fd9\u5c06\u6dfb\u52a0\u5177\u6709\u4ee5\u4e0b\u53c2\u6570\u7684\u968f\u673a\u566a\u58f0\u6591\u70b9\u3002 * RandContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * RandSpeed : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u6ce2\u52a8\u7684\u901f\u5ea6\uff0c1 \u8868\u793a\u6ca1\u6709\u6ce2\u52a8\uff0c\u800c\u66f4\u9ad8\u7684\u503c\uff08\u5982 1E6\uff09\u8868\u793a\u5b8c\u5168\u6ce2\u52a8\u3002 * RandSize : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u7684\u7c97\u7565\u7a0b\u5ea6\uff0c1 \u8868\u793a\u6bcf\u4e2a\u50cf\u7d20\u90fd\u6709\u81ea\u5df1\u7684\u566a\u58f0\uff0c\u800c\u66f4\u9ad8\u7684\u503c\u8868\u793a\u8d85\u8fc7 1 \u4e2a\u50cf\u7d20\u5171\u4eab\u76f8\u540c\u7684\u566a\u58f0\u503c\u3002 * RandDensity : \u8fd9\u51b3\u5b9a\u4e86\u603b\u5171\u6709\u591a\u5c11\u50cf\u7d20\u4f1a\u6709\u566a\u70b9\uff0c1 \u8868\u793a\u6240\u6709\u50cf\u7d20\uff0c\u800c\u503c\u8d8a\u9ad8\u8868\u793a\u50cf\u7d20\u6570\u91cf\u8d8a\u5c11\uff08\u5448\u6307\u6570\u7ea7\uff09\u3002 \u6c34\u5e73\u51f9\u51f8\u53d8\u5f62 # \u8fd9\u4f1a\u589e\u52a0\u6c34\u5e73\u51f9\u51f8/\u95ea\u70c1/\u91cd\u5f71\u6548\u679c\u3002 * HorzWaveContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzWaveStrength : \u8fd9\u51b3\u5b9a\u4e86\u6548\u679c\u7684\u6574\u4f53\u5f3a\u5ea6\u3002 * HorzWaveVertSize : \u8fd9\u51b3\u5b9a\u4e86\u6709\u591a\u5c11\u5782\u76f4\u50cf\u7d20\u4f1a\u53d7\u5230\u8be5\u6548\u679c\u7684\u5f71\u54cd\u3002 * HorzWaveScreenSize : \u8fd9\u51b3\u5b9a\u4e86\u5c4f\u5e55\u7684\u591a\u5c11\u90e8\u5206\u4f1a\u53d7\u5230\u8be5\u6548\u679c\u7684\u5f71\u54cd\u3002 \u6c34\u5e73\u566a\u58f0\u7ebf # \u8fd9\u4f1a\u5728\u6c34\u5e73\u7ebf\u4e0a\u589e\u52a0\u566a\u58f0\u533a\u57df\u3002 * HorzNoiseLinesContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzNoiseLinesDensityY : \u8fd9\u51b3\u5b9a\u4e86\u6c34\u5e73\u7ebf\u4e0a\u6709\u591a\u5c11\u50cf\u7d20\u53d7\u5230\u5f71\u54cd\u3002 * HorzNoiseLinesDensityXY : \u8fd9\u51b3\u5b9a\u4e86\u5c4f\u5e55\u4e0a\u6709\u591a\u5c11\u884c\u53d7\u5230\u5f71\u54cd\u3002 \u6c34\u5e73\u7ebf\u7578\u53d8 # \u8fd9\u589e\u52a0\u4e86\u6c34\u5e73\u7ebf\u7684\u6ce2\u52a8\u3002 * HorzDistortionContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzDistortionStrength : \u8fd9\u51b3\u5b9a\u4e86\u5931\u771f\u7a0b\u5ea6\u6709\u591a\u5927\u3002 Gimbal # Gimbal \u5143\u7d20\u5141\u8bb8\u51bb\u7ed3\u6444\u50cf\u673a\u7684\u4fef\u4ef0\u3001\u6a2a\u6eda\u548c/\u6216\u504f\u822a\u65b9\u5411\u3002\u9664\u975e ImageType \u4e3a-1\uff0c\u5426\u5219\u6b64\u8bbe\u7f6e\u5c06\u88ab\u5ffd\u7565\u3002 Stabilization \u9ed8\u8ba4\u4e3a0\uff0c\u8868\u793a\u65e0\u4e07\u5411\u8282\uff0c\u5373\u6444\u50cf\u673a\u65b9\u5411\u5728\u6240\u6709\u8f74\u4e0a\u968f\u8f66\u8eab\u65b9\u5411\u800c\u53d8\u5316\u3002\u503c\u4e3a1\u8868\u793a\u5b8c\u5168\u7a33\u5b9a\u30020\u52301\u4e4b\u95f4\u7684\u503c\u4f5c\u4e3a Pitch \u3001 Roll \u548c Yaw \u5143\u7d20\u4e2d\u6307\u5b9a\u7684\u56fa\u5b9a\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff0c\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\uff09\u548c\u8f66\u8eab\u65b9\u5411\u7684\u6743\u91cd\u3002\u5f53json\u4e2d\u7701\u7565\u4efb\u4f55\u89d2\u5ea6\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aNaN\u65f6\uff0c\u8be5\u89d2\u5ea6\u4e0d\u7a33\u5b9a\uff08\u5373\u5b83\u4f1a\u968f\u8f66\u8eab\u4e00\u8d77\u79fb\u52a8\uff09\u3002 \u865a\u5e7b\u5f15\u64ce # \u6b64\u5143\u7d20\u5305\u542b\u865a\u5e7b\u5f15\u64ce\u7279\u6709\u7684\u8bbe\u7f6e\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u5c06\u5728 Unity \u9879\u76ee\u4e2d\u88ab\u5ffd\u7565\u3002 * PixelFormatOverride : \u8fd9\u5305\u542b\u4e00\u4e2a\u5305\u542b ImageType \u548c PixelFormat \u8bbe\u7f6e\u7684\u5143\u7d20\u5217\u8868\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u5141\u8bb8\u60a8\u8986\u76d6 ImageType \u8bbe\u7f6e\u6307\u5b9a\u7684\u6355\u83b7\u5b9e\u4f8b\u5316\u7684 UTextureRenderTarget2D \u5bf9\u8c61\u7684\u9ed8\u8ba4\u50cf\u7d20\u683c\u5f0f\u3002\u6307\u5b9a\u6b64\u5143\u7d20\u53ef\u4ee5\u9632\u6b62\u7531\u610f\u5916\u50cf\u7d20\u683c\u5f0f\u5f15\u8d77\u7684\u5d29\u6e83\uff08\u6709\u5173\u8fd9\u4e9b\u5d29\u6e83\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 #4120 \u548c #4339 \u3002\u5b8c\u6574\u7684\u50cf\u7d20\u683c\u5f0f\u5217\u8868\u53ef\u5728 \u6b64\u5904 \u67e5\u770b\u3002 \u5916\u63a5\u6444\u50cf\u5934 # \u6b64\u5143\u7d20\u5141\u8bb8\u6307\u5b9a\u72ec\u7acb\u4e8e\u8f66\u8f86\u4e0a\u5b89\u88c5\u7684\u6444\u50cf\u5934\uff08\u4f8b\u5982\u95ed\u8def\u7535\u89c6\u6444\u50cf\u5934\uff09\u3002\u8fd9\u4e9b\u6444\u50cf\u5934\u662f\u56fa\u5b9a\u6444\u50cf\u5934\uff0c\u4e0d\u4f1a\u968f\u8f66\u8f86\u79fb\u52a8\u3002\u8be5\u5143\u7d20\u4e2d\u7684\u952e\u662f\u6444\u50cf\u5934\u7684\u540d\u79f0\uff0c\u503c\uff08\u5373\u8bbe\u7f6e\uff09\u4e0e\u4e0a\u9762\u63cf\u8ff0\u7684 CameraDefaults \u76f8\u540c\u3002\u6240\u6709\u6444\u50cf\u5934 API \u5747\u53ef\u4e0e\u5916\u90e8\u6444\u50cf\u5934\u914d\u5408\u4f7f\u7528\uff0c\u5305\u62ec\u901a\u8fc7\u5728 API \u8c03\u7528\u4e2d\u4f20\u9012\u53c2\u6570 external=True \u6765\u6355\u83b7\u56fe\u50cf\u3001\u66f4\u6539\u59ff\u52bf\u7b49\u3002 \u8f66\u8f86\u8bbe\u7f6e # \u6bcf\u79cd\u6a21\u62df\u6a21\u5f0f\u90fd\u4f1a\u904d\u5386\u6b64\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u7684\u8f66\u8f86\u5217\u8868\uff0c\u5e76\u521b\u5efa\u5177\u6709 \"AutoCreate\": true \u7684\u8f66\u8f86\u3002\u6b64\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u7684\u6bcf\u8f86\u8f66\u8f86\u90fd\u6709\u4e00\u4e2a\u952e\uff0c\u8be5\u952e\u5c06\u6210\u4e3a\u8f66\u8f86\u7684\u540d\u79f0\u3002\u5982\u679c\u7f3a\u5c11 \"Vehicles\" \u5143\u7d20\uff0c\u5219\u6b64\u5217\u8868\u5c06\u586b\u5145\u540d\u4e3a\u201cPhysXCar\u201d\u7684\u9ed8\u8ba4\u8f66\u8f86\u548c\u540d\u4e3a\u201cSimpleFlight\u201d\u7684\u9ed8\u8ba4\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002 \u5e38\u7528\u8f66\u8f86\u8bbe\u7f6e # VehicleType : \u8fd9\u53ef\u4ee5\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u79cd\uff1a PhysXCar \u3001 SimpleFlight \u3001 PX4Multirotor \u3001 ComputerVision \u3001 ArduCopter \u548c ArduRover \u3002\u7531\u4e8e\u6ca1\u6709\u9ed8\u8ba4\u503c\uff0c\u56e0\u6b64\u5fc5\u987b\u6307\u5b9a\u6b64\u5143\u7d20\u3002 PawnPath : \u8fd9\u5141\u8bb8\u8986\u76d6\u7528\u4e8e\u8f7d\u5177\u7684 pawn \u84dd\u56fe\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728 AirSim \u4ee3\u7801\u4e4b\u5916\u7684\u9879\u76ee\u4e2d\uff0c\u4e3a\u4ed3\u5e93\u673a\u5668\u4eba\u521b\u5efa\u4e00\u4e2a\u6e90\u81ea ACarPawn \u7684\u65b0 pawn \u84dd\u56fe\uff0c\u7136\u540e\u5728\u6b64\u5904\u6307\u5b9a\u5176\u8def\u5f84\u3002\u53e6\u8bf7\u53c2\u9605 PawnPaths \u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5728\u5168\u5c40 PawnPaths \u5bf9\u8c61\u4e2d\u4f7f\u7528\u60a8\u4e13\u6709\u5b9a\u4e49\u7684\u5bf9\u8c61\u540d\u79f0\u6307\u5b9a\u81ea\u5b9a\u4e49 pawn \u84dd\u56fe\u7c7b\u8def\u5f84\uff0c\u5e76\u5728 Vehicles \u8bbe\u7f6e\u4e2d\u5f15\u7528\u8be5\u540d\u79f0\u3002\u4f8b\u5982\uff1a { ... \"PawnPaths\" : { \"CustomPawn\" : { \"PawnBP\" : \"Class'/Game/Assets/Blueprints/MyPawn.MyPawn_C'\" } }, \"Vehicles\" : { \"MyVehicle\" : { \"VehicleType\" : ... , \"PawnPath\" : \"CustomPawn\" , ... } } } DefaultVehicleState : \u591a\u65cb\u7ffc\u98de\u884c\u5668\u7684\u53ef\u80fd\u503c\u662f Armed \u6216 Disarmed \u3002 AutoCreate : \u5982\u679c\u4e3a\u771f\uff0c\u90a3\u4e48\u8be5\u8f66\u8f86\u5c31\u4f1a\u88ab\u751f\u6210\uff08\u5982\u679c\u6240\u9009\u6a21\u62df\u6a21\u5f0f\u652f\u6301\uff09\u3002 RC : \u6b64\u5b50\u5143\u7d20\u5141\u8bb8\u4f7f\u7528 RemoteControlID \u6307\u5b9a\u98de\u884c\u5668\u4f7f\u7528\u7684\u9065\u63a7\u5668\u3002\u503c\u4e3a -1 \u8868\u793a\u4f7f\u7528\u952e\u76d8\uff08\u591a\u65cb\u7ffc\u98de\u884c\u5668\u5c1a\u4e0d\u652f\u6301\uff09\u3002\u503c >= 0 \u8868\u793a\u6307\u5b9a\u8fde\u63a5\u5230\u7cfb\u7edf\u7684\u591a\u4e2a\u9065\u63a7\u5668\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728 Windows \u7cfb\u7edf\u7684\u201c\u6e38\u620f\u63a7\u5236\u5668\u201d\u9762\u677f\u4e2d\u67e5\u770b\u53ef\u7528\u7684\u9065\u63a7\u5668\u5217\u8868\u3002 X, Y, Z, Yaw, Roll, Pitch : \u8fd9\u4e9b\u5143\u7d20\u5141\u8bb8\u60a8\u6307\u5b9a\u8f66\u8f86\u7684\u521d\u59cb\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f4d\u7f6e\u91c7\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u5750\u6807\u7cfb\uff0c\u539f\u70b9\u8bbe\u7f6e\u4e3a\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u4f4d\u7f6e\u3002\u65b9\u5411\u4ee5\u5ea6\u4e3a\u5355\u4f4d\u3002 IsFpvVehicle : \u6b64\u8bbe\u7f6e\u5141\u8bb8\u6307\u5b9a\u5f53 ViewMode \u8bbe\u7f6e\u4e3a FPV \u65f6\uff0c\u54ea\u4e2a\u8f66\u8f86\u6444\u50cf\u5934\u5c06\u8ddf\u968f\u54ea\u4e2a\u8f66\u8f86\u4ee5\u53ca\u663e\u793a\u7684\u89c6\u56fe\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u9009\u62e9\u8bbe\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8f66\u8f86\u4f5c\u4e3a FPV \u8f66\u8f86\u3002 Sensors : \u8be5\u5143\u7d20\u6307\u5b9a\u4e0e\u8f66\u8f86\u5173\u8054\u7684\u4f20\u611f\u5668\uff0c\u8be6\u60c5\u8bf7\u53c2\u9605 \u4f20\u611f\u5668\u9875\u9762 \u3002 Cameras : \u6b64\u5143\u7d20\u6307\u5b9a\u8f66\u8f86\u7684\u6444\u50cf\u5934\u8bbe\u7f6e\u3002\u6b64\u5143\u7d20\u7684\u952e\u662f \u53ef\u7528\u6444\u50cf\u5934 \u7684\u540d\u79f0\uff0c\u503c\u4e0e\u4e0a\u6587\u6240\u8ff0\u7684 CameraDefaults \u76f8\u540c\u3002\u4f8b\u5982\uff0c\u8981\u5c06\u524d\u4e2d\u592e\u6444\u50cf\u5934\u7684\u89c6\u91ce (FOV) \u66f4\u6539\u4e3a 120 \u5ea6\uff0c\u60a8\u53ef\u4ee5\u5728\u201c\u8f66\u8f86\u201d\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u6b64\u5143\u7d20\uff1a \"Vehicles\" : { \"FishEyeDrone\" : { \"VehicleType\" : \"SimpleFlight\" , \"Cameras\" : { \"front-center\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"FOV_Degrees\" : 120 } ] } } } } \u4f7f\u7528 PX4 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528 simple_flight \uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u5355\u72ec\u8fdb\u884c HITL \u6216 SITL \u8bbe\u7f6e\u3002\u6211\u4eec\u8fd8\u4e3a\u9ad8\u7ea7\u7528\u6237\u63d0\u4f9b \"PX4\" \u652f\u6301\u3002\u8981\u5c06 PX4 \u4e0e AirSim \u914d\u5408\u4f7f\u7528\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b Vehicles \u8bbe\u7f6e\uff1a \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", } } \u5176\u4ed6 PX4 \u8bbe\u7f6e # PX4 \u9ed8\u8ba4\u542f\u7528 \u786c\u4ef6\u5728\u73af \u8bbe\u7f6e\u3002PX4 \u8fd8\u6709\u5176\u4ed6\u5404\u79cd\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"Lockstep\": true, \"ControlIp\": \"127.0.0.1\", \"ControlPortLocal\": 14540, \"ControlPortRemote\": 14580, \"LogViewerHostIp\": \"127.0.0.1\", \"LogViewerPort\": 14388, \"OffboardCompID\": 1, \"OffboardSysID\": 134, \"QgcHostIp\": \"127.0.0.1\", \"QgcPort\": 14550, \"SerialBaudRate\": 115200, \"SerialPort\": \"*\", \"SimCompID\": 42, \"SimSysID\": 142, \"TcpPort\": 4560, \"UdpIp\": \"127.0.0.1\", \"UdpPort\": 14560, \"UseSerial\": true, \"UseTcp\": false, \"VehicleCompID\": 1, \"VehicleSysID\": 135, \"Model\": \"Generic\", \"LocalHostIp\": \"127.0.0.1\", \"Logs\": \"d:\\\\temp\\\\mavlink\", \"Sensors\": { ... } \"Parameters\": { ... } } } \u8fd9\u4e9b\u8bbe\u7f6e\u5b9a\u4e49\u4e86 MavLink \u6a21\u62df\u5668\u7684 SystemId \u548c ComponentId\uff08SimSysID\u3001SimCompID\uff09\u3001\u98de\u884c\u5668\uff08VehicleSysID\u3001VehicleCompID\uff09\u4ee5\u53ca\u5141\u8bb8\u4ece\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u8fdc\u7a0b\u63a7\u5236\u65e0\u4eba\u673a\u7684\u8282\u70b9\uff08\u79f0\u4e3a\u673a\u5916\u8282\u70b9\uff09\uff08OffboardSysID\u3001OffboardCompID\uff09\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u6a21\u62df\u5668\u4e5f\u80fd\u5c06 mavlink \u6d88\u606f\u8f6c\u53d1\u5230\u60a8\u7684\u5730\u9762\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\uff08\u4f8b\u5982 QGroundControl\uff09\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 UDP \u5730\u5740\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u673a\u5668\u4e0a\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\uff08QgcHostIp\u3001QgcPort\uff09\u3002\u9ed8\u8ba4\u5730\u5740\u4e3a\u672c\u5730\u4e3b\u673a\uff0c\u56e0\u6b64 QGroundControl \u5e94\u8be5\u201c\u4ec5\u5728\u201d\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u5373\u53ef\u6b63\u5e38\u5de5\u4f5c\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e UDP \u5730\u5740\uff08LogViewerHostIp\u3001LogViewerPort\uff09\u5c06\u6a21\u62df\u5668\u8fde\u63a5\u5230\u6b64 repo \u4e2d\u63d0\u4f9b\u7684 LogViewer \u5e94\u7528\u7a0b\u5e8f\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6dfb\u52a0\u5230\u6a21\u62df\u5668\u7684\u98de\u884c\u65e0\u4eba\u673a\uff0c\u90fd\u6709\u4e00\u4e2a\u547d\u540d\u7684\u9644\u52a0\u8bbe\u7f6e\u5757\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u540d\u79f0\u201cPX4\u201d\u3002\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6dfb\u52a0\u65b0\u7684 BP_FlyingPawn \u8d44\u6e90\u65f6\u66f4\u6539\u6b64\u540d\u79f0\u3002\u60a8\u5c06\u770b\u5230\u8fd9\u4e9b\u5c5e\u6027\u5206\u7ec4\u5728\u201cMavLink\u201d\u7c7b\u522b\u4e0b\u3002 \u6b64 Pawn \u7684 MavLink \u8282\u70b9\u53ef\u4ee5\u901a\u8fc7 UDP \u8fdc\u7a0b\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u672c\u5730\u4e32\u884c\u7aef\u53e3\u3002 \u5982\u679c\u662f\u4e32\u884c\u8fde\u63a5\uff0c\u5219\u5c06 UseSerial \u8bbe\u7f6e\u4e3a true\uff0c\u5426\u5219\u5c06 UseSerial \u8bbe\u7f6e\u4e3a false\u3002\u5bf9\u4e8e\u4e32\u884c\u8fde\u63a5\uff0c\u60a8\u8fd8\u9700\u8981\u8bbe\u7f6e\u9002\u5f53\u7684 SerialBaudRate\u3002\u9ed8\u8ba4\u503c 115200 \u9002\u7528\u4e8e Pixhawk 2 \u7248\u672c\uff0c \u901a\u8fc7 USB \u8fde\u63a5\u3002 \u901a\u8fc7\u4e32\u53e3\u4e0e PX4 \u65e0\u4eba\u673a\u901a\u4fe1\u65f6\uff0cHIL_* \u6d88\u606f\u548c\u98de\u884c\u5668\u63a7\u5236\u6d88\u606f\u5171\u4eab\u540c\u4e00\u4e32\u53e3\u3002\u901a\u8fc7 UDP \u6216 TCP \u901a\u4fe1\u65f6\uff0cPX4 \u9700\u8981\u4e24\u4e2a\u72ec\u7acb\u7684\u901a\u9053\u3002\u5982\u679c UseTcp \u4e3a false\uff0c\u5219\u4f7f\u7528 UdpIp \u548c UdpPort \u53d1\u9001 HIL_* \u6d88\u606f\uff0c\u5426\u5219\u4f7f\u7528 TcpPort\u3002PX4 \u5728 1.9.2 \u7248\u672c\u4e2d\u65b0\u589e\u4e86 TCP \u652f\u6301\uff0c\u5e76\u6dfb\u52a0\u4e86 lockstep \u529f\u80fd\uff0c\u56e0\u4e3a TCP \u63d0\u4f9b\u7684\u6d88\u606f\u4f20\u9012\u4fdd\u8bc1\u662f lockstep \u6b63\u5e38\u8fd0\u884c\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAirSim \u5c06\u6210\u4e3a TCP \u670d\u52a1\u5668\uff0c\u5e76\u7b49\u5f85\u6765\u81ea PX4 \u5e94\u7528\u7a0b\u5e8f\u7684\u8fde\u63a5\u3002\u7528\u4e8e\u63a7\u5236\u98de\u884c\u5668\u7684\u7b2c\u4e8c\u4e2a\u901a\u9053\u7531 (ControlIp, ControlPort) \u5b9a\u4e49\uff0c\u5e76\u4e14\u59cb\u7ec8\u4e3a UDP \u901a\u9053\u3002 \u4f20\u611f\u5668 Sensors \u90e8\u5206\u53ef\u4ee5\u4e3a\u6a21\u62df\u4f20\u611f\u5668\u63d0\u4f9b\u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff0c\u8bf7\u53c2\u9605 Sensors \u3002 Parameters \u90e8\u5206\u53ef\u4ee5\u5728 PX4 \u8fde\u63a5\u521d\u59cb\u5316\u671f\u95f4\u8bbe\u7f6e PX4 \u53c2\u6570\u3002\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e PX4 \u8f6f\u4ef6\u5728\u73af \u3002 \u4f7f\u7528 ArduPilot # ArduPilot \u76f4\u5347\u673a\u548c\u6f2b\u6e38\u8f66\u5728\u6700\u65b0\u7684 AirSim \u4e3b\u5206\u652f\u53ca\u7248\u672c v1.3.0 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\u5747\u53d7\u652f\u6301\u3002\u6709\u5173\u8bbe\u7f6e\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 ArduPilot SITL \u4e0e AirSim \u7684\u914d\u5408\u4f7f\u7528 \u3002 \u5176\u4ed6\u8bbe\u7f6e # EngineSound # \u8981\u5173\u95ed\u5f15\u64ce\u58f0\u97f3\uff0c\u8bf7\u4f7f\u7528 \u8bbe\u7f6e \"EngineSound\": false \u3002\u76ee\u524d\u6b64\u8bbe\u7f6e\u4ec5\u9002\u7528\u4e8e\u6c7d\u8f66\u3002 PawnPaths # \u8fd9\u5141\u8bb8\u60a8\u6307\u5b9a\u81ea\u5df1\u7684\u8f66\u8f86 pawn \u84dd\u56fe\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u8f66\u8f86\u66ff\u6362 AirSim \u4e2d\u7684\u9ed8\u8ba4\u8f66\u8f86\u3002\u60a8\u7684\u8f66\u8f86\u84dd\u56fe\u53ef\u4ee5\u4f4d\u4e8e\u60a8\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\u7684 Content \u6587\u4ef6\u5939\u4e2d\uff08\u5373 AirSim \u63d2\u4ef6\u6587\u4ef6\u5939\u4e4b\u5916\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u9879\u76ee\u4e2d\u6709\u4e00\u4e2a\u4f4d\u4e8e Content\\MyCar\\MySedanBP.uasset \u6587\u4ef6\u4e2d\u7684\u8f66\u8f86\u84dd\u56fe\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u8bbe\u7f6e \"DefaultCar\": {\"PawnBP\":\"Class'/Game/MyCar/MySedanBP.MySedanBP_C'\"} \u3002 XYZ.XYZ_C \u662f\u6307\u5b9a BP XYZ \u7c7b\u6240\u9700\u7684\u7279\u6b8a\u7b26\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u7684 BP \u5fc5\u987b\u884d\u751f\u81ea CarPawn \u7c7b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e76\u975e\u5982\u6b64\uff0c\u4f46\u60a8\u53ef\u4ee5\u5728\u6253\u5f00 BP \u540e\uff0c\u4f7f\u7528 UE \u7f16\u8f91\u5668\u5de5\u5177\u680f\u4e2d\u7684\u201c\u7c7b\u8bbe\u7f6e\u201d\u6309\u94ae\uff0c\u7136\u540e\u5728\u201c\u7c7b\u9009\u9879\u201d\u4e2d\u9009\u62e9\u201cCar Pawn\u201d\u4f5c\u4e3a\u7236\u7c7b\u8bbe\u7f6e\uff0c\u4ece\u800c\u91cd\u65b0\u8bbe\u7f6e BP \u7684\u7236\u7c7b\u3002\u5efa\u8bae\u7981\u7528\u201c\u81ea\u52a8\u9644\u8eab\u73a9\u5bb6\u201d\u548c\u201c\u81ea\u52a8\u9644\u8eabAI\u201d\uff0c\u5e76\u5728BP\u8be6\u60c5\u4e2d\u5c06AI\u63a7\u5236\u5668\u7c7b\u522b\u8bbe\u7f6e\u4e3a\u201c\u65e0\u201d\u3002\u5982\u679c\u60a8\u6b63\u5728\u521b\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u8d44\u6e90\u5df2\u5305\u542b\u5728\u6253\u5305\u9009\u9879\u4e2d\u4ee5\u4f9b\u70d8\u7119\u3002 PhysicsEngineName # \u5bf9\u4e8e\u6c7d\u8f66\uff0c\u6211\u4eec\u76ee\u524d\u4ec5\u652f\u6301 PhysX\uff08\u65e0\u8bba\u6b64\u8bbe\u7f6e\u4e2d\u7684\u503c\u5982\u4f55\uff09\u3002\u5bf9\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u6211\u4eec\u652f\u6301 \"FastPhysicsEngine\" \u548c \"ExternalPhysicsEngine\" \u3002 \"ExternalPhysicsEngine\" \u5141\u8bb8\u901a\u8fc7 setVehiclePose () \u63a7\u5236\u65e0\u4eba\u673a\uff0c\u4f7f\u65e0\u4eba\u673a\u4fdd\u6301\u539f\u4f4d\u76f4\u5230\u4e0b\u4e00\u6b21\u8c03\u7528\u3002\u8fd9\u5bf9\u4e8e\u4f7f\u7528\u5916\u90e8\u6a21\u62df\u5668\u6216\u6cbf\u5df2\u4fdd\u5b58\u7684\u8def\u5f84\u79fb\u52a8 AirSim \u65e0\u4eba\u673a\u5c24\u5176\u6709\u7528\u3002 LocalHostIp \u8bbe\u7f6e # \u73b0\u5728\uff0c\u5f53\u8fde\u63a5\u5230\u8fdc\u7a0b\u673a\u5668\u65f6\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u4ee5\u592a\u7f51\u9002\u914d\u5668\u6765\u8fde\u63a5\u8fd9\u4e9b\u673a\u5668\uff0c\u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u662f\u901a\u8fc7\u4ee5\u592a\u7f51\u3001Wi-Fi\u3001\u5176\u4ed6\u7279\u6b8a\u7684\u865a\u62df\u9002\u914d\u5668\u6216VPN\u3002\u60a8\u7684\u7535\u8111\u53ef\u80fd\u6709\u591a\u4e2a\u7f51\u7edc\uff0c\u800c\u8fd9\u4e9b\u7f51\u7edc\u53ef\u80fd\u4e0d\u5141\u8bb8\u76f8\u4e92\u901a\u4fe1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81ea\u4e00\u4e2a\u7f51\u7edc\u7684UDP\u6d88\u606f\u5c06\u65e0\u6cd5\u4f20\u9012\u5230\u5176\u4ed6\u7f51\u7edc\u3002 \u56e0\u6b64\uff0cLocalHostIp \u5141\u8bb8\u60a8\u914d\u7f6e\u5982\u4f55\u8bbf\u95ee\u8fd9\u4e9b\u673a\u5668\u3002\u9ed8\u8ba4\u503c 127.0.0.1 \u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u673a\u5668\uff0c \u4ec5\u5f53\u60a8\u8981\u901a\u4fe1\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5305\u542b\u5728\u4e00\u53f0 PC \u4e0a\u65f6\u624d\u4f7f\u7528\u6b64\u9ed8\u8ba4\u503c\u3002 ApiServerPort # \u6b64\u8bbe\u7f6e\u51b3\u5b9a\u4e86 airsim \u5ba2\u6237\u7aef\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 41451\u3002\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u73af\u5883\u4ee5\u52a0\u901f\u6570\u636e\u6536\u96c6\u8fc7\u7a0b\u3002 SpeedUnitFactor # \u4e0e\u201c\u7c73/\u79d2\u201d\u76f8\u5173\u7684\u901f\u5ea6\u5355\u4f4d\u6362\u7b97\u7cfb\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a 1\u3002\u4e0e SpeedUnitLabel \u7ed3\u5408\u4f7f\u7528\u3002\u8be5\u7cfb\u6570\u4ec5\u53ef\u7528\u4e8e\u663e\u793a\u76ee\u7684\uff0c\u4f8b\u5982\u5728\u6c7d\u8f66\u884c\u9a76\u65f6\u663e\u793a\u901f\u5ea6\u3002\u4f8b\u5982\uff0c\u8981\u83b7\u53d6 \u201c\u82f1\u91cc/\u5c0f\u65f6\u201d( miles/hr ) \u7684\u901f\u5ea6\uff0c\u8bf7\u4f7f\u7528\u7cfb\u6570 2.23694\u3002 SpeedUnitLabel # \u901f\u5ea6\u5355\u4f4d\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3a m/s \u3002\u4e0e SpeedUnitFactor \u914d\u5408\u4f7f\u7528\u3002","title":"\u8bbe\u7f6e"},{"location":"settings/#airsim","text":"","title":"AirSim \u8bbe\u7f6e"},{"location":"settings/#_1","text":"AirSim \u6b63\u5728\u6309\u4ee5\u4e0b\u987a\u5e8f\u641c\u7d22\u8bbe\u7f6e\u5b9a\u4e49\u3002\u5c06\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\uff1a \u67e5\u770b -settings \u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u7684\uff08\u7edd\u5bf9\uff09\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\uff1a AirSim.exe -settings=\"C:\\path\\to\\settings.json\" \u5728 Linux \u7cfb\u7edf\u4e2d\uff1a ./Blocks.sh -settings=\"/home/$USER/path/to/settings.json\" \u67e5\u627e\u901a\u8fc7 -settings \u53c2\u6570\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\u7684 JSON \u6587\u6863\u3002 \u4f8b\u5982\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\uff1a AirSim.exe -settings={\"foo\":\"bar\"} \u5728 Linux \u7cfb\u7edf\u4e2d\uff1a ./Blocks.sh -settings={\"foo\":\"bar\"} \u5728\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u540d\u4e3a settings.json \u7684\u6587\u4ef6\u3002 \u8fd9\u5c06\u662f\u7f16\u8f91\u5668\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b9e\u9645\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6df1\u5c42\u4f4d\u7f6e\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e Blocks \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u641c\u7d22\u7684\u4f4d\u7f6e\u662f <path-of-binary>/LinuxNoEditor/Blocks/Binaries/Linux/settings.json \u3002 \u5728 \u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u4e2d \u641c\u7d22 settings.json \u8fd9\u662f\u5305\u542b\u542f\u52a8\u811a\u672c\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u9876\u7ea7\u76ee\u5f55\u3002\u4f8b\u5982\uff0cLinux\uff1a <path-of-binary>/LinuxNoEditor/settings.json \uff0cWindows\uff1a <path-of-binary>/WindowsNoEditor/settings.json \u8bf7\u6ce8\u610f\uff0c\u6b64\u8def\u5f84\u4f1a\u6839\u636e\u8c03\u7528\u4f4d\u7f6e\u800c\u53d8\u5316\u3002\u5728 Linux \u4e0a\uff0c\u5982\u679c\u4ece LinuxNoEditor \u6587\u4ef6\u5939\u5185\u90e8\uff08\u4f8b\u5982 ./Blocks.sh \uff09\u6267\u884c Blocks.sh \u811a\u672c\uff0c\u5219\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u8def\u5f84\u3002\u4f46\u662f\uff0c\u5982\u679c\u4ece LinuxNoEditor \u6587\u4ef6\u5939\u5916\u90e8\uff08\u4f8b\u5982 ./LinuxNoEditor/Blocks.sh \uff09\u542f\u52a8\uff0c\u5219\u5c06\u4f7f\u7528 <path-of-binary>/settings.json \u3002 \u5728 AirSim \u5b50\u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u540d\u4e3a settings.json \u7684\u6587\u4ef6\u3002\u5728 Windows \u7cfb\u7edf\u4e2d\uff0cAirSim \u5b50\u6587\u4ef6\u5939\u4f4d\u4e8e Documents\\AirSim \uff1b\u5728 Linux \u7cfb\u7edf\u4e2d\uff0cAirSim \u5b50\u6587\u4ef6\u5939\u4f4d\u4e8e ~/Documents/AirSim \u3002 \u8be5\u6587\u4ef6\u91c7\u7528\u5e38\u89c1\u7684 json \u683c\u5f0f \u3002\u9996\u6b21\u542f\u52a8\u65f6\uff0cAirSim \u4f1a\u5728\u7528\u6237\u4e3b\u6587\u4ef6\u5939\u4e2d\u521b\u5efa settings.json \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4e0d\u5305\u542b\u4efb\u4f55\u8bbe\u7f6e\u3002\u4e3a\u907f\u514d\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528 ASCII \u683c\u5f0f\u4fdd\u5b58 json \u6587\u4ef6\u3002","title":"\u8bbe\u7f6e\u5b58\u50a8\u5728\u54ea\u91cc\uff1f"},{"location":"settings/#_2","text":"\u9ed8\u8ba4\u4f7f\u7528\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002\u8981\u4f7f\u7528\u6c7d\u8f66\uff0c\u53ea\u9700\u8bbe\u7f6e \"SimMode\": \"Car\" \uff0c\u5982\u4e0b\u6240\u793a\uff1a { \"SettingsVersion\": 1.2, \"SimMode\": \"Car\" } \u8981\u9009\u62e9\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u8bf7\u8bbe\u7f6e \"SimMode\": \"Multirotor\" \u3002\u5982\u679c\u60a8\u60f3\u63d0\u793a\u7528\u6237\u9009\u62e9\u98de\u884c\u5668\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528 \"SimMode\": \"\" \u3002","title":"\u5982\u4f55\u5728\u6c7d\u8f66\u548c\u591a\u65cb\u7ffc\u98de\u884c\u5668\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff1f"},{"location":"settings/#_3","text":"\u4ee5\u4e0b\u662f\u53ef\u7528\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c\u7684\u5b8c\u6574\u5217\u8868\u3002\u5982\u679c json \u6587\u4ef6\u4e2d\u7f3a\u5c11\u4efb\u4f55\u8bbe\u7f6e\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002\u67d0\u4e9b\u9ed8\u8ba4\u503c\u4ec5\u4ee5\u201c\"\"\u201d\u6307\u5b9a\uff0c\u8fd9\u610f\u5473\u7740\u5b9e\u9645\u503c\u53ef\u80fd\u6839\u636e\u60a8\u4f7f\u7528\u7684\u8f66\u8f86\u9009\u62e9\u3002\u4f8b\u5982\uff0c ViewMode \u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c\u4e3a \"\" \uff0c\u5bf9\u4e8e\u65e0\u4eba\u673a\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a \"FlyWithMe\" \uff0c\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a \"SpringArmChase\" \u3002 \u8b66\u544a\uff1a \u8bf7\u52ff\u5c06\u4ee5\u4e0b\u6240\u6709\u5185\u5bb9\u590d\u5236\u7c98\u8d34\u5230\u60a8\u7684 settings.json \u4e2d\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u4ec5\u6dfb\u52a0\u90a3\u4e9b\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u503c\u7684\u8bbe\u7f6e\u3002\u552f\u4e00\u5fc5\u9700\u7684\u5143\u7d20\u662f \"SettingsVersion\" \u3002 { \"SimMode\" : \"\" , \"ClockType\" : \"\" , \"ClockSpeed\" : 1 , \"LocalHostIp\" : \"127.0.0.1\" , \"ApiServerPort\" : 41451 , \"RecordUIVisible\" : true , \"LogMessagesVisible\" : true , \"ShowLosDebugLines\" : false , \"ViewMode\" : \"\" , \"RpcEnabled\" : true , \"EngineSound\" : true , \"PhysicsEngineName\" : \"\" , \"SpeedUnitFactor\" : 1.0 , \"SpeedUnitLabel\" : \"m/s\" , \"Wind\" : { \"X\" : 0 , \"Y\" : 0 , \"Z\" : 0 }, \"CameraDirector\" : { \"FollowDistance\" : -3 , \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"Recording\" : { \"RecordOnMove\" : false , \"RecordInterval\" : 0.05 , \"Folder\" : \"\" , \"Enabled\" : false , \"Cameras\" : [ { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"\" , \"Compress\" : true } ] }, \"CameraDefaults\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"Width\" : 256 , \"Height\" : 144 , \"FOV_Degrees\" : 90 , \"AutoExposureSpeed\" : 100 , \"AutoExposureBias\" : 0 , \"AutoExposureMaxBrightness\" : 0.64 , \"AutoExposureMinBrightness\" : 0.03 , \"MotionBlurAmount\" : 0 , \"TargetGamma\" : 1.0 , \"ProjectionMode\" : \"\" , \"OrthoWidth\" : 5.12 } ], \"NoiseSettings\" : [ { \"Enabled\" : false , \"ImageType\" : 0 , \"RandContrib\" : 0.2 , \"RandSpeed\" : 100000.0 , \"RandSize\" : 500.0 , \"RandDensity\" : 2 , \"HorzWaveContrib\" : 0.03 , \"HorzWaveStrength\" : 0.08 , \"HorzWaveVertSize\" : 1.0 , \"HorzWaveScreenSize\" : 1.0 , \"HorzNoiseLinesContrib\" : 1.0 , \"HorzNoiseLinesDensityY\" : 0.01 , \"HorzNoiseLinesDensityXY\" : 0.5 , \"HorzDistortionContrib\" : 1.0 , \"HorzDistortionStrength\" : 0.002 } ], \"Gimbal\" : { \"Stabilization\" : 0 , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN , \"UnrealEngine\" : { \"PixelFormatOverride\" : [ { \"ImageType\" : 0 , \"PixelFormat\" : 0 } ] } }, \"OriginGeopoint\" : { \"Latitude\" : 47.641468 , \"Longitude\" : -122.140165 , \"Altitude\" : 122 }, \"TimeOfDay\" : { \"Enabled\" : false , \"StartDateTime\" : \"\" , \"CelestialClockSpeed\" : 1 , \"StartDateTimeDst\" : false , \"UpdateIntervalSecs\" : 60 }, \"SubWindows\" : [ { \"WindowID\" : 0 , \"CameraName\" : \"0\" , \"ImageType\" : 3 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false }, { \"WindowID\" : 1 , \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false }, { \"WindowID\" : 2 , \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"VehicleName\" : \"\" , \"Visible\" : false , \"External\" : false } ], \"SegmentationSettings\" : { \"InitMethod\" : \"\" , \"MeshNamingMethod\" : \"\" , \"OverrideExisting\" : true }, \"PawnPaths\" : { \"BareboneCar\" : { \"PawnBP\" : \"Class'/AirSim/VehicleAdv/Vehicle/VehicleAdvPawn.VehicleAdvPawn_C'\" }, \"DefaultCar\" : { \"PawnBP\" : \"Class'/AirSim/VehicleAdv/SUV/SuvCarPawn.SuvCarPawn_C'\" }, \"DefaultQuadrotor\" : { \"PawnBP\" : \"Class'/AirSim/Blueprints/BP_FlyingPawn.BP_FlyingPawn_C'\" }, \"DefaultComputerVision\" : { \"PawnBP\" : \"Class'/AirSim/Blueprints/BP_ComputerVisionPawn.BP_ComputerVisionPawn_C'\" } }, \"Vehicles\" : { \"SimpleFlight\" : { \"VehicleType\" : \"SimpleFlight\" , \"DefaultVehicleState\" : \"Armed\" , \"AutoCreate\" : true , \"PawnPath\" : \"\" , \"EnableCollisionPassthrogh\" : false , \"EnableCollisions\" : true , \"AllowAPIAlways\" : true , \"EnableTrace\" : false , \"RC\" : { \"RemoteControlID\" : 0 , \"AllowAPIWhenDisconnected\" : false }, \"Cameras\" : { //same elements as CameraDefaults above, key as name }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN }, \"PhysXCar\" : { \"VehicleType\" : \"PhysXCar\" , \"DefaultVehicleState\" : \"\" , \"AutoCreate\" : true , \"PawnPath\" : \"\" , \"EnableCollisionPassthrogh\" : false , \"EnableCollisions\" : true , \"RC\" : { \"RemoteControlID\" : -1 }, \"Cameras\" : { \"MyCamera1\" : { //same elements as elements inside CameraDefaults above }, \"MyCamera2\" : { //same elements as elements inside CameraDefaults above }, }, \"X\" : NaN , \"Y\" : NaN , \"Z\" : NaN , \"Pitch\" : NaN , \"Roll\" : NaN , \"Yaw\" : NaN } }, \"ExternalCameras\" : { \"FixedCamera1\" : { // same elements as in CameraDefaults above }, \"FixedCamera2\" : { // same elements as in CameraDefaults above } } }","title":"\u53ef\u7528\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c"},{"location":"settings/#simmode","text":"SimMode \u51b3\u5b9a\u4f7f\u7528\u54ea\u79cd\u6a21\u62df\u6a21\u5f0f\u3002\u4ee5\u4e0b\u662f\u5f53\u524d\u652f\u6301\u7684\u503c\uff1a - \"\" : \u63d0\u793a\u7528\u6237\u9009\u62e9\u98de\u884c\u5668\u7c7b\u578b\uff1a\u591a\u65cb\u7ffc\u98de\u884c\u5668\u6216\u6c7d\u8f66 - \"Multirotor\" : \u4f7f\u7528\u591a\u65cb\u7ffc\u98de\u884c\u5668\u6a21\u62df - \"Car\" : \u4f7f\u7528\u6c7d\u8f66\u6a21\u62df - \"ComputerVision\" : \u4ec5\u4f7f\u7528\u6444\u50cf\u5934\uff0c\u4e0d\u4f7f\u7528\u98de\u884c\u5668\u6216\u7269\u7406\u7cfb\u7edf","title":"SimMode"},{"location":"settings/#viewmode","text":"ViewMode \u51b3\u5b9a\u4e86\u9ed8\u8ba4\u4f7f\u7528\u54ea\u4e2a\u6444\u50cf\u5934\u4ee5\u53ca\u6444\u50cf\u5934\u5982\u4f55\u8ddf\u968f\u98de\u884c\u5668\u3002\u5bf9\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u9ed8\u8ba4 ViewMode \u4e3a \"FlyWithMe\" \uff0c\u800c\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u9ed8\u8ba4 ViewMode \u4e3a \"SpringArmChase\" \u3002 FlyWithMe : \u4ee5 6 \u4e2a\u81ea\u7531\u5ea6\u4ece\u540e\u9762\u8ffd\u8d76\u8f66\u8f86 GroundObserver : \u4ece\u8ddd\u5730\u9762 6 \u82f1\u5c3a\u7684\u9ad8\u5ea6\u8ffd\u9010\u8f66\u8f86\uff0c\u4f46\u5728 XY \u5e73\u9762\u4e0a\u5177\u6709\u5b8c\u5168\u7684\u81ea\u7531\u3002 Fpv : \u4ece\u8f66\u8f86\u524d\u7f6e\u6444\u50cf\u5934\u67e5\u770b\u573a\u666f Manual : \u4e0d\u81ea\u52a8\u79fb\u52a8\u6444\u50cf\u5934\u3002\u4f7f\u7528\u7bad\u5934\u952e\u548c ASWD \u952e\u624b\u52a8\u79fb\u52a8\u6444\u50cf\u5934\u3002 SpringArmChase : \u4f7f\u7528\u5b89\u88c5\u5728\uff08\u9690\u5f62\uff09\u81c2\u4e0a\u7684\u6444\u50cf\u5934\u8ffd\u9010\u8f66\u8f86\uff0c\u8be5\u81c2\u901a\u8fc7\u5f39\u7c27\u8fde\u63a5\u5230\u8f66\u8f86\u4e0a\uff08\u56e0\u6b64\u5728\u8fd0\u52a8\u4e2d\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\uff09\u3002 NoDisplay : \u8fd9\u5c06\u51bb\u7ed3\u4e3b\u5c4f\u5e55\u7684\u6e32\u67d3\uff0c\u4f46\u5b50\u7a97\u53e3\u3001\u5f55\u5236\u548c API \u7684\u6e32\u67d3\u4ecd\u7136\u6709\u6548\u3002\u6b64\u6a21\u5f0f\u6709\u52a9\u4e8e\u5728\u201c\u65e0\u5934\u201d\u6a21\u5f0f\u4e0b\u8282\u7701\u8d44\u6e90\uff0c\u56e0\u4e3a\u5728\u201c\u65e0\u5934\u201d\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ea\u9700\u83b7\u53d6\u56fe\u50cf\uff0c\u800c\u4e0d\u5173\u5fc3\u4e3b\u5c4f\u5e55\u4e0a\u6e32\u67d3\u7684\u5185\u5bb9\u3002\u8fd9\u4e5f\u53ef\u80fd\u63d0\u9ad8\u5f55\u5236\u56fe\u50cf\u7684 FPS\u3002","title":"ViewMode"},{"location":"settings/#timeofday","text":"\u6b64\u8bbe\u7f6e\u63a7\u5236\u73af\u5883\u4e2d\u592a\u9633\u7684\u4f4d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Enabled \u4e3a false\uff0c\u8fd9\u610f\u5473\u7740\u592a\u9633\u7684\u4f4d\u7f6e\u5c06\u4fdd\u7559\u5728\u73af\u5883\u4e2d\u7684\u9ed8\u8ba4\u4f4d\u7f6e\uff0c\u5e76\u4e14\u4e0d\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\u3002\u5982\u679c Enabled \u4e3a true\uff0c\u5219\u4f7f\u7528 OriginGeopoint \u90e8\u5206\u4e2d\u6307\u5b9a\u7684\u7ecf\u5ea6\u3001\u7eac\u5ea6\u548c\u9ad8\u5ea6\uff0c\u9488\u5bf9 StartDateTime \u4e2d\u6307\u5b9a\u7684\u65e5\u671f\uff08\u5b57\u7b26\u4e32\u683c\u5f0f\u4e3a %Y-%m-%d %H:%M:%S \uff09\u8ba1\u7b97\u592a\u9633\u4f4d\u7f6e\uff0c\u4f8b\u5982 2018-02-12 15:20:00 \u3002\u5982\u679c\u6b64\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c StartDateTimeDst \u4e3a true\uff0c\u5219\u6211\u4eec\u4f1a\u8c03\u6574\u590f\u4ee4\u65f6\u3002\u7136\u540e\uff0c\u592a\u9633\u7684\u4f4d\u7f6e\u5c06\u6309\u7167 UpdateIntervalSecs \u4e2d\u6307\u5b9a\u7684\u95f4\u9694\u6301\u7eed\u66f4\u65b0\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5e0c\u671b\u5929\u4f53\u65f6\u949f\u8fd0\u884c\u5f97\u6bd4\u6a21\u62df\u65f6\u949f\u66f4\u5feb\u6216\u66f4\u6162\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 CelestialClockSpeed \u6765\u6307\u5b9a\uff0c\u4f8b\u5982\uff0c\u503c 100 \u8868\u793a\u6a21\u62df\u65f6\u949f\u6bcf 1 \u79d2\uff0c\u592a\u9633\u7684\u4f4d\u7f6e\u5c31\u4f1a\u524d\u8fdb 100 \u79d2\uff0c\u56e0\u6b64\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u79fb\u52a8\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002 \u53e6\u8bf7\u53c2\u9605 \u65f6\u95f4 API \u3002","title":"TimeOfDay"},{"location":"settings/#origingeopoint","text":"\u6b64\u8bbe\u7f6e\u6307\u5b9a\u653e\u7f6e\u5728\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u70b9\u7ec4\u4ef6\u7684\u7eac\u5ea6\u3001\u7ecf\u5ea6\u548c\u6d77\u62d4\u9ad8\u5ea6\u3002\u98de\u884c\u5668\u7684\u8d77\u59cb\u70b9\u4f7f\u7528\u6b64\u53d8\u6362\u8ba1\u7b97\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u901a\u8fc7 API \u516c\u5f00\u7684\u5750\u6807\u5747\u4f7f\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u8f86\u8f66\u7684\u8d77\u59cb\u70b9\u5728 NED \u7cfb\u7edf\u4e2d\u4e3a (0, 0, 0)\u3002\u65f6\u95f4\u8bbe\u7f6e\u662f\u6839\u636e OriginGeopoint \u4e2d\u6307\u5b9a\u7684\u5730\u7406\u5750\u6807\u8ba1\u7b97\u7684\u3002","title":"OriginGeopoint"},{"location":"settings/#subwindows","text":"\u6b64\u8bbe\u7f6e\u51b3\u5b9a\u4e86\u6309\u4e0b 1\u30012\u30013 \u952e\u65f6\u53ef\u89c1\u7684 3 \u4e2a\u5b50\u7a97\u53e3\u4e2d\u5206\u522b\u663e\u793a\u7684\u5185\u5bb9\u3002 WindowID : \u53ef\u4ee5\u662f 0 \u5230 2 CameraName : \u8f66\u8f86\u4e0a\u662f\u5426\u6709\u4efb\u4f55 \u53ef\u7528\u6444\u50cf\u5934 \u6216\u5916\u90e8\u6444\u50cf\u5934 ImageType : \u6574\u6570\u503c\u6839\u636e ImageType \u679a\u4e3e \u51b3\u5b9a\u663e\u793a\u54ea\u79cd\u7c7b\u578b\u7684\u56fe\u50cf\u3002 VehicleName : \u6b64\u5b57\u7b26\u4e32\u7528\u4e8e\u6307\u5b9a\u8981\u4f7f\u7528\u6444\u50cf\u5934\u7684\u8f66\u8f86\uff0c\u5f53\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u4e86\u591a\u8f86\u8f66\u8f86\u65f6\u4f7f\u7528\u3002\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u4f8b\u5982\u8f66\u8f86\u540d\u79f0\u9519\u8bef\u6216\u53ea\u6709\u4e00\u8f86\u8f66\uff0c\u5219\u5c06\u4f7f\u7528\u7b2c\u4e00\u8f86\u8f66\u7684\u6444\u50cf\u5934\u3002 External : \u5982\u679c\u6444\u50cf\u5934\u662f\u5916\u7f6e\u6444\u50cf\u5934\uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a true \u3002\u5982\u679c\u4e3a true\uff0c\u5219 VehicleName \u53c2\u6570\u5c06\u88ab\u5ffd\u7565 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u5355\u8f86\u6c7d\u8f66\uff0c\u4e0b\u9762\u5206\u522b\u663e\u793a\u9a7e\u9a76\u5458\u89c6\u56fe\u3001\u524d\u4fdd\u9669\u6760\u89c6\u56fe\u548c\u540e\u89c6\u56fe\u4f5c\u4e3a\u573a\u666f\u3001\u6df1\u5ea6\u548c\u8868\u9762\u6cd5\u7ebf\u3002 \"SubWindows\" : [ { \"WindowID\" : 0 , \"ImageType\" : 0 , \"CameraName\" : \"3\" , \"Visible\" : true }, { \"WindowID\" : 1 , \"ImageType\" : 3 , \"CameraName\" : \"0\" , \"Visible\" : true }, { \"WindowID\" : 2 , \"ImageType\" : 6 , \"CameraName\" : \"4\" , \"Visible\" : true } ] \u5982\u679c\u6709\u591a\u8f86\u8f66\u8f86\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u6307\u5b9a\u4e0d\u540c\u7684\u8f66\u8f86\uff1a \"SubWindows\" : [ { \"WindowID\" : 0 , \"CameraName\" : \"0\" , \"ImageType\" : 3 , \"VehicleName\" : \"Car1\" , \"Visible\" : false }, { \"WindowID\" : 1 , \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"VehicleName\" : \"Car2\" , \"Visible\" : false }, { \"WindowID\" : 2 , \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"VehicleName\" : \"Car1\" , \"Visible\" : false } ]","title":"SubWindows"},{"location":"settings/#_4","text":"\u8bb0\u5f55\u529f\u80fd\u5141\u8bb8\u60a8\u4ee5\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u8bb0\u5f55\u4f4d\u7f6e\u3001\u65b9\u5411\u3001\u901f\u5ea6\u7b49\u6570\u636e\u4ee5\u53ca\u6355\u83b7\u7684\u56fe\u50cf\u3002\u60a8\u53ef\u4ee5\u6309\u4e0b\u53f3\u4e0b\u89d2\u7684\u7ea2\u8272\u5f55\u5236\u6309\u94ae\u6216 R \u952e\u5f00\u59cb\u5f55\u5236\u3002\u6570\u636e\u5b58\u50a8\u5728 Documents\\AirSim \u6587\u4ef6\u5939\uff08\u6216\u4f7f\u7528 Folder \u6307\u5b9a\u7684\u6587\u4ef6\u5939\uff09\u4e2d\uff0c\u6bcf\u4e2a\u5f55\u5236\u4f1a\u8bdd\u90fd\u4f1a\u6709\u4e00\u4e2a\u5e26\u6709\u65f6\u95f4\u6233\u7684\u5b50\u6587\u4ef6\u5939\uff0c\u5e76\u4ee5\u5236\u8868\u7b26\u5206\u9694\u7684\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\u3002 RecordInterval : \u6307\u5b9a\u6355\u83b7\u4e24\u5e45\u56fe\u50cf\u4e4b\u95f4\u7684\u6700\u5c0f\u95f4\u9694\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 RecordOnMove : \u6307\u5b9a\u5982\u679c\u8f66\u8f86\u7684\u4f4d\u7f6e\u6216\u65b9\u5411\u6ca1\u6709\u6539\u53d8\u5219\u4e0d\u8bb0\u5f55\u5e27\u3002 Folder : \u7236\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u521b\u5efa\u5305\u542b\u65f6\u95f4\u6233\u7684\u8bb0\u5f55\u5b50\u6587\u4ef6\u5939\u3002\u5fc5\u987b\u6307\u5b9a\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u5c06\u4f7f\u7528 Documents/AirSim \u6587\u4ef6\u5939\u3002\u4f8b\u5982\uff1a \"Folder\": \"/home/<user>/Documents\" Enabled : \u8bb0\u5f55\u662f\u5426\u4ece\u5934\u5f00\u59cb\uff0c\u8bbe\u7f6e\u4e3a true \u8868\u793a\u6a21\u62df\u5f00\u59cb\u65f6\u81ea\u52a8\u5f00\u59cb\u8bb0\u5f55\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a false Cameras : \u6b64\u5143\u7d20\u63a7\u5236\u4f7f\u7528\u54ea\u4e9b\u6444\u50cf\u5934\u91c7\u96c6\u56fe\u50cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6444\u50cf\u5934 0 \u7684\u573a\u666f\u56fe\u50cf\u4f1a\u88ab\u8bb0\u5f55\u4e3a\u538b\u7f29\u7684 png \u683c\u5f0f\u3002\u6b64\u8bbe\u7f6e\u662f\u4e00\u4e2a JSON \u6570\u7ec4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u6444\u50cf\u5934\u91c7\u96c6\u56fe\u50cf\uff0c\u6bcf\u4e2a\u6444\u50cf\u5934\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684 \u56fe\u50cf\u7c7b\u578b \u3002 \u5f53 PixelsAsFloat \u4e3a\u771f\u65f6\uff0c\u56fe\u50cf\u5c06\u4fdd\u5b58\u4e3a pfm \u6587\u4ef6\u800c\u4e0d\u662f png \u6587\u4ef6\u3002 VehicleName \u9009\u9879\u5141\u8bb8\u60a8\u4e3a\u6bcf\u8f86\u8f66\u6307\u5b9a\u5355\u72ec\u7684\u6444\u50cf\u5934\u3002\u5982\u679c\u4e0d\u5b58\u5728 Cameras \u5143\u7d20\uff0c\u5219\u5c06\u8bb0\u5f55\u6bcf\u8f86\u8f66\u9ed8\u8ba4\u6444\u50cf\u5934\u7684 Scene \u56fe\u50cf\u3002 \u5982\u679c\u60a8\u4e0d\u60f3\u8bb0\u5f55\u4efb\u4f55\u56fe\u50cf\u800c\u53ea\u60f3\u8bb0\u5f55\u8f66\u8f86\u7684\u7269\u7406\u6570\u636e\uff0c\u8bf7\u6307\u5b9a Cameras \u5143\u7d20\u4f46\u5c06\u5176\u7559\u7a7a\uff0c\u5982\u4e0b\u6240\u793a\uff1a \"Cameras\": [] \u76ee\u524d\u4e0d\u652f\u6301\u5916\u63a5\u6444\u50cf\u5934\u8bb0\u5f55 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684 Cameras \u5143\u7d20\u8bb0\u5f55\u4e86 Car1 \u7684\u573a\u666f\u548c\u5206\u5272\u56fe\u50cf\u4ee5\u53ca Car2 \u7684\u573a\u666f\uff1a \"Cameras\" : [ { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car1\" , \"Compress\" : true }, { \"CameraName\" : \"0\" , \"ImageType\" : 5 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car1\" , \"Compress\" : true }, { \"CameraName\" : \"0\" , \"ImageType\" : 0 , \"PixelsAsFloat\" : false , \"VehicleName\" : \"Car2\" , \"Compress\" : true } ] \u67e5\u770b\u4fee\u6539\u8bb0\u5f55\u6570\u636e\u6765\u4e86\u89e3\u5982\u4f55 \u4fee\u6539\u6b63\u5728\u8bb0\u5f55\u7684 \u8fd0\u52a8\u5b66\u6570\u636e\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u8bb0\u5f55"},{"location":"settings/#clockspeed","text":"\u6b64\u8bbe\u7f6e\u5141\u8bb8\u60a8\u8bbe\u7f6e\u6a21\u62df\u65f6\u949f\u76f8\u5bf9\u4e8e\u6302\u949f\u7684\u901f\u5ea6\u3002\u4f8b\u5982\uff0c\u503c\u4e3a 5.0 \u8868\u793a\u5f53\u6302\u949f\u5df2\u8fc7\u53bb 1 \u79d2\u65f6\uff0c\u6a21\u62df\u65f6\u949f\u5df2\u8fc7\u53bb 5 \u79d2\uff08\u5373\u6a21\u62df\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\uff09\u3002\u503c\u4e3a 0.1 \u8868\u793a\u6a21\u62df\u65f6\u949f\u6bd4\u6302\u949f\u6162 10 \u500d\u3002\u503c\u4e3a 1 \u8868\u793a\u6a21\u62df\u5b9e\u65f6\u8fd0\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6a21\u62df\u65f6\u949f\u8fd0\u884c\u901f\u5ea6\u8d8a\u5feb\uff0c\u6a21\u62df\u8d28\u91cf\u53ef\u80fd\u4f1a\u4e0b\u964d\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4f2a\u5f71\uff0c\u4f8b\u5982\u7269\u4f53\u8d8a\u8fc7\u969c\u788d\u7269\uff0c\u56e0\u4e3a\u672a\u68c0\u6d4b\u5230\u78b0\u649e\u3002\u4f46\u662f\uff0c\u964d\u4f4e\u6a21\u62df\u65f6\u949f\u901f\u5ea6\uff08\u5373\u503c\u5c0f\u4e8e 1.0\uff09\u901a\u5e38\u53ef\u4ee5\u63d0\u9ad8\u6a21\u62df\u8d28\u91cf\u3002","title":"ClockSpeed"},{"location":"settings/#_5","text":"InitMethod \u51b3\u5b9a\u4e86\u542f\u52a8\u65f6\u5982\u4f55\u521d\u59cb\u5316\u5bf9\u8c61 ID \u4ee5\u751f\u6210 \u5206\u5272 \u3002\u503c\u4e3a \"\" \u6216 \"CommonObjectsRandomIDs\"\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u793a\u5728\u542f\u52a8\u65f6\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u968f\u673a ID\u3002\u8fd9\u5c06\u751f\u6210\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u968f\u673a\u989c\u8272\u7684\u5206\u5272\u89c6\u56fe\u3002\u503c\u4e3a \"None\" \u8868\u793a\u4e0d\u521d\u59cb\u5316\u5bf9\u8c61 ID\u3002\u8fd9\u5c06\u5bfc\u81f4\u5206\u5272\u89c6\u56fe\u5448\u73b0\u5355\u4e00\u7eaf\u8272\u3002\u5982\u679c\u60a8\u8ba1\u5212\u4f7f\u7528 API \u8bbe\u7f6e\u5bf9\u8c61 ID\uff0c\u6b64\u6a21\u5f0f\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u50cf CityEnviron \u8fd9\u6837\u7684\u5927\u578b\u73af\u5883\u4e2d\u8282\u7701\u542f\u52a8\u65f6\u7684\u5927\u91cf\u5ef6\u8fdf\u3002 \u5982\u679c OverrideExisting \u4e3a\u5047\uff0c\u5219\u521d\u59cb\u5316\u4e0d\u4f1a\u6539\u53d8\u5df2\u7ecf\u5206\u914d\u7684\u975e\u96f6\u5bf9\u8c61 ID\uff0c\u5426\u5219\u4f1a\u6539\u53d8\u3002 \u5982\u679c MeshNamingMethod \u4e3a\u201c\u201d\u6216\u201cOwnerName\u201d\uff0c\u5219\u6211\u4eec\u4f7f\u7528\u7f51\u683c\u7684\u6240\u6709\u8005\u540d\u79f0\u751f\u6210\u968f\u673a\u54c8\u5e0c\u503c\u4f5c\u4e3a\u5bf9\u8c61ID\u3002\u5982\u679c\u4e3a\u201cStaticMeshName\u201d\uff0c\u5219\u6211\u4eec\u4f7f\u7528\u9759\u6001\u7f51\u683c\u7684\u540d\u79f0\u751f\u6210\u968f\u673a\u54c8\u5e0c\u503c\u4f5c\u4e3a\u5bf9\u8c61ID\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u533a\u5206\u540c\u4e00\u4e2a\u9759\u6001\u7f51\u683c\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f46\u540d\u79f0\u901a\u5e38\u66f4\u76f4\u89c2\u3002","title":"\u5206\u5272\u8bbe\u7f6e"},{"location":"settings/#_6","text":"\u6b64\u8bbe\u7f6e\u6307\u5b9a\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u5317\u7eac\u65b9\u5411\u7684\u98ce\u901f\u3002\u503c\u4ee5\u7c73/\u79d2\u4e3a\u5355\u4f4d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u901f\u5ea6\u4e3a 0\uff0c\u5373\u65e0\u98ce\u3002","title":"\u98ce\u7684\u8bbe\u7f6e"},{"location":"settings/#camera-director","text":"\u6b64\u5143\u7d20\u6307\u5b9a\u7528\u4e8e\u5728 ViewPort \u4e2d\u8ddf\u968f\u8f66\u8f86\u7684\u6444\u50cf\u673a\u7684\u8bbe\u7f6e\u3002 FollowDistance : \u6444\u50cf\u5934\u8ddf\u968f\u8f66\u8f86\u7684\u8ddd\u79bb\uff0c\u6c7d\u8f66\u9ed8\u8ba4\u4e3a-8\uff088\u7c73\uff09\uff0c\u5176\u4ed6\u9ed8\u8ba4\u4e3a-3\u3002 X, Y, Z, Yaw, Roll, Pitch : \u8fd9\u4e9b\u5143\u7d20\u5141\u8bb8\u60a8\u6307\u5b9a\u6444\u50cf\u673a\u76f8\u5bf9\u4e8e\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f4d\u7f6e\u91c7\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u5750\u6807\u7cfb\uff0c\u539f\u70b9\u8bbe\u7f6e\u4e3a\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u4f4d\u7f6e\u3002\u65b9\u5411\u4ee5\u5ea6\u4e3a\u5355\u4f4d\u3002","title":"Camera Director \u8bbe\u7f6e"},{"location":"settings/#_7","text":"\u6839\u7ea7\u522b\u7684 CameraDefaults \u5143\u7d20\u6307\u5b9a\u6240\u6709\u6444\u50cf\u5934\u7684\u9ed8\u8ba4\u503c\u3002\u8fd9\u4e9b\u9ed8\u8ba4\u503c\u53ef\u4ee5\u5728\u201cVehicles\u201d\u7c7b\u4e2d\u7684 Cameras \u5143\u7d20\u4e2d\u4e3a\u5355\u4e2a\u6444\u50cf\u5934\u8986\u76d6\uff0c\u5177\u4f53\u65b9\u6cd5\u8bf7\u89c1\u540e\u6587\u3002","title":"\u76f8\u673a\u8bbe\u7f6e"},{"location":"settings/#imagetype","text":"JSON \u6570\u7ec4\u4e2d\u7684 ImageType \u5143\u7d20\u51b3\u5b9a\u4e86\u8bbe\u7f6e\u5e94\u7528\u4e8e\u54ea\u79cd\u56fe\u50cf\u7c7b\u578b\u3002\u6709\u6548\u503c\u5728 ImageType \u90e8\u5206 \u4e2d\u8fdb\u884c\u4e86\u8bf4\u660e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u652f\u6301\u7279\u6b8a\u503c ImageType: -1 \uff0c\u7528\u4e8e\u5c06\u8bbe\u7f6e\u5e94\u7528\u4e8e\u5916\u90e8\u6444\u50cf\u5934\uff08\u5373\u60a8\u6b63\u5728\u5c4f\u5e55\u4e0a\u67e5\u770b\u7684\u5185\u5bb9\uff09\u3002 \u4f8b\u5982\uff0c CaptureSettings \u5143\u7d20\u662f json \u6570\u7ec4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u591a\u79cd\u56fe\u50cf\u7c7b\u578b\u7684\u8bbe\u7f6e\u3002","title":"\u5173\u4e8e ImageType \u5143\u7d20\u7684\u6ce8\u91ca"},{"location":"settings/#capturesettings","text":"CaptureSettings \u51b3\u5b9a\u4e86\u4e0d\u540c\u56fe\u50cf\u7c7b\u578b\uff08\u4f8b\u5982\u573a\u666f\u3001\u6df1\u5ea6\u3001\u89c6\u5dee\u3001\u8868\u9762\u6cd5\u7ebf\u548c\u5206\u5272\u89c6\u56fe\uff09\u7684\u6e32\u67d3\u65b9\u5f0f\u3002\u201cWidth\u201d\u3001\u201cHeight\u201d \u548c \u201cFOV\u201d \u7684\u8bbe\u7f6e\u542b\u4e49\u4e0d\u8a00\u81ea\u660e\u3002\u201cAutoExposureSpeed\u201d \u51b3\u5b9a\u4e86\u4eba\u773c\u9002\u5e94\u7684\u901f\u5ea6\u3002\u6211\u4eec\u901a\u5e38\u5c06\u5176\u8bbe\u7f6e\u4e3a\u8f83\u9ad8\u7684\u503c\uff08\u4f8b\u5982 100\uff09\uff0c\u4ee5\u907f\u514d\u56fe\u50cf\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4f2a\u5f71\u3002\u540c\u6837\uff0c\u6211\u4eec\u9ed8\u8ba4\u5c06\u201cMotionBlurAmount\u201d\u8bbe\u7f6e\u4e3a 0\uff0c\u4ee5\u907f\u514d\u5730\u9762\u5b9e\u51b5\u56fe\u50cf\u4e2d\u51fa\u73b0\u4f2a\u5f71\u3002 ProjectionMode \u51b3\u5b9a\u4e86\u91c7\u96c6\u76f8\u673a\u4f7f\u7528\u7684\u6295\u5f71\u65b9\u5f0f\uff0c\u53ef\u4ee5\u91c7\u7528\u201cperspective\u201d\uff08\u9ed8\u8ba4\uff09\u6216\u201corthographic\u201d\u503c\u3002\u5982\u679c\u6295\u5f71\u6a21\u5f0f\u4e3a\u201corthographic\u201d\uff0c\u5219 OrthoWidth \u51b3\u5b9a\u4e86\u91c7\u96c6\u6295\u5f71\u533a\u57df\u7684\u5bbd\u5ea6\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 \u6709\u5173\u5176\u4ed6\u8bbe\u7f6e\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 \u672c\u6587 \u3002","title":"CaptureSettings"},{"location":"settings/#noisesettings","text":"\u201c\u566a\u58f0\u8bbe\u7f6e ( NoiseSettings )\u201d \u5141\u8bb8\u4e3a\u6307\u5b9a\u7c7b\u578b\u7684\u56fe\u50cf\u6dfb\u52a0\u566a\u58f0\uff0c\u4ee5\u6a21\u62df\u76f8\u673a\u4f20\u611f\u5668\u566a\u58f0\u3001\u5e72\u6270\u548c\u5176\u4ed6\u4f2a\u5f71\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u6dfb\u52a0\u566a\u58f0\uff0c\u5373 Enabled: false \u3002\u5982\u679c\u8bbe\u7f6e\u4e3a Enabled: true \uff0c\u5219\u4f1a\u542f\u7528\u4ee5\u4e0b\u4e0d\u540c\u7c7b\u578b\u7684\u566a\u58f0\u548c\u5e72\u6270\u4f2a\u5f71\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8fdb\u4e00\u6b65\u8c03\u6574\u3002\u566a\u58f0\u6548\u679c\u901a\u8fc7\u7740\u8272\u5668\u5b9e\u73b0\uff0c\u8be5\u7740\u8272\u5668\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u4f5c\u4e3a\u540e\u671f\u5904\u7406\u6750\u8d28\u521b\u5efa\uff0c\u540d\u4e3a CameraSensorNoise \u3002 \u76f8\u673a\u566a\u58f0\u548c\u5e72\u6270\u6a21\u62df\u6f14\u793a\uff1a","title":"NoiseSettings"},{"location":"settings/#_8","text":"\u8fd9\u5c06\u6dfb\u52a0\u5177\u6709\u4ee5\u4e0b\u53c2\u6570\u7684\u968f\u673a\u566a\u58f0\u6591\u70b9\u3002 * RandContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * RandSpeed : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u6ce2\u52a8\u7684\u901f\u5ea6\uff0c1 \u8868\u793a\u6ca1\u6709\u6ce2\u52a8\uff0c\u800c\u66f4\u9ad8\u7684\u503c\uff08\u5982 1E6\uff09\u8868\u793a\u5b8c\u5168\u6ce2\u52a8\u3002 * RandSize : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u7684\u7c97\u7565\u7a0b\u5ea6\uff0c1 \u8868\u793a\u6bcf\u4e2a\u50cf\u7d20\u90fd\u6709\u81ea\u5df1\u7684\u566a\u58f0\uff0c\u800c\u66f4\u9ad8\u7684\u503c\u8868\u793a\u8d85\u8fc7 1 \u4e2a\u50cf\u7d20\u5171\u4eab\u76f8\u540c\u7684\u566a\u58f0\u503c\u3002 * RandDensity : \u8fd9\u51b3\u5b9a\u4e86\u603b\u5171\u6709\u591a\u5c11\u50cf\u7d20\u4f1a\u6709\u566a\u70b9\uff0c1 \u8868\u793a\u6240\u6709\u50cf\u7d20\uff0c\u800c\u503c\u8d8a\u9ad8\u8868\u793a\u50cf\u7d20\u6570\u91cf\u8d8a\u5c11\uff08\u5448\u6307\u6570\u7ea7\uff09\u3002","title":"\u968f\u673a\u566a\u58f0"},{"location":"settings/#_9","text":"\u8fd9\u4f1a\u589e\u52a0\u6c34\u5e73\u51f9\u51f8/\u95ea\u70c1/\u91cd\u5f71\u6548\u679c\u3002 * HorzWaveContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzWaveStrength : \u8fd9\u51b3\u5b9a\u4e86\u6548\u679c\u7684\u6574\u4f53\u5f3a\u5ea6\u3002 * HorzWaveVertSize : \u8fd9\u51b3\u5b9a\u4e86\u6709\u591a\u5c11\u5782\u76f4\u50cf\u7d20\u4f1a\u53d7\u5230\u8be5\u6548\u679c\u7684\u5f71\u54cd\u3002 * HorzWaveScreenSize : \u8fd9\u51b3\u5b9a\u4e86\u5c4f\u5e55\u7684\u591a\u5c11\u90e8\u5206\u4f1a\u53d7\u5230\u8be5\u6548\u679c\u7684\u5f71\u54cd\u3002","title":"\u6c34\u5e73\u51f9\u51f8\u53d8\u5f62"},{"location":"settings/#_10","text":"\u8fd9\u4f1a\u5728\u6c34\u5e73\u7ebf\u4e0a\u589e\u52a0\u566a\u58f0\u533a\u57df\u3002 * HorzNoiseLinesContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzNoiseLinesDensityY : \u8fd9\u51b3\u5b9a\u4e86\u6c34\u5e73\u7ebf\u4e0a\u6709\u591a\u5c11\u50cf\u7d20\u53d7\u5230\u5f71\u54cd\u3002 * HorzNoiseLinesDensityXY : \u8fd9\u51b3\u5b9a\u4e86\u5c4f\u5e55\u4e0a\u6709\u591a\u5c11\u884c\u53d7\u5230\u5f71\u54cd\u3002","title":"\u6c34\u5e73\u566a\u58f0\u7ebf"},{"location":"settings/#_11","text":"\u8fd9\u589e\u52a0\u4e86\u6c34\u5e73\u7ebf\u7684\u6ce2\u52a8\u3002 * HorzDistortionContrib : \u8fd9\u51b3\u5b9a\u4e86\u566a\u58f0\u50cf\u7d20\u4e0e\u56fe\u50cf\u50cf\u7d20\u7684\u6df7\u5408\u6bd4\uff0c0 \u8868\u793a\u65e0\u566a\u58f0\uff0c1 \u8868\u793a\u53ea\u6709\u566a\u58f0\u3002 * HorzDistortionStrength : \u8fd9\u51b3\u5b9a\u4e86\u5931\u771f\u7a0b\u5ea6\u6709\u591a\u5927\u3002","title":"\u6c34\u5e73\u7ebf\u7578\u53d8"},{"location":"settings/#gimbal","text":"Gimbal \u5143\u7d20\u5141\u8bb8\u51bb\u7ed3\u6444\u50cf\u673a\u7684\u4fef\u4ef0\u3001\u6a2a\u6eda\u548c/\u6216\u504f\u822a\u65b9\u5411\u3002\u9664\u975e ImageType \u4e3a-1\uff0c\u5426\u5219\u6b64\u8bbe\u7f6e\u5c06\u88ab\u5ffd\u7565\u3002 Stabilization \u9ed8\u8ba4\u4e3a0\uff0c\u8868\u793a\u65e0\u4e07\u5411\u8282\uff0c\u5373\u6444\u50cf\u673a\u65b9\u5411\u5728\u6240\u6709\u8f74\u4e0a\u968f\u8f66\u8eab\u65b9\u5411\u800c\u53d8\u5316\u3002\u503c\u4e3a1\u8868\u793a\u5b8c\u5168\u7a33\u5b9a\u30020\u52301\u4e4b\u95f4\u7684\u503c\u4f5c\u4e3a Pitch \u3001 Roll \u548c Yaw \u5143\u7d20\u4e2d\u6307\u5b9a\u7684\u56fa\u5b9a\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff0c\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\uff09\u548c\u8f66\u8eab\u65b9\u5411\u7684\u6743\u91cd\u3002\u5f53json\u4e2d\u7701\u7565\u4efb\u4f55\u89d2\u5ea6\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aNaN\u65f6\uff0c\u8be5\u89d2\u5ea6\u4e0d\u7a33\u5b9a\uff08\u5373\u5b83\u4f1a\u968f\u8f66\u8eab\u4e00\u8d77\u79fb\u52a8\uff09\u3002","title":"Gimbal"},{"location":"settings/#_12","text":"\u6b64\u5143\u7d20\u5305\u542b\u865a\u5e7b\u5f15\u64ce\u7279\u6709\u7684\u8bbe\u7f6e\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u5c06\u5728 Unity \u9879\u76ee\u4e2d\u88ab\u5ffd\u7565\u3002 * PixelFormatOverride : \u8fd9\u5305\u542b\u4e00\u4e2a\u5305\u542b ImageType \u548c PixelFormat \u8bbe\u7f6e\u7684\u5143\u7d20\u5217\u8868\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u5141\u8bb8\u60a8\u8986\u76d6 ImageType \u8bbe\u7f6e\u6307\u5b9a\u7684\u6355\u83b7\u5b9e\u4f8b\u5316\u7684 UTextureRenderTarget2D \u5bf9\u8c61\u7684\u9ed8\u8ba4\u50cf\u7d20\u683c\u5f0f\u3002\u6307\u5b9a\u6b64\u5143\u7d20\u53ef\u4ee5\u9632\u6b62\u7531\u610f\u5916\u50cf\u7d20\u683c\u5f0f\u5f15\u8d77\u7684\u5d29\u6e83\uff08\u6709\u5173\u8fd9\u4e9b\u5d29\u6e83\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 #4120 \u548c #4339 \u3002\u5b8c\u6574\u7684\u50cf\u7d20\u683c\u5f0f\u5217\u8868\u53ef\u5728 \u6b64\u5904 \u67e5\u770b\u3002","title":"\u865a\u5e7b\u5f15\u64ce"},{"location":"settings/#_13","text":"\u6b64\u5143\u7d20\u5141\u8bb8\u6307\u5b9a\u72ec\u7acb\u4e8e\u8f66\u8f86\u4e0a\u5b89\u88c5\u7684\u6444\u50cf\u5934\uff08\u4f8b\u5982\u95ed\u8def\u7535\u89c6\u6444\u50cf\u5934\uff09\u3002\u8fd9\u4e9b\u6444\u50cf\u5934\u662f\u56fa\u5b9a\u6444\u50cf\u5934\uff0c\u4e0d\u4f1a\u968f\u8f66\u8f86\u79fb\u52a8\u3002\u8be5\u5143\u7d20\u4e2d\u7684\u952e\u662f\u6444\u50cf\u5934\u7684\u540d\u79f0\uff0c\u503c\uff08\u5373\u8bbe\u7f6e\uff09\u4e0e\u4e0a\u9762\u63cf\u8ff0\u7684 CameraDefaults \u76f8\u540c\u3002\u6240\u6709\u6444\u50cf\u5934 API \u5747\u53ef\u4e0e\u5916\u90e8\u6444\u50cf\u5934\u914d\u5408\u4f7f\u7528\uff0c\u5305\u62ec\u901a\u8fc7\u5728 API \u8c03\u7528\u4e2d\u4f20\u9012\u53c2\u6570 external=True \u6765\u6355\u83b7\u56fe\u50cf\u3001\u66f4\u6539\u59ff\u52bf\u7b49\u3002","title":"\u5916\u63a5\u6444\u50cf\u5934"},{"location":"settings/#_14","text":"\u6bcf\u79cd\u6a21\u62df\u6a21\u5f0f\u90fd\u4f1a\u904d\u5386\u6b64\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u7684\u8f66\u8f86\u5217\u8868\uff0c\u5e76\u521b\u5efa\u5177\u6709 \"AutoCreate\": true \u7684\u8f66\u8f86\u3002\u6b64\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u7684\u6bcf\u8f86\u8f66\u8f86\u90fd\u6709\u4e00\u4e2a\u952e\uff0c\u8be5\u952e\u5c06\u6210\u4e3a\u8f66\u8f86\u7684\u540d\u79f0\u3002\u5982\u679c\u7f3a\u5c11 \"Vehicles\" \u5143\u7d20\uff0c\u5219\u6b64\u5217\u8868\u5c06\u586b\u5145\u540d\u4e3a\u201cPhysXCar\u201d\u7684\u9ed8\u8ba4\u8f66\u8f86\u548c\u540d\u4e3a\u201cSimpleFlight\u201d\u7684\u9ed8\u8ba4\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002","title":"\u8f66\u8f86\u8bbe\u7f6e"},{"location":"settings/#_15","text":"VehicleType : \u8fd9\u53ef\u4ee5\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u79cd\uff1a PhysXCar \u3001 SimpleFlight \u3001 PX4Multirotor \u3001 ComputerVision \u3001 ArduCopter \u548c ArduRover \u3002\u7531\u4e8e\u6ca1\u6709\u9ed8\u8ba4\u503c\uff0c\u56e0\u6b64\u5fc5\u987b\u6307\u5b9a\u6b64\u5143\u7d20\u3002 PawnPath : \u8fd9\u5141\u8bb8\u8986\u76d6\u7528\u4e8e\u8f7d\u5177\u7684 pawn \u84dd\u56fe\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728 AirSim \u4ee3\u7801\u4e4b\u5916\u7684\u9879\u76ee\u4e2d\uff0c\u4e3a\u4ed3\u5e93\u673a\u5668\u4eba\u521b\u5efa\u4e00\u4e2a\u6e90\u81ea ACarPawn \u7684\u65b0 pawn \u84dd\u56fe\uff0c\u7136\u540e\u5728\u6b64\u5904\u6307\u5b9a\u5176\u8def\u5f84\u3002\u53e6\u8bf7\u53c2\u9605 PawnPaths \u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5728\u5168\u5c40 PawnPaths \u5bf9\u8c61\u4e2d\u4f7f\u7528\u60a8\u4e13\u6709\u5b9a\u4e49\u7684\u5bf9\u8c61\u540d\u79f0\u6307\u5b9a\u81ea\u5b9a\u4e49 pawn \u84dd\u56fe\u7c7b\u8def\u5f84\uff0c\u5e76\u5728 Vehicles \u8bbe\u7f6e\u4e2d\u5f15\u7528\u8be5\u540d\u79f0\u3002\u4f8b\u5982\uff1a { ... \"PawnPaths\" : { \"CustomPawn\" : { \"PawnBP\" : \"Class'/Game/Assets/Blueprints/MyPawn.MyPawn_C'\" } }, \"Vehicles\" : { \"MyVehicle\" : { \"VehicleType\" : ... , \"PawnPath\" : \"CustomPawn\" , ... } } } DefaultVehicleState : \u591a\u65cb\u7ffc\u98de\u884c\u5668\u7684\u53ef\u80fd\u503c\u662f Armed \u6216 Disarmed \u3002 AutoCreate : \u5982\u679c\u4e3a\u771f\uff0c\u90a3\u4e48\u8be5\u8f66\u8f86\u5c31\u4f1a\u88ab\u751f\u6210\uff08\u5982\u679c\u6240\u9009\u6a21\u62df\u6a21\u5f0f\u652f\u6301\uff09\u3002 RC : \u6b64\u5b50\u5143\u7d20\u5141\u8bb8\u4f7f\u7528 RemoteControlID \u6307\u5b9a\u98de\u884c\u5668\u4f7f\u7528\u7684\u9065\u63a7\u5668\u3002\u503c\u4e3a -1 \u8868\u793a\u4f7f\u7528\u952e\u76d8\uff08\u591a\u65cb\u7ffc\u98de\u884c\u5668\u5c1a\u4e0d\u652f\u6301\uff09\u3002\u503c >= 0 \u8868\u793a\u6307\u5b9a\u8fde\u63a5\u5230\u7cfb\u7edf\u7684\u591a\u4e2a\u9065\u63a7\u5668\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728 Windows \u7cfb\u7edf\u7684\u201c\u6e38\u620f\u63a7\u5236\u5668\u201d\u9762\u677f\u4e2d\u67e5\u770b\u53ef\u7528\u7684\u9065\u63a7\u5668\u5217\u8868\u3002 X, Y, Z, Yaw, Roll, Pitch : \u8fd9\u4e9b\u5143\u7d20\u5141\u8bb8\u60a8\u6307\u5b9a\u8f66\u8f86\u7684\u521d\u59cb\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f4d\u7f6e\u91c7\u7528\u56fd\u9645\u5355\u4f4d\u5236 (SI) \u7684 NED \u5750\u6807\u7cfb\uff0c\u539f\u70b9\u8bbe\u7f6e\u4e3a\u865a\u5e7b\u73af\u5883\u4e2d\u7684\u73a9\u5bb6\u8d77\u59cb\u4f4d\u7f6e\u3002\u65b9\u5411\u4ee5\u5ea6\u4e3a\u5355\u4f4d\u3002 IsFpvVehicle : \u6b64\u8bbe\u7f6e\u5141\u8bb8\u6307\u5b9a\u5f53 ViewMode \u8bbe\u7f6e\u4e3a FPV \u65f6\uff0c\u54ea\u4e2a\u8f66\u8f86\u6444\u50cf\u5934\u5c06\u8ddf\u968f\u54ea\u4e2a\u8f66\u8f86\u4ee5\u53ca\u663e\u793a\u7684\u89c6\u56fe\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u9009\u62e9\u8bbe\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8f66\u8f86\u4f5c\u4e3a FPV \u8f66\u8f86\u3002 Sensors : \u8be5\u5143\u7d20\u6307\u5b9a\u4e0e\u8f66\u8f86\u5173\u8054\u7684\u4f20\u611f\u5668\uff0c\u8be6\u60c5\u8bf7\u53c2\u9605 \u4f20\u611f\u5668\u9875\u9762 \u3002 Cameras : \u6b64\u5143\u7d20\u6307\u5b9a\u8f66\u8f86\u7684\u6444\u50cf\u5934\u8bbe\u7f6e\u3002\u6b64\u5143\u7d20\u7684\u952e\u662f \u53ef\u7528\u6444\u50cf\u5934 \u7684\u540d\u79f0\uff0c\u503c\u4e0e\u4e0a\u6587\u6240\u8ff0\u7684 CameraDefaults \u76f8\u540c\u3002\u4f8b\u5982\uff0c\u8981\u5c06\u524d\u4e2d\u592e\u6444\u50cf\u5934\u7684\u89c6\u91ce (FOV) \u66f4\u6539\u4e3a 120 \u5ea6\uff0c\u60a8\u53ef\u4ee5\u5728\u201c\u8f66\u8f86\u201d\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u6b64\u5143\u7d20\uff1a \"Vehicles\" : { \"FishEyeDrone\" : { \"VehicleType\" : \"SimpleFlight\" , \"Cameras\" : { \"front-center\" : { \"CaptureSettings\" : [ { \"ImageType\" : 0 , \"FOV_Degrees\" : 120 } ] } } } }","title":"\u5e38\u7528\u8f66\u8f86\u8bbe\u7f6e"},{"location":"settings/#px4","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528 simple_flight \uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u5355\u72ec\u8fdb\u884c HITL \u6216 SITL \u8bbe\u7f6e\u3002\u6211\u4eec\u8fd8\u4e3a\u9ad8\u7ea7\u7528\u6237\u63d0\u4f9b \"PX4\" \u652f\u6301\u3002\u8981\u5c06 PX4 \u4e0e AirSim \u914d\u5408\u4f7f\u7528\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b Vehicles \u8bbe\u7f6e\uff1a \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", } }","title":"\u4f7f\u7528 PX4"},{"location":"settings/#px4_1","text":"PX4 \u9ed8\u8ba4\u542f\u7528 \u786c\u4ef6\u5728\u73af \u8bbe\u7f6e\u3002PX4 \u8fd8\u6709\u5176\u4ed6\u5404\u79cd\u8bbe\u7f6e\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"Lockstep\": true, \"ControlIp\": \"127.0.0.1\", \"ControlPortLocal\": 14540, \"ControlPortRemote\": 14580, \"LogViewerHostIp\": \"127.0.0.1\", \"LogViewerPort\": 14388, \"OffboardCompID\": 1, \"OffboardSysID\": 134, \"QgcHostIp\": \"127.0.0.1\", \"QgcPort\": 14550, \"SerialBaudRate\": 115200, \"SerialPort\": \"*\", \"SimCompID\": 42, \"SimSysID\": 142, \"TcpPort\": 4560, \"UdpIp\": \"127.0.0.1\", \"UdpPort\": 14560, \"UseSerial\": true, \"UseTcp\": false, \"VehicleCompID\": 1, \"VehicleSysID\": 135, \"Model\": \"Generic\", \"LocalHostIp\": \"127.0.0.1\", \"Logs\": \"d:\\\\temp\\\\mavlink\", \"Sensors\": { ... } \"Parameters\": { ... } } } \u8fd9\u4e9b\u8bbe\u7f6e\u5b9a\u4e49\u4e86 MavLink \u6a21\u62df\u5668\u7684 SystemId \u548c ComponentId\uff08SimSysID\u3001SimCompID\uff09\u3001\u98de\u884c\u5668\uff08VehicleSysID\u3001VehicleCompID\uff09\u4ee5\u53ca\u5141\u8bb8\u4ece\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u8fdc\u7a0b\u63a7\u5236\u65e0\u4eba\u673a\u7684\u8282\u70b9\uff08\u79f0\u4e3a\u673a\u5916\u8282\u70b9\uff09\uff08OffboardSysID\u3001OffboardCompID\uff09\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u6a21\u62df\u5668\u4e5f\u80fd\u5c06 mavlink \u6d88\u606f\u8f6c\u53d1\u5230\u60a8\u7684\u5730\u9762\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\uff08\u4f8b\u5982 QGroundControl\uff09\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 UDP \u5730\u5740\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u673a\u5668\u4e0a\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\uff08QgcHostIp\u3001QgcPort\uff09\u3002\u9ed8\u8ba4\u5730\u5740\u4e3a\u672c\u5730\u4e3b\u673a\uff0c\u56e0\u6b64 QGroundControl \u5e94\u8be5\u201c\u4ec5\u5728\u201d\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u5373\u53ef\u6b63\u5e38\u5de5\u4f5c\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e UDP \u5730\u5740\uff08LogViewerHostIp\u3001LogViewerPort\uff09\u5c06\u6a21\u62df\u5668\u8fde\u63a5\u5230\u6b64 repo \u4e2d\u63d0\u4f9b\u7684 LogViewer \u5e94\u7528\u7a0b\u5e8f\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6dfb\u52a0\u5230\u6a21\u62df\u5668\u7684\u98de\u884c\u65e0\u4eba\u673a\uff0c\u90fd\u6709\u4e00\u4e2a\u547d\u540d\u7684\u9644\u52a0\u8bbe\u7f6e\u5757\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u540d\u79f0\u201cPX4\u201d\u3002\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6dfb\u52a0\u65b0\u7684 BP_FlyingPawn \u8d44\u6e90\u65f6\u66f4\u6539\u6b64\u540d\u79f0\u3002\u60a8\u5c06\u770b\u5230\u8fd9\u4e9b\u5c5e\u6027\u5206\u7ec4\u5728\u201cMavLink\u201d\u7c7b\u522b\u4e0b\u3002 \u6b64 Pawn \u7684 MavLink \u8282\u70b9\u53ef\u4ee5\u901a\u8fc7 UDP \u8fdc\u7a0b\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u672c\u5730\u4e32\u884c\u7aef\u53e3\u3002 \u5982\u679c\u662f\u4e32\u884c\u8fde\u63a5\uff0c\u5219\u5c06 UseSerial \u8bbe\u7f6e\u4e3a true\uff0c\u5426\u5219\u5c06 UseSerial \u8bbe\u7f6e\u4e3a false\u3002\u5bf9\u4e8e\u4e32\u884c\u8fde\u63a5\uff0c\u60a8\u8fd8\u9700\u8981\u8bbe\u7f6e\u9002\u5f53\u7684 SerialBaudRate\u3002\u9ed8\u8ba4\u503c 115200 \u9002\u7528\u4e8e Pixhawk 2 \u7248\u672c\uff0c \u901a\u8fc7 USB \u8fde\u63a5\u3002 \u901a\u8fc7\u4e32\u53e3\u4e0e PX4 \u65e0\u4eba\u673a\u901a\u4fe1\u65f6\uff0cHIL_* \u6d88\u606f\u548c\u98de\u884c\u5668\u63a7\u5236\u6d88\u606f\u5171\u4eab\u540c\u4e00\u4e32\u53e3\u3002\u901a\u8fc7 UDP \u6216 TCP \u901a\u4fe1\u65f6\uff0cPX4 \u9700\u8981\u4e24\u4e2a\u72ec\u7acb\u7684\u901a\u9053\u3002\u5982\u679c UseTcp \u4e3a false\uff0c\u5219\u4f7f\u7528 UdpIp \u548c UdpPort \u53d1\u9001 HIL_* \u6d88\u606f\uff0c\u5426\u5219\u4f7f\u7528 TcpPort\u3002PX4 \u5728 1.9.2 \u7248\u672c\u4e2d\u65b0\u589e\u4e86 TCP \u652f\u6301\uff0c\u5e76\u6dfb\u52a0\u4e86 lockstep \u529f\u80fd\uff0c\u56e0\u4e3a TCP \u63d0\u4f9b\u7684\u6d88\u606f\u4f20\u9012\u4fdd\u8bc1\u662f lockstep \u6b63\u5e38\u8fd0\u884c\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAirSim \u5c06\u6210\u4e3a TCP \u670d\u52a1\u5668\uff0c\u5e76\u7b49\u5f85\u6765\u81ea PX4 \u5e94\u7528\u7a0b\u5e8f\u7684\u8fde\u63a5\u3002\u7528\u4e8e\u63a7\u5236\u98de\u884c\u5668\u7684\u7b2c\u4e8c\u4e2a\u901a\u9053\u7531 (ControlIp, ControlPort) \u5b9a\u4e49\uff0c\u5e76\u4e14\u59cb\u7ec8\u4e3a UDP \u901a\u9053\u3002 \u4f20\u611f\u5668 Sensors \u90e8\u5206\u53ef\u4ee5\u4e3a\u6a21\u62df\u4f20\u611f\u5668\u63d0\u4f9b\u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff0c\u8bf7\u53c2\u9605 Sensors \u3002 Parameters \u90e8\u5206\u53ef\u4ee5\u5728 PX4 \u8fde\u63a5\u521d\u59cb\u5316\u671f\u95f4\u8bbe\u7f6e PX4 \u53c2\u6570\u3002\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 \u8bbe\u7f6e PX4 \u8f6f\u4ef6\u5728\u73af \u3002","title":"\u5176\u4ed6 PX4 \u8bbe\u7f6e"},{"location":"settings/#ardupilot","text":"ArduPilot \u76f4\u5347\u673a\u548c\u6f2b\u6e38\u8f66\u5728\u6700\u65b0\u7684 AirSim \u4e3b\u5206\u652f\u53ca\u7248\u672c v1.3.0 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\u5747\u53d7\u652f\u6301\u3002\u6709\u5173\u8bbe\u7f6e\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 ArduPilot SITL \u4e0e AirSim \u7684\u914d\u5408\u4f7f\u7528 \u3002","title":"\u4f7f\u7528 ArduPilot"},{"location":"settings/#_16","text":"","title":"\u5176\u4ed6\u8bbe\u7f6e"},{"location":"settings/#enginesound","text":"\u8981\u5173\u95ed\u5f15\u64ce\u58f0\u97f3\uff0c\u8bf7\u4f7f\u7528 \u8bbe\u7f6e \"EngineSound\": false \u3002\u76ee\u524d\u6b64\u8bbe\u7f6e\u4ec5\u9002\u7528\u4e8e\u6c7d\u8f66\u3002","title":"EngineSound"},{"location":"settings/#pawnpaths","text":"\u8fd9\u5141\u8bb8\u60a8\u6307\u5b9a\u81ea\u5df1\u7684\u8f66\u8f86 pawn \u84dd\u56fe\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u8f66\u8f86\u66ff\u6362 AirSim \u4e2d\u7684\u9ed8\u8ba4\u8f66\u8f86\u3002\u60a8\u7684\u8f66\u8f86\u84dd\u56fe\u53ef\u4ee5\u4f4d\u4e8e\u60a8\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\u7684 Content \u6587\u4ef6\u5939\u4e2d\uff08\u5373 AirSim \u63d2\u4ef6\u6587\u4ef6\u5939\u4e4b\u5916\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u9879\u76ee\u4e2d\u6709\u4e00\u4e2a\u4f4d\u4e8e Content\\MyCar\\MySedanBP.uasset \u6587\u4ef6\u4e2d\u7684\u8f66\u8f86\u84dd\u56fe\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u8bbe\u7f6e \"DefaultCar\": {\"PawnBP\":\"Class'/Game/MyCar/MySedanBP.MySedanBP_C'\"} \u3002 XYZ.XYZ_C \u662f\u6307\u5b9a BP XYZ \u7c7b\u6240\u9700\u7684\u7279\u6b8a\u7b26\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u7684 BP \u5fc5\u987b\u884d\u751f\u81ea CarPawn \u7c7b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e76\u975e\u5982\u6b64\uff0c\u4f46\u60a8\u53ef\u4ee5\u5728\u6253\u5f00 BP \u540e\uff0c\u4f7f\u7528 UE \u7f16\u8f91\u5668\u5de5\u5177\u680f\u4e2d\u7684\u201c\u7c7b\u8bbe\u7f6e\u201d\u6309\u94ae\uff0c\u7136\u540e\u5728\u201c\u7c7b\u9009\u9879\u201d\u4e2d\u9009\u62e9\u201cCar Pawn\u201d\u4f5c\u4e3a\u7236\u7c7b\u8bbe\u7f6e\uff0c\u4ece\u800c\u91cd\u65b0\u8bbe\u7f6e BP \u7684\u7236\u7c7b\u3002\u5efa\u8bae\u7981\u7528\u201c\u81ea\u52a8\u9644\u8eab\u73a9\u5bb6\u201d\u548c\u201c\u81ea\u52a8\u9644\u8eabAI\u201d\uff0c\u5e76\u5728BP\u8be6\u60c5\u4e2d\u5c06AI\u63a7\u5236\u5668\u7c7b\u522b\u8bbe\u7f6e\u4e3a\u201c\u65e0\u201d\u3002\u5982\u679c\u60a8\u6b63\u5728\u521b\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u8d44\u6e90\u5df2\u5305\u542b\u5728\u6253\u5305\u9009\u9879\u4e2d\u4ee5\u4f9b\u70d8\u7119\u3002","title":"PawnPaths"},{"location":"settings/#physicsenginename","text":"\u5bf9\u4e8e\u6c7d\u8f66\uff0c\u6211\u4eec\u76ee\u524d\u4ec5\u652f\u6301 PhysX\uff08\u65e0\u8bba\u6b64\u8bbe\u7f6e\u4e2d\u7684\u503c\u5982\u4f55\uff09\u3002\u5bf9\u4e8e\u591a\u65cb\u7ffc\u98de\u884c\u5668\uff0c\u6211\u4eec\u652f\u6301 \"FastPhysicsEngine\" \u548c \"ExternalPhysicsEngine\" \u3002 \"ExternalPhysicsEngine\" \u5141\u8bb8\u901a\u8fc7 setVehiclePose () \u63a7\u5236\u65e0\u4eba\u673a\uff0c\u4f7f\u65e0\u4eba\u673a\u4fdd\u6301\u539f\u4f4d\u76f4\u5230\u4e0b\u4e00\u6b21\u8c03\u7528\u3002\u8fd9\u5bf9\u4e8e\u4f7f\u7528\u5916\u90e8\u6a21\u62df\u5668\u6216\u6cbf\u5df2\u4fdd\u5b58\u7684\u8def\u5f84\u79fb\u52a8 AirSim \u65e0\u4eba\u673a\u5c24\u5176\u6709\u7528\u3002","title":"PhysicsEngineName"},{"location":"settings/#localhostip","text":"\u73b0\u5728\uff0c\u5f53\u8fde\u63a5\u5230\u8fdc\u7a0b\u673a\u5668\u65f6\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u4ee5\u592a\u7f51\u9002\u914d\u5668\u6765\u8fde\u63a5\u8fd9\u4e9b\u673a\u5668\uff0c\u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u662f\u901a\u8fc7\u4ee5\u592a\u7f51\u3001Wi-Fi\u3001\u5176\u4ed6\u7279\u6b8a\u7684\u865a\u62df\u9002\u914d\u5668\u6216VPN\u3002\u60a8\u7684\u7535\u8111\u53ef\u80fd\u6709\u591a\u4e2a\u7f51\u7edc\uff0c\u800c\u8fd9\u4e9b\u7f51\u7edc\u53ef\u80fd\u4e0d\u5141\u8bb8\u76f8\u4e92\u901a\u4fe1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81ea\u4e00\u4e2a\u7f51\u7edc\u7684UDP\u6d88\u606f\u5c06\u65e0\u6cd5\u4f20\u9012\u5230\u5176\u4ed6\u7f51\u7edc\u3002 \u56e0\u6b64\uff0cLocalHostIp \u5141\u8bb8\u60a8\u914d\u7f6e\u5982\u4f55\u8bbf\u95ee\u8fd9\u4e9b\u673a\u5668\u3002\u9ed8\u8ba4\u503c 127.0.0.1 \u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u673a\u5668\uff0c \u4ec5\u5f53\u60a8\u8981\u901a\u4fe1\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5305\u542b\u5728\u4e00\u53f0 PC \u4e0a\u65f6\u624d\u4f7f\u7528\u6b64\u9ed8\u8ba4\u503c\u3002","title":"LocalHostIp \u8bbe\u7f6e"},{"location":"settings/#apiserverport","text":"\u6b64\u8bbe\u7f6e\u51b3\u5b9a\u4e86 airsim \u5ba2\u6237\u7aef\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 41451\u3002\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u73af\u5883\u4ee5\u52a0\u901f\u6570\u636e\u6536\u96c6\u8fc7\u7a0b\u3002","title":"ApiServerPort"},{"location":"settings/#speedunitfactor","text":"\u4e0e\u201c\u7c73/\u79d2\u201d\u76f8\u5173\u7684\u901f\u5ea6\u5355\u4f4d\u6362\u7b97\u7cfb\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a 1\u3002\u4e0e SpeedUnitLabel \u7ed3\u5408\u4f7f\u7528\u3002\u8be5\u7cfb\u6570\u4ec5\u53ef\u7528\u4e8e\u663e\u793a\u76ee\u7684\uff0c\u4f8b\u5982\u5728\u6c7d\u8f66\u884c\u9a76\u65f6\u663e\u793a\u901f\u5ea6\u3002\u4f8b\u5982\uff0c\u8981\u83b7\u53d6 \u201c\u82f1\u91cc/\u5c0f\u65f6\u201d( miles/hr ) \u7684\u901f\u5ea6\uff0c\u8bf7\u4f7f\u7528\u7cfb\u6570 2.23694\u3002","title":"SpeedUnitFactor"},{"location":"settings/#speedunitlabel","text":"\u901f\u5ea6\u5355\u4f4d\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3a m/s \u3002\u4e0e SpeedUnitFactor \u914d\u5408\u4f7f\u7528\u3002","title":"SpeedUnitLabel"},{"location":"simple_flight/","text":"simple_flight # \u5982\u679c\u60a8\u4e0d\u77e5\u9053\u98de\u884c\u63a7\u5236\u5668\u7684\u4f5c\u7528\uff0c\u8bf7\u53c2\u9605 \u4ec0\u4e48\u662f\u98de\u884c\u63a7\u5236\u5668 \u3002 AirSim \u5185\u7f6e\u4e00\u4e2a\u540d\u4e3a simple_flight \u7684\u98de\u884c\u63a7\u5236\u5668\uff0c\u9ed8\u8ba4\u4f7f\u7528\u3002\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u5373\u53ef\u4f7f\u7528\u6216\u914d\u7f6e\u5b83\u3002AirSim \u8fd8\u652f\u6301 PX4 \u4f5c\u4e3a\u9ad8\u7ea7\u7528\u6237\u7684\u53e6\u4e00\u79cd\u98de\u884c\u63a7\u5236\u5668\u3002\u672a\u6765\uff0c\u6211\u4eec\u8fd8\u8ba1\u5212\u652f\u6301 ROSFlight \u548c Hackflight \u3002 \u4f18\u52bf # \u4f7f\u7528 simple_flight \u7684\u4f18\u52bf\u5728\u4e8e\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u989d\u5916\u8bbe\u7f6e\uff0c\u5b83\u5c31\u80fd\u201c\u76f4\u63a5\u8fd0\u884c\u201d\u3002\u6b64\u5916\uff0csimple_flight \u4f7f\u7528\u6b65\u8fdb\u65f6\u949f\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6682\u505c\u6a21\u62df\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u9ad8\u65b9\u5dee\u4f4e\u7cbe\u5ea6\u65f6\u949f\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0csimple_flight \u7b80\u5355\u6613\u7528\u3001\u8de8\u5e73\u53f0\uff0c\u5e76\u4e14 100% \u7531\u5934\u6587\u4ef6\u65e0\u4f9d\u8d56\u7684 C++ \u4ee3\u7801\u7ec4\u6210\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\u5728\u6a21\u62df\u5668\u548c\u98de\u884c\u63a7\u5236\u5668\u4ee3\u7801\u4e4b\u95f4\u5207\u6362\uff01 \u8bbe\u8ba1 # \u901a\u5e38\uff0c\u98de\u884c\u63a7\u5236\u5668\u8bbe\u8ba1\u7528\u4e8e\u5728\u5b9e\u9645\u7684\u98de\u884c\u5668\u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u800c\u5b83\u4eec\u5bf9\u6a21\u62df\u5668\u7684\u652f\u6301\u5dee\u5f02\u5f88\u5927\u3002\u5bf9\u4e8e\u975e\u4e13\u4e1a\u7528\u6237\u6765\u8bf4\uff0c\u914d\u7f6e\u8d77\u6765\u901a\u5e38\u76f8\u5f53\u56f0\u96be\uff0c\u800c\u4e14\u901a\u5e38\u6784\u5efa\u590d\u6742\uff0c\u7f3a\u4e4f\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u5728 simple_flight \u7684\u8bbe\u8ba1\u4e2d\u90fd\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002 simple_flight \u4ece\u4e00\u5f00\u59cb\u5c31\u88ab\u8bbe\u8ba1\u6210\u4e00\u4e2a\u5e93\uff0c\u5b83\u62e5\u6709\u7b80\u6d01\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u98de\u884c\u5668\u548c\u6a21\u62df\u5668\u4e2d\u8fd0\u884c\u3002\u5176\u6838\u5fc3\u539f\u5219\u662f\uff0c\u98de\u884c\u63a7\u5236\u5668\u65e0\u6cd5\u6307\u5b9a\u7279\u6b8a\u7684\u6a21\u62df\u6a21\u5f0f\uff0c\u56e0\u6b64\u65e0\u6cd5\u5224\u65ad\u5b83\u662f\u4f5c\u4e3a\u6a21\u62df\u8fd0\u884c\u8fd8\u662f\u4f5c\u4e3a\u771f\u5b9e\u98de\u884c\u5668\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u98de\u884c\u63a7\u5236\u5668\u7b80\u5355\u5730\u89c6\u4e3a\u6253\u5305\u5728\u5e93\u4e2d\u7684\u4e00\u7ec4\u7b97\u6cd5\u3002\u53e6\u4e00\u4e2a\u91cd\u70b9\u662f\u5c06\u6b64\u4ee3\u7801\u5f00\u53d1\u4e3a\u65e0\u4f9d\u8d56\u3001\u4ec5\u5305\u542b\u5934\u6587\u4ef6\u7684\u7eaf\u6807\u51c6 C++11 \u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\u7f16\u8bd1 simple_flight \u65e0\u9700\u4efb\u4f55\u7279\u6b8a\u6784\u5efa\u3002\u60a8\u53ea\u9700\u5c06\u5176\u6e90\u4ee3\u7801\u590d\u5236\u5230\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u9879\u76ee\u4e2d\uff0c\u5b83\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002 \u63a7\u5236 # simple_flight \u53ef\u4ee5\u901a\u8fc7\u63a5\u6536\u89d2\u901f\u7387\u3001\u89d2\u5ea6\u3001\u901f\u5ea6\u6216\u4f4d\u7f6e\u7b49\u6240\u9700\u8f93\u5165\u6765\u63a7\u5236\u98de\u884c\u5668\u3002\u6bcf\u4e2a\u63a7\u5236\u8f74\u90fd\u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u4e00\u79cd\u6a21\u5f0f\u6307\u5b9a\u3002\u5728\u5185\u90e8\uff0csimple_flight \u4f7f\u7528\u7ea7\u8054 PID \u63a7\u5236\u5668\u6765\u6700\u7ec8\u751f\u6210\u6267\u884c\u5668\u4fe1\u53f7\u3002\u8fd9\u610f\u5473\u7740\u4f4d\u7f6e PID \u9a71\u52a8\u901f\u5ea6 PID\uff0c\u901f\u5ea6 PID \u53c8\u9a71\u52a8\u89d2\u5ea6 PID\uff0c\u89d2\u5ea6 PID \u6700\u7ec8\u9a71\u52a8\u89d2\u901f\u7387 PID\u3002 \u72b6\u6001\u4f30\u8ba1 # \u5728\u5f53\u524d\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6765\u81ea\u6a21\u62df\u5668\u7684\u771f\u5b9e\u503c\u8fdb\u884c\u72b6\u6001\u4f30\u8ba1\u3002\u6211\u4eec\u8ba1\u5212\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u6dfb\u52a0\u4e00\u4e2a\u57fa\u4e8e\u6ee4\u6ce2\u5668\u7684\u514d\u8d39\u72b6\u6001\u4f30\u8ba1\u5668\uff0c\u7528\u4e8e\u4f7f\u7528\u4e24\u4e2a\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\uff09\u8fdb\u884c\u89d2\u901f\u5ea6\u548c\u65b9\u5411\u4f30\u8ba1\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u4eec\u8ba1\u5212\u96c6\u6210\u53e6\u4e00\u4e2a\u5e93\uff0c\u4f7f\u7528 4 \u4e2a\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\u3001\u52a0\u901f\u5ea6\u8ba1\u3001\u78c1\u529b\u8ba1\u548c\u6c14\u538b\u8ba1\uff09\u5e76\u7ed3\u5408\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668 (EKF) \u8fdb\u884c\u901f\u5ea6\u548c\u4f4d\u7f6e\u4f30\u8ba1\u3002\u5982\u679c\u60a8\u5728\u8fd9\u65b9\u9762\u6709\u7ecf\u9a8c\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u4e0e\u6211\u4eec\u4e92\u52a8\u5e76\u505a\u51fa\u8d21\u732e\uff01 \u652f\u6301\u7684\u4e3b\u677f # \u76ee\u524d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u6a21\u62df\u677f\u5b9e\u73b0\u4e86 simple_flight \u63a5\u53e3\u3002\u6211\u4eec\u8ba1\u5212\u5c06\u5176\u5b9e\u73b0\u5230 Pixhawk V2 \u677f\uff0c\u751a\u81f3\u53ef\u80fd\u5b9e\u73b0\u5230 Naze32 \u677f\u3002\u6211\u4eec\u9884\u8ba1\u6240\u6709\u4ee3\u7801\u5c06\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b9e\u73b0\u4e3b\u8981\u5305\u62ec\u4e3a\u5404\u79cd\u4f20\u611f\u5668\u6dfb\u52a0\u9a71\u52a8\u7a0b\u5e8f\u3001\u5904\u7406 ISR \u4ee5\u53ca\u7ba1\u7406\u5176\u4ed6\u677f\u7ea7\u76f8\u5173\u7ec6\u8282\u3002\u5982\u679c\u60a8\u5728\u8fd9\u65b9\u9762\u6709\u7ecf\u9a8c\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u4e0e\u6211\u4eec\u4e92\u52a8\u5e76\u505a\u51fa\u8d21\u732e\uff01 \u914d\u7f6e # \u8981\u8ba9 AirSim \u4f7f\u7528 simple_flight\uff0c\u60a8\u53ef\u4ee5\u5728 settings.json \u4e2d\u6307\u5b9a\u5b83\uff0c\u5982\u4e0b\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u660e\u786e\u6307\u5b9a\u3002 \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", } } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 simple_flight \u7684\u98de\u884c\u5668\u5df2\u7ecf\u5904\u4e8e\u6b66\u88c5\u72b6\u6001\uff0c\u56e0\u6b64\u4f60\u4f1a\u770b\u5230\u5b83\u7684\u87ba\u65cb\u6868\u5728\u65cb\u8f6c\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u8fd9\u6837\uff0c\u53ef\u4ee5\u5c06 DefaultVehicleState \u8bbe\u7f6e\u4e3a Inactive \uff0c\u5982\u4e0b\u6240\u793a\uff1a \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"DefaultVehicleState\": \"Inactive\" } } \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u624b\u52a8\u5c06\u9065\u63a7\u6447\u6746\u5411\u4e0b\u5411\u5185\u653e\u7f6e\uff0c\u6216\u4f7f\u7528 API \u8fdb\u884c\u89e3\u9501\u3002 \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u98de\u884c\u63a7\u5236\u5668\u4e0d\u5141\u8bb8 API \u63a7\u5236\uff0c\u9664\u975e\u64cd\u4f5c\u5458\u5df2\u901a\u8fc7\u9065\u63a7\u4e0a\u7684\u5f00\u5173\u540c\u610f\u4f7f\u7528 API\u3002\u6b64\u5916\uff0c\u5f53\u9065\u63a7\u5931\u53bb\u63a7\u5236\u65f6\uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u98de\u884c\u5668\u5e94\u7981\u7528 API \u63a7\u5236\u5e76\u8fdb\u5165\u60ac\u505c\u6a21\u5f0f\u3002\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\uff0csimple_flight \u9ed8\u8ba4\u542f\u7528 API \u63a7\u5236\uff0c\u65e0\u9700\u64cd\u4f5c\u5458\u540c\u610f\uff0c\u5373\u4f7f\u9065\u63a7\u672a\u88ab\u68c0\u6d4b\u5230\uff0c\u4e5f\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u3002\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bbe\u7f6e\u66f4\u6539\u6b64\u8bbe\u7f6e\uff1a \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"AllowAPIAlways\": true, \"RC\": { \"RemoteControlID\": 0, \"AllowAPIWhenDisconnected\": true } } } \u6700\u540e\uff0csimple_flight \u9ed8\u8ba4\u4f7f\u7528\u6b65\u8fdb\u65f6\u949f\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u6a21\u62df\u5668\u53d1\u51fa\u6307\u4ee4\u65f6\uff0c\u65f6\u949f\u4f1a\u524d\u8fdb\uff08\u4e0d\u50cf\u6302\u949f\u90a3\u6837\u4e25\u683c\u6309\u7167\u65f6\u95f4\u7684\u63a8\u79fb\u524d\u8fdb\uff09\u3002\u8fd9\u610f\u5473\u7740\u65f6\u949f\u53ef\u4ee5\u6682\u505c\uff0c\u4f8b\u5982\uff0c\u5f53\u4ee3\u7801\u9047\u5230\u65ad\u70b9\u4e14\u65f6\u949f\u7684\u65b9\u5dee\u4e3a\u96f6\u65f6\uff08\u9664\u975e\u662f\u201c\u5b9e\u65f6\u201d\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5426\u5219\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u65f6\u949f API \u53ef\u80fd\u4f1a\u6709\u663e\u8457\u7684\u65b9\u5dee\uff09\u3002\u5982\u679c\u60a8\u5e0c\u671b simple_flight \u4f7f\u7528\u6302\u949f\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bbe\u7f6e\uff1a \"ClockType\": \"ScalableClock\"","title":"\u7b80\u5355\u98de\u884c"},{"location":"simple_flight/#simple_flight","text":"\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u98de\u884c\u63a7\u5236\u5668\u7684\u4f5c\u7528\uff0c\u8bf7\u53c2\u9605 \u4ec0\u4e48\u662f\u98de\u884c\u63a7\u5236\u5668 \u3002 AirSim \u5185\u7f6e\u4e00\u4e2a\u540d\u4e3a simple_flight \u7684\u98de\u884c\u63a7\u5236\u5668\uff0c\u9ed8\u8ba4\u4f7f\u7528\u3002\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u5373\u53ef\u4f7f\u7528\u6216\u914d\u7f6e\u5b83\u3002AirSim \u8fd8\u652f\u6301 PX4 \u4f5c\u4e3a\u9ad8\u7ea7\u7528\u6237\u7684\u53e6\u4e00\u79cd\u98de\u884c\u63a7\u5236\u5668\u3002\u672a\u6765\uff0c\u6211\u4eec\u8fd8\u8ba1\u5212\u652f\u6301 ROSFlight \u548c Hackflight \u3002","title":"simple_flight"},{"location":"simple_flight/#_1","text":"\u4f7f\u7528 simple_flight \u7684\u4f18\u52bf\u5728\u4e8e\u60a8\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u989d\u5916\u8bbe\u7f6e\uff0c\u5b83\u5c31\u80fd\u201c\u76f4\u63a5\u8fd0\u884c\u201d\u3002\u6b64\u5916\uff0csimple_flight \u4f7f\u7528\u6b65\u8fdb\u65f6\u949f\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6682\u505c\u6a21\u62df\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u9ad8\u65b9\u5dee\u4f4e\u7cbe\u5ea6\u65f6\u949f\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0csimple_flight \u7b80\u5355\u6613\u7528\u3001\u8de8\u5e73\u53f0\uff0c\u5e76\u4e14 100% \u7531\u5934\u6587\u4ef6\u65e0\u4f9d\u8d56\u7684 C++ \u4ee3\u7801\u7ec4\u6210\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\u5728\u6a21\u62df\u5668\u548c\u98de\u884c\u63a7\u5236\u5668\u4ee3\u7801\u4e4b\u95f4\u5207\u6362\uff01","title":"\u4f18\u52bf"},{"location":"simple_flight/#_2","text":"\u901a\u5e38\uff0c\u98de\u884c\u63a7\u5236\u5668\u8bbe\u8ba1\u7528\u4e8e\u5728\u5b9e\u9645\u7684\u98de\u884c\u5668\u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u800c\u5b83\u4eec\u5bf9\u6a21\u62df\u5668\u7684\u652f\u6301\u5dee\u5f02\u5f88\u5927\u3002\u5bf9\u4e8e\u975e\u4e13\u4e1a\u7528\u6237\u6765\u8bf4\uff0c\u914d\u7f6e\u8d77\u6765\u901a\u5e38\u76f8\u5f53\u56f0\u96be\uff0c\u800c\u4e14\u901a\u5e38\u6784\u5efa\u590d\u6742\uff0c\u7f3a\u4e4f\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u5728 simple_flight \u7684\u8bbe\u8ba1\u4e2d\u90fd\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002 simple_flight \u4ece\u4e00\u5f00\u59cb\u5c31\u88ab\u8bbe\u8ba1\u6210\u4e00\u4e2a\u5e93\uff0c\u5b83\u62e5\u6709\u7b80\u6d01\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u98de\u884c\u5668\u548c\u6a21\u62df\u5668\u4e2d\u8fd0\u884c\u3002\u5176\u6838\u5fc3\u539f\u5219\u662f\uff0c\u98de\u884c\u63a7\u5236\u5668\u65e0\u6cd5\u6307\u5b9a\u7279\u6b8a\u7684\u6a21\u62df\u6a21\u5f0f\uff0c\u56e0\u6b64\u65e0\u6cd5\u5224\u65ad\u5b83\u662f\u4f5c\u4e3a\u6a21\u62df\u8fd0\u884c\u8fd8\u662f\u4f5c\u4e3a\u771f\u5b9e\u98de\u884c\u5668\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u98de\u884c\u63a7\u5236\u5668\u7b80\u5355\u5730\u89c6\u4e3a\u6253\u5305\u5728\u5e93\u4e2d\u7684\u4e00\u7ec4\u7b97\u6cd5\u3002\u53e6\u4e00\u4e2a\u91cd\u70b9\u662f\u5c06\u6b64\u4ee3\u7801\u5f00\u53d1\u4e3a\u65e0\u4f9d\u8d56\u3001\u4ec5\u5305\u542b\u5934\u6587\u4ef6\u7684\u7eaf\u6807\u51c6 C++11 \u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\u7f16\u8bd1 simple_flight \u65e0\u9700\u4efb\u4f55\u7279\u6b8a\u6784\u5efa\u3002\u60a8\u53ea\u9700\u5c06\u5176\u6e90\u4ee3\u7801\u590d\u5236\u5230\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u9879\u76ee\u4e2d\uff0c\u5b83\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002","title":"\u8bbe\u8ba1"},{"location":"simple_flight/#_3","text":"simple_flight \u53ef\u4ee5\u901a\u8fc7\u63a5\u6536\u89d2\u901f\u7387\u3001\u89d2\u5ea6\u3001\u901f\u5ea6\u6216\u4f4d\u7f6e\u7b49\u6240\u9700\u8f93\u5165\u6765\u63a7\u5236\u98de\u884c\u5668\u3002\u6bcf\u4e2a\u63a7\u5236\u8f74\u90fd\u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u4e00\u79cd\u6a21\u5f0f\u6307\u5b9a\u3002\u5728\u5185\u90e8\uff0csimple_flight \u4f7f\u7528\u7ea7\u8054 PID \u63a7\u5236\u5668\u6765\u6700\u7ec8\u751f\u6210\u6267\u884c\u5668\u4fe1\u53f7\u3002\u8fd9\u610f\u5473\u7740\u4f4d\u7f6e PID \u9a71\u52a8\u901f\u5ea6 PID\uff0c\u901f\u5ea6 PID \u53c8\u9a71\u52a8\u89d2\u5ea6 PID\uff0c\u89d2\u5ea6 PID \u6700\u7ec8\u9a71\u52a8\u89d2\u901f\u7387 PID\u3002","title":"\u63a7\u5236"},{"location":"simple_flight/#_4","text":"\u5728\u5f53\u524d\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6765\u81ea\u6a21\u62df\u5668\u7684\u771f\u5b9e\u503c\u8fdb\u884c\u72b6\u6001\u4f30\u8ba1\u3002\u6211\u4eec\u8ba1\u5212\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u6dfb\u52a0\u4e00\u4e2a\u57fa\u4e8e\u6ee4\u6ce2\u5668\u7684\u514d\u8d39\u72b6\u6001\u4f30\u8ba1\u5668\uff0c\u7528\u4e8e\u4f7f\u7528\u4e24\u4e2a\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\uff09\u8fdb\u884c\u89d2\u901f\u5ea6\u548c\u65b9\u5411\u4f30\u8ba1\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u4eec\u8ba1\u5212\u96c6\u6210\u53e6\u4e00\u4e2a\u5e93\uff0c\u4f7f\u7528 4 \u4e2a\u4f20\u611f\u5668\uff08\u9640\u87ba\u4eea\u3001\u52a0\u901f\u5ea6\u8ba1\u3001\u78c1\u529b\u8ba1\u548c\u6c14\u538b\u8ba1\uff09\u5e76\u7ed3\u5408\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668 (EKF) \u8fdb\u884c\u901f\u5ea6\u548c\u4f4d\u7f6e\u4f30\u8ba1\u3002\u5982\u679c\u60a8\u5728\u8fd9\u65b9\u9762\u6709\u7ecf\u9a8c\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u4e0e\u6211\u4eec\u4e92\u52a8\u5e76\u505a\u51fa\u8d21\u732e\uff01","title":"\u72b6\u6001\u4f30\u8ba1"},{"location":"simple_flight/#_5","text":"\u76ee\u524d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u6a21\u62df\u677f\u5b9e\u73b0\u4e86 simple_flight \u63a5\u53e3\u3002\u6211\u4eec\u8ba1\u5212\u5c06\u5176\u5b9e\u73b0\u5230 Pixhawk V2 \u677f\uff0c\u751a\u81f3\u53ef\u80fd\u5b9e\u73b0\u5230 Naze32 \u677f\u3002\u6211\u4eec\u9884\u8ba1\u6240\u6709\u4ee3\u7801\u5c06\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b9e\u73b0\u4e3b\u8981\u5305\u62ec\u4e3a\u5404\u79cd\u4f20\u611f\u5668\u6dfb\u52a0\u9a71\u52a8\u7a0b\u5e8f\u3001\u5904\u7406 ISR \u4ee5\u53ca\u7ba1\u7406\u5176\u4ed6\u677f\u7ea7\u76f8\u5173\u7ec6\u8282\u3002\u5982\u679c\u60a8\u5728\u8fd9\u65b9\u9762\u6709\u7ecf\u9a8c\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u4e0e\u6211\u4eec\u4e92\u52a8\u5e76\u505a\u51fa\u8d21\u732e\uff01","title":"\u652f\u6301\u7684\u4e3b\u677f"},{"location":"simple_flight/#_6","text":"\u8981\u8ba9 AirSim \u4f7f\u7528 simple_flight\uff0c\u60a8\u53ef\u4ee5\u5728 settings.json \u4e2d\u6307\u5b9a\u5b83\uff0c\u5982\u4e0b\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u660e\u786e\u6307\u5b9a\u3002 \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", } } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 simple_flight \u7684\u98de\u884c\u5668\u5df2\u7ecf\u5904\u4e8e\u6b66\u88c5\u72b6\u6001\uff0c\u56e0\u6b64\u4f60\u4f1a\u770b\u5230\u5b83\u7684\u87ba\u65cb\u6868\u5728\u65cb\u8f6c\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u8fd9\u6837\uff0c\u53ef\u4ee5\u5c06 DefaultVehicleState \u8bbe\u7f6e\u4e3a Inactive \uff0c\u5982\u4e0b\u6240\u793a\uff1a \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"DefaultVehicleState\": \"Inactive\" } } \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u624b\u52a8\u5c06\u9065\u63a7\u6447\u6746\u5411\u4e0b\u5411\u5185\u653e\u7f6e\uff0c\u6216\u4f7f\u7528 API \u8fdb\u884c\u89e3\u9501\u3002 \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u98de\u884c\u63a7\u5236\u5668\u4e0d\u5141\u8bb8 API \u63a7\u5236\uff0c\u9664\u975e\u64cd\u4f5c\u5458\u5df2\u901a\u8fc7\u9065\u63a7\u4e0a\u7684\u5f00\u5173\u540c\u610f\u4f7f\u7528 API\u3002\u6b64\u5916\uff0c\u5f53\u9065\u63a7\u5931\u53bb\u63a7\u5236\u65f6\uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u98de\u884c\u5668\u5e94\u7981\u7528 API \u63a7\u5236\u5e76\u8fdb\u5165\u60ac\u505c\u6a21\u5f0f\u3002\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\uff0csimple_flight \u9ed8\u8ba4\u542f\u7528 API \u63a7\u5236\uff0c\u65e0\u9700\u64cd\u4f5c\u5458\u540c\u610f\uff0c\u5373\u4f7f\u9065\u63a7\u672a\u88ab\u68c0\u6d4b\u5230\uff0c\u4e5f\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u3002\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bbe\u7f6e\u66f4\u6539\u6b64\u8bbe\u7f6e\uff1a \"Vehicles\": { \"SimpleFlight\": { \"VehicleType\": \"SimpleFlight\", \"AllowAPIAlways\": true, \"RC\": { \"RemoteControlID\": 0, \"AllowAPIWhenDisconnected\": true } } } \u6700\u540e\uff0csimple_flight \u9ed8\u8ba4\u4f7f\u7528\u6b65\u8fdb\u65f6\u949f\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u6a21\u62df\u5668\u53d1\u51fa\u6307\u4ee4\u65f6\uff0c\u65f6\u949f\u4f1a\u524d\u8fdb\uff08\u4e0d\u50cf\u6302\u949f\u90a3\u6837\u4e25\u683c\u6309\u7167\u65f6\u95f4\u7684\u63a8\u79fb\u524d\u8fdb\uff09\u3002\u8fd9\u610f\u5473\u7740\u65f6\u949f\u53ef\u4ee5\u6682\u505c\uff0c\u4f8b\u5982\uff0c\u5f53\u4ee3\u7801\u9047\u5230\u65ad\u70b9\u4e14\u65f6\u949f\u7684\u65b9\u5dee\u4e3a\u96f6\u65f6\uff08\u9664\u975e\u662f\u201c\u5b9e\u65f6\u201d\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5426\u5219\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u65f6\u949f API \u53ef\u80fd\u4f1a\u6709\u663e\u8457\u7684\u65b9\u5dee\uff09\u3002\u5982\u679c\u60a8\u5e0c\u671b simple_flight \u4f7f\u7528\u6302\u949f\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bbe\u7f6e\uff1a \"ClockType\": \"ScalableClock\"","title":"\u914d\u7f6e"},{"location":"steering_wheel_installation/","text":"\u7f57\u6280 G920 \u65b9\u5411\u76d8\u5b89\u88c5 # \u8981\u5c06 Logitech G920 \u65b9\u5411\u76d8\u4e0e AirSim \u914d\u5408\u4f7f\u7528\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u5c06\u65b9\u5411\u76d8\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u5e76\u7b49\u5f85\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u5b8c\u6210\u3002 \u4ece \u8fd9\u91cc \u5b89\u88c5 Logitech \u6e38\u620f\u8f6f\u4ef6 \u5728\u8c03\u8bd5\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5c06 AirSim \u4ee3\u7801\u4e2d\u7684\u503c\u6807\u51c6\u5316\u3002\u5728 CarPawn.cpp \u4e2d\u6267\u884c\u4ee5\u4e0b\u66f4\u6539\uff08\u6839\u636e git \u4e2d\u7684\u5f53\u524d\u66f4\u65b0\uff09\uff1a \u5728\u7b2c 382 \u884c\uff0c\u5c06\u201cVal\u201d\u66f4\u6539\u4e3a\u201c1 - Val\u201d\u3002\uff08[0.0,1.0] \u8303\u56f4\u5185\u7684\u8865\u7801\u503c\uff09\u3002 \u5728\u7b2c 404 \u884c\uff0c\u5c06\u201cVal\u201d\u66f4\u6539\u4e3a\u201c4(1 - Val)\u201d\u3002\uff08[0.0,1.0] \u8303\u56f4\u5185\u7684\u8865\u7801\u503c\uff09\u3002 \u8c03\u8bd5 AirSim \u9879\u76ee\uff08\u5728\u65b9\u5411\u76d8\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b - \u8fd9\u5f88\u91cd\u8981\uff09\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e0a\uff0c\u8f6c\u5230\u7f16\u8f91->\u63d2\u4ef6->\u8f93\u5165\u8bbe\u5907\u5e76\u542f\u7528\u201cWindows RawInput\u201d\u3002 \u8fdb\u5165\u7f16\u8f91->\u9879\u76ee\u8bbe\u7f6e->\u539f\u59cb\u8f93\u5165\uff0c\u6dfb\u52a0\u65b0\u7684\u8bbe\u5907\u914d\u7f6e\uff1a Vendor ID: 0x046d (\u5982\u679c\u662f Logitech G920\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u5b83). Product ID: 0xc261 (\u5982\u679c\u662f Logitech G920\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u5b83). \u5728\u201c\u8f74\u5c5e\u6027\u201d\u4e0b\uff0c\u786e\u4fdd\u201cGenericUSBController Axis 2\u201d\u3001\u201cGenericUSBController Axis 4\u201d\u548c\u201cGenericUSBController Axis 5\u201d\u5747\u5df2\u542f\u7528\uff0c\u504f\u79fb\u91cf\u4e3a 1.0\u3002 \u8bf4\u660e\uff1a\u8f74 2 \u8d1f\u8d23\u8f6c\u5411\uff0c\u8f74 4 \u8d1f\u8d23\u5239\u8f66\uff0c\u8f74 5 \u8d1f\u8d23\u6cb9\u95e8\u3002\u5982\u679c\u9700\u8981\u914d\u7f6e\u79bb\u5408\u5668\uff0c\u5219\u4f4d\u4e8e\u8f74 3 \u4e0a\u3002 \u8f6c\u5230\u7f16\u8f91->\u9879\u76ee\u8bbe\u7f6e->\u8f93\u5165\uff0c\u5728\u201c\u8f74\u6620\u5c04\u201d\u4e2d\u7684\u7ed1\u5b9a\u4e0b\uff1a \u4ece\u7ec4\u201cMoveRight\u201d\u548c\u201cMoveForward\u201d\u4e2d\u5220\u9664\u73b0\u6709\u6620\u5c04\u3002 \u4e3a\u7ec4\u201cMoveRight\u201d\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 2\uff0c\u6bd4\u4f8b\u4e3a 1.0\u3002 \u4e3a\u201cMoveForward\u201d\u7ec4\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 5\uff0c\u6bd4\u4f8b\u5c3a\u4e3a 1.0\u3002 \u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u547d\u540d\u4e3a\u201cFootBrake\u201d\uff0c\u5e76\u5411\u8be5\u7ec4\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 4\uff0c\u6bd4\u4f8b\u5c3a\u4e3a 1.0\u3002 \u8fb9\u73a9\u8fb9\u5f00\u8f66\uff01 \u6ce8\u610f # \u8bf7\u6ce8\u610f\uff0c\u5728\u8c03\u8bd5\u540e\u7b2c\u4e00\u6b21\u201c\u73a9\u201d\u65f6\uff0c\u6211\u4eec\u9700\u8981\u89e6\u6478\u8f6e\u5b50\u6765\u201c\u91cd\u7f6e\u201d\u503c\u3002 \u63d0\u793a # \u5728\u6e38\u620f\u8f6f\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u6309\u94ae\u914d\u7f6e\u4e3a\u952e\u76d8\u5feb\u6377\u952e\uff0c\u6211\u4eec\u7528\u5b83\u6765\u914d\u7f6e\u8bb0\u5f55\u6570\u636e\u96c6\u6216\u5168\u5c4f\u64ad\u653e\u7684\u5feb\u6377\u65b9\u5f0f\u3002","title":"\u65b9\u5411\u76d8"},{"location":"steering_wheel_installation/#g920","text":"\u8981\u5c06 Logitech G920 \u65b9\u5411\u76d8\u4e0e AirSim \u914d\u5408\u4f7f\u7528\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u5c06\u65b9\u5411\u76d8\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u5e76\u7b49\u5f85\u9a71\u52a8\u7a0b\u5e8f\u5b89\u88c5\u5b8c\u6210\u3002 \u4ece \u8fd9\u91cc \u5b89\u88c5 Logitech \u6e38\u620f\u8f6f\u4ef6 \u5728\u8c03\u8bd5\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5c06 AirSim \u4ee3\u7801\u4e2d\u7684\u503c\u6807\u51c6\u5316\u3002\u5728 CarPawn.cpp \u4e2d\u6267\u884c\u4ee5\u4e0b\u66f4\u6539\uff08\u6839\u636e git \u4e2d\u7684\u5f53\u524d\u66f4\u65b0\uff09\uff1a \u5728\u7b2c 382 \u884c\uff0c\u5c06\u201cVal\u201d\u66f4\u6539\u4e3a\u201c1 - Val\u201d\u3002\uff08[0.0,1.0] \u8303\u56f4\u5185\u7684\u8865\u7801\u503c\uff09\u3002 \u5728\u7b2c 404 \u884c\uff0c\u5c06\u201cVal\u201d\u66f4\u6539\u4e3a\u201c4(1 - Val)\u201d\u3002\uff08[0.0,1.0] \u8303\u56f4\u5185\u7684\u8865\u7801\u503c\uff09\u3002 \u8c03\u8bd5 AirSim \u9879\u76ee\uff08\u5728\u65b9\u5411\u76d8\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b - \u8fd9\u5f88\u91cd\u8981\uff09\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e0a\uff0c\u8f6c\u5230\u7f16\u8f91->\u63d2\u4ef6->\u8f93\u5165\u8bbe\u5907\u5e76\u542f\u7528\u201cWindows RawInput\u201d\u3002 \u8fdb\u5165\u7f16\u8f91->\u9879\u76ee\u8bbe\u7f6e->\u539f\u59cb\u8f93\u5165\uff0c\u6dfb\u52a0\u65b0\u7684\u8bbe\u5907\u914d\u7f6e\uff1a Vendor ID: 0x046d (\u5982\u679c\u662f Logitech G920\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u5b83). Product ID: 0xc261 (\u5982\u679c\u662f Logitech G920\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u5b83). \u5728\u201c\u8f74\u5c5e\u6027\u201d\u4e0b\uff0c\u786e\u4fdd\u201cGenericUSBController Axis 2\u201d\u3001\u201cGenericUSBController Axis 4\u201d\u548c\u201cGenericUSBController Axis 5\u201d\u5747\u5df2\u542f\u7528\uff0c\u504f\u79fb\u91cf\u4e3a 1.0\u3002 \u8bf4\u660e\uff1a\u8f74 2 \u8d1f\u8d23\u8f6c\u5411\uff0c\u8f74 4 \u8d1f\u8d23\u5239\u8f66\uff0c\u8f74 5 \u8d1f\u8d23\u6cb9\u95e8\u3002\u5982\u679c\u9700\u8981\u914d\u7f6e\u79bb\u5408\u5668\uff0c\u5219\u4f4d\u4e8e\u8f74 3 \u4e0a\u3002 \u8f6c\u5230\u7f16\u8f91->\u9879\u76ee\u8bbe\u7f6e->\u8f93\u5165\uff0c\u5728\u201c\u8f74\u6620\u5c04\u201d\u4e2d\u7684\u7ed1\u5b9a\u4e0b\uff1a \u4ece\u7ec4\u201cMoveRight\u201d\u548c\u201cMoveForward\u201d\u4e2d\u5220\u9664\u73b0\u6709\u6620\u5c04\u3002 \u4e3a\u7ec4\u201cMoveRight\u201d\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 2\uff0c\u6bd4\u4f8b\u4e3a 1.0\u3002 \u4e3a\u201cMoveForward\u201d\u7ec4\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 5\uff0c\u6bd4\u4f8b\u5c3a\u4e3a 1.0\u3002 \u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u547d\u540d\u4e3a\u201cFootBrake\u201d\uff0c\u5e76\u5411\u8be5\u7ec4\u6dfb\u52a0\u65b0\u7684\u8f74\u6620\u5c04\uff0c\u4f7f\u7528 GenericUSBController \u8f74 4\uff0c\u6bd4\u4f8b\u5c3a\u4e3a 1.0\u3002 \u8fb9\u73a9\u8fb9\u5f00\u8f66\uff01","title":"\u7f57\u6280 G920 \u65b9\u5411\u76d8\u5b89\u88c5"},{"location":"steering_wheel_installation/#_1","text":"\u8bf7\u6ce8\u610f\uff0c\u5728\u8c03\u8bd5\u540e\u7b2c\u4e00\u6b21\u201c\u73a9\u201d\u65f6\uff0c\u6211\u4eec\u9700\u8981\u89e6\u6478\u8f6e\u5b50\u6765\u201c\u91cd\u7f6e\u201d\u503c\u3002","title":"\u6ce8\u610f"},{"location":"steering_wheel_installation/#_2","text":"\u5728\u6e38\u620f\u8f6f\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u6309\u94ae\u914d\u7f6e\u4e3a\u952e\u76d8\u5feb\u6377\u952e\uff0c\u6211\u4eec\u7528\u5b83\u6765\u914d\u7f6e\u8bb0\u5f55\u6570\u636e\u96c6\u6216\u5168\u5c4f\u64ad\u653e\u7684\u5feb\u6377\u65b9\u5f0f\u3002","title":"\u63d0\u793a"},{"location":"unreal_blocks/","text":"\u4e3a AirSim \u8bbe\u7f6e Blocks \u73af\u5883 # Blocks \u73af\u5883\u4f4d\u4e8e\u4ee3\u7801\u5e93\u7684 Unreal/Environments/Blocks \u6587\u4ef6\u5939\u4e2d\uff0c\u5176\u8bbe\u8ba1\u975e\u5e38\u8f7b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u5b83\u975e\u5e38\u57fa\u7840\uff0c\u4f46\u8fd0\u884c\u901f\u5ea6\u5f88\u5feb\u3002 \u4ee5\u4e0b\u662f\u542f\u52a8\u548c\u8fd0\u884c Blocks \u73af\u5883\u7684\u5feb\u901f\u6b65\u9aa4\uff1a Windows # \u786e\u4fdd\u4f60\u5df2\u7ecf \u5b89\u88c5\u4e86 Unreal \u5e76\u6784\u5efa\u4e86 AirSim \u3002 \u5bfc\u822a\u5230\u6587\u4ef6\u5939 AirSim\\Unreal\\Environments\\Blocks \uff0c\u53cc\u51fb Blocks.sln \u6587\u4ef6\u4ee5\u5728 Visual Studio \u4e2d\u6253\u5f00\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u76ee\u914d\u7f6e\u4e3a Visual Studio 2019\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u4e3a Visual Studio 2022 \u751f\u6210\u6b64\u9879\u76ee\uff0c\u8bf7\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879->\u6e90\u4ee3\u7801\u201d\uff0c\u5e76\u5728\u201c\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u201d\u8bbe\u7f6e\u4e2d\u9009\u62e9\u201cVisual Studio 2022\u201d\u3002 \u786e\u4fdd Blocks \u9879\u76ee\u662f\u542f\u52a8\u9879\u76ee\uff0c\u6784\u5efa\u914d\u7f6e\u8bbe\u7f6e\u4e3a DebugGame_Editor \u548c Win64 \u3002\u6309 F5 \u8fd0\u884c\u3002 \u6309\u4e0b\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u89c6\u9891\u7684\u5185\u5bb9\u3002\u53e6\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u5efa # \u5bf9\u4e8e Windows\uff0c\u60a8\u53ea\u9700\u5728 Visual Studio \u4e2d\u66f4\u6539\u4ee3\u7801\uff0c\u6309 F5 \u5e76\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\u3002 AirSim\\Unreal\\Environments\\Blocks \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e9b\u6279\u5904\u7406\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u540c\u6b65\u4ee3\u7801\u3001\u6e05\u7406\u4ee3\u7801\u7b49\u3002 Linux # \u786e\u4fdd\u4f60\u5df2\u7ecf \u6784\u5efa\u4e86\u865a\u5e7b\u5f15\u64ce\u548c AirSim \u3002 \u5bfc\u822a\u5230\u60a8\u7684 UnrealEngine repo \u6587\u4ef6\u5939\u5e76\u8fd0\u884c Engine/Binaries/Linux/UE4Editor \uff0c\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u9996\u6b21\u542f\u52a8\u65f6\uff0c\u60a8\u53ef\u80fd\u5728 UE4 \u7f16\u8f91\u5668\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u9879\u76ee\u3002\u70b9\u51fb\u201c\u9879\u76ee\u201d\u9009\u9879\u5361\uff0c\u70b9\u51fb\u201c\u6d4f\u89c8\u201d\u6309\u94ae\uff0c\u7136\u540e\u5bfc\u822a\u5230 AirSim/Unreal/Environments/Blocks/Blocks.uproject \u3002 \u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7248\u672c\u4e0d\u517c\u5bb9\u6216\u8f6c\u6362\u4e0d\u517c\u5bb9\uff0c\u8bf7\u9009\u62e9\u201c\u5c31\u5730\u8f6c\u6362\u201d\uff0c\u8be5\u9009\u9879\u901a\u5e38\u4f4d\u4e8e\u201c\u66f4\u591a\u201d\u9009\u9879\u4e0b\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7f3a\u5c11\u6a21\u5757\uff0c\u8bf7\u786e\u4fdd\u9009\u62e9\u201c\u5426\u201d\uff0c\u4ee5\u514d\u9000\u51fa\u3002 \u6700\u540e\uff0c\u5f53\u63d0\u793a\u662f\u5426\u6784\u5efa AirSim \u65f6\uff0c\u9009\u62e9\u201c\u662f\u201d\u3002\u73b0\u5728\u53ef\u80fd\u9700\u8981\u4e00\u70b9\u65f6\u95f4\uff0c\u6240\u4ee5\u53bb\u559d\u676f\u5496\u5561\u5427 :)\u3002 \u6309\u4e0b\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u89c6\u9891\u7684\u5185\u5bb9\u3002\u53e6\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u5efa # \u5bf9\u4e8e Linux\uff0c\u8bf7\u5728 AirLib \u6216 Unreal/Plugins \u6587\u4ef6\u5939\u4e2d\u66f4\u6539\u4ee3\u7801\uff0c\u7136\u540e\u8fd0\u884c ./build.sh \u8fdb\u884c\u91cd\u5efa\u3002\u6b64\u6b65\u9aa4\u8fd8\u4f1a\u5c06\u6784\u5efa\u8f93\u51fa\u590d\u5236\u5230 Blocks \u793a\u4f8b\u9879\u76ee\u4e2d\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u518d\u6b21\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u91cd\u65b0\u8fd0\u884c\u3002 \u9009\u62e9\u60a8\u7684\u8f66\u8f86\uff1a\u6c7d\u8f66\u6216\u591a\u65cb\u7ffc\u98de\u884c\u5668 # AirSim \u9ed8\u8ba4\u4f1a\u751f\u6210\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002\u60a8\u53ef\u4ee5\u8f7b\u677e\u5c06\u5176\u66f4\u6539\u4e3a\u6c7d\u8f66\uff0c\u5e76\u4f7f\u7528 AirSim \u7684\u6240\u6709\u529f\u80fd\u3002\u8bf7\u53c2\u9605 \u4f7f\u7528\u6c7d\u8f66 \u6307\u5357\u3002 FAQ # \u6211\u770b\u5230\u6709\u5173\u201c_BuitData\u201d\u6587\u4ef6\u4e22\u5931\u7684\u8b66\u544a\u3002 # \u8fd9\u4e9b\u662f\u4e2d\u95f4\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u653e\u5fc3\u5730\u5ffd\u7565\u5b83\u3002","title":"Blocks \u73af\u5883"},{"location":"unreal_blocks/#airsim-blocks","text":"Blocks \u73af\u5883\u4f4d\u4e8e\u4ee3\u7801\u5e93\u7684 Unreal/Environments/Blocks \u6587\u4ef6\u5939\u4e2d\uff0c\u5176\u8bbe\u8ba1\u975e\u5e38\u8f7b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u5b83\u975e\u5e38\u57fa\u7840\uff0c\u4f46\u8fd0\u884c\u901f\u5ea6\u5f88\u5feb\u3002 \u4ee5\u4e0b\u662f\u542f\u52a8\u548c\u8fd0\u884c Blocks \u73af\u5883\u7684\u5feb\u901f\u6b65\u9aa4\uff1a","title":"\u4e3a AirSim \u8bbe\u7f6e Blocks \u73af\u5883"},{"location":"unreal_blocks/#windows","text":"\u786e\u4fdd\u4f60\u5df2\u7ecf \u5b89\u88c5\u4e86 Unreal \u5e76\u6784\u5efa\u4e86 AirSim \u3002 \u5bfc\u822a\u5230\u6587\u4ef6\u5939 AirSim\\Unreal\\Environments\\Blocks \uff0c\u53cc\u51fb Blocks.sln \u6587\u4ef6\u4ee5\u5728 Visual Studio \u4e2d\u6253\u5f00\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u76ee\u914d\u7f6e\u4e3a Visual Studio 2019\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u4e3a Visual Studio 2022 \u751f\u6210\u6b64\u9879\u76ee\uff0c\u8bf7\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u9996\u9009\u9879->\u6e90\u4ee3\u7801\u201d\uff0c\u5e76\u5728\u201c\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u201d\u8bbe\u7f6e\u4e2d\u9009\u62e9\u201cVisual Studio 2022\u201d\u3002 \u786e\u4fdd Blocks \u9879\u76ee\u662f\u542f\u52a8\u9879\u76ee\uff0c\u6784\u5efa\u914d\u7f6e\u8bbe\u7f6e\u4e3a DebugGame_Editor \u548c Win64 \u3002\u6309 F5 \u8fd0\u884c\u3002 \u6309\u4e0b\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u89c6\u9891\u7684\u5185\u5bb9\u3002\u53e6\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002","title":"Windows"},{"location":"unreal_blocks/#_1","text":"\u5bf9\u4e8e Windows\uff0c\u60a8\u53ea\u9700\u5728 Visual Studio \u4e2d\u66f4\u6539\u4ee3\u7801\uff0c\u6309 F5 \u5e76\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\u3002 AirSim\\Unreal\\Environments\\Blocks \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e9b\u6279\u5904\u7406\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u540c\u6b65\u4ee3\u7801\u3001\u6e05\u7406\u4ee3\u7801\u7b49\u3002","title":"\u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u5efa"},{"location":"unreal_blocks/#linux","text":"\u786e\u4fdd\u4f60\u5df2\u7ecf \u6784\u5efa\u4e86\u865a\u5e7b\u5f15\u64ce\u548c AirSim \u3002 \u5bfc\u822a\u5230\u60a8\u7684 UnrealEngine repo \u6587\u4ef6\u5939\u5e76\u8fd0\u884c Engine/Binaries/Linux/UE4Editor \uff0c\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u9996\u6b21\u542f\u52a8\u65f6\uff0c\u60a8\u53ef\u80fd\u5728 UE4 \u7f16\u8f91\u5668\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u9879\u76ee\u3002\u70b9\u51fb\u201c\u9879\u76ee\u201d\u9009\u9879\u5361\uff0c\u70b9\u51fb\u201c\u6d4f\u89c8\u201d\u6309\u94ae\uff0c\u7136\u540e\u5bfc\u822a\u5230 AirSim/Unreal/Environments/Blocks/Blocks.uproject \u3002 \u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7248\u672c\u4e0d\u517c\u5bb9\u6216\u8f6c\u6362\u4e0d\u517c\u5bb9\uff0c\u8bf7\u9009\u62e9\u201c\u5c31\u5730\u8f6c\u6362\u201d\uff0c\u8be5\u9009\u9879\u901a\u5e38\u4f4d\u4e8e\u201c\u66f4\u591a\u201d\u9009\u9879\u4e0b\u3002\u5982\u679c\u7cfb\u7edf\u63d0\u793a\u60a8\u7f3a\u5c11\u6a21\u5757\uff0c\u8bf7\u786e\u4fdd\u9009\u62e9\u201c\u5426\u201d\uff0c\u4ee5\u514d\u9000\u51fa\u3002 \u6700\u540e\uff0c\u5f53\u63d0\u793a\u662f\u5426\u6784\u5efa AirSim \u65f6\uff0c\u9009\u62e9\u201c\u662f\u201d\u3002\u73b0\u5728\u53ef\u80fd\u9700\u8981\u4e00\u70b9\u65f6\u95f4\uff0c\u6240\u4ee5\u53bb\u559d\u676f\u5496\u5561\u5427 :)\u3002 \u6309\u4e0b\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u89c6\u9891\u7684\u5185\u5bb9\u3002\u53e6\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002","title":"Linux"},{"location":"unreal_blocks/#_2","text":"\u5bf9\u4e8e Linux\uff0c\u8bf7\u5728 AirLib \u6216 Unreal/Plugins \u6587\u4ef6\u5939\u4e2d\u66f4\u6539\u4ee3\u7801\uff0c\u7136\u540e\u8fd0\u884c ./build.sh \u8fdb\u884c\u91cd\u5efa\u3002\u6b64\u6b65\u9aa4\u8fd8\u4f1a\u5c06\u6784\u5efa\u8f93\u51fa\u590d\u5236\u5230 Blocks \u793a\u4f8b\u9879\u76ee\u4e2d\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u518d\u6b21\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u91cd\u65b0\u8fd0\u884c\u3002","title":"\u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u5efa"},{"location":"unreal_blocks/#_3","text":"AirSim \u9ed8\u8ba4\u4f1a\u751f\u6210\u591a\u65cb\u7ffc\u98de\u884c\u5668\u3002\u60a8\u53ef\u4ee5\u8f7b\u677e\u5c06\u5176\u66f4\u6539\u4e3a\u6c7d\u8f66\uff0c\u5e76\u4f7f\u7528 AirSim \u7684\u6240\u6709\u529f\u80fd\u3002\u8bf7\u53c2\u9605 \u4f7f\u7528\u6c7d\u8f66 \u6307\u5357\u3002","title":"\u9009\u62e9\u60a8\u7684\u8f66\u8f86\uff1a\u6c7d\u8f66\u6216\u591a\u65cb\u7ffc\u98de\u884c\u5668"},{"location":"unreal_blocks/#faq","text":"","title":"FAQ"},{"location":"unreal_blocks/#_buitdata","text":"\u8fd9\u4e9b\u662f\u4e2d\u95f4\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u653e\u5fc3\u5730\u5ffd\u7565\u5b83\u3002","title":"\u6211\u770b\u5230\u6709\u5173\u201c_BuitData\u201d\u6587\u4ef6\u4e22\u5931\u7684\u8b66\u544a\u3002"},{"location":"unreal_custenv/","text":"\u521b\u5efa\u548c\u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 # \u672c\u9875\u5305\u542b\u4f7f\u7528 AirSim \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883\u7684\u5b8c\u6574\u8bf4\u660e\u3002\u865a\u5e7b\u5546\u57ce (Unreal Marketplace) \u63d0\u4f9b\u4e86 \u591a\u4e2a\u73af\u5883 \uff0c\u60a8\u53ea\u9700\u51e0\u5206\u949f\u5373\u53ef\u5f00\u59cb\u4f7f\u7528\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 turbosquid.com \u6216 cgitrader.com \u7b49\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u73af\u5883\uff0c\u4f46\u9700\u8981\u7a0d\u52a0\u52aa\u529b\uff08\u70b9\u51fb\u6b64\u5904\u89c2\u770b \u6559\u7a0b\u89c6\u9891 \uff09\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u51e0\u4e2a \u514d\u8d39\u73af\u5883 \u53ef\u4f9b\u4f7f\u7528\u3002 \u4e0b\u9762\u6211\u4eec\u5c06\u4f7f\u7528\u865a\u5e7b\u5e02\u573a\u4e2d\u53ef\u514d\u8d39\u4e0b\u8f7d\u7684\u73af\u5883\uff0c\u540d\u4e3a Landscape Mountain\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u73af\u5883\uff0c\u6b65\u9aa4\u90fd\u662f\u76f8\u540c\u7684\u3002 Linux \u7528\u6237\u987b\u77e5 # Linux \u4e0a\u6ca1\u6709 Epic Games Launcher \uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\uff0c\u5219\u9700\u8981 Windows \u8bbe\u5907\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u83b7\u53d6 Unreal \u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c\u53ea\u9700\u5c06\u5176\u590d\u5236\u5230\u60a8\u7684 Linux \u8bbe\u5907\u4e0a\u5373\u53ef\u3002 \u5206\u6b65\u8bf4\u660e # \u786e\u4fdd\u5df2\u6784\u5efa AirSim \u5e76\u5df2\u5b89\u88c5 Unreal 4.27\uff0c\u5982 \u6784\u5efa\u8bf4\u660e \u4e2d\u6240\u8ff0\u3002 \u5728 Epic Games Launcher \u4e2d\uff0c\u70b9\u51fb\u201cLearn\u201d\u9009\u9879\u5361\uff0c\u5411\u4e0b\u6eda\u52a8\u627e\u5230 Landscape Mountains \u3002\u70b9\u51fb Create Project \u5e76\u4e0b\u8f7d\u6b64\u5185\u5bb9\uff08\u4e0b\u8f7d\u91cf\u7ea6 2GB\uff09\u3002 \u6253\u5f00 LandscapeMountains.uproject \uff0c\u5b83\u5e94\u8be5\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u6ce8\u610f \u666f\u89c2\u5c71\u8109(Landscape Mountains)\u9879\u76ee\u6700\u9ad8\u652f\u6301\u865a\u5e7b\u5f15\u64ce 4.24 \u7248\u672c\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5 4.24 \u7248\u672c\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u540d\u4e3a Select Unreal Engine Version (\u9009\u62e9\u865a\u5e7b\u5f15\u64ce\u7248\u672c)\u7684\u5bf9\u8bdd\u6846\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u4e0b\u62c9\u83dc\u5355\uff0c\u7528\u4e8e\u4ece\u5df2\u5b89\u88c5\u7684\u7248\u672c\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u9009\u62e9 4.27 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5373\u53ef\u5c06\u9879\u76ee\u8fc1\u79fb\u5230\u652f\u6301\u7684\u5f15\u64ce\u7248\u672c\u3002\u5982\u679c\u60a8\u5df2\u5b89\u88c5 4.24 \u7248\u672c\uff0c\u5219\u53ef\u4ee5\u624b\u52a8\u8fc1\u79fb\u9879\u76ee\uff0c\u65b9\u6cd5\u662f\uff1a\u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u5bfc\u822a\u5230\u76f8\u5e94\u7684 .uproject \u6587\u4ef6\uff0c\u53f3\u952e\u5355\u51fb\u8be5\u6587\u4ef6\uff0c\u7136\u540e\u9009\u62e9 Switch Unreal Engine version... (\u5207\u6362\u865a\u5e7b\u5f15\u64ce\u7248\u672c...)\u9009\u9879\u3002 \u4ece File \u83dc\u5355\u4e2d\u9009\u62e9 New C++ class \uff0c\u7c7b\u7c7b\u578b\u4fdd\u7559\u9ed8\u8ba4 None \uff0c\u70b9\u51fb Next \uff0c\u4fdd\u7559\u9ed8\u8ba4\u540d\u79f0 MyClass \uff0c\u7136\u540e\u70b9\u51fb Create Class \u3002\u6211\u4eec\u9700\u8981\u8fd9\u6837\u505a\u662f\u56e0\u4e3a Unreal \u8981\u6c42\u9879\u76ee\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u3002\u5b83\u4f1a\u89e6\u53d1\u7f16\u8bd1\u5e76\u6253\u5f00 Visual Studio \u89e3\u51b3\u65b9\u6848 LandscapeMountains.sln \u3002 \u524d\u5f80\u4f60\u7684 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff0c\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 LandscapeMountains \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u6837\uff0c\u4f60\u7684 Unreal \u9879\u76ee\u5c31\u62e5\u6709\u4e86 AirSim \u63d2\u4ef6\u3002 \u6ce8\u610f \u5982\u679c AirSim \u5b89\u88c5\u662f\u5168\u65b0\u5b89\u88c5\u7684\uff0c\u5373\u4e4b\u524d\u4ece\u672a\u6784\u5efa\u8fc7\uff0c\u8bf7\u786e\u4fdd\u5728\u590d\u5236 Unreal\\Plugins \u6587\u4ef6\u5939\u4e4b\u524d\uff0c\u5148\u4ece\u6839\u76ee\u5f55\u8fd0\u884c\u4e00\u6b21 build.cmd \uff0c\u4ee5\u4fbf AirLib \u6587\u4ef6\u4e5f\u5305\u542b\u5728\u5185\u3002\u5982\u679c\u60a8\u5728 Blocks \u73af\u5883\u4e2d\u8fdb\u884c\u4e86\u67d0\u4e9b\u66f4\u6539\uff0c\u8bf7\u786e\u4fdd\u4ece Unreal\\Environments\\Blocks \u8fd0\u884c update_to_git.bat \u6765\u66f4\u65b0 Unreal\\Plugins \u4e2d\u7684\u6587\u4ef6\u3002 \u7f16\u8f91 LandscapeMountains.uproject \uff0c\u4f7f\u5176\u770b\u8d77\u6765\u50cf\u8fd9\u6837 { \"FileVersion\" : 3 , \"EngineAssociation\" : \"4.27\" , \"Category\" : \"Samples\" , \"Description\" : \"\" , \"Modules\" : [ { \"Name\" : \"LandscapeMountains\" , \"Type\" : \"Runtime\" , \"LoadingPhase\" : \"Default\" , \"AdditionalDependencies\" : [ \"AirSim\" ] } ], \"TargetPlatforms\" : [ \"MacNoEditor\" , \"WindowsNoEditor\" ], \"Plugins\" : [ { \"Name\" : \"AirSim\" , \"Enabled\" : true } ] } \u7f16\u8f91 Config\\DefaultGame.ini \u5e76\u5728\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \u8fd9\u6837\u505a\u4f1a\u5f3a\u5236\u865a\u5e7b\u5f15\u64ce\u5c06\u6240\u6709\u5fc5\u8981\u7684 AirSim \u5185\u5bb9\u5305\u542b\u5728\u9879\u76ee\u7684\u6253\u5305\u7248\u672c\u4e2d\u3002 \u5173\u95ed Visual Studio \u548c Unreal Editor \uff0c\u7136\u540e\u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u53f3\u952e\u5355\u51fb LandscapeMountains.u \u9879\u76ee\uff0c\u5e76\u9009\u62e9 Generate Visual Studio Project Files \u3002\u6b64\u6b65\u9aa4\u5c06\u68c0\u6d4b\u865a\u5e7b\u9879\u76ee\u4e2d\u7684\u6240\u6709\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e3a Visual Studio \u751f\u6210 .sln \u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u7f3a\u5c11 Generate Visual Studio Project Files \u9009\u9879\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u8ba1\u7b97\u673a\u4ee5\u4f7f Unreal Shell \u6269\u5c55\u751f\u6548\u3002\u5982\u679c\u4ecd\u7136\u7f3a\u5c11\u6b64\u9009\u9879\uff0c\u8bf7\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 LandscapeMountains.uproject\uff0c\u7136\u540e\u4ece File \u83dc\u5355\u4e2d\u9009\u62e9 Refresh Visual Studio Project \u3002 \u5728 Visual Studio \u4e2d\u91cd\u65b0\u6253\u5f00 LandscapeMountains.sln \uff0c\u5e76\u786e\u4fdd\u201cDebugGame Editor\u201d\u548c\u201cWin64\u201d\u6784\u5efa\u914d\u7f6e\u662f\u6d3b\u52a8\u6784\u5efa\u914d\u7f6e\u3002 \u6309 F5 \u6765\u8fd0\u884c\u3002\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u865a\u5e7b\u7f16\u8f91\u5668\u5141\u8bb8\u60a8\u7f16\u8f91\u73af\u5883\u3001\u8d44\u6e90\u548c\u5176\u4ed6\u6e38\u620f\u76f8\u5173\u8bbe\u7f6e\u3002\u60a8\u9996\u5148\u9700\u8981\u5728\u73af\u5883\u4e2d\u8bbe\u7f6e PlayerStart \u5bf9\u8c61\u3002\u5728 Landscape Mountains \u73af\u5883\u4e2d\uff0cPlayerStart \u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 World Outliner \u4e2d\u627e\u5230\u5b83\u3002\u786e\u4fdd\u5176\u4f4d\u7f6e\u8bbe\u7f6e\u5982\u56fe\u6240\u793a\u3002AirSim \u63d2\u4ef6\u5c06\u5728\u6b64\u5904\u521b\u5efa\u5e76\u653e\u7f6e\u8f66\u8f86\u3002\u5982\u679c\u4f4d\u7f6e\u8fc7\u9ad8\uff0c\u8f66\u8f86\u4f1a\u5728\u60a8\u6309\u4e0b\u64ad\u653e\u952e\u65f6\u7acb\u5373\u5760\u843d\uff0c\u4ece\u800c\u4ea7\u751f\u6f5c\u5728\u7684\u968f\u673a\u884c\u4e3a\u3002 \u5728\u5982\u4e0b\u6240\u793a\u7684 Window/World Settings \u4e2d\uff0c\u5c06 GameMode Override \u8bbe\u7f6e\u4e3a AirSimGameMode \uff1a \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u524d\u5f80\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u201c\u5728\u540e\u53f0\u8fd0\u884c\u65f6\u4f7f\u7528\u8f83\u5c11 CPU\u201d(Use Less CPU when in Background) \u672a\u52fe\u9009\u3002\u5982\u679c\u4e0d\u52fe\u9009\uff0c\u5f53\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u5931\u53bb\u7126\u70b9\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7684\u901f\u5ea6\u5c06\u663e\u8457\u4e0b\u964d\u3002 \u8bf7\u52a1\u5fc5 \u4fdd\u5b58 \u8fd9\u4e9b\u7f16\u8f91\u3002\u70b9\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\u3002\u4e86\u89e3 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u606d\u559c\uff01\u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u8fd0\u884c AirSim \u4e86\u3002 \u9009\u62e9\u60a8\u7684\u8f66\u8f86\uff1a\u6c7d\u8f66\u6216\u591a\u65cb\u7ffc\u98de\u884c\u5668 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f1a\u63d0\u793a\u7528\u6237\u9009\u62e9\u8981\u4f7f\u7528\u7684\u8f66\u8f86\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e SimMode \u8f7b\u677e\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002\u8bf7\u53c2\u9605 \u4f7f\u7528\u8f66\u8f86 \u6307\u5357\u3002 \u5c06\u60a8\u7684\u73af\u5883\u66f4\u65b0\u81f3\u6700\u65b0\u7248\u672c\u7684 AirSim # \u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u642d\u5efa\u597d\u73af\u5883\u540e\uff0c\u4f60\u9700\u8981\u7ecf\u5e38\u4ece GitHub \u66f4\u65b0\u672c\u5730 AirSim \u4ee3\u7801\u5230\u6700\u65b0\u7248\u672c\u3002\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a \u9996\u5148\u5c06 clean.bat \uff08Linux \u7528\u6237\u8bf7\u5c06 clean.sh \uff09\u653e\u5165\u73af\u5883\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u8fd0\u884c\u6b64\u6587\u4ef6\u53ef\u4ee5\u6e05\u7406 \u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u7684\u6240\u6709\u4e2d\u95f4\u6587\u4ef6\u3002 \u5728\u60a8\u7684 AirSim repo \u4e2d\u6267\u884c git pull \uff0c\u7136\u540e\u6267\u884c build.cmd \uff08\u5bf9\u4e8e Linux \u7528\u6237\uff0c\u6267\u884c\u201c./build.sh\u201d\uff09\u3002 \u5c06 [your project]/Plugins \u6587\u4ef6\u5939\u66ff\u6362\u4e3a AirSim/Unreal/Plugins \u6587\u4ef6\u5939\u3002 \u53f3\u952e\u5355\u51fb .uproject \u6587\u4ef6\uff0c\u7136\u540e\u9009\u62e9\u201cGenerate Visual Studio project files\u201d\u9009\u9879\u3002Linux \u7cfb\u7edf\u65e0\u9700\u6267\u884c\u6b64\u64cd\u4f5c\u3002 FAQ # \u8fd8\u6709\u54ea\u4e9b\u5f88\u9177\u7684\u73af\u5883\uff1f # \u865a\u5e7b\u5546\u57ce \u62e5\u6709\u6570\u5341\u4e2a\u9884\u5148\u6784\u5efa\u7684\u6781\u5176\u7cbe\u7ec6\u7684 \u73af\u5883 \uff0c\u6db5\u76d6\u4ece\u6708\u7403\u5230\u706b\u661f\u7b49\u5404\u79cd\u573a\u666f\u3002\u6211\u4eec\u7528\u4e8e\u6d4b\u8bd5\u7684\u73af\u5883\u540d\u4e3a\u201c\u6a21\u5757\u5316\u90bb\u91cc\u5305 ( Modular Neighborhood Pack )\u201d\uff0c\u4f46\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u73af\u5883\u3002\u53e6\u4e00\u4e2a\u514d\u8d39\u73af\u5883\u662f\u201c\u65e0\u5c3d\u4e4b\u5251 ( Infinity Blade \u7cfb\u5217 )\u201d\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u5728 Epic Game Launcher \u7684\u201c\u5b66\u4e60 (Learn)\u201d\u9009\u9879\u5361\u4e0b\u67e5\u770b\uff0c\u60a8\u4f1a\u53d1\u73b0\u8bb8\u591a\u53ef\u7528\u7684\u514d\u8d39\u793a\u4f8b\u3002\u6211\u4eec\u6700\u559c\u6b22\u7684\u4e00\u4e2a\u662f\u201c\u7537\u5b69\u548c\u4ed6\u7684\u98ce\u7b5d (A Boy and His Kite)\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a 100 \u5e73\u65b9\u82f1\u91cc\uff08\u7ea6 100 \u5e73\u65b9\u82f1\u91cc\uff09\u7684\u9ad8\u7cbe\u5ea6\u73af\u5883\uff08\u6ce8\u610f\uff1a\u60a8\u9700\u8981 \u975e\u5e38 \u5f3a\u5927\u7684 PC \u624d\u80fd\u8fd0\u884c\u5b83\uff01\uff09\u3002 \u5f53\u6211\u6309\u4e0b\u64ad\u653e\u6309\u94ae\u65f6\uff0c\u67d0\u79cd\u89c6\u9891\u5f00\u59cb\u64ad\u653e\uff0c\u800c\u4e0d\u662f\u6211\u7684\u8f66\u8f86\u3002 # \u5982\u679c\u73af\u5883\u81ea\u5e26 MatineeActor\uff0c\u8bf7\u5c06\u5176\u5220\u9664\u4ee5\u907f\u514d\u4efb\u4f55\u542f\u52a8\u6f14\u793a\u5e8f\u5217\u3002\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u5220\u9664\u5b83\uff0c\u4f8b\u5982\uff0c\u70b9\u51fb\u201c\u84dd\u56fe\u201d\u6309\u94ae\uff0c\u7136\u540e\u70b9\u51fb\u201c\u5173\u5361\u84dd\u56fe\u201d\uff0c\u7136\u540e\u67e5\u770b\u201c\u4e8b\u4ef6\u56fe\u8868\u201d\u4e2d\u7684\u201c\u5f00\u59cb\u64ad\u653e\u201d\u4e8b\u4ef6\u3002\u60a8\u53ef\u80fd\u9700\u8981\u65ad\u5f00\u6240\u6709\u53ef\u80fd\u6b63\u5728\u542f\u52a8\u201cmatinee\u201d\u7684\u8fde\u63a5\u3002 \u6709\u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u5c06\u6211\u7684\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u4e0e AirSim repo \u4e2d\u7684\u4ee3\u7801\u540c\u6b65\uff1f # \u5f53\u7136\u6709\uff01\u4f60\u53ef\u4ee5\u5728 AirSim\\Unreal\\Environments\\Blocks \u4e2d\u627e\u5230\u4e00\u5806 .bat \u6587\u4ef6\uff08Linux \u7cfb\u7edf\u4e0b\u4e3a .sh \uff09\u3002\u53ea\u9700\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4f60\u81ea\u5df1\u7684\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u5373\u53ef\u3002\u5176\u4e2d\u5927\u591a\u6570\u90fd\u975e\u5e38\u7b80\u5355\u6613\u61c2\u3002 \u6211\u6536\u5230\u4e00\u4e9b\u6709\u5173\u5730\u56fe\u7684\u9519\u8bef\u3002 # \u60a8\u53ef\u80fd\u9700\u8981\u4e3a\u9879\u76ee\u8bbe\u7f6e\u9ed8\u8ba4\u5730\u56fe\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6a21\u5757\u5316\u90bb\u91cc\u5305 (Modular Neighborhood Pack)\uff0c\u8bf7\u5728\u201c\u9879\u76ee\u8bbe\u7f6e\u201d>\u201c\u5730\u56fe\u548c\u6a21\u5f0f\u201d\u4e2d\u5c06\u7f16\u8f91\u5668\u8d77\u59cb\u5730\u56fe\u548c\u6e38\u620f\u9ed8\u8ba4\u5730\u56fe\u8bbe\u7f6e\u4e3a\u201cDemo_Map\u201d\u3002 \u6211\u770b\u5230\u4e86\u73af\u5883\u7684\u201c\u6dfb\u52a0\u5230\u9879\u76ee\u201d\u9009\u9879\uff0c\u4f46\u6ca1\u6709\u770b\u5230\u201c\u521b\u5efa\u9879\u76ee\u201d\u9009\u9879\u3002 # \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709 Starter Content \u7684\u65b0\u7a7a\u767d C++ \u9879\u76ee\u5e76\u5c06\u60a8\u7684\u73af\u5883\u6dfb\u52a0\u5230\u5176\u4e2d\u3002 \u6211\u5df2\u7ecf\u6709\u81ea\u5df1\u7684 Unreal \u9879\u76ee\u4e86\u3002\u5982\u4f55\u4f7f\u7528 AirSim\uff1f # \u5c06\u60a8\u5728\u4e0a\u4e00\u8282\u4e2d\u6784\u5efa\u7684 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 Unreal \u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u5728 Unreal \u9879\u76ee\u7684 .uproject \u6587\u4ef6\u4e2d\uff0c\u5c06\u952e AdditionalDependencies \u6dfb\u52a0\u5230\u201cModules\u201d\u5bf9\u8c61\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4e0a\u6587\u201cLandscapeMountains.uproject\u201d\u4e2d\u5c55\u793a\u7684\u90a3\u6837\u3002 \"AdditionalDependencies\" : [ \"AirSim\" ] \u5e76\u5c06 Plugins \u90e8\u5206\u6dfb\u52a0\u5230\u9876\u7ea7\u5bf9\u8c61\uff1a \"Plugins\" : [ { \"Name\" : \"AirSim\" , \"Enabled\" : true } ]","title":"\u5b9a\u5236\u865a\u5e7b\u5f15\u64ce\u73af\u5883"},{"location":"unreal_custenv/#_1","text":"\u672c\u9875\u5305\u542b\u4f7f\u7528 AirSim \u8bbe\u7f6e\u865a\u5e7b\u73af\u5883\u7684\u5b8c\u6574\u8bf4\u660e\u3002\u865a\u5e7b\u5546\u57ce (Unreal Marketplace) \u63d0\u4f9b\u4e86 \u591a\u4e2a\u73af\u5883 \uff0c\u60a8\u53ea\u9700\u51e0\u5206\u949f\u5373\u53ef\u5f00\u59cb\u4f7f\u7528\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 turbosquid.com \u6216 cgitrader.com \u7b49\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u73af\u5883\uff0c\u4f46\u9700\u8981\u7a0d\u52a0\u52aa\u529b\uff08\u70b9\u51fb\u6b64\u5904\u89c2\u770b \u6559\u7a0b\u89c6\u9891 \uff09\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u51e0\u4e2a \u514d\u8d39\u73af\u5883 \u53ef\u4f9b\u4f7f\u7528\u3002 \u4e0b\u9762\u6211\u4eec\u5c06\u4f7f\u7528\u865a\u5e7b\u5e02\u573a\u4e2d\u53ef\u514d\u8d39\u4e0b\u8f7d\u7684\u73af\u5883\uff0c\u540d\u4e3a Landscape Mountain\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u73af\u5883\uff0c\u6b65\u9aa4\u90fd\u662f\u76f8\u540c\u7684\u3002","title":"\u521b\u5efa\u548c\u8bbe\u7f6e\u865a\u5e7b\u73af\u5883"},{"location":"unreal_custenv/#linux","text":"Linux \u4e0a\u6ca1\u6709 Epic Games Launcher \uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\uff0c\u5219\u9700\u8981 Windows \u8bbe\u5907\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u83b7\u53d6 Unreal \u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c\u53ea\u9700\u5c06\u5176\u590d\u5236\u5230\u60a8\u7684 Linux \u8bbe\u5907\u4e0a\u5373\u53ef\u3002","title":"Linux \u7528\u6237\u987b\u77e5"},{"location":"unreal_custenv/#_2","text":"\u786e\u4fdd\u5df2\u6784\u5efa AirSim \u5e76\u5df2\u5b89\u88c5 Unreal 4.27\uff0c\u5982 \u6784\u5efa\u8bf4\u660e \u4e2d\u6240\u8ff0\u3002 \u5728 Epic Games Launcher \u4e2d\uff0c\u70b9\u51fb\u201cLearn\u201d\u9009\u9879\u5361\uff0c\u5411\u4e0b\u6eda\u52a8\u627e\u5230 Landscape Mountains \u3002\u70b9\u51fb Create Project \u5e76\u4e0b\u8f7d\u6b64\u5185\u5bb9\uff08\u4e0b\u8f7d\u91cf\u7ea6 2GB\uff09\u3002 \u6253\u5f00 LandscapeMountains.uproject \uff0c\u5b83\u5e94\u8be5\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u6ce8\u610f \u666f\u89c2\u5c71\u8109(Landscape Mountains)\u9879\u76ee\u6700\u9ad8\u652f\u6301\u865a\u5e7b\u5f15\u64ce 4.24 \u7248\u672c\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5 4.24 \u7248\u672c\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u540d\u4e3a Select Unreal Engine Version (\u9009\u62e9\u865a\u5e7b\u5f15\u64ce\u7248\u672c)\u7684\u5bf9\u8bdd\u6846\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u4e0b\u62c9\u83dc\u5355\uff0c\u7528\u4e8e\u4ece\u5df2\u5b89\u88c5\u7684\u7248\u672c\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u9009\u62e9 4.27 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5373\u53ef\u5c06\u9879\u76ee\u8fc1\u79fb\u5230\u652f\u6301\u7684\u5f15\u64ce\u7248\u672c\u3002\u5982\u679c\u60a8\u5df2\u5b89\u88c5 4.24 \u7248\u672c\uff0c\u5219\u53ef\u4ee5\u624b\u52a8\u8fc1\u79fb\u9879\u76ee\uff0c\u65b9\u6cd5\u662f\uff1a\u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u5bfc\u822a\u5230\u76f8\u5e94\u7684 .uproject \u6587\u4ef6\uff0c\u53f3\u952e\u5355\u51fb\u8be5\u6587\u4ef6\uff0c\u7136\u540e\u9009\u62e9 Switch Unreal Engine version... (\u5207\u6362\u865a\u5e7b\u5f15\u64ce\u7248\u672c...)\u9009\u9879\u3002 \u4ece File \u83dc\u5355\u4e2d\u9009\u62e9 New C++ class \uff0c\u7c7b\u7c7b\u578b\u4fdd\u7559\u9ed8\u8ba4 None \uff0c\u70b9\u51fb Next \uff0c\u4fdd\u7559\u9ed8\u8ba4\u540d\u79f0 MyClass \uff0c\u7136\u540e\u70b9\u51fb Create Class \u3002\u6211\u4eec\u9700\u8981\u8fd9\u6837\u505a\u662f\u56e0\u4e3a Unreal \u8981\u6c42\u9879\u76ee\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u3002\u5b83\u4f1a\u89e6\u53d1\u7f16\u8bd1\u5e76\u6253\u5f00 Visual Studio \u89e3\u51b3\u65b9\u6848 LandscapeMountains.sln \u3002 \u524d\u5f80\u4f60\u7684 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff0c\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 LandscapeMountains \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u6837\uff0c\u4f60\u7684 Unreal \u9879\u76ee\u5c31\u62e5\u6709\u4e86 AirSim \u63d2\u4ef6\u3002 \u6ce8\u610f \u5982\u679c AirSim \u5b89\u88c5\u662f\u5168\u65b0\u5b89\u88c5\u7684\uff0c\u5373\u4e4b\u524d\u4ece\u672a\u6784\u5efa\u8fc7\uff0c\u8bf7\u786e\u4fdd\u5728\u590d\u5236 Unreal\\Plugins \u6587\u4ef6\u5939\u4e4b\u524d\uff0c\u5148\u4ece\u6839\u76ee\u5f55\u8fd0\u884c\u4e00\u6b21 build.cmd \uff0c\u4ee5\u4fbf AirLib \u6587\u4ef6\u4e5f\u5305\u542b\u5728\u5185\u3002\u5982\u679c\u60a8\u5728 Blocks \u73af\u5883\u4e2d\u8fdb\u884c\u4e86\u67d0\u4e9b\u66f4\u6539\uff0c\u8bf7\u786e\u4fdd\u4ece Unreal\\Environments\\Blocks \u8fd0\u884c update_to_git.bat \u6765\u66f4\u65b0 Unreal\\Plugins \u4e2d\u7684\u6587\u4ef6\u3002 \u7f16\u8f91 LandscapeMountains.uproject \uff0c\u4f7f\u5176\u770b\u8d77\u6765\u50cf\u8fd9\u6837 { \"FileVersion\" : 3 , \"EngineAssociation\" : \"4.27\" , \"Category\" : \"Samples\" , \"Description\" : \"\" , \"Modules\" : [ { \"Name\" : \"LandscapeMountains\" , \"Type\" : \"Runtime\" , \"LoadingPhase\" : \"Default\" , \"AdditionalDependencies\" : [ \"AirSim\" ] } ], \"TargetPlatforms\" : [ \"MacNoEditor\" , \"WindowsNoEditor\" ], \"Plugins\" : [ { \"Name\" : \"AirSim\" , \"Enabled\" : true } ] } \u7f16\u8f91 Config\\DefaultGame.ini \u5e76\u5728\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \u8fd9\u6837\u505a\u4f1a\u5f3a\u5236\u865a\u5e7b\u5f15\u64ce\u5c06\u6240\u6709\u5fc5\u8981\u7684 AirSim \u5185\u5bb9\u5305\u542b\u5728\u9879\u76ee\u7684\u6253\u5305\u7248\u672c\u4e2d\u3002 \u5173\u95ed Visual Studio \u548c Unreal Editor \uff0c\u7136\u540e\u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u53f3\u952e\u5355\u51fb LandscapeMountains.u \u9879\u76ee\uff0c\u5e76\u9009\u62e9 Generate Visual Studio Project Files \u3002\u6b64\u6b65\u9aa4\u5c06\u68c0\u6d4b\u865a\u5e7b\u9879\u76ee\u4e2d\u7684\u6240\u6709\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e3a Visual Studio \u751f\u6210 .sln \u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u7f3a\u5c11 Generate Visual Studio Project Files \u9009\u9879\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u8ba1\u7b97\u673a\u4ee5\u4f7f Unreal Shell \u6269\u5c55\u751f\u6548\u3002\u5982\u679c\u4ecd\u7136\u7f3a\u5c11\u6b64\u9009\u9879\uff0c\u8bf7\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 LandscapeMountains.uproject\uff0c\u7136\u540e\u4ece File \u83dc\u5355\u4e2d\u9009\u62e9 Refresh Visual Studio Project \u3002 \u5728 Visual Studio \u4e2d\u91cd\u65b0\u6253\u5f00 LandscapeMountains.sln \uff0c\u5e76\u786e\u4fdd\u201cDebugGame Editor\u201d\u548c\u201cWin64\u201d\u6784\u5efa\u914d\u7f6e\u662f\u6d3b\u52a8\u6784\u5efa\u914d\u7f6e\u3002 \u6309 F5 \u6765\u8fd0\u884c\u3002\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u865a\u5e7b\u7f16\u8f91\u5668\u5141\u8bb8\u60a8\u7f16\u8f91\u73af\u5883\u3001\u8d44\u6e90\u548c\u5176\u4ed6\u6e38\u620f\u76f8\u5173\u8bbe\u7f6e\u3002\u60a8\u9996\u5148\u9700\u8981\u5728\u73af\u5883\u4e2d\u8bbe\u7f6e PlayerStart \u5bf9\u8c61\u3002\u5728 Landscape Mountains \u73af\u5883\u4e2d\uff0cPlayerStart \u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 World Outliner \u4e2d\u627e\u5230\u5b83\u3002\u786e\u4fdd\u5176\u4f4d\u7f6e\u8bbe\u7f6e\u5982\u56fe\u6240\u793a\u3002AirSim \u63d2\u4ef6\u5c06\u5728\u6b64\u5904\u521b\u5efa\u5e76\u653e\u7f6e\u8f66\u8f86\u3002\u5982\u679c\u4f4d\u7f6e\u8fc7\u9ad8\uff0c\u8f66\u8f86\u4f1a\u5728\u60a8\u6309\u4e0b\u64ad\u653e\u952e\u65f6\u7acb\u5373\u5760\u843d\uff0c\u4ece\u800c\u4ea7\u751f\u6f5c\u5728\u7684\u968f\u673a\u884c\u4e3a\u3002 \u5728\u5982\u4e0b\u6240\u793a\u7684 Window/World Settings \u4e2d\uff0c\u5c06 GameMode Override \u8bbe\u7f6e\u4e3a AirSimGameMode \uff1a \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u524d\u5f80\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u201c\u5728\u540e\u53f0\u8fd0\u884c\u65f6\u4f7f\u7528\u8f83\u5c11 CPU\u201d(Use Less CPU when in Background) \u672a\u52fe\u9009\u3002\u5982\u679c\u4e0d\u52fe\u9009\uff0c\u5f53\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u5931\u53bb\u7126\u70b9\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7684\u901f\u5ea6\u5c06\u663e\u8457\u4e0b\u964d\u3002 \u8bf7\u52a1\u5fc5 \u4fdd\u5b58 \u8fd9\u4e9b\u7f16\u8f91\u3002\u70b9\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\u3002\u4e86\u89e3 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u606d\u559c\uff01\u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u8fd0\u884c AirSim \u4e86\u3002","title":"\u5206\u6b65\u8bf4\u660e"},{"location":"unreal_custenv/#_3","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f1a\u63d0\u793a\u7528\u6237\u9009\u62e9\u8981\u4f7f\u7528\u7684\u8f66\u8f86\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e SimMode \u8f7b\u677e\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002\u8bf7\u53c2\u9605 \u4f7f\u7528\u8f66\u8f86 \u6307\u5357\u3002","title":"\u9009\u62e9\u60a8\u7684\u8f66\u8f86\uff1a\u6c7d\u8f66\u6216\u591a\u65cb\u7ffc\u98de\u884c\u5668"},{"location":"unreal_custenv/#airsim","text":"\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u642d\u5efa\u597d\u73af\u5883\u540e\uff0c\u4f60\u9700\u8981\u7ecf\u5e38\u4ece GitHub \u66f4\u65b0\u672c\u5730 AirSim \u4ee3\u7801\u5230\u6700\u65b0\u7248\u672c\u3002\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a \u9996\u5148\u5c06 clean.bat \uff08Linux \u7528\u6237\u8bf7\u5c06 clean.sh \uff09\u653e\u5165\u73af\u5883\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u8fd0\u884c\u6b64\u6587\u4ef6\u53ef\u4ee5\u6e05\u7406 \u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u7684\u6240\u6709\u4e2d\u95f4\u6587\u4ef6\u3002 \u5728\u60a8\u7684 AirSim repo \u4e2d\u6267\u884c git pull \uff0c\u7136\u540e\u6267\u884c build.cmd \uff08\u5bf9\u4e8e Linux \u7528\u6237\uff0c\u6267\u884c\u201c./build.sh\u201d\uff09\u3002 \u5c06 [your project]/Plugins \u6587\u4ef6\u5939\u66ff\u6362\u4e3a AirSim/Unreal/Plugins \u6587\u4ef6\u5939\u3002 \u53f3\u952e\u5355\u51fb .uproject \u6587\u4ef6\uff0c\u7136\u540e\u9009\u62e9\u201cGenerate Visual Studio project files\u201d\u9009\u9879\u3002Linux \u7cfb\u7edf\u65e0\u9700\u6267\u884c\u6b64\u64cd\u4f5c\u3002","title":"\u5c06\u60a8\u7684\u73af\u5883\u66f4\u65b0\u81f3\u6700\u65b0\u7248\u672c\u7684 AirSim"},{"location":"unreal_custenv/#faq","text":"","title":"FAQ"},{"location":"unreal_custenv/#_4","text":"\u865a\u5e7b\u5546\u57ce \u62e5\u6709\u6570\u5341\u4e2a\u9884\u5148\u6784\u5efa\u7684\u6781\u5176\u7cbe\u7ec6\u7684 \u73af\u5883 \uff0c\u6db5\u76d6\u4ece\u6708\u7403\u5230\u706b\u661f\u7b49\u5404\u79cd\u573a\u666f\u3002\u6211\u4eec\u7528\u4e8e\u6d4b\u8bd5\u7684\u73af\u5883\u540d\u4e3a\u201c\u6a21\u5757\u5316\u90bb\u91cc\u5305 ( Modular Neighborhood Pack )\u201d\uff0c\u4f46\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u73af\u5883\u3002\u53e6\u4e00\u4e2a\u514d\u8d39\u73af\u5883\u662f\u201c\u65e0\u5c3d\u4e4b\u5251 ( Infinity Blade \u7cfb\u5217 )\u201d\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u5728 Epic Game Launcher \u7684\u201c\u5b66\u4e60 (Learn)\u201d\u9009\u9879\u5361\u4e0b\u67e5\u770b\uff0c\u60a8\u4f1a\u53d1\u73b0\u8bb8\u591a\u53ef\u7528\u7684\u514d\u8d39\u793a\u4f8b\u3002\u6211\u4eec\u6700\u559c\u6b22\u7684\u4e00\u4e2a\u662f\u201c\u7537\u5b69\u548c\u4ed6\u7684\u98ce\u7b5d (A Boy and His Kite)\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a 100 \u5e73\u65b9\u82f1\u91cc\uff08\u7ea6 100 \u5e73\u65b9\u82f1\u91cc\uff09\u7684\u9ad8\u7cbe\u5ea6\u73af\u5883\uff08\u6ce8\u610f\uff1a\u60a8\u9700\u8981 \u975e\u5e38 \u5f3a\u5927\u7684 PC \u624d\u80fd\u8fd0\u884c\u5b83\uff01\uff09\u3002","title":"\u8fd8\u6709\u54ea\u4e9b\u5f88\u9177\u7684\u73af\u5883\uff1f"},{"location":"unreal_custenv/#_5","text":"\u5982\u679c\u73af\u5883\u81ea\u5e26 MatineeActor\uff0c\u8bf7\u5c06\u5176\u5220\u9664\u4ee5\u907f\u514d\u4efb\u4f55\u542f\u52a8\u6f14\u793a\u5e8f\u5217\u3002\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u5220\u9664\u5b83\uff0c\u4f8b\u5982\uff0c\u70b9\u51fb\u201c\u84dd\u56fe\u201d\u6309\u94ae\uff0c\u7136\u540e\u70b9\u51fb\u201c\u5173\u5361\u84dd\u56fe\u201d\uff0c\u7136\u540e\u67e5\u770b\u201c\u4e8b\u4ef6\u56fe\u8868\u201d\u4e2d\u7684\u201c\u5f00\u59cb\u64ad\u653e\u201d\u4e8b\u4ef6\u3002\u60a8\u53ef\u80fd\u9700\u8981\u65ad\u5f00\u6240\u6709\u53ef\u80fd\u6b63\u5728\u542f\u52a8\u201cmatinee\u201d\u7684\u8fde\u63a5\u3002","title":"\u5f53\u6211\u6309\u4e0b\u64ad\u653e\u6309\u94ae\u65f6\uff0c\u67d0\u79cd\u89c6\u9891\u5f00\u59cb\u64ad\u653e\uff0c\u800c\u4e0d\u662f\u6211\u7684\u8f66\u8f86\u3002"},{"location":"unreal_custenv/#airsim-repo","text":"\u5f53\u7136\u6709\uff01\u4f60\u53ef\u4ee5\u5728 AirSim\\Unreal\\Environments\\Blocks \u4e2d\u627e\u5230\u4e00\u5806 .bat \u6587\u4ef6\uff08Linux \u7cfb\u7edf\u4e0b\u4e3a .sh \uff09\u3002\u53ea\u9700\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4f60\u81ea\u5df1\u7684\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u5373\u53ef\u3002\u5176\u4e2d\u5927\u591a\u6570\u90fd\u975e\u5e38\u7b80\u5355\u6613\u61c2\u3002","title":"\u6709\u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u5c06\u6211\u7684\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u4e0e AirSim repo \u4e2d\u7684\u4ee3\u7801\u540c\u6b65\uff1f"},{"location":"unreal_custenv/#_6","text":"\u60a8\u53ef\u80fd\u9700\u8981\u4e3a\u9879\u76ee\u8bbe\u7f6e\u9ed8\u8ba4\u5730\u56fe\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6a21\u5757\u5316\u90bb\u91cc\u5305 (Modular Neighborhood Pack)\uff0c\u8bf7\u5728\u201c\u9879\u76ee\u8bbe\u7f6e\u201d>\u201c\u5730\u56fe\u548c\u6a21\u5f0f\u201d\u4e2d\u5c06\u7f16\u8f91\u5668\u8d77\u59cb\u5730\u56fe\u548c\u6e38\u620f\u9ed8\u8ba4\u5730\u56fe\u8bbe\u7f6e\u4e3a\u201cDemo_Map\u201d\u3002","title":"\u6211\u6536\u5230\u4e00\u4e9b\u6709\u5173\u5730\u56fe\u7684\u9519\u8bef\u3002"},{"location":"unreal_custenv/#_7","text":"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709 Starter Content \u7684\u65b0\u7a7a\u767d C++ \u9879\u76ee\u5e76\u5c06\u60a8\u7684\u73af\u5883\u6dfb\u52a0\u5230\u5176\u4e2d\u3002","title":"\u6211\u770b\u5230\u4e86\u73af\u5883\u7684\u201c\u6dfb\u52a0\u5230\u9879\u76ee\u201d\u9009\u9879\uff0c\u4f46\u6ca1\u6709\u770b\u5230\u201c\u521b\u5efa\u9879\u76ee\u201d\u9009\u9879\u3002"},{"location":"unreal_custenv/#unreal-airsim","text":"\u5c06\u60a8\u5728\u4e0a\u4e00\u8282\u4e2d\u6784\u5efa\u7684 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 Unreal \u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u5728 Unreal \u9879\u76ee\u7684 .uproject \u6587\u4ef6\u4e2d\uff0c\u5c06\u952e AdditionalDependencies \u6dfb\u52a0\u5230\u201cModules\u201d\u5bf9\u8c61\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4e0a\u6587\u201cLandscapeMountains.uproject\u201d\u4e2d\u5c55\u793a\u7684\u90a3\u6837\u3002 \"AdditionalDependencies\" : [ \"AirSim\" ] \u5e76\u5c06 Plugins \u90e8\u5206\u6dfb\u52a0\u5230\u9876\u7ea7\u5bf9\u8c61\uff1a \"Plugins\" : [ { \"Name\" : \"AirSim\" , \"Enabled\" : true } ]","title":"\u6211\u5df2\u7ecf\u6709\u81ea\u5df1\u7684 Unreal \u9879\u76ee\u4e86\u3002\u5982\u4f55\u4f7f\u7528 AirSim\uff1f"},{"location":"unreal_proj/","text":"\u865a\u5e7b\u73af\u5883 # \u8bbe\u7f6e\u865a\u5e7b\u9879\u76ee # \u9009\u9879 1\uff1a\u5185\u7f6e\u5757\u73af\u5883 # \u4e3a\u4e86\u5feb\u901f\u542f\u52a8\u5e76\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 AirSim \u81ea\u5e26\u7684 Blocks \u9879\u76ee\u3002\u4e3a\u4e86\u4fdd\u6301 repo \u5927\u5c0f\u5408\u7406\uff0c\u8fd9\u4e2a\u73af\u5883\u7684\u7cbe\u7ec6\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u4f46\u6211\u4eec\u7ecf\u5e38\u7528\u5b83\u6765\u8fdb\u884c\u5404\u79cd\u6d4b\u8bd5\uff0c\u8fd9\u4e5f\u662f\u8ba9\u60a8\u5728\u8fd9\u4e2a\u964c\u751f\u7684\u9886\u57df\u5165\u95e8\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u3002 \u6309\u7167\u8fd9\u4e9b \u5feb\u901f\u6b65\u9aa4 \u64cd\u4f5c\u3002 \u9009\u9879 2\uff1a\u521b\u5efa\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883 # \u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u7167\u7247\u7ea7\u903c\u771f\u7684\u9ad8\u8d28\u91cf\u73af\u5883\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u521b\u5efa\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\u3002\u8fd9\u867d\u7136\u6709\u70b9\u590d\u6742\uff0c\u4f46\u503c\u5f97\u4e00\u8bd5\uff01 \u6309\u7167\u6b64 \u5206\u6b65\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002 \u66f4\u6539\u4ee3\u7801\u548c\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b # \u8981\u4e86\u89e3\u5982\u4f55\u66f4\u6539\u548c\u6d4b\u8bd5 AirSim \u4ee3\u7801\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684 \u63a8\u8350\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u3002","title":"\u8bbe\u7f6e\u865a\u5e7b\u5f15\u64ce\u73af\u5883"},{"location":"unreal_proj/#_1","text":"","title":"\u865a\u5e7b\u73af\u5883"},{"location":"unreal_proj/#_2","text":"","title":"\u8bbe\u7f6e\u865a\u5e7b\u9879\u76ee"},{"location":"unreal_proj/#1","text":"\u4e3a\u4e86\u5feb\u901f\u542f\u52a8\u5e76\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 AirSim \u81ea\u5e26\u7684 Blocks \u9879\u76ee\u3002\u4e3a\u4e86\u4fdd\u6301 repo \u5927\u5c0f\u5408\u7406\uff0c\u8fd9\u4e2a\u73af\u5883\u7684\u7cbe\u7ec6\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u4f46\u6211\u4eec\u7ecf\u5e38\u7528\u5b83\u6765\u8fdb\u884c\u5404\u79cd\u6d4b\u8bd5\uff0c\u8fd9\u4e5f\u662f\u8ba9\u60a8\u5728\u8fd9\u4e2a\u964c\u751f\u7684\u9886\u57df\u5165\u95e8\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u3002 \u6309\u7167\u8fd9\u4e9b \u5feb\u901f\u6b65\u9aa4 \u64cd\u4f5c\u3002","title":"\u9009\u9879 1\uff1a\u5185\u7f6e\u5757\u73af\u5883"},{"location":"unreal_proj/#2","text":"\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u7167\u7247\u7ea7\u903c\u771f\u7684\u9ad8\u8d28\u91cf\u73af\u5883\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u521b\u5efa\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\u3002\u8fd9\u867d\u7136\u6709\u70b9\u590d\u6742\uff0c\u4f46\u503c\u5f97\u4e00\u8bd5\uff01 \u6309\u7167\u6b64 \u5206\u6b65\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u9009\u9879 2\uff1a\u521b\u5efa\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883"},{"location":"unreal_proj/#_3","text":"\u8981\u4e86\u89e3\u5982\u4f55\u66f4\u6539\u548c\u6d4b\u8bd5 AirSim \u4ee3\u7801\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684 \u63a8\u8350\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u3002","title":"\u66f4\u6539\u4ee3\u7801\u548c\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b"},{"location":"unreal_upgrade/","text":"\u5347\u7ea7\u5230\u865a\u5e7b\u5f15\u64ce 4.27 # \u5982\u679c\u60a8\u5df2\u5728\u865a\u5e7b\u5f15\u64ce 4.25 \u4e0a\u4f7f\u7528 AirSim\uff0c\u5219\u8fd9\u4e9b\u8bf4\u660e\u9002\u7528\u3002\u5982\u679c\u60a8\u4ece\u672a\u5b89\u88c5\u8fc7 AirSim\uff0c\u8bf7\u53c2\u9605 \u5982\u4f55\u83b7\u53d6 \u3002 \u6ce8\u610f\uff1a \u4ee5\u4e0b\u6b65\u9aa4\u5c06\u5220\u9664 AirSim \u6216 Unreal \u6587\u4ef6\u5939\u4e2d\u6240\u6709\u672a\u4fdd\u5b58\u7684\u5de5\u4f5c\u3002 \u9996\u5148\u6267\u884c\u6b64\u64cd\u4f5c # \u5bf9\u4e8eWindows\u7528\u6237 # \u5b89\u88c5\u5e26 C#\u3001VC++\u3001Python \u7684 Visual Studio 2022\u3002 \u901a\u8fc7 Epic Games Launcher \u5b89\u88c5 UE 4.27\u3002 \u542f\u52a8 x64 Native Tools Command Prompt for VS 2022 \u5e76\u5bfc\u822a\u5230 AirSim \u4ed3\u5e93\u3002 \u8fd0\u884c clean_rebuild.bat \u5220\u9664\u6240\u6709\u672a\u9009\u4e2d/\u591a\u4f59\u7684\u5185\u5bb9\u5e76\u91cd\u5efa\u6240\u6709\u5185\u5bb9\u3002 \u53e6\u8bf7\u53c2\u9605 \u5728 Windows \u4e0a\u6784\u5efa AirSim \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u5bf9\u4e8eLinux\u7528\u6237 # \u4ece\u60a8\u7684 AirSim repo \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c clean_rebuild.sh \u3002 \u91cd\u547d\u540d\u6216\u5220\u9664\u865a\u5e7b\u5f15\u64ce\u7684\u73b0\u6709\u6587\u4ef6\u5939\u3002 \u6309\u7167\u6b65\u9aa4 1 \u548c 2 \u5b89\u88c5 Unreal Engine 4.27 \u3002 \u53e6\u8bf7\u53c2\u9605 \u5728 Linux \u4e0a\u6784\u5efa AirSim \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u5347\u7ea7\u60a8\u7684\u81ea\u5b9a\u4e49\u865a\u5e7b\u9879\u76ee # \u5982\u679c\u60a8\u4f7f\u7528\u65e7\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\uff0c\u5219\u9700\u8981\u5c06\u9879\u76ee\u5347\u7ea7\u5230\u865a\u5e7b\u5f15\u64ce 4.27\u3002\u4e3a\u6b64\uff0c \u6253\u5f00 .uproject \u6587\u4ef6\u5e76\u67e5\u627e\u884c \"EngineAssociation\" \u5e76\u786e\u4fdd\u5176\u8bfb\u53d6\u65b9\u5f0f\u7c7b\u4f3c\u4e8e \"EngineAssociation\": \"4.27\" \u3002 \u5220\u9664\u865a\u5e7b\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u7684 Plugins/AirSim \u6587\u4ef6\u5939\u3002 \u8f6c\u5230\u60a8\u7684 AirSim repo \u6587\u4ef6\u5939\u5e76\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230\u60a8\u7684 Unreal \u9879\u76ee\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5c06 *.bat\uff08\u6216 Linux \u7684 *.sh\uff09\u4ece Unreal\\Environments\\Blocks \u590d\u5236\u5230\u9879\u76ee\u6587\u4ef6\u5939\u3002 \u8fd0\u884c clean.bat \uff08\u6216 Linux \u7684 clean.sh \uff09\uff0c\u7136\u540e\u8fd0\u884c GenerateProjectFiles.bat \uff08\u4ec5\u9002\u7528\u4e8e Windows\uff09\u3002 FAQ # \u6211\u6709\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\uff0c\u7248\u672c\u65e9\u4e8e 4.16\u3002\u8be5\u5982\u4f55\u5347\u7ea7\u5b83\uff1f # \u9009\u9879 1\uff1a\u91cd\u65b0\u521b\u5efa\u9879\u76ee # \u5982\u679c\u60a8\u7684\u9879\u76ee\u9664\u4e86\u4e0b\u8f7d\u7684\u73af\u5883\u4e4b\u5916\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\u6216\u8d44\u4ea7\uff0c\u90a3\u4e48\u60a8\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730 \u5728\u865a\u5e7b 4.27 \u7f16\u8f91\u5668\u4e2d\u91cd\u65b0\u521b\u5efa\u9879\u76ee \uff0c\u7136\u540e\u4ece AirSim/Unreal/Plugins \u590d\u5236\u63d2\u4ef6\u6587\u4ef6\u5939\u3002 \u9009\u9879 2\uff1a\u4fee\u6539\u5c11\u91cf\u6587\u4ef6 # \u865a\u5e7b\u5f15\u64ce 4.15 \u4e4b\u540e\u7684\u7248\u672c\u5b58\u5728\u91cd\u5927\u53d8\u66f4\u3002\u56e0\u6b64\uff0c\u60a8\u9700\u8981\u4fee\u6539\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u7684 Source \u6587\u4ef6\u5939\u4e2d\u7684 *.Build.cs \u548c *.Target.cs \u6587\u4ef6\u3002\u90a3\u4e48\uff0c\u8fd9\u4e9b\u53d8\u66f4\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u4ee5\u4e0b\u662f\u6982\u8981\uff0c\u4f46\u60a8\u66f4\u5e94\u8be5\u53c2\u8003 \u865a\u5e7b\u5f15\u64ce\u5b98\u65b9 4.16 \u8fc7\u6e21\u5e16 \u3002 \u5728\u4f60\u7684\u9879\u76ee\u7684 *.Target.cs \u4e2d # \u5c06\u6784\u9020\u51fd\u6570\u4ece public MyProject Target(TargetInfo Target) \u66f4\u6539\u4e3a public MyProjectTarget(TargetInfo Target) : base(Target) \u5982\u679c\u6709\u7684\u8bdd\uff0c\u8bf7\u5220\u9664 Setup Binaries \u65b9\u6cd5\uff0c\u5e76\u5728\u4e0a\u9762\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a ExtraModuleNames.AddRange(new string[] { \"MyProject\" }); \u5728\u4f60\u7684\u9879\u76ee\u7684 *.Build.cs \u4e2d # \u5c06\u6784\u9020\u51fd\u6570\u4ece public MyProject(TargetInfo Target) \u66f4\u6539\u4e3a public MyProject(ReadOnlyTargetRules Target) : base(Target) \u3002 \u6700\u540e\u2026\u2026 # \u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u7ee7\u7eed\u5347\u7ea7\u3002\u8b66\u544a\u6846\u53ef\u80fd\u53ea\u663e\u793a\u201c\u6253\u5f00\u526f\u672c\u201d\u6309\u94ae\u3002\u8bf7\u52ff\u70b9\u51fb\u8be5\u6309\u94ae\u3002\u70b9\u51fb\u201c\u66f4\u591a\u9009\u9879\u201d\uff0c\u5373\u53ef\u663e\u793a\u66f4\u591a\u6309\u94ae\u3002\u9009\u62e9 \u5c31\u5730\u8f6c\u6362(Convert-In-Place option) \u9009\u9879\u3002 \u6ce8\u610f\uff1a \u8bf7\u52a1\u5fc5\u5148\u5907\u4efd\u60a8\u7684\u9879\u76ee\uff01\u5982\u679c\u60a8\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u5c31\u5730\u8f6c\u6362\u5e94\u8be5\u4f1a\u987a\u5229\u5b8c\u6210\uff0c\u60a8\u73b0\u5728\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u7248\u865a\u5e7b\u5f15\u64ce\u4e86\u3002","title":"\u5347\u7ea7\u865a\u5e7b\u5f15\u64ce"},{"location":"unreal_upgrade/#427","text":"\u5982\u679c\u60a8\u5df2\u5728\u865a\u5e7b\u5f15\u64ce 4.25 \u4e0a\u4f7f\u7528 AirSim\uff0c\u5219\u8fd9\u4e9b\u8bf4\u660e\u9002\u7528\u3002\u5982\u679c\u60a8\u4ece\u672a\u5b89\u88c5\u8fc7 AirSim\uff0c\u8bf7\u53c2\u9605 \u5982\u4f55\u83b7\u53d6 \u3002 \u6ce8\u610f\uff1a \u4ee5\u4e0b\u6b65\u9aa4\u5c06\u5220\u9664 AirSim \u6216 Unreal \u6587\u4ef6\u5939\u4e2d\u6240\u6709\u672a\u4fdd\u5b58\u7684\u5de5\u4f5c\u3002","title":"\u5347\u7ea7\u5230\u865a\u5e7b\u5f15\u64ce 4.27"},{"location":"unreal_upgrade/#_1","text":"","title":"\u9996\u5148\u6267\u884c\u6b64\u64cd\u4f5c"},{"location":"unreal_upgrade/#windows","text":"\u5b89\u88c5\u5e26 C#\u3001VC++\u3001Python \u7684 Visual Studio 2022\u3002 \u901a\u8fc7 Epic Games Launcher \u5b89\u88c5 UE 4.27\u3002 \u542f\u52a8 x64 Native Tools Command Prompt for VS 2022 \u5e76\u5bfc\u822a\u5230 AirSim \u4ed3\u5e93\u3002 \u8fd0\u884c clean_rebuild.bat \u5220\u9664\u6240\u6709\u672a\u9009\u4e2d/\u591a\u4f59\u7684\u5185\u5bb9\u5e76\u91cd\u5efa\u6240\u6709\u5185\u5bb9\u3002 \u53e6\u8bf7\u53c2\u9605 \u5728 Windows \u4e0a\u6784\u5efa AirSim \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"\u5bf9\u4e8eWindows\u7528\u6237"},{"location":"unreal_upgrade/#linux","text":"\u4ece\u60a8\u7684 AirSim repo \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c clean_rebuild.sh \u3002 \u91cd\u547d\u540d\u6216\u5220\u9664\u865a\u5e7b\u5f15\u64ce\u7684\u73b0\u6709\u6587\u4ef6\u5939\u3002 \u6309\u7167\u6b65\u9aa4 1 \u548c 2 \u5b89\u88c5 Unreal Engine 4.27 \u3002 \u53e6\u8bf7\u53c2\u9605 \u5728 Linux \u4e0a\u6784\u5efa AirSim \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"\u5bf9\u4e8eLinux\u7528\u6237"},{"location":"unreal_upgrade/#_2","text":"\u5982\u679c\u60a8\u4f7f\u7528\u65e7\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u865a\u5e7b\u9879\u76ee\uff0c\u5219\u9700\u8981\u5c06\u9879\u76ee\u5347\u7ea7\u5230\u865a\u5e7b\u5f15\u64ce 4.27\u3002\u4e3a\u6b64\uff0c \u6253\u5f00 .uproject \u6587\u4ef6\u5e76\u67e5\u627e\u884c \"EngineAssociation\" \u5e76\u786e\u4fdd\u5176\u8bfb\u53d6\u65b9\u5f0f\u7c7b\u4f3c\u4e8e \"EngineAssociation\": \"4.27\" \u3002 \u5220\u9664\u865a\u5e7b\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u7684 Plugins/AirSim \u6587\u4ef6\u5939\u3002 \u8f6c\u5230\u60a8\u7684 AirSim repo \u6587\u4ef6\u5939\u5e76\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230\u60a8\u7684 Unreal \u9879\u76ee\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5c06 *.bat\uff08\u6216 Linux \u7684 *.sh\uff09\u4ece Unreal\\Environments\\Blocks \u590d\u5236\u5230\u9879\u76ee\u6587\u4ef6\u5939\u3002 \u8fd0\u884c clean.bat \uff08\u6216 Linux \u7684 clean.sh \uff09\uff0c\u7136\u540e\u8fd0\u884c GenerateProjectFiles.bat \uff08\u4ec5\u9002\u7528\u4e8e Windows\uff09\u3002","title":"\u5347\u7ea7\u60a8\u7684\u81ea\u5b9a\u4e49\u865a\u5e7b\u9879\u76ee"},{"location":"unreal_upgrade/#faq","text":"","title":"FAQ"},{"location":"unreal_upgrade/#416","text":"","title":"\u6211\u6709\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\uff0c\u7248\u672c\u65e9\u4e8e 4.16\u3002\u8be5\u5982\u4f55\u5347\u7ea7\u5b83\uff1f"},{"location":"unreal_upgrade/#1","text":"\u5982\u679c\u60a8\u7684\u9879\u76ee\u9664\u4e86\u4e0b\u8f7d\u7684\u73af\u5883\u4e4b\u5916\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\u6216\u8d44\u4ea7\uff0c\u90a3\u4e48\u60a8\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730 \u5728\u865a\u5e7b 4.27 \u7f16\u8f91\u5668\u4e2d\u91cd\u65b0\u521b\u5efa\u9879\u76ee \uff0c\u7136\u540e\u4ece AirSim/Unreal/Plugins \u590d\u5236\u63d2\u4ef6\u6587\u4ef6\u5939\u3002","title":"\u9009\u9879 1\uff1a\u91cd\u65b0\u521b\u5efa\u9879\u76ee"},{"location":"unreal_upgrade/#2","text":"\u865a\u5e7b\u5f15\u64ce 4.15 \u4e4b\u540e\u7684\u7248\u672c\u5b58\u5728\u91cd\u5927\u53d8\u66f4\u3002\u56e0\u6b64\uff0c\u60a8\u9700\u8981\u4fee\u6539\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u7684 Source \u6587\u4ef6\u5939\u4e2d\u7684 *.Build.cs \u548c *.Target.cs \u6587\u4ef6\u3002\u90a3\u4e48\uff0c\u8fd9\u4e9b\u53d8\u66f4\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u4ee5\u4e0b\u662f\u6982\u8981\uff0c\u4f46\u60a8\u66f4\u5e94\u8be5\u53c2\u8003 \u865a\u5e7b\u5f15\u64ce\u5b98\u65b9 4.16 \u8fc7\u6e21\u5e16 \u3002","title":"\u9009\u9879 2\uff1a\u4fee\u6539\u5c11\u91cf\u6587\u4ef6"},{"location":"unreal_upgrade/#targetcs","text":"\u5c06\u6784\u9020\u51fd\u6570\u4ece public MyProject Target(TargetInfo Target) \u66f4\u6539\u4e3a public MyProjectTarget(TargetInfo Target) : base(Target) \u5982\u679c\u6709\u7684\u8bdd\uff0c\u8bf7\u5220\u9664 Setup Binaries \u65b9\u6cd5\uff0c\u5e76\u5728\u4e0a\u9762\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a ExtraModuleNames.AddRange(new string[] { \"MyProject\" });","title":"\u5728\u4f60\u7684\u9879\u76ee\u7684 *.Target.cs \u4e2d"},{"location":"unreal_upgrade/#buildcs","text":"\u5c06\u6784\u9020\u51fd\u6570\u4ece public MyProject(TargetInfo Target) \u66f4\u6539\u4e3a public MyProject(ReadOnlyTargetRules Target) : base(Target) \u3002","title":"\u5728\u4f60\u7684\u9879\u76ee\u7684 *.Build.cs \u4e2d"},{"location":"unreal_upgrade/#_3","text":"\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u7ee7\u7eed\u5347\u7ea7\u3002\u8b66\u544a\u6846\u53ef\u80fd\u53ea\u663e\u793a\u201c\u6253\u5f00\u526f\u672c\u201d\u6309\u94ae\u3002\u8bf7\u52ff\u70b9\u51fb\u8be5\u6309\u94ae\u3002\u70b9\u51fb\u201c\u66f4\u591a\u9009\u9879\u201d\uff0c\u5373\u53ef\u663e\u793a\u66f4\u591a\u6309\u94ae\u3002\u9009\u62e9 \u5c31\u5730\u8f6c\u6362(Convert-In-Place option) \u9009\u9879\u3002 \u6ce8\u610f\uff1a \u8bf7\u52a1\u5fc5\u5148\u5907\u4efd\u60a8\u7684\u9879\u76ee\uff01\u5982\u679c\u60a8\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u5c31\u5730\u8f6c\u6362\u5e94\u8be5\u4f1a\u987a\u5229\u5b8c\u6210\uff0c\u60a8\u73b0\u5728\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u7248\u865a\u5e7b\u5f15\u64ce\u4e86\u3002","title":"\u6700\u540e\u2026\u2026"},{"location":"upgrade_apis/","text":"Upgrading API Client Code # There have been several API changes in AirSim v1.2 that we hope removes inconsistency, adds future extensibility and presents cleaner interface. Many of these changes are however breaking changes which means you will need to modify your client code that talks to AirSim. Quicker Way # While most changes you need to do in your client code are fairly easy, a quicker way is simply to take a look at the example code such as Hello Drone or Hello Car to get gist of changes. Importing AirSim # Instead of, from AirSimClient import * use this: import airsim Above assumes you have installed AirSim module using, pip install --user airsim If you are running you code from PythonClient folder in repo then you can also do this: import setup_path import airsim Here setup_path.py should exist in your folder and it will set the path of airsim package in PythonClient repo folder. All examples in PythonClient folder uses this method. Using AirSim Classes # As we have everything now in package, you will need to use explicit namespace for AirSim classes like shown below. Instead of, client1 = CarClient () use this: client1 = airsim . CarClient () AirSim Types # We have moved all types in airsim namespace. Instead of, image_type = AirSimImageType . DepthVis d = DrivetrainType . MaxDegreeOfFreedom use this: image_type = airsim . ImageType . DepthVis d = airsim . DrivetrainType . MaxDegreeOfFreedom Getting Images # Nothing new below, it's just combination of above. Note that all APIs that previously took camera_id , now takes camera_name instead. You can take a look at available cameras here. Instead of, responses = client . simGetImages ([ ImageRequest ( 0 , AirSimImageType . DepthVis )]) use this: responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . DepthVis )]) Utility Methods # In earlier version, we provided several utility methods as part of AirSimClientBase . These methods are now moved to airsim namespace for more pythonic interface. Instead of, AirSimClientBase . write_png ( my_path , img_rgba ) AirSimClientBase . wait_key ( 'Press any key' ) use this: airsim . write_png ( my_path , img_rgba ) airsim . wait_key ( 'Press any key' ) Camera Names # AirSim now uses names to reference cameras instead of index numbers. However to retain backward compatibility, these names are aliased with old index numbers as string. Instead of, client . simGetCameraInfo ( 0 ) use this: client . simGetCameraInfo ( \"0\" ) # or client . simGetCameraInfo ( \"front-center\" ) Async Methods # For multirotors, AirSim had various methods such as takeoff or moveByVelocityZ that would take long time to complete. All of such methods are now renamed by adding the suffix Async as shown below. Instead of, client . takeoff () client . moveToPosition ( - 10 , 10 , - 10 , 5 ) use this: client . takeoffAsync () . join () client . moveToPositionAsync ( - 10 , 10 , - 10 , 5 ) . join () Here .join() is a call on Python's Future class to wait for the async call to complete. You can also choose to do some other computation instead while the call is in progress. Simulation-Only Methods # Now we have clear distinction between methods that are only available in simulation from the ones that may be available on actual vehicle. The simulation only methods are prefixed with sim as shown below. getCollisionInfo() is renamed to simGetCollisionInfo() getCameraInfo() is renamed to simGetCameraInfo() setCameraOrientation() is renamed to simSetCameraOrientation() State Information # Previously CarState mixed simulation-only information like kinematics_true . Moving forward, CarState will only contain information that can be obtained in real world. k = car_state . kinematics_true use this: k = car_state . kinematics_estimated # or k = client . simGetGroundTruthKinematics ()","title":"\u5347\u7ea7 APIs"},{"location":"upgrade_apis/#upgrading-api-client-code","text":"There have been several API changes in AirSim v1.2 that we hope removes inconsistency, adds future extensibility and presents cleaner interface. Many of these changes are however breaking changes which means you will need to modify your client code that talks to AirSim.","title":"Upgrading API Client Code"},{"location":"upgrade_apis/#quicker-way","text":"While most changes you need to do in your client code are fairly easy, a quicker way is simply to take a look at the example code such as Hello Drone or Hello Car to get gist of changes.","title":"Quicker Way"},{"location":"upgrade_apis/#importing-airsim","text":"Instead of, from AirSimClient import * use this: import airsim Above assumes you have installed AirSim module using, pip install --user airsim If you are running you code from PythonClient folder in repo then you can also do this: import setup_path import airsim Here setup_path.py should exist in your folder and it will set the path of airsim package in PythonClient repo folder. All examples in PythonClient folder uses this method.","title":"Importing AirSim"},{"location":"upgrade_apis/#using-airsim-classes","text":"As we have everything now in package, you will need to use explicit namespace for AirSim classes like shown below. Instead of, client1 = CarClient () use this: client1 = airsim . CarClient ()","title":"Using AirSim Classes"},{"location":"upgrade_apis/#airsim-types","text":"We have moved all types in airsim namespace. Instead of, image_type = AirSimImageType . DepthVis d = DrivetrainType . MaxDegreeOfFreedom use this: image_type = airsim . ImageType . DepthVis d = airsim . DrivetrainType . MaxDegreeOfFreedom","title":"AirSim Types"},{"location":"upgrade_apis/#getting-images","text":"Nothing new below, it's just combination of above. Note that all APIs that previously took camera_id , now takes camera_name instead. You can take a look at available cameras here. Instead of, responses = client . simGetImages ([ ImageRequest ( 0 , AirSimImageType . DepthVis )]) use this: responses = client . simGetImages ([ airsim . ImageRequest ( \"0\" , airsim . ImageType . DepthVis )])","title":"Getting Images"},{"location":"upgrade_apis/#utility-methods","text":"In earlier version, we provided several utility methods as part of AirSimClientBase . These methods are now moved to airsim namespace for more pythonic interface. Instead of, AirSimClientBase . write_png ( my_path , img_rgba ) AirSimClientBase . wait_key ( 'Press any key' ) use this: airsim . write_png ( my_path , img_rgba ) airsim . wait_key ( 'Press any key' )","title":"Utility Methods"},{"location":"upgrade_apis/#camera-names","text":"AirSim now uses names to reference cameras instead of index numbers. However to retain backward compatibility, these names are aliased with old index numbers as string. Instead of, client . simGetCameraInfo ( 0 ) use this: client . simGetCameraInfo ( \"0\" ) # or client . simGetCameraInfo ( \"front-center\" )","title":"Camera Names"},{"location":"upgrade_apis/#async-methods","text":"For multirotors, AirSim had various methods such as takeoff or moveByVelocityZ that would take long time to complete. All of such methods are now renamed by adding the suffix Async as shown below. Instead of, client . takeoff () client . moveToPosition ( - 10 , 10 , - 10 , 5 ) use this: client . takeoffAsync () . join () client . moveToPositionAsync ( - 10 , 10 , - 10 , 5 ) . join () Here .join() is a call on Python's Future class to wait for the async call to complete. You can also choose to do some other computation instead while the call is in progress.","title":"Async Methods"},{"location":"upgrade_apis/#simulation-only-methods","text":"Now we have clear distinction between methods that are only available in simulation from the ones that may be available on actual vehicle. The simulation only methods are prefixed with sim as shown below. getCollisionInfo() is renamed to simGetCollisionInfo() getCameraInfo() is renamed to simGetCameraInfo() setCameraOrientation() is renamed to simSetCameraOrientation()","title":"Simulation-Only Methods"},{"location":"upgrade_apis/#state-information","text":"Previously CarState mixed simulation-only information like kinematics_true . Moving forward, CarState will only contain information that can be obtained in real world. k = car_state . kinematics_true use this: k = car_state . kinematics_estimated # or k = client . simGetGroundTruthKinematics ()","title":"State Information"},{"location":"upgrade_settings/","text":"Upgrading Settings # The settings schema in AirSim 1.2 is changed for more flexibility and cleaner interface. If you have older settings.json file then you can either delete it and restart AirSim or use this guide to make manual upgrade. Quicker Way # We recommend simply deleting the settings.json and add back the settings you need. Please see the doc for complete information on available settings. Changes # UsageScenario # Previously we used UsageScenario to specify the ComputerVision mode. Now we use \"SimMode\": \"ComputerVision\" instead. CameraDefaults and Changing Camera Settings # Previously we had CaptureSettings and NoiseSettings in root. Now these are combined in new CameraDefaults element. The schema for this element is later used to configure cameras on vehicle. Gimbal # The Gimbal element (instead of old Gimble element) is now moved out of CaptureSettings . CameraID to CameraName # All settings now reference cameras by name instead of ID. Using PX4 # The new Vehicles element allows to specify which vehicles to create. To use PX4, please see this section . AdditionalCameras # The old AdditionalCameras setting is now replaced by Cameras element within vehicle setting.","title":"\u5347\u7ea7\u8bbe\u7f6e"},{"location":"upgrade_settings/#upgrading-settings","text":"The settings schema in AirSim 1.2 is changed for more flexibility and cleaner interface. If you have older settings.json file then you can either delete it and restart AirSim or use this guide to make manual upgrade.","title":"Upgrading Settings"},{"location":"upgrade_settings/#quicker-way","text":"We recommend simply deleting the settings.json and add back the settings you need. Please see the doc for complete information on available settings.","title":"Quicker Way"},{"location":"upgrade_settings/#changes","text":"","title":"Changes"},{"location":"upgrade_settings/#usagescenario","text":"Previously we used UsageScenario to specify the ComputerVision mode. Now we use \"SimMode\": \"ComputerVision\" instead.","title":"UsageScenario"},{"location":"upgrade_settings/#cameradefaults-and-changing-camera-settings","text":"Previously we had CaptureSettings and NoiseSettings in root. Now these are combined in new CameraDefaults element. The schema for this element is later used to configure cameras on vehicle.","title":"CameraDefaults and Changing Camera Settings"},{"location":"upgrade_settings/#gimbal","text":"The Gimbal element (instead of old Gimble element) is now moved out of CaptureSettings .","title":"Gimbal"},{"location":"upgrade_settings/#cameraid-to-cameraname","text":"All settings now reference cameras by name instead of ID.","title":"CameraID to CameraName"},{"location":"upgrade_settings/#using-px4","text":"The new Vehicles element allows to specify which vehicles to create. To use PX4, please see this section .","title":"Using PX4"},{"location":"upgrade_settings/#additionalcameras","text":"The old AdditionalCameras setting is now replaced by Cameras element within vehicle setting.","title":"AdditionalCameras"},{"location":"use_precompiled/","text":"\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6 # \u60a8\u53ea\u9700\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u8fd0\u884c\u5373\u53ef\u7acb\u5373\u5f00\u59cb\u4f7f\u7528\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8fd9\u4e9b\u8bf4\u660e \u3002 \u865a\u5e7b\u5f15\u64ce # Windows, Linux : \u4ece \u6700\u65b0\u7248\u672c \u4e2d\u4e0b\u8f7d\u9002\u5408\u60a8\u6240\u9009\u62e9\u7684\u73af\u5883\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e00\u4e9b\u9884\u7f16\u8bd1\u7684\u73af\u5883\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6587\u4ef6\uff08\u4f8b\u5982 City.zip.001 \u548c City.zip.002\uff09\u3002\u8bf7\u786e\u4fdd\u5728\u542f\u52a8\u73af\u5883\u4e4b\u524d\u4e0b\u8f7d\u8fd9 2 \u4e2a\u6587\u4ef6\u3002\u4f7f\u7528 7zip \u89e3\u538b\u8fd9\u4e9b\u6587\u4ef6\u3002\u5728 Linux \u4e0a\uff0c\u5c06\u7b2c\u4e00\u4e2a zip \u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u5b83\u5e94\u8be5\u4e5f\u4f1a\u68c0\u6d4b\u6240\u6709\u5176\u4ed6\u90e8\u5206 - 7zz x TrapCamera.zip.001 macOS : \u4f60\u9700\u8981 \u81ea\u5df1\u6784\u5efa\u5b83 Unity (\u5b9e\u9a8c) # Unity Asset Store \u73b0\u5df2\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a Windridge City \u7684\u514d\u8d39\u73af\u5883\uff0c\u4f5c\u4e3a AirSim \u5728 Unity \u4e0a\u7684\u5b9e\u9a8c\u7248\u672c\u3002 \u6ce8\u610f \uff1a\u8fd9\u662f\u4e00\u4e2a\u65e7\u7248\u672c\uff0c\u8bb8\u591a\u529f\u80fd\u548c API \u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u3002 \u63a7\u5236\u8f66\u8f86 # \u6211\u4eec\u7684\u5927\u591a\u6570\u7528\u6237\u901a\u5e38\u4f7f\u7528 APIs \u6765\u63a7\u5236\u8f66\u8f86\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u3001\u6e38\u620f\u624b\u67c4\u6216 \u65b9\u5411\u76d8 \u6765\u9a7e\u9a76\u8f66\u8f86\u3002\u8981\u624b\u52a8\u64cd\u63a7\u65e0\u4eba\u673a\uff0c\u60a8\u9700\u8981 XBox \u63a7\u5236\u5668\u6216\u9065\u63a7\u5668\uff08\u6b22\u8fce \u8d21\u732e \u952e\u76d8\u652f\u6301\uff09\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u9065\u63a7\u5668\u8bbe\u7f6e\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \uff0c\u901a\u8fc7\u952e\u76d8\u5728\u73af\u5883\u4e2d\u79fb\u52a8\u3002 \u6ca1\u6709\u597d\u7684 GPU\uff1f # AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4f8b\u5982 CityEnviron\uff09\u9700\u8981\u5f3a\u5927\u7684 GPU \u624d\u80fd\u6d41\u7545\u8fd0\u884c\u3002\u60a8\u53ef\u4ee5\u5728 Windows \u4e0a\u7f16\u8f91 run.bat \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u521b\u5efa\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff09\u4ee5\u4f4e\u5206\u8fa8\u7387\u6a21\u5f0f\u8fd0\u884c\u5b83\u4eec\uff0c\u5982\u4e0b\u6240\u793a\uff1a start CityEnviron -ResX=640 -ResY=480 -windowed \u5bf9\u4e8e Linux \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 Blocks.sh \u6216\u76f8\u5e94\u7684 shell \u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a ./Blocks.sh -ResX = 640 -ResY = 480 -windowed \u67e5\u770b\u6240\u6709\u5176\u4ed6 \u547d\u4ee4\u884c\u9009\u9879 UE 4.24 \u9ed8\u8ba4\u4f7f\u7528 Vulkan \u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u5b83\u4eec\u4f1a\u6d88\u8017\u66f4\u591a GPU \u5185\u5b58\u3002\u5982\u679c\u60a8\u9047\u5230\u5185\u5b58\u5206\u914d\u9519\u8bef\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 -opengl \u5207\u6362\u5230 OpenGL\u3002 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 simRunConsoleCommand() API \u9650\u5236\u6700\u5927 FPS\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> import airsim >>> client = airsim . VehicleClient () >>> client . confirmConnection () Connected ! Client Ver : 1 ( Min Req : 1 ), Server Ver : 1 ( Min Req : 1 ) >>> client . simRunConsoleCommand ( \"t.MaxFPS 10\" ) True","title":"\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"use_precompiled/#_1","text":"\u60a8\u53ea\u9700\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u8fd0\u884c\u5373\u53ef\u7acb\u5373\u5f00\u59cb\u4f7f\u7528\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u865a\u5e7b\u73af\u5883\uff0c\u8bf7\u53c2\u9605 \u8fd9\u4e9b\u8bf4\u660e \u3002","title":"\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"use_precompiled/#_2","text":"Windows, Linux : \u4ece \u6700\u65b0\u7248\u672c \u4e2d\u4e0b\u8f7d\u9002\u5408\u60a8\u6240\u9009\u62e9\u7684\u73af\u5883\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e00\u4e9b\u9884\u7f16\u8bd1\u7684\u73af\u5883\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6587\u4ef6\uff08\u4f8b\u5982 City.zip.001 \u548c City.zip.002\uff09\u3002\u8bf7\u786e\u4fdd\u5728\u542f\u52a8\u73af\u5883\u4e4b\u524d\u4e0b\u8f7d\u8fd9 2 \u4e2a\u6587\u4ef6\u3002\u4f7f\u7528 7zip \u89e3\u538b\u8fd9\u4e9b\u6587\u4ef6\u3002\u5728 Linux \u4e0a\uff0c\u5c06\u7b2c\u4e00\u4e2a zip \u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u5b83\u5e94\u8be5\u4e5f\u4f1a\u68c0\u6d4b\u6240\u6709\u5176\u4ed6\u90e8\u5206 - 7zz x TrapCamera.zip.001 macOS : \u4f60\u9700\u8981 \u81ea\u5df1\u6784\u5efa\u5b83","title":"\u865a\u5e7b\u5f15\u64ce"},{"location":"use_precompiled/#unity","text":"Unity Asset Store \u73b0\u5df2\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a Windridge City \u7684\u514d\u8d39\u73af\u5883\uff0c\u4f5c\u4e3a AirSim \u5728 Unity \u4e0a\u7684\u5b9e\u9a8c\u7248\u672c\u3002 \u6ce8\u610f \uff1a\u8fd9\u662f\u4e00\u4e2a\u65e7\u7248\u672c\uff0c\u8bb8\u591a\u529f\u80fd\u548c API \u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u3002","title":"Unity (\u5b9e\u9a8c)"},{"location":"use_precompiled/#_3","text":"\u6211\u4eec\u7684\u5927\u591a\u6570\u7528\u6237\u901a\u5e38\u4f7f\u7528 APIs \u6765\u63a7\u5236\u8f66\u8f86\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\u3001\u6e38\u620f\u624b\u67c4\u6216 \u65b9\u5411\u76d8 \u6765\u9a7e\u9a76\u8f66\u8f86\u3002\u8981\u624b\u52a8\u64cd\u63a7\u65e0\u4eba\u673a\uff0c\u60a8\u9700\u8981 XBox \u63a7\u5236\u5668\u6216\u9065\u63a7\u5668\uff08\u6b22\u8fce \u8d21\u732e \u952e\u76d8\u652f\u6301\uff09\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u9065\u63a7\u5668\u8bbe\u7f6e\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 APIs \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \uff0c\u901a\u8fc7\u952e\u76d8\u5728\u73af\u5883\u4e2d\u79fb\u52a8\u3002","title":"\u63a7\u5236\u8f66\u8f86"},{"location":"use_precompiled/#gpu","text":"AirSim \u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4f8b\u5982 CityEnviron\uff09\u9700\u8981\u5f3a\u5927\u7684 GPU \u624d\u80fd\u6d41\u7545\u8fd0\u884c\u3002\u60a8\u53ef\u4ee5\u5728 Windows \u4e0a\u7f16\u8f91 run.bat \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u521b\u5efa\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff09\u4ee5\u4f4e\u5206\u8fa8\u7387\u6a21\u5f0f\u8fd0\u884c\u5b83\u4eec\uff0c\u5982\u4e0b\u6240\u793a\uff1a start CityEnviron -ResX=640 -ResY=480 -windowed \u5bf9\u4e8e Linux \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 Blocks.sh \u6216\u76f8\u5e94\u7684 shell \u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a ./Blocks.sh -ResX = 640 -ResY = 480 -windowed \u67e5\u770b\u6240\u6709\u5176\u4ed6 \u547d\u4ee4\u884c\u9009\u9879 UE 4.24 \u9ed8\u8ba4\u4f7f\u7528 Vulkan \u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u5b83\u4eec\u4f1a\u6d88\u8017\u66f4\u591a GPU \u5185\u5b58\u3002\u5982\u679c\u60a8\u9047\u5230\u5185\u5b58\u5206\u914d\u9519\u8bef\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 -opengl \u5207\u6362\u5230 OpenGL\u3002 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 simRunConsoleCommand() API \u9650\u5236\u6700\u5927 FPS\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> import airsim >>> client = airsim . VehicleClient () >>> client . confirmConnection () Connected ! Client Ver : 1 ( Min Req : 1 ), Server Ver : 1 ( Min Req : 1 ) >>> client . simRunConsoleCommand ( \"t.MaxFPS 10\" ) True","title":"\u6ca1\u6709\u597d\u7684 GPU\uff1f"},{"location":"using_car/","text":"How to Use Car in AirSim # By default AirSim prompts user for which vehicle to use. You can easily change this by setting SimMode . For example, if you want to use car instead then just set the SimMode in your settings.json which you can find in your ~/Documents/AirSim folder, like this: { \"SettingsVersion\": 1.2, \"SimMode\": \"Car\" } Now when you restart AirSim, you should see the car spawned automatically. Manual Driving # Please use the keyboard arrow keys to drive manually. Spacebar for the handbrake. In manual drive mode, gears are set in \"auto\". Using APIs # You can control the car, get state and images by calling APIs in variety of client languages including C++ and Python. Please see APIs doc for more details. Changing Views # By default camera will chase the car from the back. You can get the FPV view by pressing F key and switch back to chasing from back view by pressing / key. More keyboard shortcuts can be seen by pressing F1. Cameras # By default car is installed with 5 cameras: center, left and right, driver and reverse. You can chose the images from these camera by specifying the name .","title":"\u6c7d\u8f66\u6a21\u5f0f"},{"location":"using_car/#how-to-use-car-in-airsim","text":"By default AirSim prompts user for which vehicle to use. You can easily change this by setting SimMode . For example, if you want to use car instead then just set the SimMode in your settings.json which you can find in your ~/Documents/AirSim folder, like this: { \"SettingsVersion\": 1.2, \"SimMode\": \"Car\" } Now when you restart AirSim, you should see the car spawned automatically.","title":"How to Use Car in AirSim"},{"location":"using_car/#manual-driving","text":"Please use the keyboard arrow keys to drive manually. Spacebar for the handbrake. In manual drive mode, gears are set in \"auto\".","title":"Manual Driving"},{"location":"using_car/#using-apis","text":"You can control the car, get state and images by calling APIs in variety of client languages including C++ and Python. Please see APIs doc for more details.","title":"Using APIs"},{"location":"using_car/#changing-views","text":"By default camera will chase the car from the back. You can get the FPV view by pressing F key and switch back to chasing from back view by pressing / key. More keyboard shortcuts can be seen by pressing F1.","title":"Changing Views"},{"location":"using_car/#cameras","text":"By default car is installed with 5 cameras: center, left and right, driver and reverse. You can chose the images from these camera by specifying the name .","title":"Cameras"},{"location":"voxel_grid/","text":"AirSim\u63d0\u4f9b\u4e86\u4e00\u79cd\u529f\u80fd\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u4e16\u754c\u7684\u771f\u5b9e\u4f53\u7d20\u6805\u683c\u3002\u4f53\u7d20\u6805\u683c\u662f\u7ed9\u5b9a\u4e16\u754c/\u5730\u56fe\u7684\u5360\u7528\u8868\u793a\uff0c\u901a\u8fc7\u79bb\u6563\u5316\u4e3a\u7279\u5b9a\u5927\u5c0f\u7684\u5355\u5143\uff1b\u4ee5\u53ca\u5982\u679c\u8be5\u7279\u5b9a\u4f4d\u7f6e\u88ab\u5360\u7528\uff0c\u5219\u8bb0\u5f55\u4f53\u7d20\u3002 \u6784\u5efa\u4f53\u7d20\u7f51\u683c\u7684\u903b\u8f91\u5728 WorldSimApi.cpp->createVoxelGrid() \u4e2d\u3002\u76ee\u524d\uff0c\u5047\u8bbe\u4f53\u7d20\u7f51\u683c\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6765\u81eaPython\u7684API\u8c03\u7528\u5177\u6709\u4ee5\u4e0b\u7ed3\u6784\uff1a simCreateVoxelGrid(self, position, x, y, z, res, of) position (Vector3r): Global position around which voxel grid is centered in m x, y, z (float): Size of each voxel grid dimension in m res (float): Resolution of voxel grid in m of (str): Name of output file to save voxel grid as \u5728 createVoxelGrid() \u4e2d\uff0c\u8fd4\u56de\u5360\u7528\u7387\u7684\u4e3b\u865a\u5e7b\u5f15\u64ce\u51fd\u6570\u662f OverlapBlockingTestByChannel \u3002 OverlapBlockingTestByChannel(position, rotation, ECollisionChannel, FCollisionShape, params); \u5728\u5e0c\u671b\u5c06\u8d34\u56fe\u79bb\u6563\u5316\u5230\u7684\u6240\u6709\u201c\u5355\u5143\u201d\u7684\u4f4d\u7f6e\u4e0a\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u7684\u5360\u7528\u7ed3\u679c\u6536\u96c6\u5230\u6570\u7ec4 voxel_grid_ \u4e2d\u3002\u5355\u5143\u5360\u7528\u503c\u7684\u7d22\u5f15\u9075\u5faa binvox \u683c\u5f0f\u7684\u7ea6\u5b9a\u3002 for (float i = 0; i < ncells_x; i++) { for (float k = 0; k < ncells_z; k++) { for (float j = 0; j < ncells_y; j++) { int idx = i + ncells_x * (k + ncells_z * j); FVector position = FVector((i - ncells_x /2) * scale_cm, (j - ncells_y /2) * scale_cm, (k - ncells_z /2) * scale_cm) + position_in_UE_frame; voxel_grid_[idx] = simmode_->GetWorld()->OverlapBlockingTestByChannel(position, FQuat::Identity, ECollisionChannel::ECC_Pawn, FCollisionShape::MakeBox(FVector(scale_cm /2)), params); } } } \u5728\u6240\u6709\u79bb\u6563\u5316\u5355\u5143\u4e0a\u8fed\u4ee3\u8ba1\u7b97\u6620\u5c04\u7684\u5360\u7528\u7387\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u4f9d\u8d56\u4e8e\u5355\u5143\u7684\u5206\u8fa8\u7387\u548c\u88ab\u6d4b\u91cf\u533a\u57df\u7684\u603b\u5927\u5c0f\u7684\u5bc6\u96c6\u64cd\u4f5c\u3002\u5982\u679c\u7528\u6237\u611f\u5174\u8da3\u7684\u5730\u56fe\u53d8\u5316\u4e0d\u5927\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u5730\u56fe\u4e0a\u8fd0\u884c\u4e00\u6b21\u4f53\u7d20\u6805\u683c\u64cd\u4f5c\uff0c\u5e76\u4fdd\u5b58\u4f53\u7d20\u6805\u683c\u5e76\u91cd\u65b0\u4f7f\u7528\u5b83\u3002\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u6216\u4f7f\u7528\u52a8\u6001\u73af\u5883\uff0c\u6211\u4eec\u5efa\u8bae\u5bf9\u673a\u5668\u4eba\u5468\u56f4\u7684\u5c0f\u533a\u57df\u8fd0\u884c\u4f53\u7d20\u6805\u683c\u751f\u6210\uff1b\u5e76\u968f\u540e\u5c06\u5176\u7528\u4e8e\u5c40\u90e8\u89c4\u5212\u76ee\u7684\u3002 \u4f53\u7d20\u6805\u683c\u4ee5binvox\u683c\u5f0f\u5b58\u50a8\uff0c\u7136\u540e\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3aoctomap.bt\u6216\u4efb\u4f55\u5176\u4ed6\u76f8\u5173\u7684\u6240\u9700\u683c\u5f0f\u3002\u968f\u540e\uff0c\u53ef\u4ee5\u5728\u6620\u5c04/\u89c4\u5212\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u4f53\u7d20\u6805\u683c/\u516b\u8fdb\u5236\u6620\u5c04\u3002\u4e00\u4e2a\u6f02\u4eae\u7684\u5c0f\u5b9e\u7528\u7a0b\u5e8f\u662f viewvox \uff0c\u5b83\u53ef\u4ee5\u53ef\u89c6\u5316\u521b\u5efa\u7684 binvox \u6587\u4ef6\u3002\u7c7b\u4f3c\u5730\uff0c binvox2bt \u53ef\u4ee5\u5c06binvox\u8f6c\u6362\u4e3aoctomap\u6587\u4ef6\u3002 \u5757\u5730\u56fe(Blocks)\u4e2d\u7684\u4f53\u7d20\u6805\u683c\u793a\u4f8b\uff1a # \u5757\u5730\u56fe\uff08Blocks\uff09\u4f53\u7d20\u6805\u683c\u8f6c\u6362\u4e3aOctomap\u683c\u5f0f\uff08\u5728rviz\u4e2d\u53ef\u89c6\u5316\uff09\uff1a # \u4f8b\u5982\uff0c\u4e00\u65e6 Blocks \u73af\u5883\u542f\u52a8\u5e76\u8fd0\u884c\uff0c\u5c31\u53ef\u4ee5\u5982\u4e0b\u6784\u9020\u4f53\u7d20\u6805\u683c\uff1a import airsim c = airsim.VehicleClient() center = airsim.Vector3r(0, 0, 0) output_path = os.path.join(os.getcwd(), \"map.binvox\") c.simCreateVoxelGrid(center, 100, 100, 100, 0.5, output_path) \u5e76\u901a\u8fc7 viewvox map.binvox \u53ef\u89c6\u5316\u3002","title":"\u4f53\u7d20\u7f51\u683c\u751f\u6210\u5668"},{"location":"voxel_grid/#blocks","text":"","title":"\u5757\u5730\u56fe(Blocks)\u4e2d\u7684\u4f53\u7d20\u6805\u683c\u793a\u4f8b\uff1a"},{"location":"voxel_grid/#blocksoctomaprviz","text":"\u4f8b\u5982\uff0c\u4e00\u65e6 Blocks \u73af\u5883\u542f\u52a8\u5e76\u8fd0\u884c\uff0c\u5c31\u53ef\u4ee5\u5982\u4e0b\u6784\u9020\u4f53\u7d20\u6805\u683c\uff1a import airsim c = airsim.VehicleClient() center = airsim.Vector3r(0, 0, 0) output_path = os.path.join(os.getcwd(), \"map.binvox\") c.simCreateVoxelGrid(center, 100, 100, 100, 0.5, output_path) \u5e76\u901a\u8fc7 viewvox map.binvox \u53ef\u89c6\u5316\u3002","title":"\u5757\u5730\u56fe\uff08Blocks\uff09\u4f53\u7d20\u6805\u683c\u8f6c\u6362\u4e3aOctomap\u683c\u5f0f\uff08\u5728rviz\u4e2d\u53ef\u89c6\u5316\uff09\uff1a"},{"location":"who_is_using/","text":"Who is Using AirSim? # Would you like to see your own group or project here? # Just add a GitHub issue with quick details and link to your website. NASA Ames Research Center \u2013 Systems Analysis Office Astrobotic GRASP Lab, Univ of Pennsylvania Department of Aeronautics and Astronautics, Stanford University Formula Technion Ghent University ICARUS UC, Santa Barbara WISE Lab, Univ of Waterloo HAMS project, MSR India Washington and Lee University University of Oklahoma Robotics Institute, Carnegie Mellon University Texas A&M Robotics and Perception Group, University of Zurich National University of Ireland, Galway (NUIG) Soda Mobility Technologies University of Cambridge Skoods - AI Autonomous cars competition Teledyne Scientific BladeStack Systems Unizar (Universidad de Zaragoza) ClearSky LLC Myned AI STPLS3D - University of Southern California Institute for Creative Technologies Central Michigan University","title":"\u8c01\u5728\u4f7f\u7528 AirSim"},{"location":"who_is_using/#who-is-using-airsim","text":"","title":"Who is Using AirSim?"},{"location":"who_is_using/#would-you-like-to-see-your-own-group-or-project-here","text":"Just add a GitHub issue with quick details and link to your website. NASA Ames Research Center \u2013 Systems Analysis Office Astrobotic GRASP Lab, Univ of Pennsylvania Department of Aeronautics and Astronautics, Stanford University Formula Technion Ghent University ICARUS UC, Santa Barbara WISE Lab, Univ of Waterloo HAMS project, MSR India Washington and Lee University University of Oklahoma Robotics Institute, Carnegie Mellon University Texas A&M Robotics and Perception Group, University of Zurich National University of Ireland, Galway (NUIG) Soda Mobility Technologies University of Cambridge Skoods - AI Autonomous cars competition Teledyne Scientific BladeStack Systems Unizar (Universidad de Zaragoza) ClearSky LLC Myned AI STPLS3D - University of Southern California Institute for Creative Technologies Central Michigan University","title":"Would you like to see your own group or project here?"},{"location":"working_with_plugin_contents/","text":"How to use plugin contents # Plugin contents are not shown in Unreal projects by default. To view plugin content, you need to click on few semi-hidden buttons: Causion Changes you make in content folder are changes to binary files so be careful.","title":"\u4f7f\u7528 UE \u63d2\u4ef6\u5185\u5bb9"},{"location":"working_with_plugin_contents/#how-to-use-plugin-contents","text":"Plugin contents are not shown in Unreal projects by default. To view plugin content, you need to click on few semi-hidden buttons: Causion Changes you make in content folder are changes to binary files so be careful.","title":"How to use plugin contents"},{"location":"xbox_controller/","text":"XBox Controller # To use an XBox controller with AirSim follow these steps: Connect XBox controller so it shows up in your PC Game Controllers: Launch QGroundControl and you should see a new Joystick tab under settings: Now calibrate the radio, and setup some handy button actions. For example, I set mine so that the 'A' button arms the drone, 'B' put it in manual flight mode, 'X' puts it in altitude hold mode and 'Y' puts it in position hold mode. I also prefer the feel of the controller when I check the box labelled \"Use exponential curve on roll,pitch, yaw\" because this gives me more sensitivity for small movements. QGroundControl will find your Pixhawk via the UDP proxy port 14550 setup by MavLinkTest above. AirSim will find your Pixhawk via the other UDP server port 14570 also setup by MavLinkTest above. You can also use all the QGroundControl controls for autonomous flying at this point too. Connect to Pixhawk serial port using MavLinkTest.exe like this: MavLinkTest.exe -serial:*,115200 -proxy:127.0.0.1:14550 -server:127.0.0.1:14570 Run AirSim Unreal simulator with these ~/Documents/AirSim/settings.json settings: \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"SitlIp\": \"\", \"SitlPort\": 14560, \"UdpIp\": \"127.0.0.1\", \"UdpPort\": 14570, \"UseSerial\": false } } Advanced # If the Joystick tab doesn't show up in QGroundControl then Click on the purple \"Q\" icon on left in tool bar to reveal the Preferences panel. Go to General tab and check the Virtual Joystick checkbox. Go back to settings screen (gears icon), click on Parameters tab, type COM_RC_IN_MODE in search box and change its value to either Joystick/No RC Checks or Virtual RC by Joystick . Other Options # See remote controller options","title":"XBox \u63a7\u5236\u5668"},{"location":"xbox_controller/#xbox-controller","text":"To use an XBox controller with AirSim follow these steps: Connect XBox controller so it shows up in your PC Game Controllers: Launch QGroundControl and you should see a new Joystick tab under settings: Now calibrate the radio, and setup some handy button actions. For example, I set mine so that the 'A' button arms the drone, 'B' put it in manual flight mode, 'X' puts it in altitude hold mode and 'Y' puts it in position hold mode. I also prefer the feel of the controller when I check the box labelled \"Use exponential curve on roll,pitch, yaw\" because this gives me more sensitivity for small movements. QGroundControl will find your Pixhawk via the UDP proxy port 14550 setup by MavLinkTest above. AirSim will find your Pixhawk via the other UDP server port 14570 also setup by MavLinkTest above. You can also use all the QGroundControl controls for autonomous flying at this point too. Connect to Pixhawk serial port using MavLinkTest.exe like this: MavLinkTest.exe -serial:*,115200 -proxy:127.0.0.1:14550 -server:127.0.0.1:14570 Run AirSim Unreal simulator with these ~/Documents/AirSim/settings.json settings: \"Vehicles\": { \"PX4\": { \"VehicleType\": \"PX4Multirotor\", \"SitlIp\": \"\", \"SitlPort\": 14560, \"UdpIp\": \"127.0.0.1\", \"UdpPort\": 14570, \"UseSerial\": false } }","title":"XBox Controller"},{"location":"xbox_controller/#advanced","text":"If the Joystick tab doesn't show up in QGroundControl then Click on the purple \"Q\" icon on left in tool bar to reveal the Preferences panel. Go to General tab and check the Virtual Joystick checkbox. Go back to settings screen (gears icon), click on Parameters tab, type COM_RC_IN_MODE in search box and change its value to either Joystick/No RC Checks or Virtual RC by Joystick .","title":"Advanced"},{"location":"xbox_controller/#other-options","text":"See remote controller options","title":"Other Options"},{"location":"dev/add_plugin/","text":"\u6dfb\u52a0 AirSim \u63d2\u4ef6 # \u548c HUTB \u4e00\u6837\uff0c\u4f7f\u7528\u540c\u4e00\u5957 \u5f15\u64ce \uff0c\u6784\u5efa\u65b9\u6cd5\u8bf7\u53c2\u8003 \u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u94fe\u63a5 \u3002 \u6784\u5efa AirSim # \u5b89\u88c5 Visual Studio 2022\u3002 \u786e\u4fdd \u9009\u62e9\u4f7f\u7528 C++ \u548c Windows 10 SDK 10.0.19041 \u8fdb\u884c\u684c\u9762\u5f00\u53d1 \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\uff0c\u5e76\u5728\u5b89\u88c5 VS 2022 \u65f6\u5728\u201c\u5355\u4e2a\u7ec4\u4ef6\u201d\u9009\u9879\u5361\u4e0b\u9009\u62e9\u6700\u65b0\u7684 .NET Framework SDK\u3002 \u542f\u52a8 Developer Command Prompt for VS 2022 . \u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/OpenHUTB/AirSim.git \uff0c\u7136\u540e\u901a\u8fc7 cd AirSim \u8fdb\u5165 AirSim \u76ee\u5f55\u3002 \u6ce8\u610f \u901a\u5e38\u4e0d\u5efa\u8bae\u5c06 AirSim \u5b89\u88c5\u5728 C \u76d8\u3002\u8fd9\u4f1a\u5bfc\u81f4\u811a\u672c\u8fd0\u884c\u5931\u8d25\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u6a21\u5f0f\u8fd0\u884c VS\u3002\u5efa\u8bae\u5c06\u5176\u514b\u9686\u5230\u5176\u4ed6\u76d8\uff0c\u4f8b\u5982 D \u76d8\u6216 E \u76d8\u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u3002 \u7b14\u8bb0 \u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f1a\u5f39\u51fa Select Unreal Engine Version \uff0c\u9009\u62e9 hutb \u6240\u5bf9\u5e94\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u4f1a\u4e3a AirSim\\Unreal\\Environments\\Blocks.uproject \u751f\u6210 Blocks.sln \u6587\u4ef6\u3002 \u6dfb\u52a0\u63d2\u4ef6 # \u4e0b\u9762\u7684\u6b65\u9aa4\u662f\u628a AirSim \u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b89\u88c5\u5230\u8fd9\u4e2a HUTB \u573a\u666f\u5de5\u7a0b\u4e2d\u3002 \u9996\u5148\u5230 AirSim \u6e90\u7801\u6587\u4ef6\u5939\u4e2d\u627e\u5230 AirSim\\Unreal\\Plugins \u6587\u4ef6\u5939\uff08\u9700\u8981\u7f16\u8bd1\u540e\u624d\u80fd\u83b7\u5f97\uff0c\u53c2\u8003 \u5728 Windows \u4e0a\u6784\u5efa AirSim \uff09\uff0c\u5e76\u5c06 AirSim \u6587\u4ef6\u5939\u590d\u5236\u5230 hutb\\Unreal\\CarlaUE4\\Plugins \u6587\u4ef6\u5939\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u6253\u5f00 hutb\\Unreal\\CarlaUE4\\CarlaUE4.uproject \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6dfb\u52a0 AirSim \u7684\u63d2\u4ef6\u652f\u6301\u3002\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u7528\u82f1\u6587\u8f93\u5165\u6cd5\uff0c\u540c\u65f6\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u9017\u53f7\u7b49\u5206\u9694\u7b26\uff0c\u5982\u679c\u8fd9\u91cc\u4fee\u6539\u7684\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5219\u540e\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\uff09\u4fee\u6539\u5b8c\u4e4b\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 hutb\\Unreal\\CarlaUE4\\Config\\DefaultGame.ini \u6587\u4ef6\uff0c\u5728\u6253\u5305\u5730\u56fe\u7684\u540e\u9762\u6dfb\u52a0 +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \uff0c\u4ee5\u786e\u4fdd\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\u53ef\u4ee5\u8bc6\u522b AirSim \u7684\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u5305\u542b\u8fdb\u6765\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4fee\u6539\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u53f3\u952e\u70b9\u51fb hutb\\Unreal\\CarlaUE4\\CarlaUE4.uproject \u6587\u4ef6\uff0c\u9009\u62e9\u201c\u663e\u793a\u66f4\u591a\u9009\u9879\u201d\uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio project files \u9009\u9879\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4e00\u6b65\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6240\u6709\u7684\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u751f\u6210 .sln \u5de5\u7a0b\u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u53f3\u952e\u83dc\u5355\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u542f\u7535\u8111\uff0c\u5982\u679c\u4ecd\u7136\u6ca1\u6709\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6253\u5f00 CarlaUE4.uproject \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb \u6587\u4ef6 -> \u5237\u65b0Visual Studio\u5de5\u7a0b \u3002 \u6267\u884c make launch \u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u53f3\u4fa7 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u4e2d\u7684 \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u8bbe\u7f6e\u4e3a AirSimGameMode \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u4fdd\u5b58\u5f53\u524d\u5173\u5361 \u6765\u4fdd\u5b58\u8bbe\u7f6e\u597d\u7684\u73af\u5883\uff0c\u8fd9\u6837\u4ee5\u540e\u518d\u6b21\u6253\u5f00\u65f6\u5c31\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6e \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u4e86\u3002 \u63d0\u793a \u5982\u679c\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u6ca1\u6709 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \uff0c\u5219\u53ef\u4ee5\u70b9\u51fb\u83dc\u5355\u680f\u4e2d\u7684 \u7a97\u53e3 \uff0c\u9009\u4e2d \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u3002 \u70b9\u51fb\u5de5\u5177\u680f\u4e2d\u7684 \u201c\u8fd0\u884c\u201d\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4eff\u771f\u4e86\uff0c\u5728\u8df3\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u70b9 \u201c\u5426\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u70b9\u51fb\u201c\u662f\u201d\u8868\u793a\u4f7f\u7528AirSim\u7684\u8f66\uff0c\u4f46\u662f AirSimGameMode \u8fd0\u884c\u65f6\uff0c\u56e0Town10HD_Opt \u56e0\u4e3a\u662f\u5206\u5c42\u5730\u56fe\uff0c\u5efa\u7b51\u6ca1\u6709\u52a0\u8f7d\uff0c\u9700\u8981\u662f\u5730\u56fe Town10HD\uff0c\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u3002 \u62a5\u9519 \u5982\u679c\u70b9\u8fd0\u884c\u65f6\u63d0\u793a\uff1a There were no compatible vehicles created for current SimMode! Check your settings.json. \uff0c\u5728\u83dc\u5355\u4e2d\u70b9\u51fb \u8fd0\u884c -> \u4ee5\u72ec\u7acb\u8fdb\u7a0b\u8fd0\u884c \u5219\u53ef\u4ee5\u663e\u793a\u65e0\u4eba\u673a\uff0c\u4f46\u662f\u5730\u56fe\u6ca1\u6709\u663e\u793a\uff08\u4ece\u914d\u7f6e\u6587\u4ef6 C:\\Users\\Administrator\\Documents\\AirSim\\settings.json \u4e2d\u52a0\u8f7d\uff0c \"SimMode\": \"ComputerVision\" \uff09\u3002 \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4eff\u771f\u8fd0\u884c\u8fd9\u4e2a Town10 \u573a\u666f\uff0c\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u89c6\u53e3\u4e2d\u4e00\u7247\u7a7a\u767d\u7684\u8bdd\uff08\u53ea\u663e\u793a\u65e0\u4eba\u673a\uff09\uff0c\u4e0d\u8981\u7d27\u5f20\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6e32\u67d3\u753b\u9762\uff0c\u968f\u7740\u6e32\u67d3\u7684\u8fdb\u884c\uff0c\u753b\u9762\u4f1a\u4e00\u70b9\u70b9\u5c55\u793a\u51fa\u6765\u3002\u4e0d\u540c\u6027\u80fd\u7684\u8ba1\u7b97\u673a\u7684\u6e32\u67d3\u65f6\u95f4\u4e5f\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6e32\u67d3\u7684\u8f83\u957f\u65f6\u95f4\u7684\u8bdd\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u56e0\u4e3a\u4ec5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u9700\u8981\u6e32\u67d3\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u4eff\u771f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u4e86\u3002\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e\uff0c\u89c6\u53e3\u4e2d\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u98de\u884c\u7684\u56db\u65cb\u7ffc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb\u5de5\u5177\u680f\u7684 \u505c\u6b62 \u6309\u94ae\uff0c\u5373\u53ef\u9000\u51fa\u4eff\u771f\u3002 \u81f3\u6b64 AirSim \u63d2\u4ef6\u5df2\u7ecf\u52a0\u8f7d\u5230\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u5de5\u7a0b\u4e2d\u4e86\u3002 FAQ # \u6dfb\u52a0AirSim\u540e\uff08\u4e0d\u542f\u7528\uff09\uff0c\u62a5\u627e\u4e0d\u5230AirSim\u6a21\u5757\u5b9a\u4e49\u7684\u9519 # \u62a5\u9519\u4fe1\u606f\uff1a UnrealBuildTool: ERROR: Could not find definition for module 'AirSim', (referenced via Target -> CarlaUE4.Build.cs) \u9700\u8981\u5728 Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4.Build.cs \u4e2d\u6dfb\u52a0\u6a21\u5757\u4f9d\u8d56\uff1a PrivateDependencyModuleNames . AddRange ( new string [] { \"AirSim\" }); \u6ca1\u89e3\u51b3\uff01 \u6dfb\u52a0\u63d2\u4ef6\u540e\u7f16\u8bd1\u62a5\u627e\u4e0d\u5230GBufferView.h\u7684\u9519 # \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cSplineMeshSceneProxy.h\u201d: No such file or directory \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cRenderer/Public/GBufferView.h\u201d: No such file or directory \u539f\u56e0\uff1a \u672c\u5730\u5b58\u5728\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u6ca1\u6709\u4f7f\u7528\u6b63\u786e\u7684\u7248\u672c \u3002","title":"\u6dfb\u52a0 AirSim \u63d2\u4ef6"},{"location":"dev/add_plugin/#airsim","text":"\u548c HUTB \u4e00\u6837\uff0c\u4f7f\u7528\u540c\u4e00\u5957 \u5f15\u64ce \uff0c\u6784\u5efa\u65b9\u6cd5\u8bf7\u53c2\u8003 \u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u94fe\u63a5 \u3002","title":"\u6dfb\u52a0 AirSim \u63d2\u4ef6"},{"location":"dev/add_plugin/#airsim_1","text":"\u5b89\u88c5 Visual Studio 2022\u3002 \u786e\u4fdd \u9009\u62e9\u4f7f\u7528 C++ \u548c Windows 10 SDK 10.0.19041 \u8fdb\u884c\u684c\u9762\u5f00\u53d1 \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\uff0c\u5e76\u5728\u5b89\u88c5 VS 2022 \u65f6\u5728\u201c\u5355\u4e2a\u7ec4\u4ef6\u201d\u9009\u9879\u5361\u4e0b\u9009\u62e9\u6700\u65b0\u7684 .NET Framework SDK\u3002 \u542f\u52a8 Developer Command Prompt for VS 2022 . \u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/OpenHUTB/AirSim.git \uff0c\u7136\u540e\u901a\u8fc7 cd AirSim \u8fdb\u5165 AirSim \u76ee\u5f55\u3002 \u6ce8\u610f \u901a\u5e38\u4e0d\u5efa\u8bae\u5c06 AirSim \u5b89\u88c5\u5728 C \u76d8\u3002\u8fd9\u4f1a\u5bfc\u81f4\u811a\u672c\u8fd0\u884c\u5931\u8d25\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u6a21\u5f0f\u8fd0\u884c VS\u3002\u5efa\u8bae\u5c06\u5176\u514b\u9686\u5230\u5176\u4ed6\u76d8\uff0c\u4f8b\u5982 D \u76d8\u6216 E \u76d8\u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55\u865a\u5e7b\u5f15\u64ce\u9879\u76ee\u4e2d\u3002 \u7b14\u8bb0 \u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f1a\u5f39\u51fa Select Unreal Engine Version \uff0c\u9009\u62e9 hutb \u6240\u5bf9\u5e94\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u4f1a\u4e3a AirSim\\Unreal\\Environments\\Blocks.uproject \u751f\u6210 Blocks.sln \u6587\u4ef6\u3002","title":"\u6784\u5efa AirSim"},{"location":"dev/add_plugin/#_1","text":"\u4e0b\u9762\u7684\u6b65\u9aa4\u662f\u628a AirSim \u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b89\u88c5\u5230\u8fd9\u4e2a HUTB \u573a\u666f\u5de5\u7a0b\u4e2d\u3002 \u9996\u5148\u5230 AirSim \u6e90\u7801\u6587\u4ef6\u5939\u4e2d\u627e\u5230 AirSim\\Unreal\\Plugins \u6587\u4ef6\u5939\uff08\u9700\u8981\u7f16\u8bd1\u540e\u624d\u80fd\u83b7\u5f97\uff0c\u53c2\u8003 \u5728 Windows \u4e0a\u6784\u5efa AirSim \uff09\uff0c\u5e76\u5c06 AirSim \u6587\u4ef6\u5939\u590d\u5236\u5230 hutb\\Unreal\\CarlaUE4\\Plugins \u6587\u4ef6\u5939\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u6253\u5f00 hutb\\Unreal\\CarlaUE4\\CarlaUE4.uproject \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6dfb\u52a0 AirSim \u7684\u63d2\u4ef6\u652f\u6301\u3002\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u7528\u82f1\u6587\u8f93\u5165\u6cd5\uff0c\u540c\u65f6\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u9017\u53f7\u7b49\u5206\u9694\u7b26\uff0c\u5982\u679c\u8fd9\u91cc\u4fee\u6539\u7684\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5219\u540e\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\uff09\u4fee\u6539\u5b8c\u4e4b\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 hutb\\Unreal\\CarlaUE4\\Config\\DefaultGame.ini \u6587\u4ef6\uff0c\u5728\u6253\u5305\u5730\u56fe\u7684\u540e\u9762\u6dfb\u52a0 +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \uff0c\u4ee5\u786e\u4fdd\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\u53ef\u4ee5\u8bc6\u522b AirSim \u7684\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u5305\u542b\u8fdb\u6765\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4fee\u6539\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u53f3\u952e\u70b9\u51fb hutb\\Unreal\\CarlaUE4\\CarlaUE4.uproject \u6587\u4ef6\uff0c\u9009\u62e9\u201c\u663e\u793a\u66f4\u591a\u9009\u9879\u201d\uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio project files \u9009\u9879\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4e00\u6b65\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6240\u6709\u7684\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u751f\u6210 .sln \u5de5\u7a0b\u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u53f3\u952e\u83dc\u5355\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u542f\u7535\u8111\uff0c\u5982\u679c\u4ecd\u7136\u6ca1\u6709\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6253\u5f00 CarlaUE4.uproject \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb \u6587\u4ef6 -> \u5237\u65b0Visual Studio\u5de5\u7a0b \u3002 \u6267\u884c make launch \u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u53f3\u4fa7 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u4e2d\u7684 \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u8bbe\u7f6e\u4e3a AirSimGameMode \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u4fdd\u5b58\u5f53\u524d\u5173\u5361 \u6765\u4fdd\u5b58\u8bbe\u7f6e\u597d\u7684\u73af\u5883\uff0c\u8fd9\u6837\u4ee5\u540e\u518d\u6b21\u6253\u5f00\u65f6\u5c31\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6e \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u4e86\u3002 \u63d0\u793a \u5982\u679c\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u6ca1\u6709 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \uff0c\u5219\u53ef\u4ee5\u70b9\u51fb\u83dc\u5355\u680f\u4e2d\u7684 \u7a97\u53e3 \uff0c\u9009\u4e2d \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u3002 \u70b9\u51fb\u5de5\u5177\u680f\u4e2d\u7684 \u201c\u8fd0\u884c\u201d\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4eff\u771f\u4e86\uff0c\u5728\u8df3\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u70b9 \u201c\u5426\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u70b9\u51fb\u201c\u662f\u201d\u8868\u793a\u4f7f\u7528AirSim\u7684\u8f66\uff0c\u4f46\u662f AirSimGameMode \u8fd0\u884c\u65f6\uff0c\u56e0Town10HD_Opt \u56e0\u4e3a\u662f\u5206\u5c42\u5730\u56fe\uff0c\u5efa\u7b51\u6ca1\u6709\u52a0\u8f7d\uff0c\u9700\u8981\u662f\u5730\u56fe Town10HD\uff0c\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u3002 \u62a5\u9519 \u5982\u679c\u70b9\u8fd0\u884c\u65f6\u63d0\u793a\uff1a There were no compatible vehicles created for current SimMode! Check your settings.json. \uff0c\u5728\u83dc\u5355\u4e2d\u70b9\u51fb \u8fd0\u884c -> \u4ee5\u72ec\u7acb\u8fdb\u7a0b\u8fd0\u884c \u5219\u53ef\u4ee5\u663e\u793a\u65e0\u4eba\u673a\uff0c\u4f46\u662f\u5730\u56fe\u6ca1\u6709\u663e\u793a\uff08\u4ece\u914d\u7f6e\u6587\u4ef6 C:\\Users\\Administrator\\Documents\\AirSim\\settings.json \u4e2d\u52a0\u8f7d\uff0c \"SimMode\": \"ComputerVision\" \uff09\u3002 \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4eff\u771f\u8fd0\u884c\u8fd9\u4e2a Town10 \u573a\u666f\uff0c\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u89c6\u53e3\u4e2d\u4e00\u7247\u7a7a\u767d\u7684\u8bdd\uff08\u53ea\u663e\u793a\u65e0\u4eba\u673a\uff09\uff0c\u4e0d\u8981\u7d27\u5f20\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6e32\u67d3\u753b\u9762\uff0c\u968f\u7740\u6e32\u67d3\u7684\u8fdb\u884c\uff0c\u753b\u9762\u4f1a\u4e00\u70b9\u70b9\u5c55\u793a\u51fa\u6765\u3002\u4e0d\u540c\u6027\u80fd\u7684\u8ba1\u7b97\u673a\u7684\u6e32\u67d3\u65f6\u95f4\u4e5f\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6e32\u67d3\u7684\u8f83\u957f\u65f6\u95f4\u7684\u8bdd\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u56e0\u4e3a\u4ec5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u9700\u8981\u6e32\u67d3\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u4eff\u771f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u4e86\u3002\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e\uff0c\u89c6\u53e3\u4e2d\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u98de\u884c\u7684\u56db\u65cb\u7ffc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb\u5de5\u5177\u680f\u7684 \u505c\u6b62 \u6309\u94ae\uff0c\u5373\u53ef\u9000\u51fa\u4eff\u771f\u3002 \u81f3\u6b64 AirSim \u63d2\u4ef6\u5df2\u7ecf\u52a0\u8f7d\u5230\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u5de5\u7a0b\u4e2d\u4e86\u3002","title":"\u6dfb\u52a0\u63d2\u4ef6"},{"location":"dev/add_plugin/#faq","text":"","title":"FAQ"},{"location":"dev/add_plugin/#airsimairsim","text":"\u62a5\u9519\u4fe1\u606f\uff1a UnrealBuildTool: ERROR: Could not find definition for module 'AirSim', (referenced via Target -> CarlaUE4.Build.cs) \u9700\u8981\u5728 Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4.Build.cs \u4e2d\u6dfb\u52a0\u6a21\u5757\u4f9d\u8d56\uff1a PrivateDependencyModuleNames . AddRange ( new string [] { \"AirSim\" }); \u6ca1\u89e3\u51b3\uff01","title":"\u6dfb\u52a0AirSim\u540e\uff08\u4e0d\u542f\u7528\uff09\uff0c\u62a5\u627e\u4e0d\u5230AirSim\u6a21\u5757\u5b9a\u4e49\u7684\u9519"},{"location":"dev/add_plugin/#gbufferviewh","text":"\u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cSplineMeshSceneProxy.h\u201d: No such file or directory \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cRenderer/Public/GBufferView.h\u201d: No such file or directory \u539f\u56e0\uff1a \u672c\u5730\u5b58\u5728\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u6ca1\u6709\u4f7f\u7528\u6b63\u786e\u7684\u7248\u672c \u3002","title":"\u6dfb\u52a0\u63d2\u4ef6\u540e\u7f16\u8bd1\u62a5\u627e\u4e0d\u5230GBufferView.h\u7684\u9519"},{"location":"map/AbandonedPark/","text":"\u5931\u843d\u7684\u516c\u56ed # \u4e0b\u8f7d\u94fe\u63a5","title":"\u5931\u843d\u7684\u516c\u56ed"},{"location":"map/AbandonedPark/#_1","text":"\u4e0b\u8f7d\u94fe\u63a5","title":"\u5931\u843d\u7684\u516c\u56ed"},{"location":"map/Africa/","text":"\u975e\u6d32 # \u652f\u6301UE5\u7684 8K African Landscape Pack \u3002","title":"\u975e\u6d32"},{"location":"map/Africa/#_1","text":"\u652f\u6301UE5\u7684 8K African Landscape Pack \u3002","title":"\u975e\u6d32"},{"location":"map/CityEnviron/","text":"\u57ce\u5e02\u73af\u9053 # \u7c7b\u4f3c\u7684\u573a\u666f\u4e0b\u8f7d\u94fe\u63a5 \u548c City Park Environment Collection LITE","title":"\u57ce\u5e02\u73af\u9053"},{"location":"map/CityEnviron/#_1","text":"\u7c7b\u4f3c\u7684\u573a\u666f\u4e0b\u8f7d\u94fe\u63a5 \u548c City Park Environment Collection LITE","title":"\u57ce\u5e02\u73af\u9053"},{"location":"map/Coastline/","text":"\u6d77\u5cb8\u7ebf # \u573a\u666f \u4e0b\u8f7d\u94fe\u63a5","title":"\u6d77\u5cb8\u7ebf"},{"location":"map/Coastline/#_1","text":"\u573a\u666f \u4e0b\u8f7d\u94fe\u63a5","title":"\u6d77\u5cb8\u7ebf"},{"location":"map/LandscapeMountains/","text":"\u5c71\u8109\u666f\u89c2 # \u5730\u56fe\u7b80\u4ecb \u3002 \u4f7f\u7528\u865a\u5e7b\u5546\u57ce\u4e2d\u7684\u573a\u666f\u5de5\u7a0b # \u4e0b\u8f7d\u5b89\u88c5\u201c\u5c71\u8109\u666f\u89c2\u201d\u573a\u666f\u5de5\u7a0b # \u201c\u5c71\u8109\u666f\u89c2\u201d \u662f\u975e\u5e38\u7ecf\u5178\u7684\u5b98\u65b9\u6559\u5b66\u7528\u865a\u62df\u573a\u666f\uff0c\u5b83\u5305\u542b\u4e86\u5b8c\u6574\u7684\u865a\u5e7b\u5f15\u64ce\u5de5\u7a0b\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5728 Epic Games \u542f\u52a8\u7a0b\u5e8f\u4e2d\u514d\u8d39\u4e0b\u8f7d\u548c\u5b89\u88c5\u3002\u672c\u8282\u7684\u5b9e\u4f8b\u4ee5 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u4e3a\u4f8b\uff0c\u8be6\u7ec6\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u865a\u5e7b\u5546\u57ce\u4e2d\u7b2c\u4e00\u7c7b\u5df2\u6709\u5b8c\u6574\u5de5\u7a0b\u6587\u4ef6\u7684\u573a\u666f\u3002\u540c\u65f6\u8bbe\u7f6e CV Mode \u6a21\u5f0f\uff0c\u5728\u65b0\u5efa\u7684\u573a\u666f\u4e2d\u81ea\u7531\u6d4f\u89c8\uff0c\u521d\u6b65\u611f\u53d7\u4e00\u4e0b\u865a\u5e7b\u5f15\u64ce\u4e2d\u903c\u771f\u7684\u89c6\u89c9\u6e32\u67d3\u6548\u679c\u3002 \u70b9\u51fb fab \u4e2d\u7684 LandscapeMountains\u573a\u666f\u94fe\u63a5 \uff0c\u5e76\u6dfb\u52a0\u5230\u6211\u7684\u5e93\u4e2d\uff08\u9700\u8981\u767b\u5f55\uff09\uff0c\u7136\u540e\u70b9\u51fb \u5728\u542f\u52a8\u5668\u4e2d\u67e5\u770b \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6253\u5f00\u4e4b\u540e\uff0c\u5728 \u5e93 \u4e2d\u7684 Fab Library \u4e2d\u70b9\u51fb LandscapeMountains \u4e0b\u7684\u201c\u521b\u5efa\u5de5\u7a0b\u201d\uff08\u5982\u679c\u672a\u663e\u793a\u5219\u9700\u8981\u70b9\u51fb Fab Library \u65c1\u7684\u5237\u65b0\u6309\u94ae\uff09\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5de5\u7a0b\u540d\u79f0\u548c\u6587\u4ef6\u5939\u8def\u5f84\u90fd\u4e0d\u80fd\u5305\u542b\u4e2d\u6587\u5b57\u7b26\uff0c\u4e00\u5b9a\u8981\u6539\u6210\u82f1\u6587\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u201c\u521b\u5efa\u201d \u5373\u53ef\u81ea\u52a8\u4e0b\u8f7d\u6574\u4e2a\u5de5\u7a0b\u9644\u4ef6\u5e76\u521b\u5efa\u597d\u5de5\u7a0b\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u4e3a\u5de5\u7a0b\u9009\u62e9\u5f15\u64ce\u7248\u672c\u6700\u9ad8\u4ec5\u652f\u6301\u5230 4.24\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u5b89\u88c5 4.24 \u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\u624d\u53ef\u4ee5\u4e0b\u8f7d\u5b89\u88c5 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u3002 \u521b\u5efa\u5de5\u7a0b\u65f6\u7684\u8def\u5f84\u548c\u547d\u540d\u4e2d\u4e0d\u80fd\u5305\u542b\u4e2d\u6587\u5b57\u7b26 \u5728 Epic Games \u542f\u52a8\u7a0b\u5e8f\u7684\u5de6\u4e0b\u89d2\u6709\u4e2a \u201c\u4e0b\u8f7d\u201d \u6309\u94ae\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u4e0b\u8f7d\u548c\u5b89\u88c5\u7684\u8fdb\u5ea6\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\u4e0b\u8f7d\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u5728\u521a\u521a\u9009\u597d\u7684\u5b89\u88c5\u8def\u5f84\u4e2d\u81ea\u52a8\u521b\u5efa\u597d \u201cLandscapeMountains\u201d \u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u5305\u542b\u4e86\u8fd9\u4e2a\u5de5\u7a0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5c71\u8109\u666f\u89c2\u5de5\u7a0b\u6587\u4ef6\u5939\u4e2d uproject \u5de5\u7a0b\u6587\u4ef6 \u5176\u4e2d\u7684\u6587\u4ef6 LandscapeMountains.uproject \u7684\u6587\u4ef6\u683c\u5f0f .uproject \u662f\u865a\u5e7b\u5f15\u64ce\u7684\u5de5\u7a0b\u6587\u4ef6\u9ed8\u8ba4\u683c\u5f0f\u3002\u6bcf\u4e2a\u9879\u76ee\u5de5\u7a0b\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94 .uproject \u6587\u4ef6\uff0c\u5b83\u662f\u4f60\u521b\u5efa\u3001\u6253\u5f00\u6216\u4fdd\u5b58\u5de5\u7a0b\u5fc5\u987b\u7528\u5230\u7684\u6587\u4ef6\u3002 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u6700\u9ad8\u4ec5\u652f\u6301\u5230\u865a\u5e7b\u5f15\u64ce 4.24 \u7248\u672c\uff0c\u5982\u679c\u6ca1\u6709\u5b89\u88c5 4.24 \u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u5219\u662f\u65e0\u6cd5\u6253\u5f00\u7684\u3002\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce 4.27 \u7248\u672c\u5411\u4e0b\u517c\u5bb9\uff0c\u53ef\u4ee5\u6253\u5f00 4.24 \u7248\u672c\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u5c06 \u201c\u5c71\u8109\u666f\u89c2\u201d \u5de5\u7a0b\u9700\u8981\u7684\u865a\u5e7b\u5f15\u64ce\u7248\u672c\u624b\u52a8\u8bbe\u7f6e\u4e3a 4.27\u3002\u53f3\u51fb LandscapeMountains.uproject \u6587\u4ef6\uff0c\u6253\u5f00\u65b9\u5f0f\u4e2d\u9009\u62e9\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\uff0c\u5c06\u5176\u4e2d\u7684 EngineAssociation \u8bbe\u7f6e\u4e3a \u201c4.27\u201d\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u4fee\u6539 uproject \u5de5\u7a0b\u6587\u4ef6\u4e2d\u7684\u5f15\u64ce\u7248\u672c \u4fee\u6539\u5b8c\u5e76\u4fdd\u5b58\u540e\uff0c\u53cc\u51fb\u6587\u4ef6 LandscapeMountains.uproject \uff0c\u5219\u4f1a\u81ea\u52a8\u6253\u5f00\u865a\u5e7b\u5f15\u64ce 4.27 \u7248\u672c\u7684\u5173\u5361\u7f16\u8f91\u5668\u3002 \u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u8981\u6c42\u6bcf\u4e2a\u5de5\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u624d\u80fd\u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u9996\u5148\u65b0\u5efa\u4e00\u4e2a C++ \u7c7b\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u521b\u5efa Visual Studio \u7684 .sln \u5de5\u7a0b\u6587\u4ef6\u3002\u70b9\u51fb\u5de6\u4e0a\u89d2\u83dc\u5355\u680f\u7684 \u201c\u6587\u4ef6\u201d\uff0c\u9009\u62e9 \u65b0\u5efaC++\u7c7b \u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u65b0\u5efa\u7684\u5de5\u7a0b\u9700\u8981\u6dfb\u52a0C++\u7c7b \u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\uff0c\u7236\u7c7b\u9ed8\u8ba4\u9009\u62e9 \u201c\u65e0\u201d\uff0c\u70b9\u51fb\u4e0b\u4e00\u6b65\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u547d\u540d\u548c\u8def\u5f84\u90fd\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u6709\u4e2d\u6587\u5b57\u7b26\uff09\uff0c\u6700\u540e\u70b9\u51fb \u521b\u5efa\u7c7b \u3002\u8fd9\u65f6\u865a\u5e7b\u5f15\u64ce\u4f1a\u81ea\u52a8\u7f16\u8bd1C++\u4ee3\u7801\uff0c\u5728\u5f53\u524d\u5de5\u7a0b\u6587\u4ef6\u5939\u4e0b\u751f\u6210\u540d\u4e3a LandscapeMountains.sln \u7684 Visual Studio \u5de5\u7a0b\u6587\u4ef6\uff0c\u540c\u65f6\u4f1a\u81ea\u52a8\u6253\u5f00 Visual Studio 2022\u3002 \u6b64\u65f6\u4e0d\u8981\u76f4\u63a5\u5173\u95ed Visual Studio 2022\uff0c\u8981\u7b49\u5f85\u5176\u540e\u53f0\u5904\u7406\u5b8c\u6210\u540e\u624d\u80fd\u5173\u95ed\u3002\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5c0f\u65b9\u6846\u5373\u53ef\u770b\u5230\u6b64\u65f6\u7684\u540e\u53f0\u6709\u6ca1\u6709\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4e0b\u56fe\u5c55\u793a\u7684\u662f Visual Studio 2022 \u7684\u540e\u53f0\u6b63\u5728\u8fdb\u884c\u5206\u6790\u4ee3\u7801\u3002\u540c\u65f6\u6ce8\u610f\u8981\u628a\u7f16\u8bd1\u6a21\u5f0f\u8bbe\u7f6e\u4e3a DebugGame Editor \u548c Win64 \u3002\u53e6\u5916\u53f3\u4fa7\u7684\u89e3\u51b3\u65b9\u6848\u7ba1\u7406\u5668\u4e2d\uff0c\u8981\u628a LandscapeMountain \u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee\uff08\u5177\u4f53\u5982\u4f55\u8bbe\u7f6e\u53c2\u89c1 1.3.3 \u8282\uff09\u3002 \u81f3\u6b64 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u5de5\u7a0b\u521b\u5efa\u5b8c\u6210\u3002\u53ef\u4ee5\u628a Visual Studio \u548c\u865a\u5e7b\u5f15\u64ce\u90fd\u5173\u95ed\u4e86\uff0c\u6765\u51c6\u5907\u4e0b\u4e00\u8282\u6dfb\u52a0 AirSim \u63d2\u4ef6\u3002 \u6dfb\u52a0 AirSim \u63d2\u4ef6 # \u6709\u4e86\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\uff0c\u8fd8\u4e0d\u80fd\u505a\u4eff\u771f\uff0c\u4e0b\u9762\u7684\u6b65\u9aa4\u662f\u628a AirSim \u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b89\u88c5\u5230\u8fd9\u4e2a\u573a\u666f\u5de5\u7a0b\u4e2d\u3002 \u9996\u5148\u5230 AirSim \u6e90\u7801\u6587\u4ef6\u5939\u4e2d\u627e\u5230 AirSim\\Unreal\\Plugins \u6587\u4ef6\u5939\uff08\u9700\u8981\u7f16\u8bd1\u540e\u624d\u80fd\u83b7\u5f97\uff0c1.3.2\u8282\uff09\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230 LandscapeMountains \u6587\u4ef6\u5939\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 LandscapeMountain.uproject \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6dfb\u52a0 AirSim \u7684\u63d2\u4ef6\u652f\u6301\u3002\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u7528\u82f1\u6587\u8f93\u5165\u6cd5\uff0c\u540c\u65f6\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u9017\u53f7\u7b49\u5206\u9694\u7b26\uff0c\u5982\u679c\u8fd9\u91cc\u4fee\u6539\u7684\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5219\u540e\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\uff09\u4fee\u6539\u5b8c\u4e4b\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 LandscapeMountains\\Config\\DefaultGame.ini \u6587\u4ef6\uff0c\u5728\u6700\u540e\u4e00\u884c\u6dfb\u52a0 +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \uff0c\u4ee5\u786e\u4fdd\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\u53ef\u4ee5\u8bc6\u522b AirSim \u7684\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u5305\u542b\u8fdb\u6765\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4fee\u6539\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u53f3\u952e\u70b9\u51fb LandscapeMountains.uproject \u6587\u4ef6\uff0c\u9009\u62e9\u201c\u663e\u793a\u66f4\u591a\u9009\u9879\u201d\uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio project files \u9009\u9879\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4e00\u6b65\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6240\u6709\u7684\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u751f\u6210 .sln \u5de5\u7a0b\u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u53f3\u952e\u83dc\u5355\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u542f\u7535\u8111\uff0c\u5982\u679c\u4ecd\u7136\u6ca1\u6709\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6253\u5f00 LandscapeMountains.uproject \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb \u6587\u4ef6 -> \u5237\u65b0Visual Studio\u5de5\u7a0b \u3002 \u751f\u6210\u6210\u529f\u540e\uff0c\u53cc\u51fb\u6253\u5f00 LandscapeMountains.sln \uff0c\u5728 Visual Studio \u4e2d\u8bbe\u7f6e\u7f16\u8bd1\u9009\u9879\u4e3a DebugGame Editor \u548c Win64 \uff0c\u540c\u65f6\u5c06 LandscapeMountains \u8bbe\u4e3a\u542f\u52a8\u9879\uff0c\u5982 2.4 \u8282\u8bbe\u7f6e Block \u73af\u5883\u65f6\u4e00\u6837\u3002\u7b49\u5f85Visual Studio \u540e\u53f0\u5904\u7406\u5b8c\u6210\u540e\uff0c\u70b9\u51fb \u8c03\u8bd5 -> \u5f00\u59cb\u8c03\u8bd5 \uff0c\u6216\u8005\u76f4\u63a5\u70b9\u51fb \u672c\u5730 Windows \u8c03\u8bd5\u5668 \uff0c\u8fd9\u65f6\u4f1a\u81ea\u52a8\u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7684\u5173\u5361\u7f16\u8f91\u5668\u3002\u6b64\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u53f3\u4e0b\u89d2\u51fa\u73b0\u4e86 \u65b0\u63d2\u4ef6\u53ef\u7528 \u7684\u63d0\u793a\uff0c\u8bf4\u660e\u865a\u5e7b\u5f15\u64ce\u5df2\u7ecf\u80fd\u591f\u8bc6\u522b\u5230 AirSim \u63d2\u4ef6\u4e86\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u53f3\u4fa7 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u4e2d\u7684 \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u8bbe\u7f6e\u4e3a AirSimGameMode \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u4fdd\u5b58\u5f53\u524d\u5173\u5361 \u6765\u4fdd\u5b58\u8bbe\u7f6e\u597d\u7684\u73af\u5883\uff0c\u8fd9\u6837\u4ee5\u540e\u518d\u6b21\u6253\u5f00\u65f6\u5c31\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6e \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u4e86\u3002 \u63d0\u793a \u5982\u679c\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u6ca1\u6709 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \uff0c\u5219\u53ef\u4ee5\u70b9\u51fb\u83dc\u5355\u680f\u4e2d\u7684 \u7a97\u53e3 \uff0c\u9009\u4e2d \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u3002 \u70b9\u51fb\u5de5\u5177\u680f\u4e2d\u7684 \u201c\u8fd0\u884c\u201d\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4eff\u771f\u4e86\uff0c\u5728\u8df3\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u70b9 \u201c\u5426\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4eff\u771f\u8fd0\u884c\u8fd9\u4e2a \u5c71\u8109\u666f\u89c2 \u573a\u666f\uff0c\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u89c6\u53e3\u4e2d\u4e00\u504f\u7a7a\u767d\u7684\u8bdd\uff0c\u4e0d\u8981\u7d27\u5f20\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6e32\u67d3\u753b\u9762\uff0c\u968f\u7740\u6e32\u67d3\u7684\u8fdb\u884c\uff0c\u753b\u9762\u4f1a\u4e00\u70b9\u70b9\u5c55\u793a\u51fa\u6765\u3002\u4e0d\u540c\u6027\u80fd\u7684\u8ba1\u7b97\u673a\u7684\u6e32\u67d3\u65f6\u95f4\u4e5f\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6e32\u67d3\u7684\u8f83\u957f\u65f6\u95f4\u7684\u8bdd\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u56e0\u4e3a\u4ec5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u9700\u8981\u6e32\u67d3\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u4eff\u771f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u4e86\u3002\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e\uff0c\u89c6\u53e3\u4e2d\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u98de\u884c\u7684\u56db\u65cb\u7ffc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb\u5de5\u5177\u680f\u7684 \u505c\u6b62 \u6309\u94ae\uff0c\u5373\u53ef\u9000\u51fa\u4eff\u771f\u3002 \u81f3\u6b64 AirSim \u63d2\u4ef6\u5df2\u7ecf\u52a0\u8f7d\u5230\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u5de5\u7a0b\u4e2d\u4e86\u3002 \u5b9e\u4f8b1\uff1a\u6d4f\u89c8\u6e38\u620f\u4e2d\u7684\u7f8e\u666f # \u8bbe\u7f6e\u4e3a CV Mode # \u4e0a\u4e00\u8282\u8fd0\u884c\u4eff\u771f\u65f6\uff0c\u662f\u5728\u5f00\u59cb\u65f6\u9009\u62e9\u65e0\u4eba\u673a\u6216\u8005\u65e0\u4eba\u673a\u8f66\u4eff\u771f\u6a21\u5f0f\u3002\u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u53ef\u4ee5\u63d0\u524d\u8bbe\u7f6e\u4eff\u771f\u6a21\u5f0f\u7684\u65b9\u6cd5\u3002AirSim\u5728\u4eff\u771f\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u8bfb\u53d6 C:\\Users\\\u7528\u6237\u540d\\Documents\\AirSim \u6587\u4ef6\u5939\u4e0b\u9762\u7684 settings.json \u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u8bbe\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u7535\u8111\u7b2c\u4e00\u6b21\u8fd0\u884cAirSim\u65f6\u5e94\u8be5\u4f1a\u81ea\u52a8\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa\u3002\u5728\u4ee5\u540e\u7684\u4eff\u771f\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u4f7f\u7528\u5230\u8fd9\u4e2a\u8bbe\u7f6e\u6587\u4ef6\u3002 AirSim \u7684\u4eff\u771f\u6a21\u5f0f\u67093\u79cd\uff0c\u9664\u4e86\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u4eff\u771f\u548c\u65e0\u4eba\u8f66\u4eff\u771f\uff0c\u8fd8\u6709\u4e00\u79cd\u662f Computer Vision \u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u4eff\u771f\u4e2d\u6ca1\u6709\u4efb\u4f55\u65e0\u4eba\u673a\u6216\u65e0\u4eba\u8f66\uff0c\u4e5f\u6ca1\u6709\u52a8\u529b\u5b66\u6a21\u578b\uff0c\u4f46\u662f\u53ef\u4ee5\u7528\u952e\u76d8\u63a7\u5236\u89c6\u89d2\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 APIs \u6765\u63a7\u5236\u76f8\u673a\u7684\u4f4d\u7f6e\u548c\u89d2\u5ea6\uff0c\u4ee5\u6b64\u6765\u6536\u96c6\u5f88\u591a\u56fe\u7247\u4f5c\u4e3a\u6570\u636e\u96c6\u3002 \u53ef\u4ee5\u6dfb\u52a0\u6216\u4fee\u6539 settings.json \u4e2d\u7684\u5185\u5bb9\uff0c\u6765\u624b\u52a8\u4fee\u6539 AirSim \u7684\u4e00\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4f7f\u7528\u5199\u5b57\u677f\u6253\u5f00 settings.json \u6587\u4ef6\uff0c\u6dfb\u52a0 SimMode \u6807\u7b7e\u548c\u5185\u5bb9\uff08\u5176\u4ed6\u5df2\u6709\u7684\u5185\u5bb9\u4e0d\u9700\u8981\u4fee\u6539\uff09\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u91cc\u7684 SimMode \u6807\u7b7e\u5c31\u662f\u8bbe\u7f6e AirSim \u7684\u4eff\u771f\u6a21\u5f0f\uff0c\u5982\u679c\u60f3\u505a\u591a\u65cb\u7ffc\u65e0\u4eba\u673a\u4eff\u771f\uff0c\u5c31\u8bbe\u7f6e\u6210 Multirotor \uff0c\u5982\u679c\u60f3\u505a\u65e0\u4eba\u8f66\u4eff\u771f\uff0c\u5c31\u8bbe\u7f6e\u6210 Car \u3002\u672c\u8282\u6211\u4eec\u4f53\u9a8c\u4e00\u4e0b Computer Vision \u4eff\u771f\u6a21\u5f0f\u3002\u4fee\u6539\u597d\u4e4b\u540e\uff0c\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u5728\u865a\u5e7b\u5f15\u64ce\u7684\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u70b9\u51fb\u4e0a\u65b9\u5de5\u5177\u680f\u7684 \u8fd0\u884c \uff0c\u8ddf\u4e4b\u524d\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u6b64\u65f6\u6ca1\u6709\u4e86\u8be2\u95ee\u662f\u5426\u9009\u62e9\u65e0\u4eba\u673a\u8f66\u7684\u7a97\u53e3\uff0c\u800c\u662f\u76f4\u63a5\u5f00\u59cb\u4eff\u771f\u3002\u89c6\u53e3\u4e2d\u6ca1\u6709\u4efb\u4f55\u65e0\u4eba\u673a\u548c\u65e0\u4eba\u8f66\u3002\u5c06\u9f20\u6807\u79fb\u52a8\u5230\u89c6\u53e3\u4e2d\u5e76\u70b9\u51fb\u9f20\u6807\u5de6\u952e\uff0c\u6b64\u65f6\u5c31\u8fdb\u5165\u4e86\u6d4f\u89c8\u6a21\u5f0f\u3002\u5728\u6d4f\u89c8\u6a21\u5f0f\u4e0b\uff0c\u9f20\u6807\u662f\u4e0d\u663e\u793a\u4e14\u4e0d\u80fd\u79fb\u52a8\u7684\uff0c\u952e\u76d8\u4e0a\u540c\u65f6\u6309 Shift + F1 \u5219\u53ef\u4ee5\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002\u6240\u4ee5\u8981\u60f3\u505c\u6b62\u4eff\u771f\u6216\u8005\u5173\u95ed\u7a97\u53e3\u7b49\u64cd\u4f5c\uff0c\u90fd\u9700\u8981\u5148\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002 \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e # \u5728\u4eff\u771f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u89c6\u53e3\u4e2d\u6240\u5904\u7684\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\u662f\u5728\u6bd4\u8f83\u9ad8\u7684\u9ad8\u7a7a\u4e2d\uff0c\u4f7f\u7528\u952e\u76d8\u79fb\u52a8\u7684\u8bdd\uff0c\u5f88\u4e45\u624d\u80fd\u79fb\u52a8\u5230\u5730\u9762\u4e0a\u3002\u5982\u679c\u4f7f\u7528\u65e0\u4eba\u673a\u4eff\u771f\uff0c\u5728\u4eff\u771f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u65e0\u4eba\u673a\u662f\u5728\u534a\u7a7a\u4e2d\uff0c\u4f1a\u76f4\u63a5\u5f80\u4e0b\u6389\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u521d\u59cb\u4f4d\u7f6e\u653e\u7f6e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u5730\u9762\u4e0a\u3002 \u5728 \u4e16\u754c\u5927\u7eb2\u89c6\u56fe \u4e2d\u641c\u7d22 Player Start \uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u597d\u51e0\u4e2a\u7c7b\u4f3c\u540d\u5b57\u7684 Actor\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Player Start Actor \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u662f \u73a9\u5bb6\u51fa\u751f\u70b9 \u7684\u8bbe\u7f6e\uff0c\u662f\u6307\u5728\u6e38\u620f\u4e16\u754c\u573a\u666f\u4e2d\u73a9\u5bb6\u5f00\u59cb\u6e38\u620f\u7684\u5730\u70b9\u3002\u5728 AirSim \u4eff\u771f\u4e2d\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u4eff\u771f\u5f00\u59cb\u65f6\u5c06\u521d\u59cb\u4f4d\u7f6e\u8bbe\u7f6e\u5728\u8fd9\u4e2a\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u5373\u53ef\u63a7\u5236 AirSim \u4eff\u771f\u7684\u521d\u59cb\u4f4d\u7f6e\u3002 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u670914\u4e2a Player Start Actor\uff0c\u53ef\u4ee5\u53ea\u7559\u4e0b\u7b2c\u4e00\u4e2a\uff0c\u5c06\u5176\u4ed6\u7684\u90fd\u5220\u9664\u6389\u3002\u9996\u5148\u8981\u9000\u51fa\u4eff\u771f\uff0c\u53cc\u51fb Player Start Actor\uff0c\u89c6\u53e3\u4e2d\u4f1a\u81ea\u52a8\u79fb\u52a8\u5230\u6b64 Player Start Actor \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e \u53f3\u4e0b\u89d2\u53c2\u6570\u9762\u677f\u4e2d\u7684 \u4f4d\u7f6e \u53ef\u4ee5\u8bbe\u7f6e Player Start \u5728\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u5750\u6807\u6765\u6539\u53d8\u5176\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u5750\u6807\u662f\u865a\u5e7b\u5f15\u64ce\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807\uff0c\u4fee\u6539\u8d77\u6765\u975e\u5e38\u9ebb\u70e6\u3002\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u9f20\u6807\u653e\u5728\u5728\u4e2d\u95f4\u7684\u767d\u70b9\u6216\u8005\u7ea2\u7eff\u84dd\u4e09\u4e2a\u5750\u6807\u8f74\u4e0a\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u952e\u62d6\u52a8 Player Start Actor\u4e86\u3002\u5c06\u5176\u79fb\u52a8\u5230\u671f\u671b\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4fdd\u5b58\u5f53\u524d\u5173\u5361\u3002\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u70b9\u51fb \u8fd0\u884c \uff0c\u4eff\u771f\u5f00\u59cb\u7684\u4f4d\u7f6e\u5c31\u662f\u521a\u521a\u4fee\u6539\u7684\u4f4d\u7f6e\u3002 \u5982\u679c\u51fa\u73b0 BAD Size \u6807\u8bc6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8bf4\u660e\u6b64\u521d\u59cb\u4f4d\u7f6e\u4e0e\u5176\u4ed6 Actor \u53d1\u751f\u4e86\u78b0\u649e\uff0c\u9700\u8981\u5c06\u5176\u79fb\u51fa\u3002 \u89c6\u89d2\u63a7\u5236 # \u5728\u6d4f\u89c8\u6a21\u5f0f\u4e2d\uff0c\u89c6\u89d2\u662f\u53ef\u4ee5\u63a7\u5236\u7684\uff0c\u89c6\u89d2\u7684\u8fd0\u52a8\u5305\u62ec3\u4e2a\u65b9\u5411\u7684\u5e73\u79fb\u8fd0\u52a8\uff08\u4e0a\u4e0b\u3001\u5de6\u53f3\u3001\u524d\u540e\uff09\u548c2\u4e2a\u65b9\u5411\u7684\u65cb\u8f6c\u8fd0\u52a8\uff08\u4fef\u4ef0\u3001\u504f\u822a\uff09\u3002\u4f7f\u7528\u952e\u76d8\u53ef\u4ee5\u63a7\u5236\u89c6\u89d2\u5b8c\u6210\u81ea\u7531\u8fd0\u52a8\uff0c\u952e\u76d8\u6309\u952e\u4e0e\u89c6\u89d2\u8fd0\u52a8\u7684\u5bf9\u5e94\u5982\u4e0b\uff1a \u4e0a\u4e0b\u7bad\u5934\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u524d\u540e\u5e73\u79fb\u8fd0\u52a8 \u5de6\u53f3\u7bad\u5934\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u5de6\u53f3\u5e73\u79fb\u8fd0\u52a8 PgUp\u3001PgDn\uff1a\u63a7\u5236\u89c6\u89d2\u4e0a\u4e0b\u5e73\u79fb\u79fb\u52a8 W\u3001S\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u4fef\u4ef0\u65cb\u8f6c\u8fd0\u52a8 A\u3001D\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u504f\u822a\u65cb\u8f6c\u8fd0\u52a8 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u628a\u9f20\u6807\u79fb\u52a8\u5230\u4e2d\u95f4\u7684\u89c6\u53e3\u4e2d\uff0c\u70b9\u51fb\u9f20\u6807\u5de6\u952e\uff0c\u5373\u53ef\u8fdb\u5165\u6d4f\u89c8\u6a21\u5f0f\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u7528\u952e\u76d8\u81ea\u7531\u5730\u63a7\u5236\u89c6\u89d2\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u6d4f\u89c8\u7f8e\u666f\u3002\u5728\u6d4f\u89c8\u6a21\u5f0f\u4e2d\uff0c\u9f20\u6807\u662f\u4e0d\u80fd\u79fb\u51fa\u89c6\u53e3\u7684\uff0c\u66f4\u4e0d\u80fd\u70b9\u51fb\u89c6\u53e3\u4ee5\u5916\u7684\u6309\u94ae\uff0c\u5f53\u9700\u8981\u9000\u51fa\u65f6\uff0c\u9700\u8981\u540c\u65f6\u6309\u952e\u76d8\u4e0a\u7684 Shift + F1 \u952e\uff0c\u5373\u53ef\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002 Actor \u53c2\u6570\u8c03\u8282 # \u573a\u666f\u662f\u7531\u5f88\u591a\u7684 Actor \u7ec4\u6210\u7684\uff0c\u5176\u4e2d\u7684\u5c71\u3001\u8def\u3001\u4e91\u3001\u6811\u6728\u7b49\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a Actor\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\u6240\u793a\uff0c \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u4e00\u6bb5\u6865\u6881\u5c31\u662f\u4e00\u4e2a Actor\u3002\u6bcf\u4e2a Actor \u90fd\u6709\u5176\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u5982\u4f4d\u7f6e\u4fe1\u606f\u7b49\uff0c\u8fd9\u4e9b\u53c2\u6570\u90fd\u53ef\u4ee5\u8c03\u6574\u3002 \u539f\u59cb\u7684 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u6709\u6bd4\u8f83\u5927\u7684\u96fe\u6c14\uff0c\u5f71\u54cd\u4e86\u6d4f\u89c8\u7f8e\u666f\u7684\u89c6\u91ce\uff0c\u53ea\u9700\u8981\u5c06\u96fe\u6c14\u6709\u5173\u7684 Actor \u7684\u96fe\u5bc6\u5ea6\u53c2\u6570\u8c03\u4f4e\u5c31\u53ef\u4ee5\u51cf\u5c0f\u96fe\u6c14\u7684\u6d53\u5ea6\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u7684 \u4e16\u754c\u5927\u7eb2\u89c6\u56fe \u4e2d\u641c\u7d22 fog \uff0c\u641c\u7d22\u51fa\u6765\u4e24\u4e2a\u8ddf\u96fe\u6c14\u6709\u5173\u7684 Actor\uff0c\uff08\u53ea\u6709\u5728\u4eff\u771f\u8fdb\u884c\u4e2d\u624d\u4f1a\u6709 ExponentialHeightFog \uff09\u3002\u70b9\u51fb\u9009\u4e2d ExponentialHeightFog Actor\uff0c\u5c06\u53c2\u6570\u9762\u677f\u7684 \u96fe\u5bc6\u5ea6 \u53c2\u6570\u8bbe\u4e3a 0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u65f6\u5728\u4eff\u771f\u4e2d\u89c6\u91ce\u53ef\u89c1\u5ea6\u4f1a\u597d\u5f88\u591a\uff0c\u666f\u8272\u4e5f\u4f1a\u66f4\u7f8e\u3002\u5173\u4e8e\u5929\u6c14\u7684\u63a7\u5236\uff0c\u540e\u7eed\u4f1a\u6709\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u540e\u7eed\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u8c03\u8282\u5404\u79cd Actor \u7684\u53c2\u6570\uff0c\u6765\u8fbe\u5230\u81ea\u5df1\u60f3\u8981\u7684\u6548\u679c\u3002 \u53c2\u8003 # \u5f00\u59cb\u4f7f\u7528 AirSim","title":"\u5c71\u8109\u666f\u89c2"},{"location":"map/LandscapeMountains/#_1","text":"\u5730\u56fe\u7b80\u4ecb \u3002","title":"\u5c71\u8109\u666f\u89c2"},{"location":"map/LandscapeMountains/#_2","text":"","title":"\u4f7f\u7528\u865a\u5e7b\u5546\u57ce\u4e2d\u7684\u573a\u666f\u5de5\u7a0b"},{"location":"map/LandscapeMountains/#_3","text":"\u201c\u5c71\u8109\u666f\u89c2\u201d \u662f\u975e\u5e38\u7ecf\u5178\u7684\u5b98\u65b9\u6559\u5b66\u7528\u865a\u62df\u573a\u666f\uff0c\u5b83\u5305\u542b\u4e86\u5b8c\u6574\u7684\u865a\u5e7b\u5f15\u64ce\u5de5\u7a0b\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5728 Epic Games \u542f\u52a8\u7a0b\u5e8f\u4e2d\u514d\u8d39\u4e0b\u8f7d\u548c\u5b89\u88c5\u3002\u672c\u8282\u7684\u5b9e\u4f8b\u4ee5 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u4e3a\u4f8b\uff0c\u8be6\u7ec6\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u865a\u5e7b\u5546\u57ce\u4e2d\u7b2c\u4e00\u7c7b\u5df2\u6709\u5b8c\u6574\u5de5\u7a0b\u6587\u4ef6\u7684\u573a\u666f\u3002\u540c\u65f6\u8bbe\u7f6e CV Mode \u6a21\u5f0f\uff0c\u5728\u65b0\u5efa\u7684\u573a\u666f\u4e2d\u81ea\u7531\u6d4f\u89c8\uff0c\u521d\u6b65\u611f\u53d7\u4e00\u4e0b\u865a\u5e7b\u5f15\u64ce\u4e2d\u903c\u771f\u7684\u89c6\u89c9\u6e32\u67d3\u6548\u679c\u3002 \u70b9\u51fb fab \u4e2d\u7684 LandscapeMountains\u573a\u666f\u94fe\u63a5 \uff0c\u5e76\u6dfb\u52a0\u5230\u6211\u7684\u5e93\u4e2d\uff08\u9700\u8981\u767b\u5f55\uff09\uff0c\u7136\u540e\u70b9\u51fb \u5728\u542f\u52a8\u5668\u4e2d\u67e5\u770b \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6253\u5f00\u4e4b\u540e\uff0c\u5728 \u5e93 \u4e2d\u7684 Fab Library \u4e2d\u70b9\u51fb LandscapeMountains \u4e0b\u7684\u201c\u521b\u5efa\u5de5\u7a0b\u201d\uff08\u5982\u679c\u672a\u663e\u793a\u5219\u9700\u8981\u70b9\u51fb Fab Library \u65c1\u7684\u5237\u65b0\u6309\u94ae\uff09\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5de5\u7a0b\u540d\u79f0\u548c\u6587\u4ef6\u5939\u8def\u5f84\u90fd\u4e0d\u80fd\u5305\u542b\u4e2d\u6587\u5b57\u7b26\uff0c\u4e00\u5b9a\u8981\u6539\u6210\u82f1\u6587\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u201c\u521b\u5efa\u201d \u5373\u53ef\u81ea\u52a8\u4e0b\u8f7d\u6574\u4e2a\u5de5\u7a0b\u9644\u4ef6\u5e76\u521b\u5efa\u597d\u5de5\u7a0b\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u4e3a\u5de5\u7a0b\u9009\u62e9\u5f15\u64ce\u7248\u672c\u6700\u9ad8\u4ec5\u652f\u6301\u5230 4.24\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u5b89\u88c5 4.24 \u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\u624d\u53ef\u4ee5\u4e0b\u8f7d\u5b89\u88c5 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u3002 \u521b\u5efa\u5de5\u7a0b\u65f6\u7684\u8def\u5f84\u548c\u547d\u540d\u4e2d\u4e0d\u80fd\u5305\u542b\u4e2d\u6587\u5b57\u7b26 \u5728 Epic Games \u542f\u52a8\u7a0b\u5e8f\u7684\u5de6\u4e0b\u89d2\u6709\u4e2a \u201c\u4e0b\u8f7d\u201d \u6309\u94ae\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u4e0b\u8f7d\u548c\u5b89\u88c5\u7684\u8fdb\u5ea6\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\u4e0b\u8f7d\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u5728\u521a\u521a\u9009\u597d\u7684\u5b89\u88c5\u8def\u5f84\u4e2d\u81ea\u52a8\u521b\u5efa\u597d \u201cLandscapeMountains\u201d \u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u5305\u542b\u4e86\u8fd9\u4e2a\u5de5\u7a0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5c71\u8109\u666f\u89c2\u5de5\u7a0b\u6587\u4ef6\u5939\u4e2d uproject \u5de5\u7a0b\u6587\u4ef6 \u5176\u4e2d\u7684\u6587\u4ef6 LandscapeMountains.uproject \u7684\u6587\u4ef6\u683c\u5f0f .uproject \u662f\u865a\u5e7b\u5f15\u64ce\u7684\u5de5\u7a0b\u6587\u4ef6\u9ed8\u8ba4\u683c\u5f0f\u3002\u6bcf\u4e2a\u9879\u76ee\u5de5\u7a0b\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94 .uproject \u6587\u4ef6\uff0c\u5b83\u662f\u4f60\u521b\u5efa\u3001\u6253\u5f00\u6216\u4fdd\u5b58\u5de5\u7a0b\u5fc5\u987b\u7528\u5230\u7684\u6587\u4ef6\u3002 \u201c\u5c71\u8109\u666f\u89c2\u201d \u573a\u666f\u6700\u9ad8\u4ec5\u652f\u6301\u5230\u865a\u5e7b\u5f15\u64ce 4.24 \u7248\u672c\uff0c\u5982\u679c\u6ca1\u6709\u5b89\u88c5 4.24 \u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u5219\u662f\u65e0\u6cd5\u6253\u5f00\u7684\u3002\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce 4.27 \u7248\u672c\u5411\u4e0b\u517c\u5bb9\uff0c\u53ef\u4ee5\u6253\u5f00 4.24 \u7248\u672c\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u5c06 \u201c\u5c71\u8109\u666f\u89c2\u201d \u5de5\u7a0b\u9700\u8981\u7684\u865a\u5e7b\u5f15\u64ce\u7248\u672c\u624b\u52a8\u8bbe\u7f6e\u4e3a 4.27\u3002\u53f3\u51fb LandscapeMountains.uproject \u6587\u4ef6\uff0c\u6253\u5f00\u65b9\u5f0f\u4e2d\u9009\u62e9\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\uff0c\u5c06\u5176\u4e2d\u7684 EngineAssociation \u8bbe\u7f6e\u4e3a \u201c4.27\u201d\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u4fee\u6539 uproject \u5de5\u7a0b\u6587\u4ef6\u4e2d\u7684\u5f15\u64ce\u7248\u672c \u4fee\u6539\u5b8c\u5e76\u4fdd\u5b58\u540e\uff0c\u53cc\u51fb\u6587\u4ef6 LandscapeMountains.uproject \uff0c\u5219\u4f1a\u81ea\u52a8\u6253\u5f00\u865a\u5e7b\u5f15\u64ce 4.27 \u7248\u672c\u7684\u5173\u5361\u7f16\u8f91\u5668\u3002 \u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u8981\u6c42\u6bcf\u4e2a\u5de5\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u624d\u80fd\u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u9996\u5148\u65b0\u5efa\u4e00\u4e2a C++ \u7c7b\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u521b\u5efa Visual Studio \u7684 .sln \u5de5\u7a0b\u6587\u4ef6\u3002\u70b9\u51fb\u5de6\u4e0a\u89d2\u83dc\u5355\u680f\u7684 \u201c\u6587\u4ef6\u201d\uff0c\u9009\u62e9 \u65b0\u5efaC++\u7c7b \u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u65b0\u5efa\u7684\u5de5\u7a0b\u9700\u8981\u6dfb\u52a0C++\u7c7b \u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\uff0c\u7236\u7c7b\u9ed8\u8ba4\u9009\u62e9 \u201c\u65e0\u201d\uff0c\u70b9\u51fb\u4e0b\u4e00\u6b65\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u547d\u540d\u548c\u8def\u5f84\u90fd\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u6709\u4e2d\u6587\u5b57\u7b26\uff09\uff0c\u6700\u540e\u70b9\u51fb \u521b\u5efa\u7c7b \u3002\u8fd9\u65f6\u865a\u5e7b\u5f15\u64ce\u4f1a\u81ea\u52a8\u7f16\u8bd1C++\u4ee3\u7801\uff0c\u5728\u5f53\u524d\u5de5\u7a0b\u6587\u4ef6\u5939\u4e0b\u751f\u6210\u540d\u4e3a LandscapeMountains.sln \u7684 Visual Studio \u5de5\u7a0b\u6587\u4ef6\uff0c\u540c\u65f6\u4f1a\u81ea\u52a8\u6253\u5f00 Visual Studio 2022\u3002 \u6b64\u65f6\u4e0d\u8981\u76f4\u63a5\u5173\u95ed Visual Studio 2022\uff0c\u8981\u7b49\u5f85\u5176\u540e\u53f0\u5904\u7406\u5b8c\u6210\u540e\u624d\u80fd\u5173\u95ed\u3002\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5c0f\u65b9\u6846\u5373\u53ef\u770b\u5230\u6b64\u65f6\u7684\u540e\u53f0\u6709\u6ca1\u6709\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4e0b\u56fe\u5c55\u793a\u7684\u662f Visual Studio 2022 \u7684\u540e\u53f0\u6b63\u5728\u8fdb\u884c\u5206\u6790\u4ee3\u7801\u3002\u540c\u65f6\u6ce8\u610f\u8981\u628a\u7f16\u8bd1\u6a21\u5f0f\u8bbe\u7f6e\u4e3a DebugGame Editor \u548c Win64 \u3002\u53e6\u5916\u53f3\u4fa7\u7684\u89e3\u51b3\u65b9\u6848\u7ba1\u7406\u5668\u4e2d\uff0c\u8981\u628a LandscapeMountain \u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879\u76ee\uff08\u5177\u4f53\u5982\u4f55\u8bbe\u7f6e\u53c2\u89c1 1.3.3 \u8282\uff09\u3002 \u81f3\u6b64 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u5de5\u7a0b\u521b\u5efa\u5b8c\u6210\u3002\u53ef\u4ee5\u628a Visual Studio \u548c\u865a\u5e7b\u5f15\u64ce\u90fd\u5173\u95ed\u4e86\uff0c\u6765\u51c6\u5907\u4e0b\u4e00\u8282\u6dfb\u52a0 AirSim \u63d2\u4ef6\u3002","title":"\u4e0b\u8f7d\u5b89\u88c5\u201c\u5c71\u8109\u666f\u89c2\u201d\u573a\u666f\u5de5\u7a0b"},{"location":"map/LandscapeMountains/#airsim","text":"\u6709\u4e86\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\uff0c\u8fd8\u4e0d\u80fd\u505a\u4eff\u771f\uff0c\u4e0b\u9762\u7684\u6b65\u9aa4\u662f\u628a AirSim \u4f5c\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b89\u88c5\u5230\u8fd9\u4e2a\u573a\u666f\u5de5\u7a0b\u4e2d\u3002 \u9996\u5148\u5230 AirSim \u6e90\u7801\u6587\u4ef6\u5939\u4e2d\u627e\u5230 AirSim\\Unreal\\Plugins \u6587\u4ef6\u5939\uff08\u9700\u8981\u7f16\u8bd1\u540e\u624d\u80fd\u83b7\u5f97\uff0c1.3.2\u8282\uff09\uff0c\u5e76\u5c06\u5176\u590d\u5236\u5230 LandscapeMountains \u6587\u4ef6\u5939\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 LandscapeMountain.uproject \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6dfb\u52a0 AirSim \u7684\u63d2\u4ef6\u652f\u6301\u3002\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u7528\u82f1\u6587\u8f93\u5165\u6cd5\uff0c\u540c\u65f6\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u9017\u53f7\u7b49\u5206\u9694\u7b26\uff0c\u5982\u679c\u8fd9\u91cc\u4fee\u6539\u7684\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5219\u540e\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\uff09\u4fee\u6539\u5b8c\u4e4b\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 LandscapeMountains\\Config\\DefaultGame.ini \u6587\u4ef6\uff0c\u5728\u6700\u540e\u4e00\u884c\u6dfb\u52a0 +MapsToCook=(FilePath=\"/AirSim/AirSimAssets\") \uff0c\u4ee5\u786e\u4fdd\u865a\u5e7b\u573a\u666f\u5de5\u7a0b\u53ef\u4ee5\u8bc6\u522b AirSim \u7684\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u5305\u542b\u8fdb\u6765\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4fee\u6539\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u53f3\u952e\u70b9\u51fb LandscapeMountains.uproject \u6587\u4ef6\uff0c\u9009\u62e9\u201c\u663e\u793a\u66f4\u591a\u9009\u9879\u201d\uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio project files \u9009\u9879\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4e00\u6b65\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6240\u6709\u7684\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u751f\u6210 .sln \u5de5\u7a0b\u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u53f3\u952e\u83dc\u5355\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u542f\u7535\u8111\uff0c\u5982\u679c\u4ecd\u7136\u6ca1\u6709\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6253\u5f00 LandscapeMountains.uproject \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb \u6587\u4ef6 -> \u5237\u65b0Visual Studio\u5de5\u7a0b \u3002 \u751f\u6210\u6210\u529f\u540e\uff0c\u53cc\u51fb\u6253\u5f00 LandscapeMountains.sln \uff0c\u5728 Visual Studio \u4e2d\u8bbe\u7f6e\u7f16\u8bd1\u9009\u9879\u4e3a DebugGame Editor \u548c Win64 \uff0c\u540c\u65f6\u5c06 LandscapeMountains \u8bbe\u4e3a\u542f\u52a8\u9879\uff0c\u5982 2.4 \u8282\u8bbe\u7f6e Block \u73af\u5883\u65f6\u4e00\u6837\u3002\u7b49\u5f85Visual Studio \u540e\u53f0\u5904\u7406\u5b8c\u6210\u540e\uff0c\u70b9\u51fb \u8c03\u8bd5 -> \u5f00\u59cb\u8c03\u8bd5 \uff0c\u6216\u8005\u76f4\u63a5\u70b9\u51fb \u672c\u5730 Windows \u8c03\u8bd5\u5668 \uff0c\u8fd9\u65f6\u4f1a\u81ea\u52a8\u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7684\u5173\u5361\u7f16\u8f91\u5668\u3002\u6b64\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u53f3\u4e0b\u89d2\u51fa\u73b0\u4e86 \u65b0\u63d2\u4ef6\u53ef\u7528 \u7684\u63d0\u793a\uff0c\u8bf4\u660e\u865a\u5e7b\u5f15\u64ce\u5df2\u7ecf\u80fd\u591f\u8bc6\u522b\u5230 AirSim \u63d2\u4ef6\u4e86\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u53f3\u4fa7 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u4e2d\u7684 \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u8bbe\u7f6e\u4e3a AirSimGameMode \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb \u4fdd\u5b58\u5f53\u524d\u5173\u5361 \u6765\u4fdd\u5b58\u8bbe\u7f6e\u597d\u7684\u73af\u5883\uff0c\u8fd9\u6837\u4ee5\u540e\u518d\u6b21\u6253\u5f00\u65f6\u5c31\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6e \u6e38\u620f\u6a21\u5f0f\u91cd\u8f7d \u4e86\u3002 \u63d0\u793a \u5982\u679c\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u6ca1\u6709 \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \uff0c\u5219\u53ef\u4ee5\u70b9\u51fb\u83dc\u5355\u680f\u4e2d\u7684 \u7a97\u53e3 \uff0c\u9009\u4e2d \u4e16\u754c\u573a\u666f\u8bbe\u7f6e \u3002 \u70b9\u51fb\u5de5\u5177\u680f\u4e2d\u7684 \u201c\u8fd0\u884c\u201d\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4eff\u771f\u4e86\uff0c\u5728\u8df3\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u70b9 \u201c\u5426\u201d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4eff\u771f\u8fd0\u884c\u8fd9\u4e2a \u5c71\u8109\u666f\u89c2 \u573a\u666f\uff0c\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u89c6\u53e3\u4e2d\u4e00\u504f\u7a7a\u767d\u7684\u8bdd\uff0c\u4e0d\u8981\u7d27\u5f20\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6e32\u67d3\u753b\u9762\uff0c\u968f\u7740\u6e32\u67d3\u7684\u8fdb\u884c\uff0c\u753b\u9762\u4f1a\u4e00\u70b9\u70b9\u5c55\u793a\u51fa\u6765\u3002\u4e0d\u540c\u6027\u80fd\u7684\u8ba1\u7b97\u673a\u7684\u6e32\u67d3\u65f6\u95f4\u4e5f\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6e32\u67d3\u7684\u8f83\u957f\u65f6\u95f4\u7684\u8bdd\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u56e0\u4e3a\u4ec5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u9700\u8981\u6e32\u67d3\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u4eff\u771f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u4e86\u3002\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e\uff0c\u89c6\u53e3\u4e2d\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u98de\u884c\u7684\u56db\u65cb\u7ffc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u70b9\u51fb\u5de5\u5177\u680f\u7684 \u505c\u6b62 \u6309\u94ae\uff0c\u5373\u53ef\u9000\u51fa\u4eff\u771f\u3002 \u81f3\u6b64 AirSim \u63d2\u4ef6\u5df2\u7ecf\u52a0\u8f7d\u5230\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u5de5\u7a0b\u4e2d\u4e86\u3002","title":"\u6dfb\u52a0 AirSim \u63d2\u4ef6"},{"location":"map/LandscapeMountains/#1","text":"","title":"\u5b9e\u4f8b1\uff1a\u6d4f\u89c8\u6e38\u620f\u4e2d\u7684\u7f8e\u666f"},{"location":"map/LandscapeMountains/#cv-mode","text":"\u4e0a\u4e00\u8282\u8fd0\u884c\u4eff\u771f\u65f6\uff0c\u662f\u5728\u5f00\u59cb\u65f6\u9009\u62e9\u65e0\u4eba\u673a\u6216\u8005\u65e0\u4eba\u673a\u8f66\u4eff\u771f\u6a21\u5f0f\u3002\u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u53ef\u4ee5\u63d0\u524d\u8bbe\u7f6e\u4eff\u771f\u6a21\u5f0f\u7684\u65b9\u6cd5\u3002AirSim\u5728\u4eff\u771f\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u8bfb\u53d6 C:\\Users\\\u7528\u6237\u540d\\Documents\\AirSim \u6587\u4ef6\u5939\u4e0b\u9762\u7684 settings.json \u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u8bbe\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u7535\u8111\u7b2c\u4e00\u6b21\u8fd0\u884cAirSim\u65f6\u5e94\u8be5\u4f1a\u81ea\u52a8\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa\u3002\u5728\u4ee5\u540e\u7684\u4eff\u771f\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u4f7f\u7528\u5230\u8fd9\u4e2a\u8bbe\u7f6e\u6587\u4ef6\u3002 AirSim \u7684\u4eff\u771f\u6a21\u5f0f\u67093\u79cd\uff0c\u9664\u4e86\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u4eff\u771f\u548c\u65e0\u4eba\u8f66\u4eff\u771f\uff0c\u8fd8\u6709\u4e00\u79cd\u662f Computer Vision \u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u4eff\u771f\u4e2d\u6ca1\u6709\u4efb\u4f55\u65e0\u4eba\u673a\u6216\u65e0\u4eba\u8f66\uff0c\u4e5f\u6ca1\u6709\u52a8\u529b\u5b66\u6a21\u578b\uff0c\u4f46\u662f\u53ef\u4ee5\u7528\u952e\u76d8\u63a7\u5236\u89c6\u89d2\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 APIs \u6765\u63a7\u5236\u76f8\u673a\u7684\u4f4d\u7f6e\u548c\u89d2\u5ea6\uff0c\u4ee5\u6b64\u6765\u6536\u96c6\u5f88\u591a\u56fe\u7247\u4f5c\u4e3a\u6570\u636e\u96c6\u3002 \u53ef\u4ee5\u6dfb\u52a0\u6216\u4fee\u6539 settings.json \u4e2d\u7684\u5185\u5bb9\uff0c\u6765\u624b\u52a8\u4fee\u6539 AirSim \u7684\u4e00\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4f7f\u7528\u5199\u5b57\u677f\u6253\u5f00 settings.json \u6587\u4ef6\uff0c\u6dfb\u52a0 SimMode \u6807\u7b7e\u548c\u5185\u5bb9\uff08\u5176\u4ed6\u5df2\u6709\u7684\u5185\u5bb9\u4e0d\u9700\u8981\u4fee\u6539\uff09\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u91cc\u7684 SimMode \u6807\u7b7e\u5c31\u662f\u8bbe\u7f6e AirSim \u7684\u4eff\u771f\u6a21\u5f0f\uff0c\u5982\u679c\u60f3\u505a\u591a\u65cb\u7ffc\u65e0\u4eba\u673a\u4eff\u771f\uff0c\u5c31\u8bbe\u7f6e\u6210 Multirotor \uff0c\u5982\u679c\u60f3\u505a\u65e0\u4eba\u8f66\u4eff\u771f\uff0c\u5c31\u8bbe\u7f6e\u6210 Car \u3002\u672c\u8282\u6211\u4eec\u4f53\u9a8c\u4e00\u4e0b Computer Vision \u4eff\u771f\u6a21\u5f0f\u3002\u4fee\u6539\u597d\u4e4b\u540e\uff0c\u4fdd\u5b58\u5e76\u5173\u95ed\u6587\u4ef6\u3002 \u5728\u865a\u5e7b\u5f15\u64ce\u7684\u5173\u5361\u7f16\u8f91\u5668\u4e2d\uff0c\u70b9\u51fb\u4e0a\u65b9\u5de5\u5177\u680f\u7684 \u8fd0\u884c \uff0c\u8ddf\u4e4b\u524d\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u6b64\u65f6\u6ca1\u6709\u4e86\u8be2\u95ee\u662f\u5426\u9009\u62e9\u65e0\u4eba\u673a\u8f66\u7684\u7a97\u53e3\uff0c\u800c\u662f\u76f4\u63a5\u5f00\u59cb\u4eff\u771f\u3002\u89c6\u53e3\u4e2d\u6ca1\u6709\u4efb\u4f55\u65e0\u4eba\u673a\u548c\u65e0\u4eba\u8f66\u3002\u5c06\u9f20\u6807\u79fb\u52a8\u5230\u89c6\u53e3\u4e2d\u5e76\u70b9\u51fb\u9f20\u6807\u5de6\u952e\uff0c\u6b64\u65f6\u5c31\u8fdb\u5165\u4e86\u6d4f\u89c8\u6a21\u5f0f\u3002\u5728\u6d4f\u89c8\u6a21\u5f0f\u4e0b\uff0c\u9f20\u6807\u662f\u4e0d\u663e\u793a\u4e14\u4e0d\u80fd\u79fb\u52a8\u7684\uff0c\u952e\u76d8\u4e0a\u540c\u65f6\u6309 Shift + F1 \u5219\u53ef\u4ee5\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002\u6240\u4ee5\u8981\u60f3\u505c\u6b62\u4eff\u771f\u6216\u8005\u5173\u95ed\u7a97\u53e3\u7b49\u64cd\u4f5c\uff0c\u90fd\u9700\u8981\u5148\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002","title":"\u8bbe\u7f6e\u4e3a CV Mode"},{"location":"map/LandscapeMountains/#_4","text":"\u5728\u4eff\u771f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u89c6\u53e3\u4e2d\u6240\u5904\u7684\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\u662f\u5728\u6bd4\u8f83\u9ad8\u7684\u9ad8\u7a7a\u4e2d\uff0c\u4f7f\u7528\u952e\u76d8\u79fb\u52a8\u7684\u8bdd\uff0c\u5f88\u4e45\u624d\u80fd\u79fb\u52a8\u5230\u5730\u9762\u4e0a\u3002\u5982\u679c\u4f7f\u7528\u65e0\u4eba\u673a\u4eff\u771f\uff0c\u5728\u4eff\u771f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u65e0\u4eba\u673a\u662f\u5728\u534a\u7a7a\u4e2d\uff0c\u4f1a\u76f4\u63a5\u5f80\u4e0b\u6389\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u521d\u59cb\u4f4d\u7f6e\u653e\u7f6e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u5730\u9762\u4e0a\u3002 \u5728 \u4e16\u754c\u5927\u7eb2\u89c6\u56fe \u4e2d\u641c\u7d22 Player Start \uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u597d\u51e0\u4e2a\u7c7b\u4f3c\u540d\u5b57\u7684 Actor\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Player Start Actor \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u662f \u73a9\u5bb6\u51fa\u751f\u70b9 \u7684\u8bbe\u7f6e\uff0c\u662f\u6307\u5728\u6e38\u620f\u4e16\u754c\u573a\u666f\u4e2d\u73a9\u5bb6\u5f00\u59cb\u6e38\u620f\u7684\u5730\u70b9\u3002\u5728 AirSim \u4eff\u771f\u4e2d\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u4eff\u771f\u5f00\u59cb\u65f6\u5c06\u521d\u59cb\u4f4d\u7f6e\u8bbe\u7f6e\u5728\u8fd9\u4e2a\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u5373\u53ef\u63a7\u5236 AirSim \u4eff\u771f\u7684\u521d\u59cb\u4f4d\u7f6e\u3002 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u670914\u4e2a Player Start Actor\uff0c\u53ef\u4ee5\u53ea\u7559\u4e0b\u7b2c\u4e00\u4e2a\uff0c\u5c06\u5176\u4ed6\u7684\u90fd\u5220\u9664\u6389\u3002\u9996\u5148\u8981\u9000\u51fa\u4eff\u771f\uff0c\u53cc\u51fb Player Start Actor\uff0c\u89c6\u53e3\u4e2d\u4f1a\u81ea\u52a8\u79fb\u52a8\u5230\u6b64 Player Start Actor \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e \u53f3\u4e0b\u89d2\u53c2\u6570\u9762\u677f\u4e2d\u7684 \u4f4d\u7f6e \u53ef\u4ee5\u8bbe\u7f6e Player Start \u5728\u865a\u5e7b\u5f15\u64ce\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u5750\u6807\u6765\u6539\u53d8\u5176\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u5750\u6807\u662f\u865a\u5e7b\u5f15\u64ce\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807\uff0c\u4fee\u6539\u8d77\u6765\u975e\u5e38\u9ebb\u70e6\u3002\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u9f20\u6807\u653e\u5728\u5728\u4e2d\u95f4\u7684\u767d\u70b9\u6216\u8005\u7ea2\u7eff\u84dd\u4e09\u4e2a\u5750\u6807\u8f74\u4e0a\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u952e\u62d6\u52a8 Player Start Actor\u4e86\u3002\u5c06\u5176\u79fb\u52a8\u5230\u671f\u671b\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4fdd\u5b58\u5f53\u524d\u5173\u5361\u3002\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u70b9\u51fb \u8fd0\u884c \uff0c\u4eff\u771f\u5f00\u59cb\u7684\u4f4d\u7f6e\u5c31\u662f\u521a\u521a\u4fee\u6539\u7684\u4f4d\u7f6e\u3002 \u5982\u679c\u51fa\u73b0 BAD Size \u6807\u8bc6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8bf4\u660e\u6b64\u521d\u59cb\u4f4d\u7f6e\u4e0e\u5176\u4ed6 Actor \u53d1\u751f\u4e86\u78b0\u649e\uff0c\u9700\u8981\u5c06\u5176\u79fb\u51fa\u3002","title":"\u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e"},{"location":"map/LandscapeMountains/#_5","text":"\u5728\u6d4f\u89c8\u6a21\u5f0f\u4e2d\uff0c\u89c6\u89d2\u662f\u53ef\u4ee5\u63a7\u5236\u7684\uff0c\u89c6\u89d2\u7684\u8fd0\u52a8\u5305\u62ec3\u4e2a\u65b9\u5411\u7684\u5e73\u79fb\u8fd0\u52a8\uff08\u4e0a\u4e0b\u3001\u5de6\u53f3\u3001\u524d\u540e\uff09\u548c2\u4e2a\u65b9\u5411\u7684\u65cb\u8f6c\u8fd0\u52a8\uff08\u4fef\u4ef0\u3001\u504f\u822a\uff09\u3002\u4f7f\u7528\u952e\u76d8\u53ef\u4ee5\u63a7\u5236\u89c6\u89d2\u5b8c\u6210\u81ea\u7531\u8fd0\u52a8\uff0c\u952e\u76d8\u6309\u952e\u4e0e\u89c6\u89d2\u8fd0\u52a8\u7684\u5bf9\u5e94\u5982\u4e0b\uff1a \u4e0a\u4e0b\u7bad\u5934\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u524d\u540e\u5e73\u79fb\u8fd0\u52a8 \u5de6\u53f3\u7bad\u5934\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u5de6\u53f3\u5e73\u79fb\u8fd0\u52a8 PgUp\u3001PgDn\uff1a\u63a7\u5236\u89c6\u89d2\u4e0a\u4e0b\u5e73\u79fb\u79fb\u52a8 W\u3001S\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u4fef\u4ef0\u65cb\u8f6c\u8fd0\u52a8 A\u3001D\u6309\u952e\uff1a\u63a7\u5236\u89c6\u89d2\u504f\u822a\u65cb\u8f6c\u8fd0\u52a8 \u5728\u5173\u5361\u7f16\u8f91\u5668\u4e2d\u70b9\u51fb \u8fd0\u884c \u540e\uff0c\u628a\u9f20\u6807\u79fb\u52a8\u5230\u4e2d\u95f4\u7684\u89c6\u53e3\u4e2d\uff0c\u70b9\u51fb\u9f20\u6807\u5de6\u952e\uff0c\u5373\u53ef\u8fdb\u5165\u6d4f\u89c8\u6a21\u5f0f\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u7528\u952e\u76d8\u81ea\u7531\u5730\u63a7\u5236\u89c6\u89d2\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u6d4f\u89c8\u7f8e\u666f\u3002\u5728\u6d4f\u89c8\u6a21\u5f0f\u4e2d\uff0c\u9f20\u6807\u662f\u4e0d\u80fd\u79fb\u51fa\u89c6\u53e3\u7684\uff0c\u66f4\u4e0d\u80fd\u70b9\u51fb\u89c6\u53e3\u4ee5\u5916\u7684\u6309\u94ae\uff0c\u5f53\u9700\u8981\u9000\u51fa\u65f6\uff0c\u9700\u8981\u540c\u65f6\u6309\u952e\u76d8\u4e0a\u7684 Shift + F1 \u952e\uff0c\u5373\u53ef\u9000\u51fa\u6d4f\u89c8\u6a21\u5f0f\u3002","title":"\u89c6\u89d2\u63a7\u5236"},{"location":"map/LandscapeMountains/#actor","text":"\u573a\u666f\u662f\u7531\u5f88\u591a\u7684 Actor \u7ec4\u6210\u7684\uff0c\u5176\u4e2d\u7684\u5c71\u3001\u8def\u3001\u4e91\u3001\u6811\u6728\u7b49\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a Actor\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\u6240\u793a\uff0c \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u4e00\u6bb5\u6865\u6881\u5c31\u662f\u4e00\u4e2a Actor\u3002\u6bcf\u4e2a Actor \u90fd\u6709\u5176\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u5982\u4f4d\u7f6e\u4fe1\u606f\u7b49\uff0c\u8fd9\u4e9b\u53c2\u6570\u90fd\u53ef\u4ee5\u8c03\u6574\u3002 \u539f\u59cb\u7684 \u5c71\u8109\u666f\u89c2 \u573a\u666f\u4e2d\u6709\u6bd4\u8f83\u5927\u7684\u96fe\u6c14\uff0c\u5f71\u54cd\u4e86\u6d4f\u89c8\u7f8e\u666f\u7684\u89c6\u91ce\uff0c\u53ea\u9700\u8981\u5c06\u96fe\u6c14\u6709\u5173\u7684 Actor \u7684\u96fe\u5bc6\u5ea6\u53c2\u6570\u8c03\u4f4e\u5c31\u53ef\u4ee5\u51cf\u5c0f\u96fe\u6c14\u7684\u6d53\u5ea6\u3002 \u5728\u5173\u5361\u7f16\u8f91\u5668\u53f3\u4fa7\u7684 \u4e16\u754c\u5927\u7eb2\u89c6\u56fe \u4e2d\u641c\u7d22 fog \uff0c\u641c\u7d22\u51fa\u6765\u4e24\u4e2a\u8ddf\u96fe\u6c14\u6709\u5173\u7684 Actor\uff0c\uff08\u53ea\u6709\u5728\u4eff\u771f\u8fdb\u884c\u4e2d\u624d\u4f1a\u6709 ExponentialHeightFog \uff09\u3002\u70b9\u51fb\u9009\u4e2d ExponentialHeightFog Actor\uff0c\u5c06\u53c2\u6570\u9762\u677f\u7684 \u96fe\u5bc6\u5ea6 \u53c2\u6570\u8bbe\u4e3a 0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u65f6\u5728\u4eff\u771f\u4e2d\u89c6\u91ce\u53ef\u89c1\u5ea6\u4f1a\u597d\u5f88\u591a\uff0c\u666f\u8272\u4e5f\u4f1a\u66f4\u7f8e\u3002\u5173\u4e8e\u5929\u6c14\u7684\u63a7\u5236\uff0c\u540e\u7eed\u4f1a\u6709\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u540e\u7eed\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u8c03\u8282\u5404\u79cd Actor \u7684\u53c2\u6570\uff0c\u6765\u8fbe\u5230\u81ea\u5df1\u60f3\u8981\u7684\u6548\u679c\u3002","title":"Actor \u53c2\u6570\u8c03\u8282"},{"location":"map/LandscapeMountains/#_6","text":"\u5f00\u59cb\u4f7f\u7528 AirSim","title":"\u53c2\u8003"},{"location":"map/ZhangJiajie/","text":"\u5f20\u5bb6\u754c # \u5f20\u5bb6\u754c\u573a\u666f \u4e0b\u8f7d\u94fe\u63a5 \uff0c\u6269\u5c55\u7684\u4e3a \u865a\u5e7b5\u76848K\u573a\u666f \u3002","title":"\u5f20\u5bb6\u754c"},{"location":"map/ZhangJiajie/#_1","text":"\u5f20\u5bb6\u754c\u573a\u666f \u4e0b\u8f7d\u94fe\u63a5 \uff0c\u6269\u5c55\u7684\u4e3a \u865a\u5e7b5\u76848K\u573a\u666f \u3002","title":"\u5f20\u5bb6\u754c"},{"location":"map/map_list/","text":"\u81ea\u5e26\u7684\u5730\u56fe\u5217\u8868 # 1.AbandonedPark \uff08\u5931\u843d\u7684\u516c\u56ed\uff09 2.Africa (\u975e\u6d32\uff1a\u5d0e\u5c96\u4e0d\u5e73\u7684\u5730\u5f62\u548c\u6d3b\u6cfc\u7684\u52a8\u7269) 3.AirSimNH (\u5c0f\u578b\u57ce\u5e02\u8857\u533a, small urban neighborhood block) 4.Blocks \u2014\u2014\u51e0\u4e2a\u65b9\u5757 5.Building_99 \u2014\u2014 \u529e\u516c\u697c\u91cc 6.CityEnviron \u2014\u2014\u57ce\u5e02\u73af\u5c9b\uff0c\u6709\u4eba\uff0c\u8f66 7.Coastline \u2014\u2014 \u6d77\u5cb8\u7ebf\u98ce\u666f 8.LandscapeMountains \u2014\u2014 \u96ea\u5c71\uff0c\u6709\u5706\u73af\uff0c\u50cf\u662f\u65e0\u4eba\u673a\u6bd4\u8d5b\u5730\u56fe 9.MSBuild2018 (soccer field) \u2014\u2014 \u4e00\u4e2a\u8db3\u7403\u573a\u5468\u8fb9\u5efa\u7b51\uff0c\u5e94\u8be5\u662f\u5fae\u8f6f\u7684\u529e\u516c\u56ed\u533a 10.TrapCamera\uff08\u5e72\u8349\u539f\uff1aDryGrassLand\uff09 11.ZhangJiajie \u2014\u2014\u5f20\u5bb6\u754c\uff0c\u4e91\u5c71\u96fe\u7ed5\u7684\u4ed9\u5883\u4e00\u822c \u53c2\u8003 # AirSim\u65e0\u4eba\u673a\u4eff\u771f\u2014\u2014\u624b\u67c4\u64cd\u4f5c \u573a\u666f\u641c\u7d22","title":"\u81ea\u5e26\u7684\u5730\u56fe\u5217\u8868"},{"location":"map/map_list/#_1","text":"1.AbandonedPark \uff08\u5931\u843d\u7684\u516c\u56ed\uff09 2.Africa (\u975e\u6d32\uff1a\u5d0e\u5c96\u4e0d\u5e73\u7684\u5730\u5f62\u548c\u6d3b\u6cfc\u7684\u52a8\u7269) 3.AirSimNH (\u5c0f\u578b\u57ce\u5e02\u8857\u533a, small urban neighborhood block) 4.Blocks \u2014\u2014\u51e0\u4e2a\u65b9\u5757 5.Building_99 \u2014\u2014 \u529e\u516c\u697c\u91cc 6.CityEnviron \u2014\u2014\u57ce\u5e02\u73af\u5c9b\uff0c\u6709\u4eba\uff0c\u8f66 7.Coastline \u2014\u2014 \u6d77\u5cb8\u7ebf\u98ce\u666f 8.LandscapeMountains \u2014\u2014 \u96ea\u5c71\uff0c\u6709\u5706\u73af\uff0c\u50cf\u662f\u65e0\u4eba\u673a\u6bd4\u8d5b\u5730\u56fe 9.MSBuild2018 (soccer field) \u2014\u2014 \u4e00\u4e2a\u8db3\u7403\u573a\u5468\u8fb9\u5efa\u7b51\uff0c\u5e94\u8be5\u662f\u5fae\u8f6f\u7684\u529e\u516c\u56ed\u533a 10.TrapCamera\uff08\u5e72\u8349\u539f\uff1aDryGrassLand\uff09 11.ZhangJiajie \u2014\u2014\u5f20\u5bb6\u754c\uff0c\u4e91\u5c71\u96fe\u7ed5\u7684\u4ed9\u5883\u4e00\u822c","title":"\u81ea\u5e26\u7684\u5730\u56fe\u5217\u8868"},{"location":"map/map_list/#_2","text":"AirSim\u65e0\u4eba\u673a\u4eff\u771f\u2014\u2014\u624b\u67c4\u64cd\u4f5c \u573a\u666f\u641c\u7d22","title":"\u53c2\u8003"},{"location":"third/used_by/","text":"\u4f7f\u7528AirSim\u7684\u9879\u76ee # \u98de\u884c\u5668 # \u611f\u77e5 # \u4ece\u6a21\u62df\u73af\u5883\u6536\u96c6\u7684\u91cc\u7a0b\u8ba1\u6570\u636e - \u6bd4\u8f83\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5668\uff08LSQ\uff09\u548c\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\uff08EKF\uff09\u8fdb\u884c\u4f20\u611f\u5668\u878d\u5408 P-Agent\uff1a\u4f7f\u7528 Pedras \u548c AirSim \u8bad\u7ec3\u81ea\u4e3b\u4ee3\u7406\u8bc6\u522b\u5e76\u83b7\u53d6\u5305\u88f9 \u5c4b\u9876\u7740\u9646 - \u878d\u5408 Polylidar3D \u548c\u6df1\u5ea6\u5b66\u4e60\uff0c\u4ece 3D \u70b9\u4e91\u4e2d\u8bc6\u522b\u5e73\u9762 \u5728\u5fae\u8f6f Airsim \u4e0a\u5b9e\u73b0 VINS-Mono SLAM \u901a\u8fc7\u4fe1\u606f\u8def\u5f84\u89c4\u5212\u5b9e\u73b0\u8bed\u4e49\u5206\u5272\u7684\u5177\u8eab\u4e3b\u52a8\u9886\u57df\u81ea\u9002\u5e94 \u4f7f\u7528\u5b9e\u65f6\u56fe\u50cf\u5206\u7c7b\u8fdb\u884c\u65e0\u4eba\u673a\u5bfc\u822a \u4f7f\u7528\u5149\u6d41\u548c\u6269\u5c55\u7126\u70b9 (Focus of Expansion) \u5bf9\u5fae\u578b\u98de\u884c\u5668 (MAV) \u8fdb\u884c\u57fa\u4e8e\u8fd0\u52a8\u7684\u7269\u4f53\u68c0\u6d4b \u57fa\u4e8e\u624b\u52bf\u7684\u4ea4\u4e92\u5f0f\u65e0\u4eba\u673a\u7fa4\u4f53\u63a7\u5236\uff08HGI\uff09\u5e73\u53f0 \u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u7528\u6237\u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u5229\u7528\u5b66\u4e60\u63a7\u5236\u7b56\u7565\u5bf9\u79fb\u52a8\u76ee\u6807\u8fdb\u884c\u4e3b\u52a8\u5206\u7c7b PEDRA \u589e\u5f3a\u4e86\u57fa\u4e8e\u4e8b\u4ef6\u7684\u89c6\u89c9\uff0c\u9002\u7528\u4e8e\u65e0\u4eba\u673a\u5e73\u53f0\u7684\u6df7\u5408\u4e8b\u4ef6 + \u5e27\u5904\u7406\u5e94\u7528 \u57fa\u4e8e\u65e0\u4eba\u673a\u667a\u80fd\u822a\u7ebf\u89c4\u5212\u4e0e \u6444\u50cf\u7684\u5efa\u7b51\u5e55\u5899\u56fe\u50cf\u91c7\u96c6\u6280\u672f - \u9488\u5bf9\u5efa\u7b51\u5e55\u5899\u51fa\u73b0\u7684\u9762\u677f\u7834\u635f\u8131\u843d\u3001\u79fb\u4f4d\u53d8\u5f62\u7b49\u95ee\u9898\u53ca\u707e\u540e\u7684\u5e94\u6025\u6027\u5feb\u901f\u5b89\u5168\u68c0\u6d4b\uff0c\u5229\u7528\u65e0\u4eba\u673a\u642d\u8f7d\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u8003\u8651\u70df\u96fe\u6c61\u6e0d\u3001\u73af\u5883\u5f71\u50cf\u7684\u6295\u5c04\u548c\u5012\u5f71\u7b49\u56e0\u7d20\u5bf9\u68c0\u6d4b\u7ed3\u679c\u7684\u5e72\u6270\u8bc6\u522b \u4e3b\u52a8 SLAM VNAV 2023 \u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\u751f\u6210\u5668\uff08YOLO \u683c\u5f0f\uff09\u548c\u4e00\u4e9b\u83b7\u53d6\u63a8\u7406\u7ed3\u679c\u7684\u65b9\u6cd5 \u4eba\u8138\u8bc6\u522b&\u8ddf\u8e2a\u4eba - \u4f7f\u7528 YOLOv8 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4eba\u7269\uff0c\u4f7f\u7528 OpenCV \u68c0\u6d4b\u4eba\u8138\uff0c\u4f7f\u7528 DeepFace \u8bc6\u522b\u4eba\u7269\uff0c\u5e76\u98de\u8fd1\u7528\u6237\u4ece\u89c6\u9891\u6e90\u4e2d\u9009\u62e9\u7684\u76ee\u6807\uff0c\u7cfb\u7edf\u4f1a\u8bf4\u51fa\u6b64\u4eba\u7684\u59d3\u540d\u5e76\u5728\u5730\u56fe\u4e0a\u663e\u793a\u4ed6\u4eec\u7684\u4f4d\u7f6e \u9632\u649e\u65e0\u4eba\u673a - \u5b9e\u65f6\u65e0\u4eba\u673a\u9632\u649e\u7cfb\u7edf\u4f7f\u7528 YOLOv8 \u8ba1\u7b97\u673a\u89c6\u89c9\u68c0\u6d4b\u969c\u788d\u7269\u5e76\u5b9e\u65bd\u4e09\u533a\u5b89\u5168\u534f\u8bae\uff08\u7d27\u6025\u3001\u5173\u952e\u548c\u6807\u51c6\uff09\uff0c\u4ee5\u786e\u4fdd\u5728\u52a8\u6001\u73af\u5883\u4e2d\u5b89\u5168\u5bfc\u822a \u4e00\u6b3e\u89c6\u89c9\u6548\u679c\u60ca\u8273\u7684\u706b\u7130\u7ea2\u5916\u6a21\u62df\u5668\uff0c\u7528\u4e8e SLAM \u548c\u611f\u77e5 \u80fd\u591f\u5728\u4e0d\u540c\u573a\u666f\u4e2d\u63a2\u6d4b\u706b\u707e\u7684\u65e0\u4eba\u673a \u89c4\u5212 # \u5728\u590d\u6742\u672a\u77e5\u73af\u5883\u4e0b\u8bad\u7ec3\u65e0\u4eba\u673a\u5bfc\u822a\u7b56\u7565\u7684\u5e73\u53f0 \u8702\u7a9d\u8f85\u52a9\u65e0\u4eba\u673a\u8f68\u8ff9\u751f\u6210\uff0c\u5b9e\u73b0\u6700\u4f73\u7f51\u7edc\u8d28\u91cf \u79fb\u52a8\u673a\u5668\u4eba\u5728\u4e3b\u52a8\u611f\u77e5\u8986\u76d6\u8def\u5f84\u89c4\u5212\u65b9\u6848\u4e2d\u7684\u8def\u5f84\u89c4\u5212 - \u57fa\u4e8e\u5728\u7ebf\u63a5\u6536\u7684\u5df2\u6355\u83b7\u56fe\u50cf\u4fe1\u606f\u8c03\u6574\u673a\u5668\u4eba\u901f\u5ea6 \u57fa\u4e8e PPO \u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u6bcf\u9694 4 \u7c73\uff0c\u65e0\u4eba\u673a\u5c31\u4f1a\u7a7f\u8fc7\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u3002\u76ee\u6807\u662f\u8ba9\u667a\u80fd\u4f53\u5728\u8fd9\u4e9b\u5f00\u53e3\u5904\u5bfc\u822a\u800c\u4e0d\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e \u57fa\u4e8ePPO\u7684\u56db\u8f74\u98de\u884c\u5668\u81ea\u4e3b\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u5176\u4e2d\u6bcf\u9694 4 \u7c73\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u4f9b\u65e0\u4eba\u673a\u7a7f\u8fc7\u3002\u9884\u671f\u662f\u667a\u80fd\u4f53\u80fd\u591f\u987a\u5229\u7a7f\u8fc7\u8fd9\u4e9b\u5f00\u53e3\u800c\u4e0d\u4f1a\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e DRL-Nav\uff1a\u57fa\u4e8e PPO \u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a - \u5305\u542b PPO\u3001SAC\u3001DQN \u548c DDPG \u7684\u5b9e\u73b0 \u9884\u6d4b\u5b89\u5168\u65b9\u5411 \u4e00\u79cd\u57fa\u4e8e\u8f7b\u91cf\u7ea7\u5b66\u4e60\u7684\u8f68\u8ff9\u4f18\u5316\u6846\u67b6 - \u6df1\u5ea6\u5b66\u4e60\u7528\u4e8e\u4f18\u5316\u56db\u65cb\u7ffc\u98de\u884c\u5668\u8f68\u8ff9 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7528\u4e8e\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a \u4f7f\u7528 PyTrees \u548c Microsoft AirSim \u8fdb\u884c\u795e\u7ecf\u7b26\u53f7\u56db\u8f74\u98de\u884c\u5668\u5bfc\u822a \u5305\u542b\u51e0\u79cd\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 (DRL) \u7b97\u6cd5\uff0c\u7528\u4e8e\u8bad\u7ec3\u65e0\u4eba\u673a\u907f\u5f00 AirSim \u6a21\u62df\u4e2d\u7684\u969c\u788d\u7269 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u548c\u6a21\u62df\u5668\u8fdb\u884c\u65e0\u4eba\u673a/\u65e0\u4eba\u9a7e\u9a76\u98de\u673a\u8def\u5f84\u89c4\u5212 \u9884\u6d4b\u5b89\u5168\u65b9\u5411 MOAAPP - \u57fa\u4e8e\u591a\u76ee\u6807\u6ce8\u610f\u529b\u7684\u81ea\u9002\u5e94\u8def\u5f84\u89c4\u5212\u5668\uff08\u65e0\u4eba\u673a\u8def\u5f84\u89c4\u5212\uff09 - \u91c7\u7528\u6df1\u5ea6 Q \u5b66\u4e60 (DQN)\uff0c\u5e76\u7ed3\u5408\u957f\u77ed\u671f\u8bb0\u5fc6(LSTM)\u548c\u6ce8\u610f\u529b\u673a\u5236\u8fdb\u884c\u5f3a\u5316\u5b66\u4e60\u3002\u5b83\u5229\u7528 AirSim \u4eff\u771f\u73af\u5883\u589e\u5f3a\u65e0\u4eba\u673a\u5728\u590d\u6742\u3001\u969c\u788d\u7269\u5bc6\u96c6\u73af\u5883\u4e2d\u7684\u5bfc\u822a\u80fd\u529b\uff0c\u5e76\u4f18\u5316\u8def\u5f84\u957f\u5ea6\u3001\u5b89\u5168\u6027\u548c\u80fd\u6548\u7b49\u591a\u4e2a\u76ee\u6807\u3002 \u7ed3\u5408\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 (DRL)\u548c\u6df1\u5ea6\u5730\u56fe\uff0c\u4ee5\u589e\u5f3a\u65e0\u4eba\u673a\u5bfc\u822a\u548c\u907f\u969c\u80fd\u529b - \u96c6\u6210\u4e86Dueling Double Deep Q \u7f51\u7edc (D3QN)\u548cResNet-8\u67b6\u6784\uff0c\u4ee5\u5b9e\u73b0\u7cbe\u51c6\u7684\u8fd0\u52a8\u6307\u4ee4\u548c\u7a33\u5065\u7684\u8f6c\u5411\u89d2\u5ea6\u9884\u6d4b \u5728\u590d\u6742\u7684\u73af\u5883\u4e2d\u8bad\u7ec3\u5bfc\u822a\u7b56\u7565 \u65e0\u4eba\u673a\u81ea\u4e3b\u5bfc\u822a - \u5229\u7528\u6fc0\u5149\u96f7\u8fbe\u6570\u636e\u5b9e\u65f6\u907f\u969c\u3002\u8be5\u7cfb\u7edf\u65e2\u652f\u6301\u5355\u673a\u87ba\u65cb\u5f0f\u5bfc\u822a\uff0c\u4e5f\u652f\u6301\u591a\u673a\u534f\u540c\u96c6\u7fa4\u98de\u884c active-suspension \u8fd0\u52a8\u89c4\u5212\u7814\u7a76 \u57fa\u4e8e\u516b\u53c9\u6811\u7684\u65e0\u4eba\u673a\u5bfb\u8def\u7b97\u6cd5 \u4f7f\u7528 AirSim \u4e2d\u7684 A* \u5bfb\u8def\u3001\u4f20\u611f\u5668\u6570\u636e\u96c6\u6210\u548c YOLO \u7269\u4f53\u68c0\u6d4b\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u63a7\u5236\u7cfb\u7edf \u5f3a\u5316\u5b66\u4e60 # \u4ee5\u6a21\u62df\u56fa\u5b9a\u7ffc\u98de\u673a\u8fdb\u884c\u5f3a\u5316\u5b66\u4e60 (RL) \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e0e\u8fc1\u79fb\u5b66\u4e60 \u5956\u52b1\u5851\u9020\u6280\u672f Hind Sight Reward Shaping - \u5229\u7528\u8d1d\u5c14\u66fc\u65b9\u7a0b\u7684\u57fa\u672c\u539f\u7406\u548c\u5f53\u524d\u6700\u5148\u8fdb\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\uff08\u5982 DQN\uff09\u4e2d\u7684\u7ecf\u9a8c\u91cd\u653e\u3002 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8fdb\u884c\u540c\u6b65\u65e0\u4eba\u673a\u822a\u62cd \u5c06\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u4e8e\u65e0\u4eba\u673a\u6a21\u62df - \u5305\u62ec\uff1a\u6839\u636e\u65e0\u4eba\u673a\u524d\u65b9\u7684\u7ea2\u8272\u611f\u5e94\u8fdb\u884c\u79fb\u52a8\u3001\u6839\u636e\u989c\u8272\u68c0\u6d4b\u6765\u8bd5\u9a8c\u65e0\u4eba\u673a\u7684\u6301\u7eed\u52a8\u4f5c\u3002 \u4ece\u6f14\u793a\u4e2d\u5b66\u4e60\uff1aStable Baselines 2.10 \u7684\u6a21\u4eff\u5b66\u4e60\u57fa\u51c6 \u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\uff1a\u5b9e\u9a8c\u53ef\u91cd\u590d\u6027 \u4e8b\u4ef6\u6444\u50cf\u673a\u7684\u8868\u5f81\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60 \u591a\u62bd\u8c61\u5c42\u5f3a\u5316\u5b66\u4e60\uff08MALRL\uff09 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316 (PPO) \u5b9e\u73b0\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u65e0\u4eba\u673a\u5f15\u64ce\uff08\u81ea\u52a8\u9a7e\u9a76\u4eea-1.0\uff09 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u63a2\u7d22\u51b3\u7b56\u6a21\u5757 Airsim, Stable Baselines3, \u5f3a\u5316\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60\u5728 ATC \u4ee3\u7406\u4e0a\u4e3a UAM \u5206\u914d\u4efb\u52a1 \u57fa\u4e8ePPO\u7684\u56db\u8f74\u98de\u884c\u5668\u81ea\u4e3b\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u5176\u4e2d\u6bcf\u9694 4 \u7c73\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u4f9b\u65e0\u4eba\u673a\u7a7f\u8fc7\u3002\u9884\u671f\u662f\u667a\u80fd\u4f53\u80fd\u591f\u987a\u5229\u7a7f\u8fc7\u8fd9\u4e9b\u5f00\u53e3\u800c\u4e0d\u4f1a\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e \u8bbe\u8ba1\u4e00\u4e2a\u5f3a\u5316\u5b66\u4e60\u7a7a\u4e2d\u4ea4\u901a\u7ba1\u5236\u5458\u4ee3\u7406 - \u4f7f\u5176\u80fd\u591f\u627f\u62c5\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u7a7a\u4e2d\u4ea4\u901a\u7ba1\u5236\u5458\u7684\u804c\u8d23\uff0c\u5229\u7528\u57ce\u5e02\u7a7a\u4e2d\u4ea4\u901a\u6765\u6307\u6325\u5782\u76f4\u8d77\u964d\u673a\u573a\u5468\u56f4\u7684\u7535\u52a8\u5782\u76f4\u8d77\u964d\u98de\u884c\u5668\u3002\u8be5\u95ee\u9898\u88ab\u8868\u8ff0\u4e3a\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5e76\u4f7f\u7528PPO\u4f5c\u4e3a\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002 Eagle \u548c EagleSim\uff1a\u7528\u4e8e PTZ \u6444\u50cf\u673a\u7684 Deep-RL AirSim \u4e2d\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 DRL_Drone \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e0e\u8fc1\u79fb\u5b66\u4e60 DQN\u3001DDPG\u3001TD3\u3001A2C \u548c PPO \u7684 DRL \u7b97\u6cd5\u5b9e\u73b0 DQN\u6548\u679c \u57fa\u4e8ePPO\u7684\u81ea\u52a8\u5bfc\u822a OptimalEmission-SUMO-\u5f3a\u5316\u5b66\u4e60 \u4f7f\u7528PPO\uff08\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff09\u7b97\u6cd5\u5bf9\u65e0\u4eba\u673a\u63a7\u5236\u8fdb\u884c\u8bad\u7ec3\u548c\u6d4b\u8bd5\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u6a21\u578b \u8bc4\u4f30\u4e0d\u540c\u6a21\u62df\u73af\u5883\u4e2d\u65e0\u4eba\u673a\u5bfc\u822a\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5 \u5728 AirSim\uff08\u4e00\u4e2a\u7528\u4e8e\u65e0\u4eba\u673a\u548c\u5176\u4ed6\u8f66\u8f86\u7684\u6a21\u62df\u73af\u5883\uff09\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6df1\u5ea6 Q \u7f51\u7edc (DQN) \u4ee3\u7406 - \u8be5\u4ee3\u7406\u65e8\u5728\u8ddf\u8e2a\u7403\u4f53\uff0c\u5e76\u5728\u4fdd\u6301\u7403\u4f53\u5728\u89c6\u91ce\u8303\u56f4\u5185\u7684\u540c\u65f6\uff0c\u4e0e\u7403\u4f53\u4fdd\u6301\u4e00\u5b9a\u8ddd\u79bb \u6536\u96c6\u5b89\u88c5\u5728\u8f66\u8f86\u4e0a\u7684\u8ddd\u79bb\u4f20\u611f\u5668\uff0c\u8f93\u5165\u5230DQN\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5b66\u4e60\u64cd\u4f5c\u65e0\u4eba\u673a\u5b8c\u6210\u8bbf\u95ee\u4efb\u52a1 \u4f7f\u7528 PPO \u7684\u81ea\u52a8\u6c7d\u8f66\u5bfc\u822a rl_airsim \u57fa\u4e8ePyTorch\u548cAirSim\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u65e0\u4eba\u673a\u81ea\u52a8\u9a7e\u9a76\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edf - \u652f\u6301\u591a\u6a21\u6001\u8f93\u5165\u5904\u7406\u3001\u590d\u5408\u89c2\u6d4b\u7a7a\u95f4\u3001SAC\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3001\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\u3001XPU\u52a0\u901f\u53ca\u9ad8\u7ea7\u65ad\u70b9\u7eed\u8bad\u529f\u80fd\u3002 \u76f8\u540c\u4ed3\u5e93 \u4e00\u6b3e\u57fa\u4e8e\u5f3a\u5316\u5b66\u4e60\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u7cfb\u7edf\uff0c\u65e8\u5728\u5728\u6a21\u62df\u73af\u5883\u4e2d\u8fdb\u884c\u667a\u80fd\u8def\u5f84\u89c4\u5212 \u7528\u4e8e\u6700\u4f73\u8def\u5f84\u67e5\u627e\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u6a21\u62df\u5668\u548c\u7b97\u6cd5\u73af\u5883 \u5728\u8d70\u5eca\u73af\u5883\u4e2d\u4f7f\u7528\u56db\u8f74\u98de\u884c\u5668\u8fdb\u884c\u81ea\u4e3b\u5bfc\u822a - \u5305\u542b PPO\u3001SAC\u3001DQN \u548c DDPG \u7684\u5b9e\u73b0\uff0c\u6269\u5c55\u81ea Bilal Kabas \u5f3a\u5316\u5b66\u4e60\u5728\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u98de\u884c\u52a8\u4f5c\u63a7\u5236\u4e2d\u7684\u5e94\u7528 \u63a7\u5236 # AirSim\u4e2d\u7684\u63a7\u5236 \u5b9e\u65f6\u9632\u649e\u7cfb\u7edf \u624b\u52a8\u8bbe\u8ba1\u7684\u63a7\u5236\u5668 - \u6b64\u73af\u5883\u662f\u4e00\u4e2a Gym API\uff0c\u4e13\u95e8\u7528\u4e8e\u5b66\u4e60\u65e0\u5730\u56fe\u5bfc\u822a\u548c\u98de\u884c\u7a33\u5b9a\u6027 \u5f3a\u5316\u5b66\u4e60\uff1a\u8c03\u5ea6\u548c\u8d44\u6e90\u5206\u914d \u81ea\u4e3b\u65e0\u4eba\u673a\u7740\u9646\u79fb\u52a8\u7269\u4f53\u7a7a\u4e2d\u6a21\u62df \u78b0\u649e\u907f\u514d \u5927\u6a21\u578b # DroneVQA\uff1a\u5728\u6a21\u62df\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u4e0a\u90e8\u7f72\u57fa\u4e8e Transformer \u7684\u89c6\u89c9\u95ee\u7b54 (VQA) \u4eba\u5de5\u667a\u80fd\u6a21\u578b\u8fdb\u884c\u89c6\u89c9\u68c0\u67e5 - \u901a\u8fc7\u6bd4\u8f83\u7b54\u6848\u51c6\u786e\u6027\u3001\u4e3b\u9898\u7406\u89e3\u3001\u5904\u7406\u901f\u5ea6\u548c\u6a21\u578b\u8bad\u7ec3\u6539\u8fdb\u7b49\u5173\u952e\u56e0\u7d20\uff0c\u6bd4\u8f83\u5f00\u6e90\u6a21\u578b\u7684\u6027\u80fd\u4ee5\u53ca\u5728\u65e0\u4eba\u673a\u5e94\u7528\u4e2d\u8fdb\u884c\u5fae\u8c03\u7684\u96be\u6613\u7a0b\u5ea6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u865a\u62df\u73af\u5883\u4e2d\u9a7e\u9a76\u65e0\u4eba\u673a\uff0c\u5e76\u6839\u636e\u65e0\u4eba\u673a\u6444\u50cf\u5934\u7684\u62cd\u6444\u5185\u5bb9\u63d0\u51fa\u95ee\u9898\u3002\u751f\u6210\u4e86\u53ef\u89e3\u91ca\u7684\u4eba\u5de5\u667a\u80fd (XAI) \u7ed3\u679c\u53ef\u89c6\u5316\u6548\u679c\uff0c\u4ece\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u7684\u89d2\u5ea6\u5c55\u793a\u63d0\u4f9b\u7684\u63d0\u793a\u548c\u56fe\u50cf\uff0c\u7a81\u51fa\u663e\u793a\u5f71\u54cd\u6a21\u578b\u7ed3\u8bba\u7684\u5173\u952e\u56e0\u7d20\u4ee5\u53ca\u6700\u4f73\u7b54\u6848\u7684\u6743\u91cd\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u9009\u62e9\u6a21\u62df\u73af\u5883\u5929\u6c14\u6548\u5e94\uff0c\u4f8b\u5982\u96e8\u3001\u96ea\u3001\u7070\u5c18\u548c\u96fe\uff0c\u4ee5\u53ca\u955c\u5934\u6a21\u7cca\u3001\u50cf\u7d20\u635f\u574f\u548c\u65ad\u7ebf\u7b49\u6444\u50cf\u5934\u7f3a\u9677 AerialVLN: \u57fa\u4e8e\u89c6\u89c9\u548c\u8bed\u8a00\u5bfc\u822a\u7684\u65e0\u4eba\u673a\u9879\u76ee - \u63d0\u4f9b 25 \u4e2a\u57ce\u5e02\u7ea7\u573a\u666f\uff0c\u56fe\u50cf\u903c\u771f FlightGPT\uff1a\u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u4ee3\u7406 \u751f\u6210\u5f0f\u6570\u5b57\u5b6a\u751f\u6280\u672f\u7528\u4e8e\u6301\u7eed\u589e\u5f3a\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u7684\u9884\u671f\u529f\u80fd\u5b89\u5168\u6027 \u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u5f15\u5bfc\u7684\u5355\u76ee\u89c6\u89c9\u65e0\u4eba\u673a\u5bfc\u822a - \u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff08Google Gemini Flash \u6a21\u578b\uff09\u5f00\u53d1\u4e86\u4e00\u5957\u57fa\u4e8e\u5355\u76ee\u89c6\u89c9\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u4e0e\u907f\u969c\u7cfb\u7edf\u3002\u524d\u7f6e\u6444\u50cf\u5934\u6355\u6349\u7684 RGB \u56fe\u50cf\u901a\u8fc7 Depth-Anything \u7b97\u6cd5\u5904\u7406\u6210\u6df1\u5ea6\u56fe\u3002\u751f\u6210\u7684\u6df1\u5ea6\u56fe\u968f\u540e\u88ab\u8f6c\u5316\u4e3a\u4e09\u4e2a\u79bb\u6563\u52a8\u4f5c\u3002 \u591a\u667a\u80fd\u4f53 # \u57fa\u4e8e\u71b5\u7684\u591a\u667a\u80fd\u4f53\u65e0\u4eba\u673a\u5206\u5e03\u5f0f\u884c\u4e3a\u5efa\u6a21 \u591a\u4ee3\u7406\u8def\u7531 - \u4e00\u4e2a\u901a\u8fc7\u4f7f\u7528\u5bfc\u822a\u5e93\u6765\u63a7\u5236\u591a\u67b6\u65e0\u4eba\u673a\u7684\u5f00\u53d1\u5e93 BJTU_MultipleDrone \u65e0\u4eba\u673a\u96c6\u7fa4swarmVQA \u5355\u6444\u50cf\u5934\uff08\u5355\u76ee\uff09\u5b9e\u73b0\u591a\u4e2a UAS \u4ee3\u7406\u7684\u7fa4\u96c6/\u805a\u96c6\u884c\u4e3a \u7aef\u5230\u7aef # \u5229\u7528\u795e\u7ecf\u7f51\u7edc\u98de\u8d8a\u72ed\u7a84\u7f1d\u9699 - \u4e00\u79cd\u7aef\u5230\u7aef\u7684\u89c4\u5212\u548c\u63a7\u5236\u65b9\u6cd5 \u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60 (TL) \u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u51cf\u5c11\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u81ea\u4e3b\u5bfc\u822a\u6240\u9700\u7684\u673a\u8f7d\u8ba1\u7b97\u91cf - \u5bf9\u7f51\u7edc\u8fdb\u884c\u7aef\u5230\u7aef\u8bad\u7ec3\u3002\u8fd9\u4e9b\u8bad\u7ec3\u597d\u7684\u5143\u6743\u91cd\u968f\u540e\u5728\u6a21\u62df\u6d4b\u8bd5\u73af\u5883\u4e2d\u7528\u4f5c\u7f51\u7edc\u7684\u521d\u59cb\u5316\u5668\uff0c\u5e76\u9488\u5bf9\u6700\u540e\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5fae\u8c03\u3002\u4e3a\u4e86\u9a8c\u8bc1\u8be5\u65b9\u6cd5\u7684\u9c81\u68d2\u6027\uff0c\u6211\u4eec\u6a21\u62df\u4e86\u65e0\u4eba\u673a\u52a8\u529b\u5b66\u548c\u73af\u5883\u7279\u6027\u7684\u53d8\u5316\u3002\u5305\u542b\u771f\u5b9eDJI Tello \u65e0\u4eba\u673a\u4e0a \u5e73\u53f0 # \u4f7f\u65e0\u4eba\u673a\u80fd\u591f\u4f7f\u7528\u673a\u8f7d\u6444\u50cf\u5934\u8bc6\u522b\u5e76\u8ddf\u8e2a\u5176\u89c6\u91ce\u8303\u56f4\u5185\u7684\u4eba\u5458\uff0c\u4ece\u800c\u8ddf\u8e2a\u4ed6\u4eec\u7684\u8fd0\u52a8 - \u5229\u7528\u8be5\u5e73\u53f0\u5f00\u53d1\u96c6\u6210\u8ba1\u7b97\u673a\u89c6\u89c9\u6280\u672f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u5229\u7528\u5176\u8f93\u5165\u6765\u63a7\u5236\u65e0\u4eba\u673a\u7684\u8fd0\u52a8 \u591a\u65cb\u7ffc\u673a\u5668\u4eba\u8bbe\u8ba1\u56e2\u961f\u76842020\u5e74\u56fd\u9645\u7a7a\u4e2d\u673a\u5668\u4eba\u7ade\u8d5b\u4ee3\u7801 Yandex Calendar Bot \u662f\u4e00\u6b3e\u5f02\u6b65 Telegram \u673a\u5668\u4eba COMP 361 - \u6700\u7ec8\u9879\u76ee \u65e0\u4eba\u673a-SAR\u641c\u6551 \u5c06\u5730\u9762\u6444\u5f71\u6d4b\u91cf\u6570\u636e\u4e0a\u4f20\u5230 Playground\uff0c\u6839\u636e\u56fe\u7247\u8bad\u7ec3\u65e0\u4eba\u673a\u6cbf\u8f68\u8ff9\u98de\u884c Pizzair - \u62ab\u8428\u9001\u8d27\u65e0\u4eba\u673a\u5e94\u7528\u7a0b\u5e8f - \u4e24\u4e2a Readme \u6587\u4ef6\uff1a\u4e00\u4e2a\u7528\u4e8e\u65e0\u4eba\u673a\u63a7\u5236\u8f6f\u4ef6\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e Web \u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\u65e0\u4eba\u673a\u5c06\u62ab\u8428\u9001\u5230\u987e\u5ba2\u624b\u4e2d\uff0c\u987e\u5ba2\u53ef\u4ee5\u901a\u8fc7\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0b\u5355\u5e76\u4e0e\u62ab\u8428\u914d\u9001\u65e0\u4eba\u673a\u8fdb\u884c\u901a\u4fe1\u3002 \u65e0\u4eba\u673a\u914d\u9001\u7cfb\u7edf - \u96c6\u6210\u4e86 AirSim \u548c Ubuntu \u4e0a\u7684 PX4\u3002\u5b83\u5141\u8bb8\u60a8\u63a7\u5236\u65e0\u4eba\u673a\u3001\u8bbe\u7f6e\u53d6\u8d27\u548c\u914d\u9001\u5730\u70b9\u4ee5\u53ca\u6267\u884c\u5404\u79cd\u4efb\u52a1\u3002\u8be5\u7cfb\u7edf\u4f7f\u7528 Django \u4f5c\u4e3a Web \u754c\u9762\uff0c\u5e76\u901a\u8fc7 AirSim \u4e0e\u65e0\u4eba\u673a\u901a\u4fe1\u3002 \u8be5\u5e73\u53f0\u4e13\u4e3a AirSim \u73af\u5883\u4e2d\u7684 RL \u8bad\u7ec3\u800c\u8bbe\u8ba1\uff0c\u5e76\u57fa\u4e8eStable-Baselines3\u6784\u5efa - \u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u5207\u6362\u673a\u5236\u548c\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u7528\u6237\u53ef\u4ee5\u6309\u7167\u8bf4\u660e\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u8be5\u5e73\u53f0 \u540d\u4e3a\u201cEmbodied City\u201d\u7684\u5168\u65b0\u57fa\u51c6\u5e73\u53f0\uff0c\u7528\u4e8e\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u5177\u8eab\u667a\u80fd - \u5305\u542b\u4e00\u4e2a\u6a21\u62df\u5668\u548c\u57ce\u5e02\u73af\u5883\u4e2d\u5177\u8eab\u667a\u80fd\u4ee3\u8868\u6027\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u8ba9\u7528\u6237\u4ee5\u7b80\u5355\u8f7b\u677e\u7684\u914d\u7f6e\u65b9\u5f0f\u642d\u5efa\u5b9a\u5236\u5316\u7684\u65e0\u4eba\u673a\u4f5c\u6218\u73af\u5883 \u7a7a\u4e2d\u7814\u7a76\u6a21\u62df\u4f5c\u6218 \u7528\u4e8e FPV \u6218\u6597\u65e0\u4eba\u673a\uff08\u6a21\u62df\u5668\u7248\u672c\uff09\u7684\u5e26\u76ee\u6807\u8ddf\u8e2a\u529f\u80fd\u7684\u81ea\u52a8\u9a7e\u9a76\u4eea \u7528\u4e8e\u641c\u7d22\u548c\u6551\u63f4\u884c\u52a8\u7684\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a\u7cfb\u7edf\u9879\u76ee \u65e0\u4eba\u673a\u89c6\u89c9\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u73af\u5883\u53ca\u8bad\u7ec3\u4ee3\u7801 - \u5305\u542b\u5956\u52b1\u7ed3\u6784\u4f18\u5316\u3001\u8c03\u8bd5\u65e5\u5fd7\u4e0e\u9ad8\u53ef\u7ef4\u62a4\u6027\u7ed3\u6784 AeroSynapse\uff1a\u81ea\u4e3b\u9690\u5f62\u65e0\u4eba\u673a\u5e73\u53f0 \u4f7f\u7528 AirSim \u8fdb\u884c\u519c\u4e1a\u65e0\u4eba\u673a\u6a21\u62df OpenFly\u5e73\u53f0 - \u901a\u8fc7\u63d0\u4f9b\u9ad8\u5ea6\u81ea\u52a8\u5316\u7684\u6570\u636e\u6536\u96c6\u5de5\u5177\u94fe\u548c\u5927\u89c4\u6a21\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u63a8\u52a8\u6237\u5916\u7a7a\u4e2d\u89c6\u89c9\u8bed\u8a00\u5bfc\u822a (VLN) \u7684\u7814\u7a76\u3002\u5b83\u5305\u542b 10 \u4e07\u6761\u4e0d\u540c\u7684\u98de\u884c\u8f68\u8ff9\u3001\u4f7f\u7528\u5c16\u7aef\u6e32\u67d3\u6280\u672f\u751f\u6210\u7684\u9ad8\u8d28\u91cf\u89c6\u89c9\u6570\u636e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5173\u952e\u5e27\u611f\u77e5\u7684 VLN \u6a21\u578b OpenFly-Agent \u5d4c\u5165\u5f0f\u65e0\u4eba\u673a\u63a7\u5236\u7cfb\u7edf\u5177\u6709\u57fa\u4e8e LiDAR \u7684\u7269\u4f53\u68c0\u6d4b\u3001\u5b9e\u65f6\u5bfc\u822a\u548c\u7cbe\u786e\u7740\u9646\u529f\u80fd \u6570\u636e # \u751f\u6210\u6267\u884c\u5668\u6545\u969c\u4e0b\u7684\u65e0\u4eba\u673a\u4f20\u611f\u5668\u6570\u636e - \u4e3a\u4e86\u5f00\u53d1\u548c\u8bc4\u4f30\u57fa\u4e8e\u89c6\u89c9\u7684 FDD \u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u9700\u8981\u4e00\u4e2a\u5305\u542b\u6b63\u5e38\u98de\u884c\u548c\u6545\u969c\u573a\u666f\u4e0b IMU \u548c\u6444\u50cf\u5934\u8f93\u51fa\u7684\u6570\u636e\u96c6\u3002\u4ecb\u7ecd\u4e86 UUFOSim\uff08\u865a\u5e7b\u65e0\u4eba\u673a\u6545\u969c\u6ce8\u5165\u6a21\u62df\u5668\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e AirSim \u6784\u5efa\u7684\u6570\u636e\u6536\u96c6\u6d41\u7a0b\uff0c\u7528\u4e8e\u6536\u96c6\u57ce\u5e02\u73af\u5883\u4e2d\u6267\u884c\u5668\u6545\u969c\u7684\u5408\u6210\u98de\u884c\u6570\u636e AirSim \u6570\u636e\u6536\u96c6 \u4f20\u611f\u5668\u6570\u636e\u6536\u96c6 \u751f\u6210\u6570\u636e\u548c\u5bf9\u5e94\u7684Ground Truth - \u5305\u62ecRGB\u76f8\u673a\u3001\u6807\u51c6\u5316\u5dee\u5f02\u6570\u636e\u30013D \u70b9\u4e91 \u6570\u636e\u6536\u96c6\u6559\u7a0b - \u5305\u62ec\u84dd\u56fe\u8bf4\u660e\u3001 \u4f7f\u7528 AirSim \u8fdb\u884c 3D \u70b9\u4e91\u91cd\u5efa \u5728AirSim\u4e2d\u64cd\u7eb5\u65e0\u4eba\u673a\u5e76\u5728\u8bad\u7ec3\u671f\u95f4\u63d0\u53d6\u56fe\u50cf/\u89c6\u9891\u7684\u6982\u5ff5\u9a8c\u8bc1 \u751f\u6210\u65e0\u4eba\u673a\u56fe\u50cf\u548c\u503e\u659c\u6a21\u578b \u9002\u7528\u4e8eVLN\u6570\u636e\u96c6\u7684\u6ce8\u91ca\u8f6f\u4ef6\uff0c\u7528\u4e8e\u6ce8\u91ca\u6bcf\u4e2a\u5bfc\u822a\u6b65\u9aa4\u6307\u4ee4\u4e2d\u7684\u5f15\u7528\u5bf9\u8c61 \u7528\u4e8e YOLOv5-6D \u6a21\u578b\u7684 3D \u5bf9\u8c61\u68c0\u6d4b\u6570\u636e\u96c6\u751f\u6210\u5668 \u8f93\u5165 sfm \u7a00\u758f\u70b9\u4e91\u6570\u636e\u7684\u4ee3\u7406\u91cd\u5efa InfluxDB \u4e2d\u7684\u65e0\u4eba\u673a AI \u6570\u636e\u6536\u96c6\u8f6f\u4ef6 \u5305\u62ec\u521b\u5efa\u6570\u636e\u3001\u6a21\u578b\u7cbe\u8c03\u3001\u9884\u6d4b - \u5305\u62eccityenviron\u7684\u56fe\u7247\u6570\u636e\u96c6 airsim-nerf \u4e09\u4f4d\u91cd\u5efa DiverSim\u7528\u4e8e\u751f\u6210\u6ce8\u91cd\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u7684\u5408\u6210\u884c\u4eba\u6570\u636e - \u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce 5 \u6784\u5efa\uff0c\u53ef\u521b\u5efa\u5747\u8861\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u6bd4\u4f8b\u7684\u6027\u522b\u3001\u79cd\u65cf\u548c\u6b8b\u969c\u4eba\u58eb\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5404\u79cd\u6a21\u62df\u53c2\u6570\uff0c\u5305\u62ec\u5927\u6c14\u6761\u4ef6\u3001\u9c7c\u773c\u76f8\u673a\u53c2\u6570\u548c\u884c\u4eba\u7279\u5f81\uff0c\u6570\u636e\u5219\u4ee5ASAM OpenLABEL\u683c\u5f0f\u8fdb\u884c\u6ce8\u91ca \u5de5\u5177 # \u9002\u7528\u4e8e AirSim Multirotor \u6a21\u62df\u5668\u7684 OpenAI Gym \u73af\u5883 \u65e0\u4eba\u673a\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u5e94\u7528\u7684\u53ef\u7f16\u7a0b\u5f15\u64ce\uff08PEDRA-2.0\uff09 - \u5176\u4ed6 \u76f8\u4f3c\u9879\u76ee OpenAI Gym \u7684 AirSim \u63a5\u53e3 - \u652f\u6301\u4e24\u79cd\u65e0\u4eba\u673a\u63a7\u5236\u7c7b\u578b\uff1a\u79bb\u6563\u4f4d\u7f6e\u63a7\u5236\u548c\u8fde\u7eed\u901f\u5ea6\u63a7\u5236 Azure \u4e0a\u7684 AirSim \u5f00\u53d1\u73af\u5883 GazePointer: \u5305\u542b\u8981\u4f7f\u7528\u7684\u5305\u5217\u8868 Airsim + Python + Docker \u793a\u4f8b - \u5305\u62ec ROS2 + Docker turtlesim \u793a\u4f8b FLS\uff08\u98de\u884c\u5149\u6591\uff09\u663e\u793a\u5668 - \u80fd\u591f\u901a\u8fc7\u5360\u636e\u7a7a\u95f4\u4e2d\u7684\u7269\u7406\u4f53\u79ef\u6765\u5448\u73b0\u771f\u5b9e\u6216\u865a\u62df\u7684\u4e09\u7ef4\u7269\u4f53\u7684\u663e\u793a\u5668\uff0c\u6211\u4eec\u9700\u8981\u5c3a\u5bf8\u4ec5\u4e3a\u6570\u767e\u5fae\u7c73\u7684\u5fae\u578b\u65e0\u4eba\u673a\uff0c\u5e76\u914d\u5907\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u53d1\u51fa\u4e0d\u540c\u989c\u8272\u548c\u4eae\u5ea6\u7684\u5149\u6e90 \u5f55\u5236\u811a\u672c - \u7528\u4e8e\u5728 airsim \u4e2d\u8bb0\u5f55\u5404\u79cd SLAM \u5b9e\u9a8c\u7684\u6570\u636e\u96c6\uff1b\u7528\u4e8e\u5728\u7ed9\u5b9a\u8def\u5f84\u4e0a\u98de\u884c\u65e0\u4eba\u673a\u5e76\u8bb0\u5f55\u8ddf\u8e2a\u4ee5\u521b\u5efa\u6570\u636e\u96c6\u7684\u811a\u672c \u5728\u73af\u5883 3D \u5c0f\u8bf4\u548c\u6570\u5b57\u56fe\u50cf\u4e2d\u6a21\u62df\u50cf\u7d20\u76f4\u63a5\u5730\u7406\u53c2\u8003 Docker\u542f\u52a8\u6d4f\u89c8\u5668 \u8f7b\u677e\u5c06 Airsim \u6a21\u62df\u5668\u4e0e\u5176\u4ed6\u5de5\u5177\u96c6\u6210\u7684\u5de5\u5177 \u4e0e AJAN Agent System \u7684 Airsim \u8fdb\u884c\u901a\u4fe1\u7684 Python API Resnet8 - \u5305\u62ec\u6570\u636e\u6536\u96c6\u3001\u8bad\u7ec3\u3001\u8bc4\u6d4b \u4e0e\u8bad\u7ec3\u73af\u5883 IPT \u76f8\u5173\u7684\u6587\u4ef6\u7684\u8f6f\u4ef6\u4ed3\u5e93 - \u7528\u4e8e\u521b\u5efa Eagle Enterprises \u8bad\u7ec3\u73af\u5883\u7684\u6240\u6709\u63d2\u4ef6\u6587\u4ef6\u3001\u865a\u5e7b\u8d44\u6e90\u548c\u865a\u5e7b\u84dd\u56fe\u6587\u4ef6 \u65e0\u4eba\u673a\u6d4b\u8bd5 \u5305\u88c5\u5e76\u4f7f\u7528 Airsim \u7684\u6444\u50cf\u5934\u548c\u6fc0\u5149\u96f7\u8fbe\u4e0e ROS 2 \u8fdb\u884c\u4ea4\u4e92 \u5c06 Airsim \u4e0e ROS2 \u8fde\u63a5\u8d77\u6765 - \u901a\u8fc7\u5728\u540e\u7aef\u8fd0\u884c JSBSim \u5e76\u4f7f\u7528\u6765\u81ea airsim \u7684 MovePosition api \u6765\u79fb\u52a8\u76f8\u673a pawn \u6765\u5b8c\u6210\u7684 SOS-Match ROS \u8282\u70b9 \u5730\u56fe # \u57fa\u4e8e\u56fe\u50cf\u7684\u65e0\u4eba\u673a3D\u5730\u56fe\u6784\u5efa\u7cfb\u7edf \u63a8\u7406\u6a21\u62df\u73af\u5883\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u610f\u6295\u5f71\u7cfb\u7edf - \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u7684\u5fb7\u56fd\u7ef4\u6ed5\u4e00\u5c0f\u5757\u8857\u533a\u7684\u793a\u4f8b\u3002\u6a21\u62df\u73af\u5883\u662f\u4e00\u4e2a\u57fa\u4e8e OSM \u7684\u5730\u7406\u53c2\u8003\u4e16\u754c\uff0c\u91c7\u7528 UTM32N \u6295\u5f71\u5750\u6807\u7cfb\u3002\u901a\u8fc7 GPS \u4f4d\u7f6e\u63a7\u5236\u56db\u65cb\u7ffc\u98de\u884c\u5668\u964d\u843d\u5728\u5efa\u7b51\u7269\u4e0a\u3002 \u6784\u5efa\u4e86\u4e00\u4e9b\u73af\u5883 \u6bd4\u8d5b # \u65b9\u7a0b\u5f0f\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66 - \u5305\u62ec\u7d20\u6750\u6784\u5efa\u6d41\u7a0b\u3001\u6a21\u4eff\u5b66\u4e60\uff08TODO\uff09 \u5b9a\u5236\u63a7\u5236\u7cfb\u7edf\u7684\u65e0\u4eba\u673a \u65b9\u7a0b\u5f0f\u8d5b\u8f66 \u65e0\u4eba\u673a\u6559\u5b66\u4eff\u771f \u65e0\u4eba\u673a\u5728\u72ed\u7a84\u503e\u659c\u7f1d\u9699\u4e2d\u5feb\u901f\u98de\u884c - \u672c\u79d1\u8bba\u6587 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u4e3a 2023-2024 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u8bbe\u8ba1\u7684\u6a21\u62df\u73af\u5883 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u53c2\u52a0 2025 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u7684\u4ee3\u7801 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u4e3a 2023-2024 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u8bbe\u8ba1\u7684\u6a21\u62df\u73af\u5883 \u7814\u7a76 # \u8d44\u6e90\u611f\u77e5\u5206\u5e03\u5f0f\u8d2a\u5a6a\u7b97\u6cd5 (RAG) - \u4e00\u79cd\u7528\u4e8e\u673a\u5668\u4eba\u7f51\u72b6\u7f51\u7edc\u4e2d\u5206\u5e03\u5f0f\u5b50\u6a21\u4f18\u5316\u7684\u9ad8\u6548\u901a\u4fe1\u548c\u8ba1\u7b97\u65b9\u6cd5 \u5b9a\u5236 # \u8fdb\u884c\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6253\u9020\u4e86\u4e00\u6b3e\u53ef\u4ee5\u540c\u65f6\u63a7\u5236\u98de\u673a\u548c\u6c7d\u8f66\u6a21\u578b\u7684\u591a\u4eba\u6e38\u620f \u65f6\u7a7a\u53d8\u5316\u98ce\u652f\u6301\u6240\u505a\u7684\u66f4\u6539 Colosseum\uff0cAirSim\u7684\u7ee7\u4efb\u8005 \u589e\u52a0\u4e86\u4e00\u4e2a\u5b8f\uff0c\u7528\u4e8e\u5b9e\u73b0\u4e0d\u540c\u7684sleep\u7b56\u7565 - \u4ee5\u6216\u591a\u6216\u5c11\u7684\u8ba1\u65f6\u7cbe\u786e\u6027\u4e3a\u4ee3\u4ef7\uff0c\u6539\u8fdbAirSim\u5728\u591a\u673a\uff08>20 in i7-12700\uff09\u4eff\u771f\u4e0b\u7684\u6027\u80fd\u8868\u73b0\u3002 \u5f20\u5bb6\u754c\u5730\u56fe \u3001 \u4e3a\u6240\u6709\u5730\u56fe\u6dfb\u52a0F10 \u7b49 \u6dfb\u52a0\u96f7\u8fbe\u4f20\u611f\u5668 \u6dfb\u52a0/\u66f4\u65b0\u4e86\u96c6\u4e2d\u5f0f linting \u5de5\u4f5c\u6d41\u7a0b \u4fee\u6539 AirSim \u7684\u5206\u652f\u4ee5\u4e0e\u5b9a\u5236\u7684 Unity \u6a21\u62df\u5668\u914d\u5408\u4f7f\u7528 - \u53ef\u4f5c\u4e3a AIFS \u519c\u7528\u98de\u884c\u6a21\u62df\u5668\u7684\u5b50\u6a21\u5757\u4f7f\u7528 \u7528\u4e8e\u519c\u4e1a\u73af\u5883\u98de\u884c\u7684AIFS\u6a21\u62df\u5668 - \u57fa\u4e8eHiPeRLab\u3001Helios\u548cAirSim\u7684\u4ee3\u7801\uff0c\u65e8\u5728\u5e2e\u52a9\u6d4b\u8bd5\u5728\u5305\u542b\u9ad8\u4fdd\u771f\u519c\u4e1a\u7279\u5f81\u7684\u6a21\u62df\u73af\u5883\u4e2d\u4e0d\u540c\u7684\u81ea\u4e3b\u98de\u884c\u7b56\u7565\uff08\u57fa\u4e8eUnity\uff09 ROS2 humble \u548c Ubuntu 22.04 \u517c\u5bb9 classicvalues airsim_first \u538b\u7f29\u56fe\u7247 Ubuntu-20.04 \u4e0a\u7684 Airsim - \u52bf\u573a\u3001\u81ea\u5df1\u7684\u573a\u666f AirSim_PPO AirSimDevVerison - clang-12 error fixed \u4e07\u5411\u8282\u8ddf\u8e2a\u5668\u6dfb\u52a0\u9700\u8981\u4fee\u590d pid \u63a7\u5236 \u89c6\u89c9\u903c\u771f\u7684\u6c34\u4e0b\u673a\u5668\u4eba\u6a21\u62df\u5668 UNav-Sim - \u57fa\u4e8e\u865a\u5e7b5 \u4eba # \u591a\u6a21\u6001\u4eba\u673a\u4ea4\u4e92\uff08Human-in-the-loop, HITL\uff09\u5b66\u4e60 - \u6574\u5408\u773c\u795e\u6ce8\u89c6\u548c\u81ea\u7136\u8bed\u8a00\uff0c\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u5b66\u4e60\u3002\u9884\u6d4b\u7684\u51dd\u89c6\u548c\u771f\u5b9e\u51dd\u89c6\u5bf9\u6bd4 \u4f7f\u7528\u4eba\u7c7b\u4ea4\u4e92\u548c\u5f3a\u5316\u5b66\u4e60\u5b9e\u65f6\u6559\u5bfc\u5b66\u4e60\u4ee3\u7406\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1 - \u5b66\u4e60\u5468\u671f\u5e94\u7528\u4e8e\u6559\u5bfc\u56db\u65cb\u7ffc\u98de\u884c\u5668\u5982\u4f55\u57fa\u4e8e\u4eba\u673a\u4ea4\u4e92\u548c\u5f3a\u5316\u5b66\u4e60\u964d\u843d\u5728\u7740\u9646\u53f0\u4e0a \u4eba\u7c7b\u89d2\u8272\u88ab\u8bbe\u7f6e\u4e3a\u5728\u8bbe\u8ba1\u7684\u6837\u6761\u8def\u5f84\u4e0a\u884c\u8d70 - \u5bf9\u4e8e\u52a8\u6001\u9632\u649e\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5305\u542b\u884c\u8d70\u4eba\u7c7b\u89d2\u8272\u7684\u5730\u56fe\u6765\u6536\u96c6\u6570\u636e\uff0c\u4ee5\u8bad\u7ec3\u5f3a\u5316\u5b66\u4e60\u4ee3\u7406\uff0c\u4e3aGym \u98ce\u683c\u73af\u5883 \u8f66 # \u5bf9 Udemy \u6559\u7a0b\u300a\u5e94\u7528\u6df1\u5ea6\u5b66\u4e60\u2014\u2014\u5b8c\u6574\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u8bfe\u7a0b\u300b\u6982\u5ff5\u6d41\u7a0b\u7684\u6d4b\u8bd5 - \u4f7f\u7528 Keras\uff08Tensorflow \u7684\u5305\u88c5\u5668\uff09\u6559\u6c7d\u8f66\u5982\u4f55\u81ea\u52a8\u9a7e\u9a76 \u6d4b\u8bd5 Airsim API\uff0c\u5e76\u8bad\u7ec3\u6c7d\u8f66\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u67e5\u627e\u548c\u5bfc\u822a\u5230\u7269\u4f53 \u81ea\u52a8\u8d5b\u8f66\u7684\u5f3a\u5316\u5b66\u4e60 - \u4f7f\u7528\u8f6f\u6f14\u5458\u8bc4\u8bba\u5bb6 (SAC) \u7b97\u6cd5\u548c\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668 (VAE)\u3002 \u4f7f\u7528 TensorFlow \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u4ee5\u53ca\u6267\u884c\u5b9e\u65f6\u78b0\u649e\u68c0\u6d4b\u548c\u591a\u8f66\u6a21\u62df \u901a\u7528 ROS2 \u5305\uff0c\u7528\u4e8e\u4f7f\u7528\u4e0d\u540c\u7684 API \u63a7\u5236\u5404\u79cd\u6a21\u62df\u4e2d\u7684\u8f66\u8f86 \u5229\u7528\u8d85\u5206\u8fa8\u7387\u6280\u672f\u5b9e\u73b0\u6c7d\u8f66\u5e94\u7528\u7684\u5feb\u901f\u7acb\u4f53\u6444\u50cf\u673a\u6a21\u62df - \u4e00\u79cd\u5229\u7528\u7acb\u4f53\u8d85\u5206\u8fa8\u7387 (SSR) \u52a0\u901f\u7acb\u4f53\u76f8\u673a\u6a21\u62df\u7684\u65b9\u6cd5 \u7aef\u5230\u7aef\u81ea\u52a8\u9a7e\u9a76 \u7528\u4e8e\u56fe\u50cf\u8bc6\u522b\u7684\u53d8\u5206\u91cf\u5b50\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u786e\u5b9a\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u8f6c\u5411\u89d2 \u7b26\u5408\u4efb\u52a1\u89c4\u8303\u7684\u673a\u5668\u4eba\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u6062\u590dAirSim PX4 ArduPilot Python \u5e73\u53f0 - \u8bba\u6587\u201cSpecGuard\uff1a\u9762\u5411\u7269\u7406\u653b\u51fb\u7684\u673a\u5668\u4eba\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u89c4\u8303\u611f\u77e5\u6062\u590d\u201d\u7684\u4ee3\u7801 \u91c7\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66 \u4ece\u6807\u7b7e\uff08\u7531\u6fc0\u5149\u96f7\u8fbe\u6587\u4ef6\u751f\u6210\uff09\u4e2d\u63d0\u53d6 GPS \u6570\u636e\uff0c\u8fd0\u884c\u6a21\u62df\u5e76\u4f7f\u7528 PID \u63a7\u5236\u5668\u63a7\u5236\u6c7d\u8f66 \u673a\u5668\u4eba # \u57fa\u4e8e\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u591a\u673a\u5668\u4eba\u6709\u6548\u8f7d\u8377\u8fd0\u8f93 - \u573a\u666f\u6709\u4e24\u79cd\uff1a\u4e00\u4e2a\u662f\u5c01\u95ed\u7a7a\u95f4\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u76ee\u6807\uff1b\u53e6\u4e00\u4e2a\u662f\u673a\u5668\u4eba\u643a\u5e26\u6709\u6548\u8f7d\u8377\u524d\u5f80\u7684\u72ed\u7a84\u901a\u9053 \u6742\u9879 # \u667a\u80fd\u56fe\u5f62\u5b66\u4e60\u52a9\u624b \u4e0e AirSim \u914d\u5408\u4f7f\u7528\u7684\u811a\u672c \u6570\u636e\u751f\u6210 Backend - \u76f8\u540c\u4ed3\u5e93 Flying Cavalry CAPSTONE FlashTrans Flask_news_app \u65e0\u4eba\u673a\u7814\u7a76\u81ea\u52a8\u8ba4\u8bc1\u673a\u5668\u5b66\u4e60\u6a21\u578b caviar camelmera CASE22_Collision_VS QR-Detection-Game-RL test Salli_work cs4756 m2g_racing airSim_Drone Autonomous-Drone - PEDRA \u7531 Aqeel Anwar \u5f00\u53d1\u3002\u5bf9\u6a21\u578b\u8bad\u7ec3\u914d\u7f6e\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4ee5\u7b80\u5316\u548c\u8bad\u7ec3\u81ea\u4e3b\u6a21\u578b\u3002","title":"\u4f7f\u7528AirSim\u7684\u9879\u76ee"},{"location":"third/used_by/#airsim","text":"","title":"\u4f7f\u7528AirSim\u7684\u9879\u76ee"},{"location":"third/used_by/#_1","text":"","title":"\u98de\u884c\u5668"},{"location":"third/used_by/#_2","text":"\u4ece\u6a21\u62df\u73af\u5883\u6536\u96c6\u7684\u91cc\u7a0b\u8ba1\u6570\u636e - \u6bd4\u8f83\u6700\u5c0f\u4e8c\u4e58\u4f30\u8ba1\u5668\uff08LSQ\uff09\u548c\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\uff08EKF\uff09\u8fdb\u884c\u4f20\u611f\u5668\u878d\u5408 P-Agent\uff1a\u4f7f\u7528 Pedras \u548c AirSim \u8bad\u7ec3\u81ea\u4e3b\u4ee3\u7406\u8bc6\u522b\u5e76\u83b7\u53d6\u5305\u88f9 \u5c4b\u9876\u7740\u9646 - \u878d\u5408 Polylidar3D \u548c\u6df1\u5ea6\u5b66\u4e60\uff0c\u4ece 3D \u70b9\u4e91\u4e2d\u8bc6\u522b\u5e73\u9762 \u5728\u5fae\u8f6f Airsim \u4e0a\u5b9e\u73b0 VINS-Mono SLAM \u901a\u8fc7\u4fe1\u606f\u8def\u5f84\u89c4\u5212\u5b9e\u73b0\u8bed\u4e49\u5206\u5272\u7684\u5177\u8eab\u4e3b\u52a8\u9886\u57df\u81ea\u9002\u5e94 \u4f7f\u7528\u5b9e\u65f6\u56fe\u50cf\u5206\u7c7b\u8fdb\u884c\u65e0\u4eba\u673a\u5bfc\u822a \u4f7f\u7528\u5149\u6d41\u548c\u6269\u5c55\u7126\u70b9 (Focus of Expansion) \u5bf9\u5fae\u578b\u98de\u884c\u5668 (MAV) \u8fdb\u884c\u57fa\u4e8e\u8fd0\u52a8\u7684\u7269\u4f53\u68c0\u6d4b \u57fa\u4e8e\u624b\u52bf\u7684\u4ea4\u4e92\u5f0f\u65e0\u4eba\u673a\u7fa4\u4f53\u63a7\u5236\uff08HGI\uff09\u5e73\u53f0 \u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u7528\u6237\u4f7f\u7528\u624b\u52bf\u63a7\u5236 Airsim \u65e0\u4eba\u673a \u5229\u7528\u5b66\u4e60\u63a7\u5236\u7b56\u7565\u5bf9\u79fb\u52a8\u76ee\u6807\u8fdb\u884c\u4e3b\u52a8\u5206\u7c7b PEDRA \u589e\u5f3a\u4e86\u57fa\u4e8e\u4e8b\u4ef6\u7684\u89c6\u89c9\uff0c\u9002\u7528\u4e8e\u65e0\u4eba\u673a\u5e73\u53f0\u7684\u6df7\u5408\u4e8b\u4ef6 + \u5e27\u5904\u7406\u5e94\u7528 \u57fa\u4e8e\u65e0\u4eba\u673a\u667a\u80fd\u822a\u7ebf\u89c4\u5212\u4e0e \u6444\u50cf\u7684\u5efa\u7b51\u5e55\u5899\u56fe\u50cf\u91c7\u96c6\u6280\u672f - \u9488\u5bf9\u5efa\u7b51\u5e55\u5899\u51fa\u73b0\u7684\u9762\u677f\u7834\u635f\u8131\u843d\u3001\u79fb\u4f4d\u53d8\u5f62\u7b49\u95ee\u9898\u53ca\u707e\u540e\u7684\u5e94\u6025\u6027\u5feb\u901f\u5b89\u5168\u68c0\u6d4b\uff0c\u5229\u7528\u65e0\u4eba\u673a\u642d\u8f7d\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u8003\u8651\u70df\u96fe\u6c61\u6e0d\u3001\u73af\u5883\u5f71\u50cf\u7684\u6295\u5c04\u548c\u5012\u5f71\u7b49\u56e0\u7d20\u5bf9\u68c0\u6d4b\u7ed3\u679c\u7684\u5e72\u6270\u8bc6\u522b \u4e3b\u52a8 SLAM VNAV 2023 \u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\u751f\u6210\u5668\uff08YOLO \u683c\u5f0f\uff09\u548c\u4e00\u4e9b\u83b7\u53d6\u63a8\u7406\u7ed3\u679c\u7684\u65b9\u6cd5 \u4eba\u8138\u8bc6\u522b&\u8ddf\u8e2a\u4eba - \u4f7f\u7528 YOLOv8 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4eba\u7269\uff0c\u4f7f\u7528 OpenCV \u68c0\u6d4b\u4eba\u8138\uff0c\u4f7f\u7528 DeepFace \u8bc6\u522b\u4eba\u7269\uff0c\u5e76\u98de\u8fd1\u7528\u6237\u4ece\u89c6\u9891\u6e90\u4e2d\u9009\u62e9\u7684\u76ee\u6807\uff0c\u7cfb\u7edf\u4f1a\u8bf4\u51fa\u6b64\u4eba\u7684\u59d3\u540d\u5e76\u5728\u5730\u56fe\u4e0a\u663e\u793a\u4ed6\u4eec\u7684\u4f4d\u7f6e \u9632\u649e\u65e0\u4eba\u673a - \u5b9e\u65f6\u65e0\u4eba\u673a\u9632\u649e\u7cfb\u7edf\u4f7f\u7528 YOLOv8 \u8ba1\u7b97\u673a\u89c6\u89c9\u68c0\u6d4b\u969c\u788d\u7269\u5e76\u5b9e\u65bd\u4e09\u533a\u5b89\u5168\u534f\u8bae\uff08\u7d27\u6025\u3001\u5173\u952e\u548c\u6807\u51c6\uff09\uff0c\u4ee5\u786e\u4fdd\u5728\u52a8\u6001\u73af\u5883\u4e2d\u5b89\u5168\u5bfc\u822a \u4e00\u6b3e\u89c6\u89c9\u6548\u679c\u60ca\u8273\u7684\u706b\u7130\u7ea2\u5916\u6a21\u62df\u5668\uff0c\u7528\u4e8e SLAM \u548c\u611f\u77e5 \u80fd\u591f\u5728\u4e0d\u540c\u573a\u666f\u4e2d\u63a2\u6d4b\u706b\u707e\u7684\u65e0\u4eba\u673a","title":"\u611f\u77e5"},{"location":"third/used_by/#_3","text":"\u5728\u590d\u6742\u672a\u77e5\u73af\u5883\u4e0b\u8bad\u7ec3\u65e0\u4eba\u673a\u5bfc\u822a\u7b56\u7565\u7684\u5e73\u53f0 \u8702\u7a9d\u8f85\u52a9\u65e0\u4eba\u673a\u8f68\u8ff9\u751f\u6210\uff0c\u5b9e\u73b0\u6700\u4f73\u7f51\u7edc\u8d28\u91cf \u79fb\u52a8\u673a\u5668\u4eba\u5728\u4e3b\u52a8\u611f\u77e5\u8986\u76d6\u8def\u5f84\u89c4\u5212\u65b9\u6848\u4e2d\u7684\u8def\u5f84\u89c4\u5212 - \u57fa\u4e8e\u5728\u7ebf\u63a5\u6536\u7684\u5df2\u6355\u83b7\u56fe\u50cf\u4fe1\u606f\u8c03\u6574\u673a\u5668\u4eba\u901f\u5ea6 \u57fa\u4e8e PPO \u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u6bcf\u9694 4 \u7c73\uff0c\u65e0\u4eba\u673a\u5c31\u4f1a\u7a7f\u8fc7\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u3002\u76ee\u6807\u662f\u8ba9\u667a\u80fd\u4f53\u5728\u8fd9\u4e9b\u5f00\u53e3\u5904\u5bfc\u822a\u800c\u4e0d\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e \u57fa\u4e8ePPO\u7684\u56db\u8f74\u98de\u884c\u5668\u81ea\u4e3b\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u5176\u4e2d\u6bcf\u9694 4 \u7c73\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u4f9b\u65e0\u4eba\u673a\u7a7f\u8fc7\u3002\u9884\u671f\u662f\u667a\u80fd\u4f53\u80fd\u591f\u987a\u5229\u7a7f\u8fc7\u8fd9\u4e9b\u5f00\u53e3\u800c\u4e0d\u4f1a\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e DRL-Nav\uff1a\u57fa\u4e8e PPO \u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a - \u5305\u542b PPO\u3001SAC\u3001DQN \u548c DDPG \u7684\u5b9e\u73b0 \u9884\u6d4b\u5b89\u5168\u65b9\u5411 \u4e00\u79cd\u57fa\u4e8e\u8f7b\u91cf\u7ea7\u5b66\u4e60\u7684\u8f68\u8ff9\u4f18\u5316\u6846\u67b6 - \u6df1\u5ea6\u5b66\u4e60\u7528\u4e8e\u4f18\u5316\u56db\u65cb\u7ffc\u98de\u884c\u5668\u8f68\u8ff9 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7528\u4e8e\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a \u4f7f\u7528 PyTrees \u548c Microsoft AirSim \u8fdb\u884c\u795e\u7ecf\u7b26\u53f7\u56db\u8f74\u98de\u884c\u5668\u5bfc\u822a \u5305\u542b\u51e0\u79cd\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 (DRL) \u7b97\u6cd5\uff0c\u7528\u4e8e\u8bad\u7ec3\u65e0\u4eba\u673a\u907f\u5f00 AirSim \u6a21\u62df\u4e2d\u7684\u969c\u788d\u7269 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u548c\u6a21\u62df\u5668\u8fdb\u884c\u65e0\u4eba\u673a/\u65e0\u4eba\u9a7e\u9a76\u98de\u673a\u8def\u5f84\u89c4\u5212 \u9884\u6d4b\u5b89\u5168\u65b9\u5411 MOAAPP - \u57fa\u4e8e\u591a\u76ee\u6807\u6ce8\u610f\u529b\u7684\u81ea\u9002\u5e94\u8def\u5f84\u89c4\u5212\u5668\uff08\u65e0\u4eba\u673a\u8def\u5f84\u89c4\u5212\uff09 - \u91c7\u7528\u6df1\u5ea6 Q \u5b66\u4e60 (DQN)\uff0c\u5e76\u7ed3\u5408\u957f\u77ed\u671f\u8bb0\u5fc6(LSTM)\u548c\u6ce8\u610f\u529b\u673a\u5236\u8fdb\u884c\u5f3a\u5316\u5b66\u4e60\u3002\u5b83\u5229\u7528 AirSim \u4eff\u771f\u73af\u5883\u589e\u5f3a\u65e0\u4eba\u673a\u5728\u590d\u6742\u3001\u969c\u788d\u7269\u5bc6\u96c6\u73af\u5883\u4e2d\u7684\u5bfc\u822a\u80fd\u529b\uff0c\u5e76\u4f18\u5316\u8def\u5f84\u957f\u5ea6\u3001\u5b89\u5168\u6027\u548c\u80fd\u6548\u7b49\u591a\u4e2a\u76ee\u6807\u3002 \u7ed3\u5408\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 (DRL)\u548c\u6df1\u5ea6\u5730\u56fe\uff0c\u4ee5\u589e\u5f3a\u65e0\u4eba\u673a\u5bfc\u822a\u548c\u907f\u969c\u80fd\u529b - \u96c6\u6210\u4e86Dueling Double Deep Q \u7f51\u7edc (D3QN)\u548cResNet-8\u67b6\u6784\uff0c\u4ee5\u5b9e\u73b0\u7cbe\u51c6\u7684\u8fd0\u52a8\u6307\u4ee4\u548c\u7a33\u5065\u7684\u8f6c\u5411\u89d2\u5ea6\u9884\u6d4b \u5728\u590d\u6742\u7684\u73af\u5883\u4e2d\u8bad\u7ec3\u5bfc\u822a\u7b56\u7565 \u65e0\u4eba\u673a\u81ea\u4e3b\u5bfc\u822a - \u5229\u7528\u6fc0\u5149\u96f7\u8fbe\u6570\u636e\u5b9e\u65f6\u907f\u969c\u3002\u8be5\u7cfb\u7edf\u65e2\u652f\u6301\u5355\u673a\u87ba\u65cb\u5f0f\u5bfc\u822a\uff0c\u4e5f\u652f\u6301\u591a\u673a\u534f\u540c\u96c6\u7fa4\u98de\u884c active-suspension \u8fd0\u52a8\u89c4\u5212\u7814\u7a76 \u57fa\u4e8e\u516b\u53c9\u6811\u7684\u65e0\u4eba\u673a\u5bfb\u8def\u7b97\u6cd5 \u4f7f\u7528 AirSim \u4e2d\u7684 A* \u5bfb\u8def\u3001\u4f20\u611f\u5668\u6570\u636e\u96c6\u6210\u548c YOLO \u7269\u4f53\u68c0\u6d4b\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u63a7\u5236\u7cfb\u7edf","title":"\u89c4\u5212"},{"location":"third/used_by/#_4","text":"\u4ee5\u6a21\u62df\u56fa\u5b9a\u7ffc\u98de\u673a\u8fdb\u884c\u5f3a\u5316\u5b66\u4e60 (RL) \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e0e\u8fc1\u79fb\u5b66\u4e60 \u5956\u52b1\u5851\u9020\u6280\u672f Hind Sight Reward Shaping - \u5229\u7528\u8d1d\u5c14\u66fc\u65b9\u7a0b\u7684\u57fa\u672c\u539f\u7406\u548c\u5f53\u524d\u6700\u5148\u8fdb\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\uff08\u5982 DQN\uff09\u4e2d\u7684\u7ecf\u9a8c\u91cd\u653e\u3002 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8fdb\u884c\u540c\u6b65\u65e0\u4eba\u673a\u822a\u62cd \u5c06\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u4e8e\u65e0\u4eba\u673a\u6a21\u62df - \u5305\u62ec\uff1a\u6839\u636e\u65e0\u4eba\u673a\u524d\u65b9\u7684\u7ea2\u8272\u611f\u5e94\u8fdb\u884c\u79fb\u52a8\u3001\u6839\u636e\u989c\u8272\u68c0\u6d4b\u6765\u8bd5\u9a8c\u65e0\u4eba\u673a\u7684\u6301\u7eed\u52a8\u4f5c\u3002 \u4ece\u6f14\u793a\u4e2d\u5b66\u4e60\uff1aStable Baselines 2.10 \u7684\u6a21\u4eff\u5b66\u4e60\u57fa\u51c6 \u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\uff1a\u5b9e\u9a8c\u53ef\u91cd\u590d\u6027 \u4e8b\u4ef6\u6444\u50cf\u673a\u7684\u8868\u5f81\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60 \u591a\u62bd\u8c61\u5c42\u5f3a\u5316\u5b66\u4e60\uff08MALRL\uff09 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316 (PPO) \u5b9e\u73b0\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u65e0\u4eba\u673a\u5f15\u64ce\uff08\u81ea\u52a8\u9a7e\u9a76\u4eea-1.0\uff09 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u63a2\u7d22\u51b3\u7b56\u6a21\u5757 Airsim, Stable Baselines3, \u5f3a\u5316\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60\u5728 ATC \u4ee3\u7406\u4e0a\u4e3a UAM \u5206\u914d\u4efb\u52a1 \u57fa\u4e8ePPO\u7684\u56db\u8f74\u98de\u884c\u5668\u81ea\u4e3b\u5bfc\u822a - \u7528\u4e8e\u56db\u8f74\u98de\u884c\u5668\u5728\u8d70\u5eca\u73af\u5883\u4e2d\u7684\u81ea\u4e3b\u5bfc\u822a\u3002\u5176\u4e2d\u6bcf\u9694 4 \u7c73\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5706\u5f62\u5f00\u53e3\u7684\u65b9\u5757\u4f9b\u65e0\u4eba\u673a\u7a7f\u8fc7\u3002\u9884\u671f\u662f\u667a\u80fd\u4f53\u80fd\u591f\u987a\u5229\u7a7f\u8fc7\u8fd9\u4e9b\u5f00\u53e3\u800c\u4e0d\u4f1a\u4e0e\u65b9\u5757\u53d1\u751f\u78b0\u649e \u8bbe\u8ba1\u4e00\u4e2a\u5f3a\u5316\u5b66\u4e60\u7a7a\u4e2d\u4ea4\u901a\u7ba1\u5236\u5458\u4ee3\u7406 - \u4f7f\u5176\u80fd\u591f\u627f\u62c5\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u7a7a\u4e2d\u4ea4\u901a\u7ba1\u5236\u5458\u7684\u804c\u8d23\uff0c\u5229\u7528\u57ce\u5e02\u7a7a\u4e2d\u4ea4\u901a\u6765\u6307\u6325\u5782\u76f4\u8d77\u964d\u673a\u573a\u5468\u56f4\u7684\u7535\u52a8\u5782\u76f4\u8d77\u964d\u98de\u884c\u5668\u3002\u8be5\u95ee\u9898\u88ab\u8868\u8ff0\u4e3a\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5e76\u4f7f\u7528PPO\u4f5c\u4e3a\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002 Eagle \u548c EagleSim\uff1a\u7528\u4e8e PTZ \u6444\u50cf\u673a\u7684 Deep-RL AirSim \u4e2d\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60 DRL_Drone \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e0e\u8fc1\u79fb\u5b66\u4e60 DQN\u3001DDPG\u3001TD3\u3001A2C \u548c PPO \u7684 DRL \u7b97\u6cd5\u5b9e\u73b0 DQN\u6548\u679c \u57fa\u4e8ePPO\u7684\u81ea\u52a8\u5bfc\u822a OptimalEmission-SUMO-\u5f3a\u5316\u5b66\u4e60 \u4f7f\u7528PPO\uff08\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff09\u7b97\u6cd5\u5bf9\u65e0\u4eba\u673a\u63a7\u5236\u8fdb\u884c\u8bad\u7ec3\u548c\u6d4b\u8bd5\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u6a21\u578b \u8bc4\u4f30\u4e0d\u540c\u6a21\u62df\u73af\u5883\u4e2d\u65e0\u4eba\u673a\u5bfc\u822a\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5 \u5728 AirSim\uff08\u4e00\u4e2a\u7528\u4e8e\u65e0\u4eba\u673a\u548c\u5176\u4ed6\u8f66\u8f86\u7684\u6a21\u62df\u73af\u5883\uff09\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6df1\u5ea6 Q \u7f51\u7edc (DQN) \u4ee3\u7406 - \u8be5\u4ee3\u7406\u65e8\u5728\u8ddf\u8e2a\u7403\u4f53\uff0c\u5e76\u5728\u4fdd\u6301\u7403\u4f53\u5728\u89c6\u91ce\u8303\u56f4\u5185\u7684\u540c\u65f6\uff0c\u4e0e\u7403\u4f53\u4fdd\u6301\u4e00\u5b9a\u8ddd\u79bb \u6536\u96c6\u5b89\u88c5\u5728\u8f66\u8f86\u4e0a\u7684\u8ddd\u79bb\u4f20\u611f\u5668\uff0c\u8f93\u5165\u5230DQN\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5b66\u4e60\u64cd\u4f5c\u65e0\u4eba\u673a\u5b8c\u6210\u8bbf\u95ee\u4efb\u52a1 \u4f7f\u7528 PPO \u7684\u81ea\u52a8\u6c7d\u8f66\u5bfc\u822a rl_airsim \u57fa\u4e8ePyTorch\u548cAirSim\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u65e0\u4eba\u673a\u81ea\u52a8\u9a7e\u9a76\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edf - \u652f\u6301\u591a\u6a21\u6001\u8f93\u5165\u5904\u7406\u3001\u590d\u5408\u89c2\u6d4b\u7a7a\u95f4\u3001SAC\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3001\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\u3001XPU\u52a0\u901f\u53ca\u9ad8\u7ea7\u65ad\u70b9\u7eed\u8bad\u529f\u80fd\u3002 \u76f8\u540c\u4ed3\u5e93 \u4e00\u6b3e\u57fa\u4e8e\u5f3a\u5316\u5b66\u4e60\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u7cfb\u7edf\uff0c\u65e8\u5728\u5728\u6a21\u62df\u73af\u5883\u4e2d\u8fdb\u884c\u667a\u80fd\u8def\u5f84\u89c4\u5212 \u7528\u4e8e\u6700\u4f73\u8def\u5f84\u67e5\u627e\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u6a21\u62df\u5668\u548c\u7b97\u6cd5\u73af\u5883 \u5728\u8d70\u5eca\u73af\u5883\u4e2d\u4f7f\u7528\u56db\u8f74\u98de\u884c\u5668\u8fdb\u884c\u81ea\u4e3b\u5bfc\u822a - \u5305\u542b PPO\u3001SAC\u3001DQN \u548c DDPG \u7684\u5b9e\u73b0\uff0c\u6269\u5c55\u81ea Bilal Kabas \u5f3a\u5316\u5b66\u4e60\u5728\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u98de\u884c\u52a8\u4f5c\u63a7\u5236\u4e2d\u7684\u5e94\u7528","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"third/used_by/#_5","text":"AirSim\u4e2d\u7684\u63a7\u5236 \u5b9e\u65f6\u9632\u649e\u7cfb\u7edf \u624b\u52a8\u8bbe\u8ba1\u7684\u63a7\u5236\u5668 - \u6b64\u73af\u5883\u662f\u4e00\u4e2a Gym API\uff0c\u4e13\u95e8\u7528\u4e8e\u5b66\u4e60\u65e0\u5730\u56fe\u5bfc\u822a\u548c\u98de\u884c\u7a33\u5b9a\u6027 \u5f3a\u5316\u5b66\u4e60\uff1a\u8c03\u5ea6\u548c\u8d44\u6e90\u5206\u914d \u81ea\u4e3b\u65e0\u4eba\u673a\u7740\u9646\u79fb\u52a8\u7269\u4f53\u7a7a\u4e2d\u6a21\u62df \u78b0\u649e\u907f\u514d","title":"\u63a7\u5236"},{"location":"third/used_by/#_6","text":"DroneVQA\uff1a\u5728\u6a21\u62df\u56db\u65cb\u7ffc\u65e0\u4eba\u673a\u4e0a\u90e8\u7f72\u57fa\u4e8e Transformer \u7684\u89c6\u89c9\u95ee\u7b54 (VQA) \u4eba\u5de5\u667a\u80fd\u6a21\u578b\u8fdb\u884c\u89c6\u89c9\u68c0\u67e5 - \u901a\u8fc7\u6bd4\u8f83\u7b54\u6848\u51c6\u786e\u6027\u3001\u4e3b\u9898\u7406\u89e3\u3001\u5904\u7406\u901f\u5ea6\u548c\u6a21\u578b\u8bad\u7ec3\u6539\u8fdb\u7b49\u5173\u952e\u56e0\u7d20\uff0c\u6bd4\u8f83\u5f00\u6e90\u6a21\u578b\u7684\u6027\u80fd\u4ee5\u53ca\u5728\u65e0\u4eba\u673a\u5e94\u7528\u4e2d\u8fdb\u884c\u5fae\u8c03\u7684\u96be\u6613\u7a0b\u5ea6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u865a\u62df\u73af\u5883\u4e2d\u9a7e\u9a76\u65e0\u4eba\u673a\uff0c\u5e76\u6839\u636e\u65e0\u4eba\u673a\u6444\u50cf\u5934\u7684\u62cd\u6444\u5185\u5bb9\u63d0\u51fa\u95ee\u9898\u3002\u751f\u6210\u4e86\u53ef\u89e3\u91ca\u7684\u4eba\u5de5\u667a\u80fd (XAI) \u7ed3\u679c\u53ef\u89c6\u5316\u6548\u679c\uff0c\u4ece\u4eba\u5de5\u667a\u80fd\u6a21\u578b\u7684\u89d2\u5ea6\u5c55\u793a\u63d0\u4f9b\u7684\u63d0\u793a\u548c\u56fe\u50cf\uff0c\u7a81\u51fa\u663e\u793a\u5f71\u54cd\u6a21\u578b\u7ed3\u8bba\u7684\u5173\u952e\u56e0\u7d20\u4ee5\u53ca\u6700\u4f73\u7b54\u6848\u7684\u6743\u91cd\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u9009\u62e9\u6a21\u62df\u73af\u5883\u5929\u6c14\u6548\u5e94\uff0c\u4f8b\u5982\u96e8\u3001\u96ea\u3001\u7070\u5c18\u548c\u96fe\uff0c\u4ee5\u53ca\u955c\u5934\u6a21\u7cca\u3001\u50cf\u7d20\u635f\u574f\u548c\u65ad\u7ebf\u7b49\u6444\u50cf\u5934\u7f3a\u9677 AerialVLN: \u57fa\u4e8e\u89c6\u89c9\u548c\u8bed\u8a00\u5bfc\u822a\u7684\u65e0\u4eba\u673a\u9879\u76ee - \u63d0\u4f9b 25 \u4e2a\u57ce\u5e02\u7ea7\u573a\u666f\uff0c\u56fe\u50cf\u903c\u771f FlightGPT\uff1a\u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u4ee3\u7406 \u751f\u6210\u5f0f\u6570\u5b57\u5b6a\u751f\u6280\u672f\u7528\u4e8e\u6301\u7eed\u589e\u5f3a\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u7684\u9884\u671f\u529f\u80fd\u5b89\u5168\u6027 \u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u5f15\u5bfc\u7684\u5355\u76ee\u89c6\u89c9\u65e0\u4eba\u673a\u5bfc\u822a - \u57fa\u4e8e\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff08Google Gemini Flash \u6a21\u578b\uff09\u5f00\u53d1\u4e86\u4e00\u5957\u57fa\u4e8e\u5355\u76ee\u89c6\u89c9\u7684\u65e0\u4eba\u673a\u5bfc\u822a\u4e0e\u907f\u969c\u7cfb\u7edf\u3002\u524d\u7f6e\u6444\u50cf\u5934\u6355\u6349\u7684 RGB \u56fe\u50cf\u901a\u8fc7 Depth-Anything \u7b97\u6cd5\u5904\u7406\u6210\u6df1\u5ea6\u56fe\u3002\u751f\u6210\u7684\u6df1\u5ea6\u56fe\u968f\u540e\u88ab\u8f6c\u5316\u4e3a\u4e09\u4e2a\u79bb\u6563\u52a8\u4f5c\u3002","title":"\u5927\u6a21\u578b"},{"location":"third/used_by/#_7","text":"\u57fa\u4e8e\u71b5\u7684\u591a\u667a\u80fd\u4f53\u65e0\u4eba\u673a\u5206\u5e03\u5f0f\u884c\u4e3a\u5efa\u6a21 \u591a\u4ee3\u7406\u8def\u7531 - \u4e00\u4e2a\u901a\u8fc7\u4f7f\u7528\u5bfc\u822a\u5e93\u6765\u63a7\u5236\u591a\u67b6\u65e0\u4eba\u673a\u7684\u5f00\u53d1\u5e93 BJTU_MultipleDrone \u65e0\u4eba\u673a\u96c6\u7fa4swarmVQA \u5355\u6444\u50cf\u5934\uff08\u5355\u76ee\uff09\u5b9e\u73b0\u591a\u4e2a UAS \u4ee3\u7406\u7684\u7fa4\u96c6/\u805a\u96c6\u884c\u4e3a","title":"\u591a\u667a\u80fd\u4f53"},{"location":"third/used_by/#_8","text":"\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u98de\u8d8a\u72ed\u7a84\u7f1d\u9699 - \u4e00\u79cd\u7aef\u5230\u7aef\u7684\u89c4\u5212\u548c\u63a7\u5236\u65b9\u6cd5 \u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60 (TL) \u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u51cf\u5c11\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u81ea\u4e3b\u5bfc\u822a\u6240\u9700\u7684\u673a\u8f7d\u8ba1\u7b97\u91cf - \u5bf9\u7f51\u7edc\u8fdb\u884c\u7aef\u5230\u7aef\u8bad\u7ec3\u3002\u8fd9\u4e9b\u8bad\u7ec3\u597d\u7684\u5143\u6743\u91cd\u968f\u540e\u5728\u6a21\u62df\u6d4b\u8bd5\u73af\u5883\u4e2d\u7528\u4f5c\u7f51\u7edc\u7684\u521d\u59cb\u5316\u5668\uff0c\u5e76\u9488\u5bf9\u6700\u540e\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5fae\u8c03\u3002\u4e3a\u4e86\u9a8c\u8bc1\u8be5\u65b9\u6cd5\u7684\u9c81\u68d2\u6027\uff0c\u6211\u4eec\u6a21\u62df\u4e86\u65e0\u4eba\u673a\u52a8\u529b\u5b66\u548c\u73af\u5883\u7279\u6027\u7684\u53d8\u5316\u3002\u5305\u542b\u771f\u5b9eDJI Tello \u65e0\u4eba\u673a\u4e0a","title":"\u7aef\u5230\u7aef"},{"location":"third/used_by/#_9","text":"\u4f7f\u65e0\u4eba\u673a\u80fd\u591f\u4f7f\u7528\u673a\u8f7d\u6444\u50cf\u5934\u8bc6\u522b\u5e76\u8ddf\u8e2a\u5176\u89c6\u91ce\u8303\u56f4\u5185\u7684\u4eba\u5458\uff0c\u4ece\u800c\u8ddf\u8e2a\u4ed6\u4eec\u7684\u8fd0\u52a8 - \u5229\u7528\u8be5\u5e73\u53f0\u5f00\u53d1\u96c6\u6210\u8ba1\u7b97\u673a\u89c6\u89c9\u6280\u672f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u5229\u7528\u5176\u8f93\u5165\u6765\u63a7\u5236\u65e0\u4eba\u673a\u7684\u8fd0\u52a8 \u591a\u65cb\u7ffc\u673a\u5668\u4eba\u8bbe\u8ba1\u56e2\u961f\u76842020\u5e74\u56fd\u9645\u7a7a\u4e2d\u673a\u5668\u4eba\u7ade\u8d5b\u4ee3\u7801 Yandex Calendar Bot \u662f\u4e00\u6b3e\u5f02\u6b65 Telegram \u673a\u5668\u4eba COMP 361 - \u6700\u7ec8\u9879\u76ee \u65e0\u4eba\u673a-SAR\u641c\u6551 \u5c06\u5730\u9762\u6444\u5f71\u6d4b\u91cf\u6570\u636e\u4e0a\u4f20\u5230 Playground\uff0c\u6839\u636e\u56fe\u7247\u8bad\u7ec3\u65e0\u4eba\u673a\u6cbf\u8f68\u8ff9\u98de\u884c Pizzair - \u62ab\u8428\u9001\u8d27\u65e0\u4eba\u673a\u5e94\u7528\u7a0b\u5e8f - \u4e24\u4e2a Readme \u6587\u4ef6\uff1a\u4e00\u4e2a\u7528\u4e8e\u65e0\u4eba\u673a\u63a7\u5236\u8f6f\u4ef6\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e Web \u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\u65e0\u4eba\u673a\u5c06\u62ab\u8428\u9001\u5230\u987e\u5ba2\u624b\u4e2d\uff0c\u987e\u5ba2\u53ef\u4ee5\u901a\u8fc7\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0b\u5355\u5e76\u4e0e\u62ab\u8428\u914d\u9001\u65e0\u4eba\u673a\u8fdb\u884c\u901a\u4fe1\u3002 \u65e0\u4eba\u673a\u914d\u9001\u7cfb\u7edf - \u96c6\u6210\u4e86 AirSim \u548c Ubuntu \u4e0a\u7684 PX4\u3002\u5b83\u5141\u8bb8\u60a8\u63a7\u5236\u65e0\u4eba\u673a\u3001\u8bbe\u7f6e\u53d6\u8d27\u548c\u914d\u9001\u5730\u70b9\u4ee5\u53ca\u6267\u884c\u5404\u79cd\u4efb\u52a1\u3002\u8be5\u7cfb\u7edf\u4f7f\u7528 Django \u4f5c\u4e3a Web \u754c\u9762\uff0c\u5e76\u901a\u8fc7 AirSim \u4e0e\u65e0\u4eba\u673a\u901a\u4fe1\u3002 \u8be5\u5e73\u53f0\u4e13\u4e3a AirSim \u73af\u5883\u4e2d\u7684 RL \u8bad\u7ec3\u800c\u8bbe\u8ba1\uff0c\u5e76\u57fa\u4e8eStable-Baselines3\u6784\u5efa - \u63d0\u4f9b\u4e86\u4fbf\u6377\u7684\u5207\u6362\u673a\u5236\u548c\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u7528\u6237\u53ef\u4ee5\u6309\u7167\u8bf4\u660e\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u8be5\u5e73\u53f0 \u540d\u4e3a\u201cEmbodied City\u201d\u7684\u5168\u65b0\u57fa\u51c6\u5e73\u53f0\uff0c\u7528\u4e8e\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u5177\u8eab\u667a\u80fd - \u5305\u542b\u4e00\u4e2a\u6a21\u62df\u5668\u548c\u57ce\u5e02\u73af\u5883\u4e2d\u5177\u8eab\u667a\u80fd\u4ee3\u8868\u6027\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u8ba9\u7528\u6237\u4ee5\u7b80\u5355\u8f7b\u677e\u7684\u914d\u7f6e\u65b9\u5f0f\u642d\u5efa\u5b9a\u5236\u5316\u7684\u65e0\u4eba\u673a\u4f5c\u6218\u73af\u5883 \u7a7a\u4e2d\u7814\u7a76\u6a21\u62df\u4f5c\u6218 \u7528\u4e8e FPV \u6218\u6597\u65e0\u4eba\u673a\uff08\u6a21\u62df\u5668\u7248\u672c\uff09\u7684\u5e26\u76ee\u6807\u8ddf\u8e2a\u529f\u80fd\u7684\u81ea\u52a8\u9a7e\u9a76\u4eea \u7528\u4e8e\u641c\u7d22\u548c\u6551\u63f4\u884c\u52a8\u7684\u81ea\u4e3b\u65e0\u4eba\u673a\u5bfc\u822a\u7cfb\u7edf\u9879\u76ee \u65e0\u4eba\u673a\u89c6\u89c9\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u73af\u5883\u53ca\u8bad\u7ec3\u4ee3\u7801 - \u5305\u542b\u5956\u52b1\u7ed3\u6784\u4f18\u5316\u3001\u8c03\u8bd5\u65e5\u5fd7\u4e0e\u9ad8\u53ef\u7ef4\u62a4\u6027\u7ed3\u6784 AeroSynapse\uff1a\u81ea\u4e3b\u9690\u5f62\u65e0\u4eba\u673a\u5e73\u53f0 \u4f7f\u7528 AirSim \u8fdb\u884c\u519c\u4e1a\u65e0\u4eba\u673a\u6a21\u62df OpenFly\u5e73\u53f0 - \u901a\u8fc7\u63d0\u4f9b\u9ad8\u5ea6\u81ea\u52a8\u5316\u7684\u6570\u636e\u6536\u96c6\u5de5\u5177\u94fe\u548c\u5927\u89c4\u6a21\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u63a8\u52a8\u6237\u5916\u7a7a\u4e2d\u89c6\u89c9\u8bed\u8a00\u5bfc\u822a (VLN) \u7684\u7814\u7a76\u3002\u5b83\u5305\u542b 10 \u4e07\u6761\u4e0d\u540c\u7684\u98de\u884c\u8f68\u8ff9\u3001\u4f7f\u7528\u5c16\u7aef\u6e32\u67d3\u6280\u672f\u751f\u6210\u7684\u9ad8\u8d28\u91cf\u89c6\u89c9\u6570\u636e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5173\u952e\u5e27\u611f\u77e5\u7684 VLN \u6a21\u578b OpenFly-Agent \u5d4c\u5165\u5f0f\u65e0\u4eba\u673a\u63a7\u5236\u7cfb\u7edf\u5177\u6709\u57fa\u4e8e LiDAR \u7684\u7269\u4f53\u68c0\u6d4b\u3001\u5b9e\u65f6\u5bfc\u822a\u548c\u7cbe\u786e\u7740\u9646\u529f\u80fd","title":"\u5e73\u53f0"},{"location":"third/used_by/#_10","text":"\u751f\u6210\u6267\u884c\u5668\u6545\u969c\u4e0b\u7684\u65e0\u4eba\u673a\u4f20\u611f\u5668\u6570\u636e - \u4e3a\u4e86\u5f00\u53d1\u548c\u8bc4\u4f30\u57fa\u4e8e\u89c6\u89c9\u7684 FDD \u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u9700\u8981\u4e00\u4e2a\u5305\u542b\u6b63\u5e38\u98de\u884c\u548c\u6545\u969c\u573a\u666f\u4e0b IMU \u548c\u6444\u50cf\u5934\u8f93\u51fa\u7684\u6570\u636e\u96c6\u3002\u4ecb\u7ecd\u4e86 UUFOSim\uff08\u865a\u5e7b\u65e0\u4eba\u673a\u6545\u969c\u6ce8\u5165\u6a21\u62df\u5668\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e AirSim \u6784\u5efa\u7684\u6570\u636e\u6536\u96c6\u6d41\u7a0b\uff0c\u7528\u4e8e\u6536\u96c6\u57ce\u5e02\u73af\u5883\u4e2d\u6267\u884c\u5668\u6545\u969c\u7684\u5408\u6210\u98de\u884c\u6570\u636e AirSim \u6570\u636e\u6536\u96c6 \u4f20\u611f\u5668\u6570\u636e\u6536\u96c6 \u751f\u6210\u6570\u636e\u548c\u5bf9\u5e94\u7684Ground Truth - \u5305\u62ecRGB\u76f8\u673a\u3001\u6807\u51c6\u5316\u5dee\u5f02\u6570\u636e\u30013D \u70b9\u4e91 \u6570\u636e\u6536\u96c6\u6559\u7a0b - \u5305\u62ec\u84dd\u56fe\u8bf4\u660e\u3001 \u4f7f\u7528 AirSim \u8fdb\u884c 3D \u70b9\u4e91\u91cd\u5efa \u5728AirSim\u4e2d\u64cd\u7eb5\u65e0\u4eba\u673a\u5e76\u5728\u8bad\u7ec3\u671f\u95f4\u63d0\u53d6\u56fe\u50cf/\u89c6\u9891\u7684\u6982\u5ff5\u9a8c\u8bc1 \u751f\u6210\u65e0\u4eba\u673a\u56fe\u50cf\u548c\u503e\u659c\u6a21\u578b \u9002\u7528\u4e8eVLN\u6570\u636e\u96c6\u7684\u6ce8\u91ca\u8f6f\u4ef6\uff0c\u7528\u4e8e\u6ce8\u91ca\u6bcf\u4e2a\u5bfc\u822a\u6b65\u9aa4\u6307\u4ee4\u4e2d\u7684\u5f15\u7528\u5bf9\u8c61 \u7528\u4e8e YOLOv5-6D \u6a21\u578b\u7684 3D \u5bf9\u8c61\u68c0\u6d4b\u6570\u636e\u96c6\u751f\u6210\u5668 \u8f93\u5165 sfm \u7a00\u758f\u70b9\u4e91\u6570\u636e\u7684\u4ee3\u7406\u91cd\u5efa InfluxDB \u4e2d\u7684\u65e0\u4eba\u673a AI \u6570\u636e\u6536\u96c6\u8f6f\u4ef6 \u5305\u62ec\u521b\u5efa\u6570\u636e\u3001\u6a21\u578b\u7cbe\u8c03\u3001\u9884\u6d4b - \u5305\u62eccityenviron\u7684\u56fe\u7247\u6570\u636e\u96c6 airsim-nerf \u4e09\u4f4d\u91cd\u5efa DiverSim\u7528\u4e8e\u751f\u6210\u6ce8\u91cd\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u7684\u5408\u6210\u884c\u4eba\u6570\u636e - \u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce 5 \u6784\u5efa\uff0c\u53ef\u521b\u5efa\u5747\u8861\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u6bd4\u4f8b\u7684\u6027\u522b\u3001\u79cd\u65cf\u548c\u6b8b\u969c\u4eba\u58eb\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5404\u79cd\u6a21\u62df\u53c2\u6570\uff0c\u5305\u62ec\u5927\u6c14\u6761\u4ef6\u3001\u9c7c\u773c\u76f8\u673a\u53c2\u6570\u548c\u884c\u4eba\u7279\u5f81\uff0c\u6570\u636e\u5219\u4ee5ASAM OpenLABEL\u683c\u5f0f\u8fdb\u884c\u6ce8\u91ca","title":"\u6570\u636e"},{"location":"third/used_by/#_11","text":"\u9002\u7528\u4e8e AirSim Multirotor \u6a21\u62df\u5668\u7684 OpenAI Gym \u73af\u5883 \u65e0\u4eba\u673a\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u5e94\u7528\u7684\u53ef\u7f16\u7a0b\u5f15\u64ce\uff08PEDRA-2.0\uff09 - \u5176\u4ed6 \u76f8\u4f3c\u9879\u76ee OpenAI Gym \u7684 AirSim \u63a5\u53e3 - \u652f\u6301\u4e24\u79cd\u65e0\u4eba\u673a\u63a7\u5236\u7c7b\u578b\uff1a\u79bb\u6563\u4f4d\u7f6e\u63a7\u5236\u548c\u8fde\u7eed\u901f\u5ea6\u63a7\u5236 Azure \u4e0a\u7684 AirSim \u5f00\u53d1\u73af\u5883 GazePointer: \u5305\u542b\u8981\u4f7f\u7528\u7684\u5305\u5217\u8868 Airsim + Python + Docker \u793a\u4f8b - \u5305\u62ec ROS2 + Docker turtlesim \u793a\u4f8b FLS\uff08\u98de\u884c\u5149\u6591\uff09\u663e\u793a\u5668 - \u80fd\u591f\u901a\u8fc7\u5360\u636e\u7a7a\u95f4\u4e2d\u7684\u7269\u7406\u4f53\u79ef\u6765\u5448\u73b0\u771f\u5b9e\u6216\u865a\u62df\u7684\u4e09\u7ef4\u7269\u4f53\u7684\u663e\u793a\u5668\uff0c\u6211\u4eec\u9700\u8981\u5c3a\u5bf8\u4ec5\u4e3a\u6570\u767e\u5fae\u7c73\u7684\u5fae\u578b\u65e0\u4eba\u673a\uff0c\u5e76\u914d\u5907\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u53d1\u51fa\u4e0d\u540c\u989c\u8272\u548c\u4eae\u5ea6\u7684\u5149\u6e90 \u5f55\u5236\u811a\u672c - \u7528\u4e8e\u5728 airsim \u4e2d\u8bb0\u5f55\u5404\u79cd SLAM \u5b9e\u9a8c\u7684\u6570\u636e\u96c6\uff1b\u7528\u4e8e\u5728\u7ed9\u5b9a\u8def\u5f84\u4e0a\u98de\u884c\u65e0\u4eba\u673a\u5e76\u8bb0\u5f55\u8ddf\u8e2a\u4ee5\u521b\u5efa\u6570\u636e\u96c6\u7684\u811a\u672c \u5728\u73af\u5883 3D \u5c0f\u8bf4\u548c\u6570\u5b57\u56fe\u50cf\u4e2d\u6a21\u62df\u50cf\u7d20\u76f4\u63a5\u5730\u7406\u53c2\u8003 Docker\u542f\u52a8\u6d4f\u89c8\u5668 \u8f7b\u677e\u5c06 Airsim \u6a21\u62df\u5668\u4e0e\u5176\u4ed6\u5de5\u5177\u96c6\u6210\u7684\u5de5\u5177 \u4e0e AJAN Agent System \u7684 Airsim \u8fdb\u884c\u901a\u4fe1\u7684 Python API Resnet8 - \u5305\u62ec\u6570\u636e\u6536\u96c6\u3001\u8bad\u7ec3\u3001\u8bc4\u6d4b \u4e0e\u8bad\u7ec3\u73af\u5883 IPT \u76f8\u5173\u7684\u6587\u4ef6\u7684\u8f6f\u4ef6\u4ed3\u5e93 - \u7528\u4e8e\u521b\u5efa Eagle Enterprises \u8bad\u7ec3\u73af\u5883\u7684\u6240\u6709\u63d2\u4ef6\u6587\u4ef6\u3001\u865a\u5e7b\u8d44\u6e90\u548c\u865a\u5e7b\u84dd\u56fe\u6587\u4ef6 \u65e0\u4eba\u673a\u6d4b\u8bd5 \u5305\u88c5\u5e76\u4f7f\u7528 Airsim \u7684\u6444\u50cf\u5934\u548c\u6fc0\u5149\u96f7\u8fbe\u4e0e ROS 2 \u8fdb\u884c\u4ea4\u4e92 \u5c06 Airsim \u4e0e ROS2 \u8fde\u63a5\u8d77\u6765 - \u901a\u8fc7\u5728\u540e\u7aef\u8fd0\u884c JSBSim \u5e76\u4f7f\u7528\u6765\u81ea airsim \u7684 MovePosition api \u6765\u79fb\u52a8\u76f8\u673a pawn \u6765\u5b8c\u6210\u7684 SOS-Match ROS \u8282\u70b9","title":"\u5de5\u5177"},{"location":"third/used_by/#_12","text":"\u57fa\u4e8e\u56fe\u50cf\u7684\u65e0\u4eba\u673a3D\u5730\u56fe\u6784\u5efa\u7cfb\u7edf \u63a8\u7406\u6a21\u62df\u73af\u5883\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u610f\u6295\u5f71\u7cfb\u7edf - \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u7684\u5fb7\u56fd\u7ef4\u6ed5\u4e00\u5c0f\u5757\u8857\u533a\u7684\u793a\u4f8b\u3002\u6a21\u62df\u73af\u5883\u662f\u4e00\u4e2a\u57fa\u4e8e OSM \u7684\u5730\u7406\u53c2\u8003\u4e16\u754c\uff0c\u91c7\u7528 UTM32N \u6295\u5f71\u5750\u6807\u7cfb\u3002\u901a\u8fc7 GPS \u4f4d\u7f6e\u63a7\u5236\u56db\u65cb\u7ffc\u98de\u884c\u5668\u964d\u843d\u5728\u5efa\u7b51\u7269\u4e0a\u3002 \u6784\u5efa\u4e86\u4e00\u4e9b\u73af\u5883","title":"\u5730\u56fe"},{"location":"third/used_by/#_13","text":"\u65b9\u7a0b\u5f0f\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66 - \u5305\u62ec\u7d20\u6750\u6784\u5efa\u6d41\u7a0b\u3001\u6a21\u4eff\u5b66\u4e60\uff08TODO\uff09 \u5b9a\u5236\u63a7\u5236\u7cfb\u7edf\u7684\u65e0\u4eba\u673a \u65b9\u7a0b\u5f0f\u8d5b\u8f66 \u65e0\u4eba\u673a\u6559\u5b66\u4eff\u771f \u65e0\u4eba\u673a\u5728\u72ed\u7a84\u503e\u659c\u7f1d\u9699\u4e2d\u5feb\u901f\u98de\u884c - \u672c\u79d1\u8bba\u6587 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u4e3a 2023-2024 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u8bbe\u8ba1\u7684\u6a21\u62df\u73af\u5883 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u53c2\u52a0 2025 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u7684\u4ee3\u7801 \u5bc6\u82cf\u91cc\u79d1\u6280\u5927\u5b66\u591a\u65cb\u7ffc\u8bbe\u8ba1\u56e2\u961f\u4e3a 2023-2024 \u5e74\u5b66\u751f\u65e0\u4eba\u673a\u7cfb\u7edf\u7ade\u8d5b (SUAS) \u8bbe\u8ba1\u7684\u6a21\u62df\u73af\u5883","title":"\u6bd4\u8d5b"},{"location":"third/used_by/#_14","text":"\u8d44\u6e90\u611f\u77e5\u5206\u5e03\u5f0f\u8d2a\u5a6a\u7b97\u6cd5 (RAG) - \u4e00\u79cd\u7528\u4e8e\u673a\u5668\u4eba\u7f51\u72b6\u7f51\u7edc\u4e2d\u5206\u5e03\u5f0f\u5b50\u6a21\u4f18\u5316\u7684\u9ad8\u6548\u901a\u4fe1\u548c\u8ba1\u7b97\u65b9\u6cd5","title":"\u7814\u7a76"},{"location":"third/used_by/#_15","text":"\u8fdb\u884c\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6253\u9020\u4e86\u4e00\u6b3e\u53ef\u4ee5\u540c\u65f6\u63a7\u5236\u98de\u673a\u548c\u6c7d\u8f66\u6a21\u578b\u7684\u591a\u4eba\u6e38\u620f \u65f6\u7a7a\u53d8\u5316\u98ce\u652f\u6301\u6240\u505a\u7684\u66f4\u6539 Colosseum\uff0cAirSim\u7684\u7ee7\u4efb\u8005 \u589e\u52a0\u4e86\u4e00\u4e2a\u5b8f\uff0c\u7528\u4e8e\u5b9e\u73b0\u4e0d\u540c\u7684sleep\u7b56\u7565 - \u4ee5\u6216\u591a\u6216\u5c11\u7684\u8ba1\u65f6\u7cbe\u786e\u6027\u4e3a\u4ee3\u4ef7\uff0c\u6539\u8fdbAirSim\u5728\u591a\u673a\uff08>20 in i7-12700\uff09\u4eff\u771f\u4e0b\u7684\u6027\u80fd\u8868\u73b0\u3002 \u5f20\u5bb6\u754c\u5730\u56fe \u3001 \u4e3a\u6240\u6709\u5730\u56fe\u6dfb\u52a0F10 \u7b49 \u6dfb\u52a0\u96f7\u8fbe\u4f20\u611f\u5668 \u6dfb\u52a0/\u66f4\u65b0\u4e86\u96c6\u4e2d\u5f0f linting \u5de5\u4f5c\u6d41\u7a0b \u4fee\u6539 AirSim \u7684\u5206\u652f\u4ee5\u4e0e\u5b9a\u5236\u7684 Unity \u6a21\u62df\u5668\u914d\u5408\u4f7f\u7528 - \u53ef\u4f5c\u4e3a AIFS \u519c\u7528\u98de\u884c\u6a21\u62df\u5668\u7684\u5b50\u6a21\u5757\u4f7f\u7528 \u7528\u4e8e\u519c\u4e1a\u73af\u5883\u98de\u884c\u7684AIFS\u6a21\u62df\u5668 - \u57fa\u4e8eHiPeRLab\u3001Helios\u548cAirSim\u7684\u4ee3\u7801\uff0c\u65e8\u5728\u5e2e\u52a9\u6d4b\u8bd5\u5728\u5305\u542b\u9ad8\u4fdd\u771f\u519c\u4e1a\u7279\u5f81\u7684\u6a21\u62df\u73af\u5883\u4e2d\u4e0d\u540c\u7684\u81ea\u4e3b\u98de\u884c\u7b56\u7565\uff08\u57fa\u4e8eUnity\uff09 ROS2 humble \u548c Ubuntu 22.04 \u517c\u5bb9 classicvalues airsim_first \u538b\u7f29\u56fe\u7247 Ubuntu-20.04 \u4e0a\u7684 Airsim - \u52bf\u573a\u3001\u81ea\u5df1\u7684\u573a\u666f AirSim_PPO AirSimDevVerison - clang-12 error fixed \u4e07\u5411\u8282\u8ddf\u8e2a\u5668\u6dfb\u52a0\u9700\u8981\u4fee\u590d pid \u63a7\u5236 \u89c6\u89c9\u903c\u771f\u7684\u6c34\u4e0b\u673a\u5668\u4eba\u6a21\u62df\u5668 UNav-Sim - \u57fa\u4e8e\u865a\u5e7b5","title":"\u5b9a\u5236"},{"location":"third/used_by/#_16","text":"\u591a\u6a21\u6001\u4eba\u673a\u4ea4\u4e92\uff08Human-in-the-loop, HITL\uff09\u5b66\u4e60 - \u6574\u5408\u773c\u795e\u6ce8\u89c6\u548c\u81ea\u7136\u8bed\u8a00\uff0c\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u5b66\u4e60\u3002\u9884\u6d4b\u7684\u51dd\u89c6\u548c\u771f\u5b9e\u51dd\u89c6\u5bf9\u6bd4 \u4f7f\u7528\u4eba\u7c7b\u4ea4\u4e92\u548c\u5f3a\u5316\u5b66\u4e60\u5b9e\u65f6\u6559\u5bfc\u5b66\u4e60\u4ee3\u7406\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1 - \u5b66\u4e60\u5468\u671f\u5e94\u7528\u4e8e\u6559\u5bfc\u56db\u65cb\u7ffc\u98de\u884c\u5668\u5982\u4f55\u57fa\u4e8e\u4eba\u673a\u4ea4\u4e92\u548c\u5f3a\u5316\u5b66\u4e60\u964d\u843d\u5728\u7740\u9646\u53f0\u4e0a \u4eba\u7c7b\u89d2\u8272\u88ab\u8bbe\u7f6e\u4e3a\u5728\u8bbe\u8ba1\u7684\u6837\u6761\u8def\u5f84\u4e0a\u884c\u8d70 - \u5bf9\u4e8e\u52a8\u6001\u9632\u649e\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5305\u542b\u884c\u8d70\u4eba\u7c7b\u89d2\u8272\u7684\u5730\u56fe\u6765\u6536\u96c6\u6570\u636e\uff0c\u4ee5\u8bad\u7ec3\u5f3a\u5316\u5b66\u4e60\u4ee3\u7406\uff0c\u4e3aGym \u98ce\u683c\u73af\u5883","title":"\u4eba"},{"location":"third/used_by/#_17","text":"\u5bf9 Udemy \u6559\u7a0b\u300a\u5e94\u7528\u6df1\u5ea6\u5b66\u4e60\u2014\u2014\u5b8c\u6574\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u8bfe\u7a0b\u300b\u6982\u5ff5\u6d41\u7a0b\u7684\u6d4b\u8bd5 - \u4f7f\u7528 Keras\uff08Tensorflow \u7684\u5305\u88c5\u5668\uff09\u6559\u6c7d\u8f66\u5982\u4f55\u81ea\u52a8\u9a7e\u9a76 \u6d4b\u8bd5 Airsim API\uff0c\u5e76\u8bad\u7ec3\u6c7d\u8f66\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u67e5\u627e\u548c\u5bfc\u822a\u5230\u7269\u4f53 \u81ea\u52a8\u8d5b\u8f66\u7684\u5f3a\u5316\u5b66\u4e60 - \u4f7f\u7528\u8f6f\u6f14\u5458\u8bc4\u8bba\u5bb6 (SAC) \u7b97\u6cd5\u548c\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668 (VAE)\u3002 \u4f7f\u7528 TensorFlow \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u4ee5\u53ca\u6267\u884c\u5b9e\u65f6\u78b0\u649e\u68c0\u6d4b\u548c\u591a\u8f66\u6a21\u62df \u901a\u7528 ROS2 \u5305\uff0c\u7528\u4e8e\u4f7f\u7528\u4e0d\u540c\u7684 API \u63a7\u5236\u5404\u79cd\u6a21\u62df\u4e2d\u7684\u8f66\u8f86 \u5229\u7528\u8d85\u5206\u8fa8\u7387\u6280\u672f\u5b9e\u73b0\u6c7d\u8f66\u5e94\u7528\u7684\u5feb\u901f\u7acb\u4f53\u6444\u50cf\u673a\u6a21\u62df - \u4e00\u79cd\u5229\u7528\u7acb\u4f53\u8d85\u5206\u8fa8\u7387 (SSR) \u52a0\u901f\u7acb\u4f53\u76f8\u673a\u6a21\u62df\u7684\u65b9\u6cd5 \u7aef\u5230\u7aef\u81ea\u52a8\u9a7e\u9a76 \u7528\u4e8e\u56fe\u50cf\u8bc6\u522b\u7684\u53d8\u5206\u91cf\u5b50\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u786e\u5b9a\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u8f6c\u5411\u89d2 \u7b26\u5408\u4efb\u52a1\u89c4\u8303\u7684\u673a\u5668\u4eba\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u6062\u590dAirSim PX4 ArduPilot Python \u5e73\u53f0 - \u8bba\u6587\u201cSpecGuard\uff1a\u9762\u5411\u7269\u7406\u653b\u51fb\u7684\u673a\u5668\u4eba\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u89c4\u8303\u611f\u77e5\u6062\u590d\u201d\u7684\u4ee3\u7801 \u91c7\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u7684\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66 \u4ece\u6807\u7b7e\uff08\u7531\u6fc0\u5149\u96f7\u8fbe\u6587\u4ef6\u751f\u6210\uff09\u4e2d\u63d0\u53d6 GPS \u6570\u636e\uff0c\u8fd0\u884c\u6a21\u62df\u5e76\u4f7f\u7528 PID \u63a7\u5236\u5668\u63a7\u5236\u6c7d\u8f66","title":"\u8f66"},{"location":"third/used_by/#_18","text":"\u57fa\u4e8e\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u591a\u673a\u5668\u4eba\u6709\u6548\u8f7d\u8377\u8fd0\u8f93 - \u573a\u666f\u6709\u4e24\u79cd\uff1a\u4e00\u4e2a\u662f\u5c01\u95ed\u7a7a\u95f4\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u76ee\u6807\uff1b\u53e6\u4e00\u4e2a\u662f\u673a\u5668\u4eba\u643a\u5e26\u6709\u6548\u8f7d\u8377\u524d\u5f80\u7684\u72ed\u7a84\u901a\u9053","title":"\u673a\u5668\u4eba"},{"location":"third/used_by/#_19","text":"\u667a\u80fd\u56fe\u5f62\u5b66\u4e60\u52a9\u624b \u4e0e AirSim \u914d\u5408\u4f7f\u7528\u7684\u811a\u672c \u6570\u636e\u751f\u6210 Backend - \u76f8\u540c\u4ed3\u5e93 Flying Cavalry CAPSTONE FlashTrans Flask_news_app \u65e0\u4eba\u673a\u7814\u7a76\u81ea\u52a8\u8ba4\u8bc1\u673a\u5668\u5b66\u4e60\u6a21\u578b caviar camelmera CASE22_Collision_VS QR-Detection-Game-RL test Salli_work cs4756 m2g_racing airSim_Drone Autonomous-Drone - PEDRA \u7531 Aqeel Anwar \u5f00\u53d1\u3002\u5bf9\u6a21\u578b\u8bad\u7ec3\u914d\u7f6e\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4ee5\u7b80\u5316\u548c\u8bad\u7ec3\u81ea\u4e3b\u6a21\u578b\u3002","title":"\u6742\u9879"},{"location":"wiki/","text":"Wiki \u4e3b\u9875 # \u6b22\u8fce\u6765\u5230 AirSim wiki\uff01 \u672c wiki \u5305\u542b\u793e\u533a\u8d21\u732e\u7684\u6587\u6863\u3002\u5982\u9700\u67e5\u770b AirSim \u6838\u5fc3\u6587\u6863\uff0c\u8bf7\u4ece readme \u6587\u4ef6\u5f00\u59cb\u3002 \u8d21\u732e\u5185\u5bb9 # \u4f7f\u7528 DroneBlocks \u548c AirSim \u6784\u5efa\u7403\u5f62\u5168\u666f\u56fe \u4f7f\u7528\u865a\u5e7b PixelStreamer \u6355\u6349\u89c6\u9891 \u4f7f\u7528 AirSim \u8bad\u7ec3 Student Technion \u65b9\u7a0b\u5f0f\u8d5b\u8f66 \u5efa\u9020\u516d\u65cb\u7ffc\u98de\u884c\u5668 \u65e0\u4eba\u673a\u6cbf\u7740\u8def\u5f84\u79fb\u52a8(moveOnPath)\u6f14\u793a \u6784\u5efa\u70b9\u4e91 \u8c03\u8bd5\u59ff\u6001\u4f30\u8ba1 \u62e6\u622a Mavlink \u6d88\u606f \u5b9e\u65bd\u65e0\u4eba\u673a\u8c03\u67e5\u811a\u672c PX4 \u65e0\u4eba\u673a\u5feb\u901f\u4e0b\u964d \u4e0b\u8f7dWIKI\u9875\u9762\u4e2d\u7684\u6587\u6863 # \u5728\u539f\u4ed3\u5e93\u514b\u9686\u94fe\u63a5 https://github.com/Microsoft/AirSim.git \u540e\u9762\u52a0\u4e0a .wiki \u3002 git clone https://github.com/Microsoft/AirSim.wiki.git","title":"Wiki \u6587\u6863"},{"location":"wiki/#wiki","text":"\u6b22\u8fce\u6765\u5230 AirSim wiki\uff01 \u672c wiki \u5305\u542b\u793e\u533a\u8d21\u732e\u7684\u6587\u6863\u3002\u5982\u9700\u67e5\u770b AirSim \u6838\u5fc3\u6587\u6863\uff0c\u8bf7\u4ece readme \u6587\u4ef6\u5f00\u59cb\u3002","title":"Wiki \u4e3b\u9875"},{"location":"wiki/#_1","text":"\u4f7f\u7528 DroneBlocks \u548c AirSim \u6784\u5efa\u7403\u5f62\u5168\u666f\u56fe \u4f7f\u7528\u865a\u5e7b PixelStreamer \u6355\u6349\u89c6\u9891 \u4f7f\u7528 AirSim \u8bad\u7ec3 Student Technion \u65b9\u7a0b\u5f0f\u8d5b\u8f66 \u5efa\u9020\u516d\u65cb\u7ffc\u98de\u884c\u5668 \u65e0\u4eba\u673a\u6cbf\u7740\u8def\u5f84\u79fb\u52a8(moveOnPath)\u6f14\u793a \u6784\u5efa\u70b9\u4e91 \u8c03\u8bd5\u59ff\u6001\u4f30\u8ba1 \u62e6\u622a Mavlink \u6d88\u606f \u5b9e\u65bd\u65e0\u4eba\u673a\u8c03\u67e5\u811a\u672c PX4 \u65e0\u4eba\u673a\u5feb\u901f\u4e0b\u964d","title":"\u8d21\u732e\u5185\u5bb9"},{"location":"wiki/#wiki_1","text":"\u5728\u539f\u4ed3\u5e93\u514b\u9686\u94fe\u63a5 https://github.com/Microsoft/AirSim.git \u540e\u9762\u52a0\u4e0a .wiki \u3002 git clone https://github.com/Microsoft/AirSim.wiki.git","title":"\u4e0b\u8f7dWIKI\u9875\u9762\u4e2d\u7684\u6587\u6863"},{"location":"wiki/An-Orbit-Trajectory/","text":"\u4f60\u6709\u6ca1\u6709\u60f3\u8fc7\u98de\u4e00\u4e2a\u6f02\u4eae\u5149\u6ed1\u7684\u5706\u5f62\u8f68\u9053\uff1f\u8fd9\u5bf9\u4e8e\u4ece\u5404\u4e2a\u65b9\u9762\u6355\u83b7 3D \u5bf9\u8c61\u975e\u5e38\u65b9\u4fbf\uff0c\u5c24\u5176\u662f\u5f53\u60a8\u5728\u4e0d\u540c\u9ad8\u5ea6\u83b7\u5f97\u591a\u4e2a\u8f68\u9053\u65f6\u3002 So the PythonClient folder contains a new script named Orbit that will do exactly that. See demo video The demo video was created by running this command line: python orbit.py --radius 10 --altitude 5 --speed 1 --center \"0,1\" --iterations 1 This flies a 10 meter radius orbit around the center location at (startpos + radius * [0,1]), in other words, the center is located radius meters away in the direction of the provided center vector. It also keeps the front facing camera on the drone always pointing at the center of the circle. If you watch the flight using LogViewer you will see a nice circular pattern get traced out on the GPS map: The core of the algorithm is not that complicated. At each point on the circle we look ahead by a small delta in degrees, called the lookahead_angle, where that angle is computed based on our desired velocity. We then find that lookahead point on the circle using sin/cosine and make that our \"target point\". computing the velocity then is easy, we just subtract our current position from that point and feed that into the AirSim method moveByVelocityZ .","title":"An Orbit Trajectory"},{"location":"wiki/Capturing-video-using-Unreal-PixelStreamer/","text":"The simGetImage python API causes the visuals to freeze while each image is captured, which is hard to look at, but there is another way to capture AirSim video using the new Unreal PixelStreamer . If you simply follow the instructions on that page and enable Pixel Streaming feature in your AirSim Unreal environment then you can get the following result. See demo video . Notice that the video capture is very smooth and does not disrupt AirSim visuals in any way. The question then is how to redirect the web browser output into something you can use for AI training? Unreal is using the WebRTC streaming standard, so there should be plenty of open-source ways to crack that stream and turn it into whatever you want... WebRTC is natively supported by Chrome, so it works nicely there. This pixel streaming is built on the NVidia GPU video encoding stack, so you may need to install an updated NVidia driver to make sure you have that piece too, but you don't need the Video Codec SDK, just the driver is enough. The Video Codec SDK is probably what Unreal is using under the covers, and could be another way to crack the stream rather than publishing it as WebRTC. The WebRTC support could be really handy if you want to setup \"AirSim server boxes\" that deliver video to other folks who are consuming those streams for training AI models and so on.","title":"Capturing video using Unreal PixelStreamer"},{"location":"wiki/DroneBlocks/","text":"\u4f7f\u7528 DroneBlocks \u548c AirSim \u6784\u5efa\u7403\u5f62\u5168\u666f\u56fe # \u8fd9\u662f Dennis Baldwin \u5236\u4f5c\u7684\u4e00\u6bb5 \u975e\u5e38\u68d2\u7684\u89c6\u9891 \uff0c\u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u5c06 DroneBlocks \u8fde\u63a5\u5230 AirSim\u3002\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u4ed6\u7f16\u5199\u4e86\u4e00\u4e2a\u98de\u884c\u7a0b\u5e8f\u6765\u6355\u6349\u4e00\u7cfb\u5217\u56fe\u50cf\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u7684 360 \u5ea6\u5168\u666f\u5c71\u666f\u3002 \u62cd\u6444\u5b8c\u56fe\u50cf\u540e\uff0cDennis \u4f7f\u7528 PTGui \u5c06\u7167\u7247\u62fc\u63a5\u6210 360 \u5ea6\u5168\u666f\u56fe\uff1a \u7136\u540e\u4ed6\u4f7f\u7528 krpano \u5c06\u5176\u53d1\u5e03\u4e3a\u7f51\u7ad9\u3002 \u8bf7\u8bbf\u95ee \u6700\u7ec8\u7f51\u7ad9 \uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u79fb\u52a8\u6444\u50cf\u5934\u6765\u67e5\u770b\u5b8c\u6574\u7684 360 \u5ea6\u5168\u666f\u56fe\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u65e0\u4eba\u673a\u7ecf\u5e38\u88ab\u7528\u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 AirSim \u548c DroneBlocks \u6a21\u62df\u6574\u4e2a\u8fc7\u7a0b\uff0c\u771f\u662f\u592a\u9177\u4e86\u3002 \u975e\u5e38\u9177\u3002","title":"DroneBlocks"},{"location":"wiki/DroneBlocks/#droneblocks-airsim","text":"\u8fd9\u662f Dennis Baldwin \u5236\u4f5c\u7684\u4e00\u6bb5 \u975e\u5e38\u68d2\u7684\u89c6\u9891 \uff0c\u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u5c06 DroneBlocks \u8fde\u63a5\u5230 AirSim\u3002\u5728\u8fd9\u4e2a\u6f14\u793a\u4e2d\uff0c\u4ed6\u7f16\u5199\u4e86\u4e00\u4e2a\u98de\u884c\u7a0b\u5e8f\u6765\u6355\u6349\u4e00\u7cfb\u5217\u56fe\u50cf\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u7684 360 \u5ea6\u5168\u666f\u5c71\u666f\u3002 \u62cd\u6444\u5b8c\u56fe\u50cf\u540e\uff0cDennis \u4f7f\u7528 PTGui \u5c06\u7167\u7247\u62fc\u63a5\u6210 360 \u5ea6\u5168\u666f\u56fe\uff1a \u7136\u540e\u4ed6\u4f7f\u7528 krpano \u5c06\u5176\u53d1\u5e03\u4e3a\u7f51\u7ad9\u3002 \u8bf7\u8bbf\u95ee \u6700\u7ec8\u7f51\u7ad9 \uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u79fb\u52a8\u6444\u50cf\u5934\u6765\u67e5\u770b\u5b8c\u6574\u7684 360 \u5ea6\u5168\u666f\u56fe\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u65e0\u4eba\u673a\u7ecf\u5e38\u88ab\u7528\u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 AirSim \u548c DroneBlocks \u6a21\u62df\u6574\u4e2a\u8fc7\u7a0b\uff0c\u771f\u662f\u592a\u9177\u4e86\u3002 \u975e\u5e38\u9177\u3002","title":"\u4f7f\u7528 DroneBlocks \u548c AirSim \u6784\u5efa\u7403\u5f62\u5168\u666f\u56fe"},{"location":"wiki/Implementing-a-Drone-Survey-script/","text":"\u5b9e\u65bd\u65e0\u4eba\u673a\u8c03\u67e5\u811a\u672c # \u60a8\u662f\u5426\u66fe\u7ecf\u60f3\u8fc7\u62cd\u6444\u4e00\u7ec4\u7279\u5b9a\u5730\u70b9\u7684\u4fef\u89c6\u56fe\u7167\u7247\uff1f AirSimClient Python API \u8ba9\u8fd9\u4e00\u5207\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002 \u4ee3\u7801\u8bf7\u70b9\u51fb\u6b64\u5904 \u67e5\u770b\u3002 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u53d8\u91cf\uff1a \u53d8\u91cf \u63cf\u8ff0 boxsize \u5f85\u6d4b\u91cf\u65b9\u7bb1\u7684\u6574\u4f53\u5c3a\u5bf8 stripewidth \u4f8b\u5982\uff0c\u6cf3\u9053\u4e4b\u95f4\u7684\u95f4\u9694\u6709\u591a\u8fdc\uff0c\u8fd9\u53d6\u51b3\u4e8e\u76f8\u673a\u955c\u5934\u7684\u7c7b\u578b\u3002 altitude \u98de\u884c\u8c03\u67e5\u7684\u9ad8\u5ea6\u3002 speed \u8c03\u67e5\u7684\u901f\u5ea6\u53d6\u51b3\u4e8e\u76f8\u673a\u62cd\u6444\u7167\u7247\u7684\u901f\u5ea6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8ba1\u7b97\u65b9\u5f62\u8def\u5f84\u6846\uff1a path = [] distance = 0 while x < self . boxsize : distance += self . boxsize path . append ( Vector3r ( x , self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , self . boxsize , z )) distance += self . boxsize path . append ( Vector3r ( x , - self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , - self . boxsize , z )) distance += self . boxsize \u5047\u8bbe\u6211\u4eec\u4ece\u76d2\u5b50\u7684\u89d2\u843d\u5f00\u59cb\uff0c\u5c06 x \u589e\u52a0\u6761\u7eb9\u5bbd\u5ea6\uff0c\u7136\u540e\u5c06 -boxsize \u7684\u6574\u4e2a y \u7ef4\u5ea6\u98de\u5230 +boxsize\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b boxsize \u662f\u6211\u4eec\u5c06\u8981\u8986\u76d6\u7684\u5b9e\u9645\u76d2\u5b50\u5927\u5c0f\u7684\u4e00\u534a\u3002 \u4e00\u65e6\u6211\u4eec\u6709\u4e86 Vector3r \u5bf9\u8c61\u5217\u8868\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u8c03\u7528\u975e\u5e38\u7b80\u5355\u5730\u6267\u884c\u6b64\u8def\u5f84\uff1a result = self . client . moveOnPath ( path , self . velocity , trip_time , DrivetrainType . ForwardOnly , YawMode ( False , 0 ), lookahead , 1 ) \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u8def\u5f84\u8ddd\u79bb\u9664\u4ee5\u98de\u884c\u901f\u5ea6\u6765\u8ba1\u7b97\u5408\u9002\u7684 trip_time \u8d85\u65f6\u65f6\u95f4\u3002 \u8fd9\u91cc\u5e73\u6ed1\u8def\u5f84\u63d2\u503c\u6240\u9700\u7684\u524d\u77bb lookahead \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 self.velocity + (self.velocity/2) \u6839\u636e\u901f\u5ea6\u8ba1\u7b97\u5f97\u51fa\u3002\u524d\u77bb\u6b21\u6570\u8d8a\u591a\uff0c\u8f6c\u5f2f\u8d8a\u5e73\u6ed1\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u5728\u5c4f\u5e55\u622a\u56fe\u4e2d\u770b\u5230\u6bcf\u4e2a\u6cf3\u9053\u7684\u672b\u7aef\u90fd\u662f\u5e73\u6ed1\u7684\u8f6c\u5f2f\uff0c\u800c\u4e0d\u662f\u65b9\u6846\u56fe\u6848\u3002\u8fd9\u4e5f\u53ef\u4ee5\u4f7f\u60a8\u7684\u76f8\u673a\u62cd\u6444\u7684\u89c6\u9891\u66f4\u52a0\u6d41\u7545\u3002 \u5c31\u662f\u8fd9\u6837\uff0c\u5f88\u7b80\u5355\u5427\uff1f \u73b0\u5728\uff0c\u60a8\u5f53\u7136\u53ef\u4ee5\u4e3a\u5176\u6dfb\u52a0\u66f4\u591a\u667a\u80fd\u529f\u80fd\uff0c\u4f7f\u5176\u907f\u5f00\u5730\u56fe\u4e0a\u5df2\u77e5\u7684\u969c\u788d\u7269\uff0c\u4f7f\u5176\u5728\u5c71\u5761\u4e0a\u722c\u4e0a\u722c\u4e0b\uff0c\u4ee5\u4fbf\u60a8\u52d8\u5bdf\u659c\u5761\u7b49\u7b49\u3002\u4e50\u8da3\u65e0\u7a77\u3002","title":"\u5b9e\u65bd\u65e0\u4eba\u673a\u8c03\u67e5\u811a\u672c"},{"location":"wiki/Implementing-a-Drone-Survey-script/#_1","text":"\u60a8\u662f\u5426\u66fe\u7ecf\u60f3\u8fc7\u62cd\u6444\u4e00\u7ec4\u7279\u5b9a\u5730\u70b9\u7684\u4fef\u89c6\u56fe\u7167\u7247\uff1f AirSimClient Python API \u8ba9\u8fd9\u4e00\u5207\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002 \u4ee3\u7801\u8bf7\u70b9\u51fb\u6b64\u5904 \u67e5\u770b\u3002 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u53d8\u91cf\uff1a \u53d8\u91cf \u63cf\u8ff0 boxsize \u5f85\u6d4b\u91cf\u65b9\u7bb1\u7684\u6574\u4f53\u5c3a\u5bf8 stripewidth \u4f8b\u5982\uff0c\u6cf3\u9053\u4e4b\u95f4\u7684\u95f4\u9694\u6709\u591a\u8fdc\uff0c\u8fd9\u53d6\u51b3\u4e8e\u76f8\u673a\u955c\u5934\u7684\u7c7b\u578b\u3002 altitude \u98de\u884c\u8c03\u67e5\u7684\u9ad8\u5ea6\u3002 speed \u8c03\u67e5\u7684\u901f\u5ea6\u53d6\u51b3\u4e8e\u76f8\u673a\u62cd\u6444\u7167\u7247\u7684\u901f\u5ea6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8ba1\u7b97\u65b9\u5f62\u8def\u5f84\u6846\uff1a path = [] distance = 0 while x < self . boxsize : distance += self . boxsize path . append ( Vector3r ( x , self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , self . boxsize , z )) distance += self . boxsize path . append ( Vector3r ( x , - self . boxsize , z )) x += self . stripewidth distance += self . stripewidth path . append ( Vector3r ( x , - self . boxsize , z )) distance += self . boxsize \u5047\u8bbe\u6211\u4eec\u4ece\u76d2\u5b50\u7684\u89d2\u843d\u5f00\u59cb\uff0c\u5c06 x \u589e\u52a0\u6761\u7eb9\u5bbd\u5ea6\uff0c\u7136\u540e\u5c06 -boxsize \u7684\u6574\u4e2a y \u7ef4\u5ea6\u98de\u5230 +boxsize\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b boxsize \u662f\u6211\u4eec\u5c06\u8981\u8986\u76d6\u7684\u5b9e\u9645\u76d2\u5b50\u5927\u5c0f\u7684\u4e00\u534a\u3002 \u4e00\u65e6\u6211\u4eec\u6709\u4e86 Vector3r \u5bf9\u8c61\u5217\u8868\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u8c03\u7528\u975e\u5e38\u7b80\u5355\u5730\u6267\u884c\u6b64\u8def\u5f84\uff1a result = self . client . moveOnPath ( path , self . velocity , trip_time , DrivetrainType . ForwardOnly , YawMode ( False , 0 ), lookahead , 1 ) \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u8def\u5f84\u8ddd\u79bb\u9664\u4ee5\u98de\u884c\u901f\u5ea6\u6765\u8ba1\u7b97\u5408\u9002\u7684 trip_time \u8d85\u65f6\u65f6\u95f4\u3002 \u8fd9\u91cc\u5e73\u6ed1\u8def\u5f84\u63d2\u503c\u6240\u9700\u7684\u524d\u77bb lookahead \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 self.velocity + (self.velocity/2) \u6839\u636e\u901f\u5ea6\u8ba1\u7b97\u5f97\u51fa\u3002\u524d\u77bb\u6b21\u6570\u8d8a\u591a\uff0c\u8f6c\u5f2f\u8d8a\u5e73\u6ed1\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u5728\u5c4f\u5e55\u622a\u56fe\u4e2d\u770b\u5230\u6bcf\u4e2a\u6cf3\u9053\u7684\u672b\u7aef\u90fd\u662f\u5e73\u6ed1\u7684\u8f6c\u5f2f\uff0c\u800c\u4e0d\u662f\u65b9\u6846\u56fe\u6848\u3002\u8fd9\u4e5f\u53ef\u4ee5\u4f7f\u60a8\u7684\u76f8\u673a\u62cd\u6444\u7684\u89c6\u9891\u66f4\u52a0\u6d41\u7545\u3002 \u5c31\u662f\u8fd9\u6837\uff0c\u5f88\u7b80\u5355\u5427\uff1f \u73b0\u5728\uff0c\u60a8\u5f53\u7136\u53ef\u4ee5\u4e3a\u5176\u6dfb\u52a0\u66f4\u591a\u667a\u80fd\u529f\u80fd\uff0c\u4f7f\u5176\u907f\u5f00\u5730\u56fe\u4e0a\u5df2\u77e5\u7684\u969c\u788d\u7269\uff0c\u4f7f\u5176\u5728\u5c71\u5761\u4e0a\u722c\u4e0a\u722c\u4e0b\uff0c\u4ee5\u4fbf\u60a8\u52d8\u5bdf\u659c\u5761\u7b49\u7b49\u3002\u4e50\u8da3\u65e0\u7a77\u3002","title":"\u5b9e\u65bd\u65e0\u4eba\u673a\u8c03\u67e5\u811a\u672c"},{"location":"wiki/Intercepting-MavLink-messages/","text":"AirSim communicates with PX4 based drone (either HIL or SITL) using MavLink . For Pixhawk hardware this is usually done using your local serial port. The MavLinkCom library is used by AirSim and this library is flexible, allowing you to configure different types of connections so that you simply monitor, or even intercept and change mavlink messages. The MavLinkCom Readme provides lots of details about how that can be done, but the following are some simple steps you can perform. THe MavLinkCom library includes a test app called MavLinkTest which can act as a proxy relay for mavlink messages. This app can communicate with Pixhawk over serial port like this: MavLinkTest -serial:*,115200 -proxy:127.0.0.1:14560 On Linux replace * with '/dev/serial/ttyACM0' or whatever the device name is there. This will connect the serial point and send/receive all mavlink messages from there over the localhost UDP port 14560. This means you can now connect AirSim to that UDP port, by turning off the serial port in ~/Documents/AirSim/settings.json by setting \"UseSerial\" to false and \"UdpPort\": 14560. MavLinkTest is also an interactive command interpretter, you can type \"?\" to see the list of possible commands. So, forexample, when AirSim is up and running, you can type \"arm\" to arm the drone and \"takeoff 10\" to take off and fly to 10 meters. AirSim uses this MavLinkCom library to proxy messages to other UDP ports for QGroundControl (14550) and LogViewer (14388). Since these are UDP channels, you can also do this across multiple machines. So then if you look at how MavLinkTest works the mavlink proxy trick boils down to this code: auto droneConnection = MavLinkConnection::connectSerial(\"drone\", \"/dev/ttyACM0\", 115200, \"sh /etc/init.d/rc.usb\\n\"); auto proxyConnection = MavLinkConnection::connectRemoteUdp(\"qgc\", \"127.0.0.1\", \"127.0.0.1\", 14560); droneConnection->join(proxyConnection); On Windows \\dev\\ttyACM0 serial port device name can be replaced with the appropriate COM port name like COM6 . Pretty simple. This means you can write your own code that does this, but instead of using join, you can do what join does yourself, which is simply \"subscribe\" to all messages from the droneConnection, and then use \"sendMessage\" to forward those messages to the proxyConnection. You can do the opposite also, \"subscribe\" to all messages from AirSim over the proxyConnection, and send those to the droneConnection. So then, of course, you can also choose to add, remove or modify those messages as they go, giving you full control over what AirSim and Pixhawk see in the mavlink stream. You will also see that MavLinkConnection has a simple method called ignoreMessage which tells the connection to drop certain message types on the floor. This is a simple \"filter\".","title":"Intercepting MavLink messages"},{"location":"wiki/Point-Clouds/","text":"I added a new Python script point_cloud.py that shows how to convert the depth image returned from AirSim into a point cloud. The following depth image was captured using Modular Neighborhood environment: And with the appropriate projection matrix the opencv reprojectImageTo3D function can turn this into a point cloud. The following is the result, which is also available here: https://skfb.ly/68r7y . SketchFab can upload the resulting file cloud.asc and render it for you. PS: you may notice the scene is reflected on the Y axis, so I may have a sign wrong in the projection matrix. An exercise for the reader :-)","title":"Point Clouds"},{"location":"wiki/Rapid-Descent-on-PX4-drones/","text":"PX4 \u65e0\u4eba\u673a\u5feb\u901f\u4e0b\u964d # \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u57fa\u4e8e PX4 \u7684\u65e0\u4eba\u673a\uff0c\u5f53\u4f60\u53d1\u51fa\u7740\u9646\u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u7f13\u6162\u800c\u5c0f\u5fc3\u5730\u4e0b\u964d\u3002\u73b0\u5728 PX4 \u6709\u4e00\u4e2a\u8bbe\u7f6e\u53ef\u4ee5\u63d0\u9ad8\u4e0b\u964d\u901f\u5ea6\uff0c\u4f46\u968f\u540e\u5b83\u4f1a\u91cd\u91cd\u5730\u649e\u5230\u5730\u9762\u3002\u6211\u4eec\u771f\u6b63\u60f3\u8981\u7684\u662f\u5feb\u901f\u4e0b\u964d\u5230\u79bb\u5730\u9762\u67d0\u4e2a\u5b89\u5168\u8ddd\u79bb\uff0c\u6bd4\u5982 5 \u7c73\uff0c\u7136\u540e\u4ece\u90a3\u91cc\u5207\u6362\u5230 PX4 \u7740\u9646\uff0c\u4ee5\u83b7\u5f97\u5982\u7fbd\u6bdb\u822c\u8f7b\u67d4\u7684\u843d\u5730\u611f\u3002 \u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u4ee5\u4e0b Python \u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a from AirSimClient import * client = MultirotorClient () client . enableApiControl ( True ) client . moveToPosition ( 0 , 0 , - 5 , 2 ) client . land () \u56e0\u6b64\uff0c\u6211\u4eec\u5c1d\u8bd5\u4ee5\u6bcf\u79d2 2 \u7c73\u7684\u901f\u5ea6\u5feb\u901f\u4e0b\u964d\uff0c\u7136\u540e\u5f53\u8fbe\u5230 5 \u7c73\u65f6\u5207\u6362\u5230\u81ea\u52a8\u7740\u9646\u3002 \u8fd9\u5e94\u8be5\u53ef\u884c\uff0c\u4f46 PX4 \u4e5f\u5185\u7f6e\u4e86\u6700\u5927\u5782\u76f4\u4e0b\u964d\u901f\u5ea6\u9650\u5236\u3002\u56e0\u6b64\uff0c\u8981\u542f\u7528\u4e0a\u8ff0\u6280\u5de7\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a param set MPC_Z_VEL_MAX_DN 2 \u7ed3\u679c\u5982\u4e0b\uff1a \u4f60\u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e\uff0c\u8fd8\u6709\u4e00\u4e2a MPC_Z_VEL_MAX_UP \u53c2\u6570\uff0c\u65b9\u4fbf\u4f60\u5feb\u901f\u722c\u5347\u3002\u6709\u4e9b\u65e0\u4eba\u673a\u53ef\u4ee5\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u722c\u5347\u3002PX4 \u9650\u5236\u8fd9\u4e9b\u53c2\u6570\u7684\u552f\u4e00\u539f\u56e0\u662f\uff0c\u5f88\u591a\u65b0\u624b\u98de\u884c\u5458\u5728\u6ca1\u6709\u8fd9\u4e9b\u9650\u5236\u7684\u60c5\u51b5\u4e0b\u4f1a\u9047\u5230\u9ebb\u70e6\u3002\u6240\u4ee5\uff0c\u5728\u5b9e\u9645\u65e0\u4eba\u673a\u4e0a\u64cd\u4f5c\u4e4b\u524d\uff0c\u8bf7\u5148\u5728\u6a21\u62df\u5668\u4e0a\u5c1d\u8bd5\u4e00\u4e0b\uff01","title":"PX4 \u65e0\u4eba\u673a\u5feb\u901f\u4e0b\u964d"},{"location":"wiki/Rapid-Descent-on-PX4-drones/#px4","text":"\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u57fa\u4e8e PX4 \u7684\u65e0\u4eba\u673a\uff0c\u5f53\u4f60\u53d1\u51fa\u7740\u9646\u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u7f13\u6162\u800c\u5c0f\u5fc3\u5730\u4e0b\u964d\u3002\u73b0\u5728 PX4 \u6709\u4e00\u4e2a\u8bbe\u7f6e\u53ef\u4ee5\u63d0\u9ad8\u4e0b\u964d\u901f\u5ea6\uff0c\u4f46\u968f\u540e\u5b83\u4f1a\u91cd\u91cd\u5730\u649e\u5230\u5730\u9762\u3002\u6211\u4eec\u771f\u6b63\u60f3\u8981\u7684\u662f\u5feb\u901f\u4e0b\u964d\u5230\u79bb\u5730\u9762\u67d0\u4e2a\u5b89\u5168\u8ddd\u79bb\uff0c\u6bd4\u5982 5 \u7c73\uff0c\u7136\u540e\u4ece\u90a3\u91cc\u5207\u6362\u5230 PX4 \u7740\u9646\uff0c\u4ee5\u83b7\u5f97\u5982\u7fbd\u6bdb\u822c\u8f7b\u67d4\u7684\u843d\u5730\u611f\u3002 \u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u4ee5\u4e0b Python \u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a from AirSimClient import * client = MultirotorClient () client . enableApiControl ( True ) client . moveToPosition ( 0 , 0 , - 5 , 2 ) client . land () \u56e0\u6b64\uff0c\u6211\u4eec\u5c1d\u8bd5\u4ee5\u6bcf\u79d2 2 \u7c73\u7684\u901f\u5ea6\u5feb\u901f\u4e0b\u964d\uff0c\u7136\u540e\u5f53\u8fbe\u5230 5 \u7c73\u65f6\u5207\u6362\u5230\u81ea\u52a8\u7740\u9646\u3002 \u8fd9\u5e94\u8be5\u53ef\u884c\uff0c\u4f46 PX4 \u4e5f\u5185\u7f6e\u4e86\u6700\u5927\u5782\u76f4\u4e0b\u964d\u901f\u5ea6\u9650\u5236\u3002\u56e0\u6b64\uff0c\u8981\u542f\u7528\u4e0a\u8ff0\u6280\u5de7\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a param set MPC_Z_VEL_MAX_DN 2 \u7ed3\u679c\u5982\u4e0b\uff1a \u4f60\u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e\uff0c\u8fd8\u6709\u4e00\u4e2a MPC_Z_VEL_MAX_UP \u53c2\u6570\uff0c\u65b9\u4fbf\u4f60\u5feb\u901f\u722c\u5347\u3002\u6709\u4e9b\u65e0\u4eba\u673a\u53ef\u4ee5\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u722c\u5347\u3002PX4 \u9650\u5236\u8fd9\u4e9b\u53c2\u6570\u7684\u552f\u4e00\u539f\u56e0\u662f\uff0c\u5f88\u591a\u65b0\u624b\u98de\u884c\u5458\u5728\u6ca1\u6709\u8fd9\u4e9b\u9650\u5236\u7684\u60c5\u51b5\u4e0b\u4f1a\u9047\u5230\u9ebb\u70e6\u3002\u6240\u4ee5\uff0c\u5728\u5b9e\u9645\u65e0\u4eba\u673a\u4e0a\u64cd\u4f5c\u4e4b\u524d\uff0c\u8bf7\u5148\u5728\u6a21\u62df\u5668\u4e0a\u5c1d\u8bd5\u4e00\u4e0b\uff01","title":"PX4 \u65e0\u4eba\u673a\u5feb\u901f\u4e0b\u964d"},{"location":"wiki/hexacopter/","text":"\u6784\u9020\u516d\u65cb\u7ffc\u98de\u884c\u5668 # \u90a3\u4e48 AirSim \u80fd\u98de\u516d\u65cb\u7ffc\u98de\u884c\u5668\u5417\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\uff0c\u4f46\u8bbe\u7f6e\u8d77\u6765\u9700\u8981\u4e00\u4e9b\u5de5\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u9700\u8981\u66f4\u65b0\u4e09\u4e2a\u7ec4\u4ef6\uff1a\u9996\u5148\u662f PX4 \u56fa\u4ef6\uff0c\u7136\u540e\u662f AirSim \u7269\u7406\u7cfb\u7edf\uff0c\u6700\u540e\u662f\u6e32\u67d3\u6a21\u578b\u3002 PX4 \u4fee\u6539 # PX4 \u9700\u8981\u5904\u4e8e \u516d\u8f74\u98de\u884c\u5668\u6a21\u5f0f(hexacopter mode) \uff0c\u624d\u80fd\u4e3a\u6240\u6709 6 \u4e2a\u7535\u673a\u63d0\u4f9b\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u719f\u6089 QGroundControl \u7684\u201cHIL \u56db\u8f74\u98de\u884c\u5668\u201d\u673a\u8eab\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u5b83\u6ca1\u6709 HIL \u516d\u8f74\u98de\u884c\u5668\u3002\u6839\u636e PX4 \u56e2\u961f\u7684\u8bf4\u6cd5\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u673a\u8eab\u5c31\u80fd\u8ba9 PX4 \u5728 HIL \u6a21\u5f0f\u4e0b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5f88\u9057\u61be\uff0c\u4eca\u5929\u6211\u4eec\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002PX4 \u5b58\u5728\u4e00\u4e9b bug\uff0c\u4f1a\u5bfc\u81f4 HIL \u6a21\u5f0f\u5728\u4efb\u4f55\u673a\u8eab\u4e0a\u90fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u4fee\u590d\u8fd9\u4e9b bug \u4e4b\u5916\uff0c\u4ee5\u4e0b\u662f\u83b7\u53d6 HIL \u516d\u8f74\u98de\u884c\u5668\u673a\u8eab\u9009\u9879\u7684\u5feb\u901f\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u6309\u7167 px4 \u4e2d\u7684\u8bf4\u660e\u514b\u9686 git \u4ed3\u5e93\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a cd ROMFS/px4fmu_common/init.d cp 1001_rc_quad_x.hil 1004_rc_hex_x.hil gedit 1004_rc_hex_x.hil \u5e76\u4f7f\u5176\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a #!nsh # # @name HIL Quadcopter + # # @type Simulation # # @maintainer Anton Babushkin <anton@px4.io> # sh /etc/init.d/rc.mc_defaults set MIXER hexa_x # Need to set all 8 channels set PWM_OUT 12345678 set HIL yes \u4fdd\u5b58\u6b64\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 make px4fmu-v2_default \u547d\u4ee4\u91cd\u65b0\u6784\u5efa px4\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u6784\u5efa\u8fc7\uff0c\u8bf7\u5220\u9664\u4e4b\u524d\u7684\u6784\u5efa\u8f93\u51fa build_px4fmu-v2_default \uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u65b0\u6784\u5efa\u9009\u62e9\u8fd9\u4e2a\u65b0\u7684ROMFS\u6587\u4ef6\u3002 \u73b0\u5728\u627e\u5230\u540d\u4e3a PX4AirframeFactMetaData.xml \u7684 QGroundControl \u914d\u7f6e\u6587\u4ef6\uff0c\u5728 Windows \u4e0a\uff0c\u5b83\u4f4d\u4e8e %APPDATA%\\QGroundControl.org\\PX4AirframeFactMetaData.xml \u3002\u627e\u5230 airframe id=\"1001\"\uff0c\u590d\u5236\u6574\u4e2a airframe XML \u5143\u7d20\u5e76\u5c06\u5176\u66ff\u6362\u4e3a\uff1a <airframe id= \"1004\" maintainer= \"Anton Babushkin &lt;anton@px4.io&gt;\" name= \"HIL Hexacopter X\" > <maintainer> Anton Babushkin &lt; anton@px4.io &gt; </maintainer> <type> Simulation </type> </airframe> \u60a8\u53ef\u4ee5\u5c06\u7ef4\u62a4\u8005\u8bbe\u7f6e\u4e3a\u4efb\u610f\u4eba\u3002\u73b0\u5728\uff0c\u5f53\u60a8\u7684 Pixhawk \u91cd\u542f\u65f6\uff0cQGroundControl \u5e94\u8be5\u4f1a\u5728\u201cHIL\u201d\u673a\u8eab\u7c7b\u578b\u4e0b\u663e\u793a\u4e00\u4e2a HIL Hexacopter X \u9009\u9879\uff0c\u9009\u62e9\u5b83\u5e76\u5c06\u5176\u5e94\u7528\u5230 PX4 \u4e0a\uff0c\u91cd\u542f\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5728 HIL \u6a21\u5f0f\u4e0b\u4f5c\u4e3a\u516d\u8f74\u98de\u884c\u5668\u98de\u884c\u4e86\u3002 AirSim \u7269\u7406\u7cfb\u7edf # \u7269\u7406\u5f88\u7b80\u5355\uff0c\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u5728 \u8bbe\u7f6e json \u6587\u4ef6 \u4e2d\u6307\u5b9a\u8fd9\u4e2a\u201c\u6a21\u578b\u201d\uff1a \"Model\" : \"Hexacopter\" , \u4f46\u8fd9\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f\u5728\u5185\u90e8\uff0c\u8fd9\u4f1a\u5bfc\u81f4 Px4MultiRotor.hpp \u8c03\u7528 setupFrameGenericHex()\uff0c\u540e\u8005\u8c03\u7528 initializeRotorHexX\uff0c\u8be5\u65b9\u6cd5\u6839\u636e \u63a8\u8350\u7684\u7535\u673a\u5e03\u7f6e \u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002 static void initializeRotorHexX ( vector < RotorPose >& rotor_poses /* the result we are building */ , uint rotor_count /* must be 6 */ , real_T arm_lengths [], real_T rotor_z /* z relative to center of gravity */ ) { Vector3r unit_z ( 0 , 0 , -1 ); //NED frame if ( rotor_count == 6 ) { rotor_poses . clear (); /* Note: rotor_poses are built in this order: rotor 0 is CW x-axis (2) (4) \\ / \\/ (1)-------(0) y-axis /\\ / \\ (5) (3) */ // vectors below are rotated according to NED left hand rule (so the vectors are rotated counter clockwise). Quaternionr quadx_rot ( AngleAxisr ( M_PIf / 6 , unit_z )); Quaternionr no_rot ( AngleAxisr ( 0 , unit_z )); rotor_poses . emplace_back ( Vector3r ( 0 , arm_lengths [ 0 ], rotor_z ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); rotor_poses . emplace_back ( Vector3r ( 0 , - arm_lengths [ 1 ], rotor_z ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( arm_lengths [ 2 ], 0 , rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( - arm_lengths [ 3 ], 0 , rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( 0 , arm_lengths [ 4 ], rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( 0 , - arm_lengths [ 5 ], rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); } else throw std :: invalid_argument ( \"Rotor count other than 6 is not supported by this method!\" ); } \u73b0\u5728\u53ef\u80fd\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684 Vector3r \u53c2\u6570\u3002\u4e0a\u9762\u6807\u8bb0\u4e3a (0) \u7684\u7b2c\u4e00\u4e2a\u7535\u673a\u4f4d\u4e8e y \u8f74\u4e0a\uff0c\u56e0\u6b64\u5b83\u7684\u77e2\u91cf\u5f88\u660e\u663e\uff1a Vector3r(0, arm_lengths[0], rotate_z) \uff0cx \u8f74\u4e3a 0\uff0cy \u8f74\u4e3a\u81c2\u957f\u3002 \u6807\u8bb0\u4e3a (1) \u7684\u7b2c\u4e8c\u4e2a\u7535\u673a\u4e5f\u5f88\u660e\u663e\u3002\u4f46\u662f\u7535\u673a (2) \u5462\uff1f VectorMath::rotateVector(Vector3r(arm_lengths[2], 0, rotate_z), quadx_rot, true) \u7684 x \u8f74\u8bbe\u7f6e\u4e3a\u81c2\u957f\uff0cy \u8f74\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5728\u4e0a\u56fe\u4e2d\u4e00\u5f00\u59cb\u662f\u5782\u76f4\u5411\u4e0a\u7684\u3002\u7136\u540e\u6211\u4eec\u5e94\u7528 pi/6 \u7684\u65cb\u8f6c\u3002\u4f46\u662f\u65cb\u8f6c\u4f7f\u7528\u7684\u662f NED \u5750\u6807\u7cfb\u4e2d\u7684\u5de6\u624b\u65cb\u8f6c\u89c4\u5219\uff0c\u5176\u4e2d z \u8f74\u5411\u4e0b\uff0c\u6240\u4ee5\u4f38\u51fa\u5de6\u624b\uff0c\u62c7\u6307\u5411\u4e0b\uff0c\u5f2f\u66f2\u5176\u4ed6\u56db\u6307\uff0c\u8fd9\u5c31\u662f\u65cb\u8f6c\u7684\u65b9\u5411\uff0c\u5373\u9006\u65f6\u9488\u3002\u56e0\u6b64\uff0c\u6307\u5411\u4e0a\u65b9\u7684\u81c2\u4f1a\u65cb\u8f6c\u5230\u7535\u673a (2) \u6240\u793a\u7684\u4f4d\u7f6e\u3002\u5176\u4ed6\u673a\u68b0\u81c2\u4e5f\u4e00\u6837\uff0c\u73b0\u5728\u6211\u4eec\u7684\u7269\u7406\u8bbe\u7f6e\u5df2\u7ecf\u6b63\u786e\uff0c\u53ef\u4ee5\u7528\u4e8e\u516d\u8f74\u98de\u884c\u5668\u4e86\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u8d28\u91cf\uff0c\u5e76\u8c03\u6574\u7535\u673a\u63a8\u529b\u53c2\u6570\u3002 \u6e32\u67d3 # \u6700\u540e\uff0c\u4e3a\u4e86\u8fdb\u884c\u6e32\u67d3\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6f02\u4eae\u7684\u516d\u65cb\u7ffc\u98de\u884c\u5668\u4e09\u7ef4\u6a21\u578b\u3002Udeshaya Wadhwa \u5236\u4f5c\u4e86 \u4e00\u4e2a\u53ef\u7231\u7684 DJI S900 \u6a21\u578b \u3002 \u6240\u4ee5\u6211\u62ff\u4e86\u8fd9\u4e2a\u6a21\u578b\uff0c\u628a\u7535\u673a\u62c6\u4e86\u4e0b\u6765\uff08\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u65cb\u8f6c\u5b83\u4eec\u4e86\uff09\uff0c\u8fd9\u4e9b\u53ef\u4ee5 \u5728\u8fd9\u91cc\u627e\u5230 \u3002\u4f60\u53ef\u4ee5 \u628a\u8fd9\u4e9b\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce \u3002\u6211\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6a21\u5757\u5316\u793e\u533a\u4e16\u754c\uff0c\u6211\u5fc5\u987b\u5c06 x \u8f74\u65cb\u8f6c 90 \u5ea6\uff0c\u5e76\u5c06\u6a21\u578b\u7f29\u5c0f\u5230\u539f\u59cb\u5c3a\u5bf8\u7684 20% \u5de6\u53f3\uff0c\u5c06\u9ed8\u8ba4\u6750\u8d28\u6539\u4e3a\u6f02\u4eae\u7684\u91d1\u5c5e\u7070\u8272\uff0c\u5e76\u6839\u636e\u56db\u8f74\u98de\u884c\u5668\u84dd\u56fe\u6dfb\u52a0\u5355\u72ec\u7684\u53ef\u65cb\u8f6c\u7535\u673a\u3002 \u6211\u6240\u505a\u7684\u662f\u590d\u5236\u5e76\u7c98\u8d34 BP_FlyingPawn\uff0c\u5c06\u5176\u547d\u540d\u4e3a BP_FlyingHex\uff0c\u7136\u540e\u6dfb\u52a0\u53e6\u5916 2 \u4e2a\u9053\u5177\u548c\u53e6\u5916 2 \u4e2a\u65cb\u8f6c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7136\u540e\u6211\u7f16\u8f91\u4e86 SetupPropProtationMovement \u56fe\uff0c\u4ee5\u4fbf\u5b83\u8fde\u63a5 2 \u4e2a\u65b0\u7684\u9053\u5177\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u65e0\u6cd5\u901a\u8fc7\u590d\u5236/\u7c98\u8d34\u6765\u83b7\u53d6\u201cRotation 4\u201d\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u4ece\u201c\u7ec4\u4ef6\u201d\u5217\u8868\u4e2d\u62d6\u51fa\u201cRotation 4\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u83b7\u53d6\u201d\uff0c\u7136\u540e\u5c06\u5176\u8fde\u63a5\u5230\u65b0\u7684\u201c\u8bbe\u7f6e\u66f4\u65b0\u7ec4\u4ef6\u201d\u6846\uff0c\u5bf9\u4e8e\u201cProp 4\u201d\u548c\u201cProp 5\u201d\u4e5f\u540c\u6837\u64cd\u4f5c\u3002 \u73b0\u5728\u60a8\u53ea\u9700\u8ba9\u5b83\u98de\u8d77\u6765\u5373\u53ef\uff01\u662f\u7684\uff0c\u5b83\u6210\u529f\u4e86 :-)","title":"Hexacopter"},{"location":"wiki/hexacopter/#_1","text":"\u90a3\u4e48 AirSim \u80fd\u98de\u516d\u65cb\u7ffc\u98de\u884c\u5668\u5417\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\uff0c\u4f46\u8bbe\u7f6e\u8d77\u6765\u9700\u8981\u4e00\u4e9b\u5de5\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u9700\u8981\u66f4\u65b0\u4e09\u4e2a\u7ec4\u4ef6\uff1a\u9996\u5148\u662f PX4 \u56fa\u4ef6\uff0c\u7136\u540e\u662f AirSim \u7269\u7406\u7cfb\u7edf\uff0c\u6700\u540e\u662f\u6e32\u67d3\u6a21\u578b\u3002","title":"\u6784\u9020\u516d\u65cb\u7ffc\u98de\u884c\u5668"},{"location":"wiki/hexacopter/#px4","text":"PX4 \u9700\u8981\u5904\u4e8e \u516d\u8f74\u98de\u884c\u5668\u6a21\u5f0f(hexacopter mode) \uff0c\u624d\u80fd\u4e3a\u6240\u6709 6 \u4e2a\u7535\u673a\u63d0\u4f9b\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u719f\u6089 QGroundControl \u7684\u201cHIL \u56db\u8f74\u98de\u884c\u5668\u201d\u673a\u8eab\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u5b83\u6ca1\u6709 HIL \u516d\u8f74\u98de\u884c\u5668\u3002\u6839\u636e PX4 \u56e2\u961f\u7684\u8bf4\u6cd5\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u673a\u8eab\u5c31\u80fd\u8ba9 PX4 \u5728 HIL \u6a21\u5f0f\u4e0b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5f88\u9057\u61be\uff0c\u4eca\u5929\u6211\u4eec\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002PX4 \u5b58\u5728\u4e00\u4e9b bug\uff0c\u4f1a\u5bfc\u81f4 HIL \u6a21\u5f0f\u5728\u4efb\u4f55\u673a\u8eab\u4e0a\u90fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u4fee\u590d\u8fd9\u4e9b bug \u4e4b\u5916\uff0c\u4ee5\u4e0b\u662f\u83b7\u53d6 HIL \u516d\u8f74\u98de\u884c\u5668\u673a\u8eab\u9009\u9879\u7684\u5feb\u901f\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u6309\u7167 px4 \u4e2d\u7684\u8bf4\u660e\u514b\u9686 git \u4ed3\u5e93\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a cd ROMFS/px4fmu_common/init.d cp 1001_rc_quad_x.hil 1004_rc_hex_x.hil gedit 1004_rc_hex_x.hil \u5e76\u4f7f\u5176\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a #!nsh # # @name HIL Quadcopter + # # @type Simulation # # @maintainer Anton Babushkin <anton@px4.io> # sh /etc/init.d/rc.mc_defaults set MIXER hexa_x # Need to set all 8 channels set PWM_OUT 12345678 set HIL yes \u4fdd\u5b58\u6b64\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 make px4fmu-v2_default \u547d\u4ee4\u91cd\u65b0\u6784\u5efa px4\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u6784\u5efa\u8fc7\uff0c\u8bf7\u5220\u9664\u4e4b\u524d\u7684\u6784\u5efa\u8f93\u51fa build_px4fmu-v2_default \uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u65b0\u6784\u5efa\u9009\u62e9\u8fd9\u4e2a\u65b0\u7684ROMFS\u6587\u4ef6\u3002 \u73b0\u5728\u627e\u5230\u540d\u4e3a PX4AirframeFactMetaData.xml \u7684 QGroundControl \u914d\u7f6e\u6587\u4ef6\uff0c\u5728 Windows \u4e0a\uff0c\u5b83\u4f4d\u4e8e %APPDATA%\\QGroundControl.org\\PX4AirframeFactMetaData.xml \u3002\u627e\u5230 airframe id=\"1001\"\uff0c\u590d\u5236\u6574\u4e2a airframe XML \u5143\u7d20\u5e76\u5c06\u5176\u66ff\u6362\u4e3a\uff1a <airframe id= \"1004\" maintainer= \"Anton Babushkin &lt;anton@px4.io&gt;\" name= \"HIL Hexacopter X\" > <maintainer> Anton Babushkin &lt; anton@px4.io &gt; </maintainer> <type> Simulation </type> </airframe> \u60a8\u53ef\u4ee5\u5c06\u7ef4\u62a4\u8005\u8bbe\u7f6e\u4e3a\u4efb\u610f\u4eba\u3002\u73b0\u5728\uff0c\u5f53\u60a8\u7684 Pixhawk \u91cd\u542f\u65f6\uff0cQGroundControl \u5e94\u8be5\u4f1a\u5728\u201cHIL\u201d\u673a\u8eab\u7c7b\u578b\u4e0b\u663e\u793a\u4e00\u4e2a HIL Hexacopter X \u9009\u9879\uff0c\u9009\u62e9\u5b83\u5e76\u5c06\u5176\u5e94\u7528\u5230 PX4 \u4e0a\uff0c\u91cd\u542f\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5728 HIL \u6a21\u5f0f\u4e0b\u4f5c\u4e3a\u516d\u8f74\u98de\u884c\u5668\u98de\u884c\u4e86\u3002","title":"PX4 \u4fee\u6539"},{"location":"wiki/hexacopter/#airsim","text":"\u7269\u7406\u5f88\u7b80\u5355\uff0c\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u5728 \u8bbe\u7f6e json \u6587\u4ef6 \u4e2d\u6307\u5b9a\u8fd9\u4e2a\u201c\u6a21\u578b\u201d\uff1a \"Model\" : \"Hexacopter\" , \u4f46\u8fd9\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f\u5728\u5185\u90e8\uff0c\u8fd9\u4f1a\u5bfc\u81f4 Px4MultiRotor.hpp \u8c03\u7528 setupFrameGenericHex()\uff0c\u540e\u8005\u8c03\u7528 initializeRotorHexX\uff0c\u8be5\u65b9\u6cd5\u6839\u636e \u63a8\u8350\u7684\u7535\u673a\u5e03\u7f6e \u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002 static void initializeRotorHexX ( vector < RotorPose >& rotor_poses /* the result we are building */ , uint rotor_count /* must be 6 */ , real_T arm_lengths [], real_T rotor_z /* z relative to center of gravity */ ) { Vector3r unit_z ( 0 , 0 , -1 ); //NED frame if ( rotor_count == 6 ) { rotor_poses . clear (); /* Note: rotor_poses are built in this order: rotor 0 is CW x-axis (2) (4) \\ / \\/ (1)-------(0) y-axis /\\ / \\ (5) (3) */ // vectors below are rotated according to NED left hand rule (so the vectors are rotated counter clockwise). Quaternionr quadx_rot ( AngleAxisr ( M_PIf / 6 , unit_z )); Quaternionr no_rot ( AngleAxisr ( 0 , unit_z )); rotor_poses . emplace_back ( Vector3r ( 0 , arm_lengths [ 0 ], rotor_z ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); rotor_poses . emplace_back ( Vector3r ( 0 , - arm_lengths [ 1 ], rotor_z ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( arm_lengths [ 2 ], 0 , rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( - arm_lengths [ 3 ], 0 , rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( 0 , arm_lengths [ 4 ], rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCCW ); rotor_poses . emplace_back ( VectorMath :: rotateVector ( Vector3r ( 0 , - arm_lengths [ 5 ], rotor_z ), quadx_rot , true ), unit_z , RotorTurningDirection :: RotorTurningDirectionCW ); } else throw std :: invalid_argument ( \"Rotor count other than 6 is not supported by this method!\" ); } \u73b0\u5728\u53ef\u80fd\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684 Vector3r \u53c2\u6570\u3002\u4e0a\u9762\u6807\u8bb0\u4e3a (0) \u7684\u7b2c\u4e00\u4e2a\u7535\u673a\u4f4d\u4e8e y \u8f74\u4e0a\uff0c\u56e0\u6b64\u5b83\u7684\u77e2\u91cf\u5f88\u660e\u663e\uff1a Vector3r(0, arm_lengths[0], rotate_z) \uff0cx \u8f74\u4e3a 0\uff0cy \u8f74\u4e3a\u81c2\u957f\u3002 \u6807\u8bb0\u4e3a (1) \u7684\u7b2c\u4e8c\u4e2a\u7535\u673a\u4e5f\u5f88\u660e\u663e\u3002\u4f46\u662f\u7535\u673a (2) \u5462\uff1f VectorMath::rotateVector(Vector3r(arm_lengths[2], 0, rotate_z), quadx_rot, true) \u7684 x \u8f74\u8bbe\u7f6e\u4e3a\u81c2\u957f\uff0cy \u8f74\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5728\u4e0a\u56fe\u4e2d\u4e00\u5f00\u59cb\u662f\u5782\u76f4\u5411\u4e0a\u7684\u3002\u7136\u540e\u6211\u4eec\u5e94\u7528 pi/6 \u7684\u65cb\u8f6c\u3002\u4f46\u662f\u65cb\u8f6c\u4f7f\u7528\u7684\u662f NED \u5750\u6807\u7cfb\u4e2d\u7684\u5de6\u624b\u65cb\u8f6c\u89c4\u5219\uff0c\u5176\u4e2d z \u8f74\u5411\u4e0b\uff0c\u6240\u4ee5\u4f38\u51fa\u5de6\u624b\uff0c\u62c7\u6307\u5411\u4e0b\uff0c\u5f2f\u66f2\u5176\u4ed6\u56db\u6307\uff0c\u8fd9\u5c31\u662f\u65cb\u8f6c\u7684\u65b9\u5411\uff0c\u5373\u9006\u65f6\u9488\u3002\u56e0\u6b64\uff0c\u6307\u5411\u4e0a\u65b9\u7684\u81c2\u4f1a\u65cb\u8f6c\u5230\u7535\u673a (2) \u6240\u793a\u7684\u4f4d\u7f6e\u3002\u5176\u4ed6\u673a\u68b0\u81c2\u4e5f\u4e00\u6837\uff0c\u73b0\u5728\u6211\u4eec\u7684\u7269\u7406\u8bbe\u7f6e\u5df2\u7ecf\u6b63\u786e\uff0c\u53ef\u4ee5\u7528\u4e8e\u516d\u8f74\u98de\u884c\u5668\u4e86\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u8d28\u91cf\uff0c\u5e76\u8c03\u6574\u7535\u673a\u63a8\u529b\u53c2\u6570\u3002","title":"AirSim \u7269\u7406\u7cfb\u7edf"},{"location":"wiki/hexacopter/#_2","text":"\u6700\u540e\uff0c\u4e3a\u4e86\u8fdb\u884c\u6e32\u67d3\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6f02\u4eae\u7684\u516d\u65cb\u7ffc\u98de\u884c\u5668\u4e09\u7ef4\u6a21\u578b\u3002Udeshaya Wadhwa \u5236\u4f5c\u4e86 \u4e00\u4e2a\u53ef\u7231\u7684 DJI S900 \u6a21\u578b \u3002 \u6240\u4ee5\u6211\u62ff\u4e86\u8fd9\u4e2a\u6a21\u578b\uff0c\u628a\u7535\u673a\u62c6\u4e86\u4e0b\u6765\uff08\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u65cb\u8f6c\u5b83\u4eec\u4e86\uff09\uff0c\u8fd9\u4e9b\u53ef\u4ee5 \u5728\u8fd9\u91cc\u627e\u5230 \u3002\u4f60\u53ef\u4ee5 \u628a\u8fd9\u4e9b\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce \u3002\u6211\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6a21\u5757\u5316\u793e\u533a\u4e16\u754c\uff0c\u6211\u5fc5\u987b\u5c06 x \u8f74\u65cb\u8f6c 90 \u5ea6\uff0c\u5e76\u5c06\u6a21\u578b\u7f29\u5c0f\u5230\u539f\u59cb\u5c3a\u5bf8\u7684 20% \u5de6\u53f3\uff0c\u5c06\u9ed8\u8ba4\u6750\u8d28\u6539\u4e3a\u6f02\u4eae\u7684\u91d1\u5c5e\u7070\u8272\uff0c\u5e76\u6839\u636e\u56db\u8f74\u98de\u884c\u5668\u84dd\u56fe\u6dfb\u52a0\u5355\u72ec\u7684\u53ef\u65cb\u8f6c\u7535\u673a\u3002 \u6211\u6240\u505a\u7684\u662f\u590d\u5236\u5e76\u7c98\u8d34 BP_FlyingPawn\uff0c\u5c06\u5176\u547d\u540d\u4e3a BP_FlyingHex\uff0c\u7136\u540e\u6dfb\u52a0\u53e6\u5916 2 \u4e2a\u9053\u5177\u548c\u53e6\u5916 2 \u4e2a\u65cb\u8f6c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7136\u540e\u6211\u7f16\u8f91\u4e86 SetupPropProtationMovement \u56fe\uff0c\u4ee5\u4fbf\u5b83\u8fde\u63a5 2 \u4e2a\u65b0\u7684\u9053\u5177\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u65e0\u6cd5\u901a\u8fc7\u590d\u5236/\u7c98\u8d34\u6765\u83b7\u53d6\u201cRotation 4\u201d\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u4ece\u201c\u7ec4\u4ef6\u201d\u5217\u8868\u4e2d\u62d6\u51fa\u201cRotation 4\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u83b7\u53d6\u201d\uff0c\u7136\u540e\u5c06\u5176\u8fde\u63a5\u5230\u65b0\u7684\u201c\u8bbe\u7f6e\u66f4\u65b0\u7ec4\u4ef6\u201d\u6846\uff0c\u5bf9\u4e8e\u201cProp 4\u201d\u548c\u201cProp 5\u201d\u4e5f\u540c\u6837\u64cd\u4f5c\u3002 \u73b0\u5728\u60a8\u53ea\u9700\u8ba9\u5b83\u98de\u8d77\u6765\u5373\u53ef\uff01\u662f\u7684\uff0c\u5b83\u6210\u529f\u4e86 :-)","title":"\u6e32\u67d3"},{"location":"wiki/moveOnPath-demo/","text":"\u65e0\u4eba\u673a\u6cbf\u7740\u8def\u5f84\u79fb\u52a8(moveOnPath)\u6f14\u793a # \u5728 DroneShell \u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a moveOnPath \u547d\u4ee4\uff0c\u5b83\u4f1a\u8c03\u7528 DroneControlBase::moveOnPath \u65b9\u6cd5\u3002\u4e3a\u4e86\u6f14\u793a\u8fd9\u4e00\u70b9\uff0c\u6211\u4ece\u865a\u5e7b\u5546\u57ce\u4e0b\u8f7d\u4e86 Modular Neighborhood \u5305 \uff0c\u5e76\u5c06\u73a9\u5bb6\u7684\u8d77\u59cb\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u4f4d\u7f6e\uff1a x=310.0 cm, y=11200.0 cm, z=235.0 cm \u7136\u540e\u542f\u52a8\u65e0\u4eba\u673a\u5e76\u8d77\u98de\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a Moveonpath -path 0,-256,-4,126,-256,-4,126,0,-4,-5,0,-4 -velocity 10 -lookahead 10 \u5982\u679c\u8bbe\u7f6e\u6b64 PX4 \u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u52a0\u5feb\u901f\u5ea6\uff1a param set SYS_MC_EST_GROUP 2 param set MPC_XY_VEL_MAX 20 param set MPC_XY_CRUISE 5 param set COM_OBL_ACT 1 param set COM_OBL_RC_ACT 5 param set NAV_RCL_ACT 0 param set NAV_DLL_ACT 0 \u7ed3\u679c\u5982\u4e0b\uff0c\u8bf7\u770b \u6f14\u793a\u89c6\u9891 \uff1a","title":"\u65e0\u4eba\u673a\u6cbf\u7740\u8def\u5f84\u79fb\u52a8(moveOnPath)\u6f14\u793a"},{"location":"wiki/moveOnPath-demo/#moveonpath","text":"\u5728 DroneShell \u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a moveOnPath \u547d\u4ee4\uff0c\u5b83\u4f1a\u8c03\u7528 DroneControlBase::moveOnPath \u65b9\u6cd5\u3002\u4e3a\u4e86\u6f14\u793a\u8fd9\u4e00\u70b9\uff0c\u6211\u4ece\u865a\u5e7b\u5546\u57ce\u4e0b\u8f7d\u4e86 Modular Neighborhood \u5305 \uff0c\u5e76\u5c06\u73a9\u5bb6\u7684\u8d77\u59cb\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u4f4d\u7f6e\uff1a x=310.0 cm, y=11200.0 cm, z=235.0 cm \u7136\u540e\u542f\u52a8\u65e0\u4eba\u673a\u5e76\u8d77\u98de\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a Moveonpath -path 0,-256,-4,126,-256,-4,126,0,-4,-5,0,-4 -velocity 10 -lookahead 10 \u5982\u679c\u8bbe\u7f6e\u6b64 PX4 \u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u52a0\u5feb\u901f\u5ea6\uff1a param set SYS_MC_EST_GROUP 2 param set MPC_XY_VEL_MAX 20 param set MPC_XY_CRUISE 5 param set COM_OBL_ACT 1 param set COM_OBL_RC_ACT 5 param set NAV_RCL_ACT 0 param set NAV_DLL_ACT 0 \u7ed3\u679c\u5982\u4e0b\uff0c\u8bf7\u770b \u6f14\u793a\u89c6\u9891 \uff1a","title":"\u65e0\u4eba\u673a\u6cbf\u7740\u8def\u5f84\u79fb\u52a8(moveOnPath)\u6f14\u793a"},{"location":"wiki/technion/build_FSTDriverless_windows/","text":"\u5728 Windows \u4e0a\u4f7f\u7528 FST \u65e0\u4eba\u9a7e\u9a76\u73af\u5883\u6784\u5efa AirSim # \u5b89\u88c5\u865a\u5e7b\u5f15\u64ce # \u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u4ece\u5de6\u4fa7\u6253\u5f00\u201c\u5e93\u201d\u9009\u9879\u5361\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u7248\u672c\u201d\uff0c\u6b64\u65f6\u4f1a\u663e\u793a\u4e0b\u8f7d\u865a\u5e7b 4.18 \u7684\u9009\u9879\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u8bf7\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934\uff0c\u786e\u4fdd 4.18 \u4e3a\u201c\u5f53\u524d\u7248\u672c\u201d\u3002 \u6ce8\u610f \u672c\u9879\u76ee\u4ec5\u9002\u7528\u4e8e UE 4.18\u3002\u5982\u679c\u60a8\u62e5\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002 \u6784\u5efa AirSim # \u60a8\u5c06\u9700\u8981 Visual Studio 2017\uff08\u786e\u4fdd\u5b89\u88c5 VC++ \u548c Windows SDK 8.x\uff09\u3002 \u542f\u52a8 VS 2017 \u7684 x64 Native Tools Command Prompt \u3002\u4e3a\u4ed3\u5e93\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5e76\u8fd0\u884c git clone https://github.com/Microsoft/AirSim.git \u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55 Unreal \u9879\u76ee\u4e2d\u3002 \u521b\u5efa\u548c\u8bbe\u7f6e\u865a\u5e7b\u73af\u5883 # \u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u5217\u8868\u521b\u5efa\u4e00\u4e2a\u6a21\u62df FSD \u6bd4\u8d5b\u7684\u73af\u5883\u3002 \u786e\u4fdd\u5df2\u6784\u5efa AirSim \u5e76\u5df2\u5b89\u88c5 Unreal 4.18\uff0c\u5982\u4e0a\u6240\u8ff0\u3002 \u6253\u5f00 UE \u7f16\u8f91\u5668\uff0c\u9009\u62e9\u201c\u65b0\u5efa\u9879\u76ee(New Project)\u201d\u3002\u9009\u62e9\u201c\u7a7a\u767d(Blank)\u201d\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u542f\u52a8\u5185\u5bb9\u3002\u9009\u62e9\u9879\u76ee\u4f4d\u7f6e\uff0c\u8f93\u5165\u9879\u76ee\u540d\u79f0\uff08\u4f8b\u5982 ProjectName \uff09\uff0c\u7136\u540e\u70b9\u51fb\u201c\u521b\u5efa\u9879\u76ee\u201d\u3002 \u5c06\u9879\u76ee\u52a0\u8f7d\u5230\u7f16\u8f91\u5668\u540e\uff0c\u4ece \u6587\u4ef6\u83dc\u5355(File menu) \u4e2d\u9009\u62e9 \u65b0\u5efa C++ \u7c7b(New C++ class) \uff0c\u7c7b\u7c7b\u578b\u4fdd\u7559\u9ed8\u8ba4\u7684 \u65e0(None) \uff0c\u70b9\u51fb \u4e0b\u4e00\u6b65(Next) \uff0c\u4fdd\u7559\u9ed8\u8ba4\u540d\u79f0 MyClass \uff0c\u7136\u540e\u70b9\u51fb \u521b\u5efa\u7c7b(Create Class) \u3002\u6211\u4eec\u9700\u8981\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u8981\u6c42\u9879\u76ee\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u3002\u5b83\u4f1a\u89e6\u53d1\u7f16\u8bd1\u5e76\u6253\u5f00 Visual Studio \u89e3\u51b3\u65b9\u6848 ProjectName.sln \u3002 \u5173\u95ed\u5e76\u4fdd\u5b58 ProjectName.sln \u3002\u540c\u65f6\uff0c\u5173\u95edUE\u7f16\u8f91\u5668\u3002 \u524d\u5f80\u4f60\u7684 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff0c\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 ProjectName \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u6837\uff0c\u4f60\u7684 Unreal \u9879\u76ee\u5c31\u62e5\u6709\u4e86 AirSim \u63d2\u4ef6\u3002 \u4ece \u6b64\u5904 \u4e0b\u8f7d FSD \u8d5b\u9a6c\u573a\u7684\u73af\u5883\u8d44\u6e90\u3002\u5c06 zip \u6587\u4ef6\u89e3\u538b\u5230 ProjectName\\Content \u76ee\u5f55\u4e0b\uff08\u8bf7\u53c2\u9605\u672c\u6587\u6863\u672b\u5c3e\u7684\u6587\u4ef6\u5939\u6811\uff09\u3002 \u4ece \u6b64\u5904 \u4e0b\u8f7d\u516c\u5f0f Technion \u8d5b\u8f66\u7d20\u6750\u3002\u5c06 zip \u6587\u4ef6\u89e3\u538b\u5230 ProjectName\\Plugins\\AirSim\\Content\\VehicleAdv\\SUV \u76ee\u5f55\u4e0b\uff0c\u5e76\u5728\u63d0\u793a SuvCarPawn.uasset \u65f6\u9009\u62e9 replace \uff08\u539f\u59cb\u6587\u4ef6\u5c06\u4fdd\u5b58\u5230\u5907\u4efd\u6587\u4ef6\u5939\u4e2d\uff09\u3002 \u7f16\u8f91 ProjectName.uproject \uff0c\u4f7f\u5176\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u9879\u76ee\u547d\u540d\u4e3a ProjectName \uff0c\u4ee5\u4fbf\u60a8\u9700\u8981\u66f4\u6539\u5b83\u3002 { \"FileVersion\": 3, \"EngineAssociation\": \"4.18\", \"Category\": \"Samples\", \"Description\": \"\", \"Modules\": [ { \"Name\": \"ProjectName\", \"Type\": \"Runtime\", \"LoadingPhase\": \"Default\", \"AdditionalDependencies\": [ \"AirSim\" ] } ], \"TargetPlatforms\": [ \"MacNoEditor\", \"WindowsNoEditor\" ], \"Plugins\": [ { \"Name\": \"AirSim\", \"Enabled\": true } ] } \u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u53f3\u952e\u5355\u51fb ProjectName.uproject \uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio Project Files \u3002\u6b64\u6b65\u9aa4\u5c06\u68c0\u6d4b\u865a\u5e7b\u9879\u76ee\u4e2d\u7684\u6240\u6709\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e3a Visual Studio \u751f\u6210 .sln \u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u7f3a\u5c11 Generate Visual Studio Project Files \u9009\u9879\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u8ba1\u7b97\u673a\u624d\u80fd\u4f7f Unreal Shell \u6269\u5c55\u751f\u6548\u3002\u5982\u679c\u4ecd\u7136\u7f3a\u5c11\u8be5\u9009\u9879\uff0c\u8bf7\u5728 Unreal \u7f16\u8f91\u5668\u4e2d\u6253\u5f00 ProjectName.uproject \uff0c\u7136\u540e\u4ece \u6587\u4ef6(File) \u83dc\u5355\u4e2d\u9009\u62e9 Refresh Visual Studio Project \u3002 \u5728 Visual Studio \u4e2d\u91cd\u65b0\u6253\u5f00 ProjectName.sln \uff0c\u5e76\u786e\u4fdd\u201cDebugGame Editor\u201d\u548c\u201cWin64\u201d\u6784\u5efa\u914d\u7f6e\u662f\u6d3b\u52a8\u6784\u5efa\u914d\u7f6e\u3002 \u6309 F5 \u952e\u8fdb\u884c debug(\u8c03\u8bd5) \u3002\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u865a\u5e7b\u7f16\u8f91\u5668\u5141\u8bb8\u60a8\u7f16\u8f91\u73af\u5883\u3001\u8d44\u6e90\u548c\u5176\u4ed6\u6e38\u620f\u76f8\u5173\u8bbe\u7f6e\u3002 \u9996\u5148\uff0c\u52a0\u8f7d\u4e00\u5f20\u5730\u56fe\u6765\u8bbe\u7f6e\u4f60\u7684\u73af\u5883\u3002\u5730\u56fe\u4f4d\u4e8e Content\\RaceCourse\\Maps \u76ee\u5f55\u4e0b\u3002\u53cc\u51fb\u9009\u62e9\u5176\u4e2d\u4e00\u5f20\u5730\u56fe\u3002 \u5728\u5982\u4e0b\u6240\u793a\u7684 Window/World Settings \u4e2d\uff0c\u5c06 GameMode Override \u8bbe\u7f6e\u4e3a AirSimGameMode \uff1a \u63a5\u4e0b\u6765\uff0c\u5982\u679c\u60a8\u60f3\u66f4\u6539 PlayerStart \u5bf9\u8c61\u5728\u73af\u5883\u4e2d\u7684\u4f4d\u7f6e\uff08\u8be5 PlayerStart \u5bf9\u8c61\u5df2\u5b58\u5728\uff09\uff0c\u60a8\u53ef\u4ee5\u5728 World Outliner \u4e2d\u627e\u5230\u5e76\u4fee\u6539\u5b83\u3002AirSim \u63d2\u4ef6\u5c06\u5728\u6b64\u5904\u521b\u5efa\u5e76\u653e\u7f6e\u8f7d\u5177\u3002\u5982\u679c\u4f4d\u7f6e\u8fc7\u9ad8\uff0c\u8f7d\u5177\u4f1a\u5728\u60a8\u6309\u4e0b\u201c\u64ad\u653e\u201d\u6309\u94ae\u65f6\u7acb\u5373\u6389\u843d\uff0c\u4ece\u800c\u53ef\u80fd\u9020\u6210\u968f\u673a\u884c\u4e3a\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u524d\u5f80\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u201c\u5728\u540e\u53f0\u8fd0\u884c\u65f6\u4f7f\u7528\u8f83\u5c11 CPU (Use Less CPU when in Background) \u201d\u672a\u52fe\u9009\u3002\u5982\u679c\u4e0d\u52fe\u9009\uff0c\u5f53\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u5931\u53bb\u7126\u70b9\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7684\u901f\u5ea6\u5c06\u663e\u8457\u4e0b\u964d\u3002 \u8bf7\u52a1\u5fc5 \u4fdd\u5b58(Save) \u8fd9\u4e9b\u7f16\u8f91\u3002\u70b9\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\u3002\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u9884\u5907\u2026\u2026\u5f00\u59cb\u2026\u2026\u5f00\u59cb\uff01\uff01\uff01 \u60a8\u73b0\u5728\u6b63\u5728 FSD Unreal \u73af\u5883\u4e2d\u8fd0\u884c AirSim\u3002 \u8bbe\u7f6e\u65b9\u5411\u76d8\uff08\u7f57\u6280 G920\uff09 # \u5982\u679c\u60a8\u60f3\u624b\u52a8\u9a7e\u9a76\uff0c\u5219\u9700\u8981\u65b9\u5411\u76d8\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u65b9\u5411\u76d8\u8bf4\u660e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 API \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u4f7f\u7528\u952e\u76d8\u79fb\u52a8\u3002","title":"\u5728 Windows \u4e0a\u4f7f\u7528 FST \u65e0\u4eba\u9a7e\u9a76\u73af\u5883\u6784\u5efa AirSim"},{"location":"wiki/technion/build_FSTDriverless_windows/#windows-fst-airsim","text":"","title":"\u5728 Windows \u4e0a\u4f7f\u7528 FST \u65e0\u4eba\u9a7e\u9a76\u73af\u5883\u6784\u5efa AirSim"},{"location":"wiki/technion/build_FSTDriverless_windows/#_1","text":"\u4e0b\u8f7d Epic Games \u542f\u52a8\u5668\u3002\u867d\u7136\u865a\u5e7b\u5f15\u64ce\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6ce8\u518c\u3002 \u8fd0\u884c Epic Games \u542f\u52a8\u5668\uff0c\u4ece\u5de6\u4fa7\u6253\u5f00\u201c\u5e93\u201d\u9009\u9879\u5361\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u7248\u672c\u201d\uff0c\u6b64\u65f6\u4f1a\u663e\u793a\u4e0b\u8f7d\u865a\u5e7b 4.18 \u7684\u9009\u9879\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684\u865a\u5e7b\u5f15\u64ce\uff0c\u8bf7\u70b9\u51fb\u76f8\u5e94\u7248\u672c\u201c\u542f\u52a8\u201d\u6309\u94ae\u65c1\u8fb9\u7684\u5411\u4e0b\u7bad\u5934\uff0c\u786e\u4fdd 4.18 \u4e3a\u201c\u5f53\u524d\u7248\u672c\u201d\u3002 \u6ce8\u610f \u672c\u9879\u76ee\u4ec5\u9002\u7528\u4e8e UE 4.18\u3002\u5982\u679c\u60a8\u62e5\u6709 UE 4.16 \u6216\u66f4\u65e9\u7248\u672c\u7684\u9879\u76ee\uff0c\u8bf7\u53c2\u9605 \u5347\u7ea7\u6307\u5357 \u6765\u5347\u7ea7\u60a8\u7684\u9879\u76ee\u3002","title":"\u5b89\u88c5\u865a\u5e7b\u5f15\u64ce"},{"location":"wiki/technion/build_FSTDriverless_windows/#airsim","text":"\u60a8\u5c06\u9700\u8981 Visual Studio 2017\uff08\u786e\u4fdd\u5b89\u88c5 VC++ \u548c Windows SDK 8.x\uff09\u3002 \u542f\u52a8 VS 2017 \u7684 x64 Native Tools Command Prompt \u3002\u4e3a\u4ed3\u5e93\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5e76\u8fd0\u884c git clone https://github.com/Microsoft/AirSim.git \u3002 \u4ece\u547d\u4ee4\u884c\u8fd0\u884c build.cmd \u3002\u8fd9\u5c06\u5728 Unreal\\Plugins \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53ef\u7acb\u5373\u4f7f\u7528\u7684\u63d2\u4ef6\uff0c\u53ef\u5c06\u5176\u653e\u5165\u4efb\u4f55 Unreal \u9879\u76ee\u4e2d\u3002","title":"\u6784\u5efa AirSim"},{"location":"wiki/technion/build_FSTDriverless_windows/#_2","text":"\u6700\u540e\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u865a\u5e7b\u9879\u76ee\u6765\u6258\u7ba1\u60a8\u7684\u8f66\u8f86\u73af\u5883\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u5217\u8868\u521b\u5efa\u4e00\u4e2a\u6a21\u62df FSD \u6bd4\u8d5b\u7684\u73af\u5883\u3002 \u786e\u4fdd\u5df2\u6784\u5efa AirSim \u5e76\u5df2\u5b89\u88c5 Unreal 4.18\uff0c\u5982\u4e0a\u6240\u8ff0\u3002 \u6253\u5f00 UE \u7f16\u8f91\u5668\uff0c\u9009\u62e9\u201c\u65b0\u5efa\u9879\u76ee(New Project)\u201d\u3002\u9009\u62e9\u201c\u7a7a\u767d(Blank)\u201d\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u542f\u52a8\u5185\u5bb9\u3002\u9009\u62e9\u9879\u76ee\u4f4d\u7f6e\uff0c\u8f93\u5165\u9879\u76ee\u540d\u79f0\uff08\u4f8b\u5982 ProjectName \uff09\uff0c\u7136\u540e\u70b9\u51fb\u201c\u521b\u5efa\u9879\u76ee\u201d\u3002 \u5c06\u9879\u76ee\u52a0\u8f7d\u5230\u7f16\u8f91\u5668\u540e\uff0c\u4ece \u6587\u4ef6\u83dc\u5355(File menu) \u4e2d\u9009\u62e9 \u65b0\u5efa C++ \u7c7b(New C++ class) \uff0c\u7c7b\u7c7b\u578b\u4fdd\u7559\u9ed8\u8ba4\u7684 \u65e0(None) \uff0c\u70b9\u51fb \u4e0b\u4e00\u6b65(Next) \uff0c\u4fdd\u7559\u9ed8\u8ba4\u540d\u79f0 MyClass \uff0c\u7136\u540e\u70b9\u51fb \u521b\u5efa\u7c7b(Create Class) \u3002\u6211\u4eec\u9700\u8981\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u8981\u6c42\u9879\u76ee\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\u3002\u5b83\u4f1a\u89e6\u53d1\u7f16\u8bd1\u5e76\u6253\u5f00 Visual Studio \u89e3\u51b3\u65b9\u6848 ProjectName.sln \u3002 \u5173\u95ed\u5e76\u4fdd\u5b58 ProjectName.sln \u3002\u540c\u65f6\uff0c\u5173\u95edUE\u7f16\u8f91\u5668\u3002 \u524d\u5f80\u4f60\u7684 AirSim \u4ed3\u5e93\u6587\u4ef6\u5939\uff0c\u5c06 Unreal\\Plugins \u6587\u4ef6\u5939\u590d\u5236\u5230 ProjectName \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u6837\uff0c\u4f60\u7684 Unreal \u9879\u76ee\u5c31\u62e5\u6709\u4e86 AirSim \u63d2\u4ef6\u3002 \u4ece \u6b64\u5904 \u4e0b\u8f7d FSD \u8d5b\u9a6c\u573a\u7684\u73af\u5883\u8d44\u6e90\u3002\u5c06 zip \u6587\u4ef6\u89e3\u538b\u5230 ProjectName\\Content \u76ee\u5f55\u4e0b\uff08\u8bf7\u53c2\u9605\u672c\u6587\u6863\u672b\u5c3e\u7684\u6587\u4ef6\u5939\u6811\uff09\u3002 \u4ece \u6b64\u5904 \u4e0b\u8f7d\u516c\u5f0f Technion \u8d5b\u8f66\u7d20\u6750\u3002\u5c06 zip \u6587\u4ef6\u89e3\u538b\u5230 ProjectName\\Plugins\\AirSim\\Content\\VehicleAdv\\SUV \u76ee\u5f55\u4e0b\uff0c\u5e76\u5728\u63d0\u793a SuvCarPawn.uasset \u65f6\u9009\u62e9 replace \uff08\u539f\u59cb\u6587\u4ef6\u5c06\u4fdd\u5b58\u5230\u5907\u4efd\u6587\u4ef6\u5939\u4e2d\uff09\u3002 \u7f16\u8f91 ProjectName.uproject \uff0c\u4f7f\u5176\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u9879\u76ee\u547d\u540d\u4e3a ProjectName \uff0c\u4ee5\u4fbf\u60a8\u9700\u8981\u66f4\u6539\u5b83\u3002 { \"FileVersion\": 3, \"EngineAssociation\": \"4.18\", \"Category\": \"Samples\", \"Description\": \"\", \"Modules\": [ { \"Name\": \"ProjectName\", \"Type\": \"Runtime\", \"LoadingPhase\": \"Default\", \"AdditionalDependencies\": [ \"AirSim\" ] } ], \"TargetPlatforms\": [ \"MacNoEditor\", \"WindowsNoEditor\" ], \"Plugins\": [ { \"Name\": \"AirSim\", \"Enabled\": true } ] } \u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u53f3\u952e\u5355\u51fb ProjectName.uproject \uff0c\u7136\u540e\u9009\u62e9 Generate Visual Studio Project Files \u3002\u6b64\u6b65\u9aa4\u5c06\u68c0\u6d4b\u865a\u5e7b\u9879\u76ee\u4e2d\u7684\u6240\u6709\u63d2\u4ef6\u548c\u6e90\u6587\u4ef6\uff0c\u5e76\u4e3a Visual Studio \u751f\u6210 .sln \u6587\u4ef6\u3002 \u63d0\u793a \u5982\u679c\u7f3a\u5c11 Generate Visual Studio Project Files \u9009\u9879\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u91cd\u542f\u8ba1\u7b97\u673a\u624d\u80fd\u4f7f Unreal Shell \u6269\u5c55\u751f\u6548\u3002\u5982\u679c\u4ecd\u7136\u7f3a\u5c11\u8be5\u9009\u9879\uff0c\u8bf7\u5728 Unreal \u7f16\u8f91\u5668\u4e2d\u6253\u5f00 ProjectName.uproject \uff0c\u7136\u540e\u4ece \u6587\u4ef6(File) \u83dc\u5355\u4e2d\u9009\u62e9 Refresh Visual Studio Project \u3002 \u5728 Visual Studio \u4e2d\u91cd\u65b0\u6253\u5f00 ProjectName.sln \uff0c\u5e76\u786e\u4fdd\u201cDebugGame Editor\u201d\u548c\u201cWin64\u201d\u6784\u5efa\u914d\u7f6e\u662f\u6d3b\u52a8\u6784\u5efa\u914d\u7f6e\u3002 \u6309 F5 \u952e\u8fdb\u884c debug(\u8c03\u8bd5) \u3002\u8fd9\u5c06\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u865a\u5e7b\u7f16\u8f91\u5668\u5141\u8bb8\u60a8\u7f16\u8f91\u73af\u5883\u3001\u8d44\u6e90\u548c\u5176\u4ed6\u6e38\u620f\u76f8\u5173\u8bbe\u7f6e\u3002 \u9996\u5148\uff0c\u52a0\u8f7d\u4e00\u5f20\u5730\u56fe\u6765\u8bbe\u7f6e\u4f60\u7684\u73af\u5883\u3002\u5730\u56fe\u4f4d\u4e8e Content\\RaceCourse\\Maps \u76ee\u5f55\u4e0b\u3002\u53cc\u51fb\u9009\u62e9\u5176\u4e2d\u4e00\u5f20\u5730\u56fe\u3002 \u5728\u5982\u4e0b\u6240\u793a\u7684 Window/World Settings \u4e2d\uff0c\u5c06 GameMode Override \u8bbe\u7f6e\u4e3a AirSimGameMode \uff1a \u63a5\u4e0b\u6765\uff0c\u5982\u679c\u60a8\u60f3\u66f4\u6539 PlayerStart \u5bf9\u8c61\u5728\u73af\u5883\u4e2d\u7684\u4f4d\u7f6e\uff08\u8be5 PlayerStart \u5bf9\u8c61\u5df2\u5b58\u5728\uff09\uff0c\u60a8\u53ef\u4ee5\u5728 World Outliner \u4e2d\u627e\u5230\u5e76\u4fee\u6539\u5b83\u3002AirSim \u63d2\u4ef6\u5c06\u5728\u6b64\u5904\u521b\u5efa\u5e76\u653e\u7f6e\u8f7d\u5177\u3002\u5982\u679c\u4f4d\u7f6e\u8fc7\u9ad8\uff0c\u8f7d\u5177\u4f1a\u5728\u60a8\u6309\u4e0b\u201c\u64ad\u653e\u201d\u6309\u94ae\u65f6\u7acb\u5373\u6389\u843d\uff0c\u4ece\u800c\u53ef\u80fd\u9020\u6210\u968f\u673a\u884c\u4e3a\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u524d\u5f80\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e\u201d\uff0c\u5728\u201c\u641c\u7d22\u201d\u6846\u4e2d\u8f93\u5165\u201cCPU\u201d\uff0c\u5e76\u786e\u4fdd\u201c\u5728\u540e\u53f0\u8fd0\u884c\u65f6\u4f7f\u7528\u8f83\u5c11 CPU (Use Less CPU when in Background) \u201d\u672a\u52fe\u9009\u3002\u5982\u679c\u4e0d\u52fe\u9009\uff0c\u5f53\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u5931\u53bb\u7126\u70b9\u65f6\uff0c\u865a\u5e7b\u5f15\u64ce\u7684\u901f\u5ea6\u5c06\u663e\u8457\u4e0b\u964d\u3002 \u8bf7\u52a1\u5fc5 \u4fdd\u5b58(Save) \u8fd9\u4e9b\u7f16\u8f91\u3002\u70b9\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7684\u201c\u64ad\u653e\u201d\u6309\u94ae\u3002\u8bf7\u53c2\u9605 \u5982\u4f55\u4f7f\u7528 AirSim \u3002 \u9884\u5907\u2026\u2026\u5f00\u59cb\u2026\u2026\u5f00\u59cb\uff01\uff01\uff01 \u60a8\u73b0\u5728\u6b63\u5728 FSD Unreal \u73af\u5883\u4e2d\u8fd0\u884c AirSim\u3002","title":"\u521b\u5efa\u548c\u8bbe\u7f6e\u865a\u5e7b\u73af\u5883"},{"location":"wiki/technion/build_FSTDriverless_windows/#g920","text":"\u5982\u679c\u60a8\u60f3\u624b\u52a8\u9a7e\u9a76\uff0c\u5219\u9700\u8981\u65b9\u5411\u76d8\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u65b9\u5411\u76d8\u8bf4\u660e \u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 API \u8fdb\u884c\u7f16\u7a0b\u63a7\u5236\uff0c\u6216\u8005\u4f7f\u7528\u6240\u8c13\u7684 \u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u5f0f \u4f7f\u7528\u952e\u76d8\u79fb\u52a8\u3002","title":"\u8bbe\u7f6e\u65b9\u5411\u76d8\uff08\u7f57\u6280 G920\uff09"},{"location":"wiki/technion/cameras_positioning/","text":"Cameras Positioning # In AirSim, we have several cameras. One of them is in charge of following the vehicle, while the others are in charge of recording the data for training. This section will show how to change the position of these cameras, using the code. We did two changes: 1. We changed the distance of the following camera to get a better view on our car. 2. We changed the position of the recording camera to be in same position as our actual camera on the real car. Following the car # To change the distance of the camera that follows the car, select the file SimModeBase.cpp from the visual studio console. In line 309, change the value follow_distance: to move closer, increase this number and to move farther, decrease this number. In our project, we used the value -3.0. Before and after changing the following distance Recording data # To change the position of the camera that is responsible for recording data, select the file CarPawn.cpp from the visual studio console. In line 43, change the values of the relative location vector of the camera_front_center_base_ to be (-29.7, 0, 78.8). In our case, this is exactly the position of the upper pole in the chassis. The position of our camera, marked with a white arrow Tip # As mentioned in imitation learning , we shifted the Y axis to record different poses on the track while driving. This helped us to train examples of getting back to the center of the track. You can try different approaches as well.","title":"Cameras Positioning"},{"location":"wiki/technion/cameras_positioning/#cameras-positioning","text":"In AirSim, we have several cameras. One of them is in charge of following the vehicle, while the others are in charge of recording the data for training. This section will show how to change the position of these cameras, using the code. We did two changes: 1. We changed the distance of the following camera to get a better view on our car. 2. We changed the position of the recording camera to be in same position as our actual camera on the real car.","title":"Cameras Positioning"},{"location":"wiki/technion/cameras_positioning/#following-the-car","text":"To change the distance of the camera that follows the car, select the file SimModeBase.cpp from the visual studio console. In line 309, change the value follow_distance: to move closer, increase this number and to move farther, decrease this number. In our project, we used the value -3.0. Before and after changing the following distance","title":"Following the car"},{"location":"wiki/technion/cameras_positioning/#recording-data","text":"To change the position of the camera that is responsible for recording data, select the file CarPawn.cpp from the visual studio console. In line 43, change the values of the relative location vector of the camera_front_center_base_ to be (-29.7, 0, 78.8). In our case, this is exactly the position of the upper pole in the chassis. The position of our camera, marked with a white arrow","title":"Recording data"},{"location":"wiki/technion/cameras_positioning/#tip","text":"As mentioned in imitation learning , we shifted the Y axis to record different poses on the track while driving. This helped us to train examples of getting back to the center of the track. You can try different approaches as well.","title":"Tip"},{"location":"wiki/technion/graphic_features/","text":"Graphic Features # We created two graphic features to ease track creation and to make smart augmentation. Track Creation Tool # We built a track creation tool in order to build tracks in a more simple, easy and fast way. The tool helps to build a track for the Formula Student Driverless competitions. The tool is made with a blueprint of a spline. By only clicking on a point on the road, we can edit the track as follows: The spline points set the right line of the track (yellow cones). The tool builds automatically parallel left line (blue cones) in a constant distance. Moreover, the tool places automatically each cone in each line in a constant distance from the previous one. The constant distances can be change even after placing the track. Notice: in order to make a curve you need to add a new point on the spline (right click and choose \"duplicate spline point\"). Printing the cone's position to the screen or to a log is optional, by checking it in the \"print\" nodes in the blueprint editor. More information on splines can be found in UE documentation . You can find the spline under Content\\RaceCourse\\Model\\Splines. Also in this folder, there is a tire spline which creates one row of tires. spacing determine the distance between cones with the same color, Dist yellow to blue determine the width of the track CycleLight # Animation of a day light cycle in a changeable, potentially very short period of time. This feature is built using a blueprint. in order to use it in your environment, you need to attach the CycleLight to your light source and sky sphere. To do so, select your light source and sky in the right place in the details section, as shown in the image below. This method can help in recording the training data for imitation learning. sun- choose you light source. skydome- choose your sky sphere. day length in minutes- decide how long one cycle of the sun will take. The CycleLight is built according to this tutorial .","title":"Graphic Features"},{"location":"wiki/technion/graphic_features/#graphic-features","text":"We created two graphic features to ease track creation and to make smart augmentation.","title":"Graphic Features"},{"location":"wiki/technion/graphic_features/#track-creation-tool","text":"We built a track creation tool in order to build tracks in a more simple, easy and fast way. The tool helps to build a track for the Formula Student Driverless competitions. The tool is made with a blueprint of a spline. By only clicking on a point on the road, we can edit the track as follows: The spline points set the right line of the track (yellow cones). The tool builds automatically parallel left line (blue cones) in a constant distance. Moreover, the tool places automatically each cone in each line in a constant distance from the previous one. The constant distances can be change even after placing the track. Notice: in order to make a curve you need to add a new point on the spline (right click and choose \"duplicate spline point\"). Printing the cone's position to the screen or to a log is optional, by checking it in the \"print\" nodes in the blueprint editor. More information on splines can be found in UE documentation . You can find the spline under Content\\RaceCourse\\Model\\Splines. Also in this folder, there is a tire spline which creates one row of tires. spacing determine the distance between cones with the same color, Dist yellow to blue determine the width of the track","title":"Track Creation Tool"},{"location":"wiki/technion/graphic_features/#cyclelight","text":"Animation of a day light cycle in a changeable, potentially very short period of time. This feature is built using a blueprint. in order to use it in your environment, you need to attach the CycleLight to your light source and sky sphere. To do so, select your light source and sky in the right place in the details section, as shown in the image below. This method can help in recording the training data for imitation learning. sun- choose you light source. skydome- choose your sky sphere. day length in minutes- decide how long one cycle of the sun will take. The CycleLight is built according to this tutorial .","title":"CycleLight"},{"location":"wiki/technion/technion/","text":"\u65b9\u7a0b\u5f0f\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66 - \u57fa\u4e8e AirSim # \u8981\u67e5\u770b AirSim git \u548c\u539f\u59cb README\uff0c\u8bf7\u8f6c\u5230 AirSim git \u3002 \u8be5\u9879\u76ee\u65e8\u5728\u4e3a\u65b9\u7a0b\u5f0f\u5b66\u751f\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66\u6bd4\u8d5b\u8bad\u7ec3\u548c\u5b9e\u73b0\u81ea\u52a8\u9a7e\u9a76\u7b97\u6cd5\u3002\u5728\u6b64\u7c7b\u6bd4\u8d5b\u4e2d\uff0c\u4e00\u8f86\u7531\u5b66\u751f\u8bbe\u8ba1\u548c\u5236\u9020\u7684\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u9700\u8981\u7a7f\u8d8a\u4e4b\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u3001\u7531\u4ea4\u901a\u9525\u6807\u8bb0\u7684\u8d5b\u9053\u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u65b9\u7a0b\u5f0f\u5b66\u751f\u8d5b\u8f66\u548c\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66\u6bd4\u8d5b\u73af\u5883\u7684\u6a21\u62df\u5668\u3002\u8be5\u6a21\u62df\u5668\u57fa\u4e8e AirSim\u3002 \u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u5b66\u751f\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u3002\u5de6\u4e3a\u5b9e\u8f66\uff0c\u53f3\u4e3a\u6a21\u62df\u8f66\u3002 AirSim \u662f\u4e00\u6b3e\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u7684\u65e0\u4eba\u673a\u3001\u6c7d\u8f66\u7b49\u6a21\u62df\u5668\u3002\u5b83\u5f00\u6e90\u4e14\u8de8\u5e73\u53f0\uff0c\u652f\u6301\u4e0e PX4 \u7b49\u4e3b\u6d41\u98de\u884c\u63a7\u5236\u5668\u8fdb\u884c\u786c\u4ef6\u5728\u73af\uff0c\u4ee5\u5b9e\u73b0\u7269\u7406\u548c\u89c6\u89c9\u4e0a\u903c\u771f\u7684\u6a21\u62df\u3002\u5b83\u4ee5\u865a\u5e7b\u63d2\u4ef6\u7684\u5f62\u5f0f\u5f00\u53d1\uff0c\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u5230\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u63d0\u4f9b\u4e00\u4e2a\u5e73\u53f0\uff0c\u4e3a\u65b9\u7a0b\u5f0f\u5b66\u751f\u65e0\u4eba\u9a7e\u9a76\u6c7d\u8f66\u8bd5\u9a8c\u6df1\u5ea6\u5b66\u4e60\uff0c\u7279\u522b\u662f\u6a21\u4eff\u5b66\u4e60\u3002 \u65b9\u7a0b\u5f0f\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u8d5b\u8f66\u6a21\u578b\u7531 Ryan Pourati \u63d0\u4f9b\u3002 \u73af\u5883\u573a\u666f\u7531 PolyPixel \u63d0\u4f9b\u3002 \u4ec5\u57fa\u4e8e AirSim \u6570\u636e\uff0c\u4f7f\u7528\u7ecf\u8fc7\u8bad\u7ec3\u7684\u6a21\u4eff\u5b66\u4e60\u6a21\u578b\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u9a7e\u9a76 \u5148\u51b3\u6761\u4ef6 # \u64cd\u4f5c\u7cfb\u7edf\uff1aWindows 10 GPU: Nvidia GTX 1080 \u6216\u66f4\u9ad8\u7248\u672c\uff08\u63a8\u8350\uff09 \u8f6f\u4ef6: Unreal Engine 4.18 \u548c Visual Studio 2017 (see upgrade instructions ) \u6ce8\u610f\uff1a\u6b64\u5b58\u50a8\u5e93\u662f\u4ece AirSim 1.2 \u5206\u652f\u51fa\u6765\u7684 \u5982\u4f55\u83b7\u53d6 # Windows # \u6784\u5efa \u5982\u4f55\u4f7f\u7528 # \u9009\u62e9\u6a21\u5f0f\uff1a\u6c7d\u8f66\u3001\u591a\u65cb\u7ffc\u6216\u8ba1\u7b97\u673a\u89c6\u89c9 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f1a\u63d0\u793a\u60a8\u9009\u62e9\u201cCar\u201d\u6216\u201cMultirotor\u201d\u6a21\u5f0f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 SimMode \u8bbe\u7f6e \u5c06\u9ed8\u8ba4\u8f66\u8f86\u6307\u5b9a\u4e3a\u201cCar\u201d\uff08Formula Technion Student \u8d5b\u8f66\uff09\u3002 \u624b\u52a8\u9a7e\u9a76 # \u5982\u679c\u60a8\u6709\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5411\u76d8\uff08\u7f57\u6280 G920\uff09\uff0c\u60a8\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7bad\u5934\u952e\u624b\u52a8\u9a7e\u9a76\u3002 \u66f4\u591a\u7ec6\u8282 \u5229\u7528\u6a21\u4eff\u5b66\u4e60\u6765\u9a7e\u9a76\u6c7d\u8f66 # \u6211\u4eec\u5229\u7528\u6a21\u4eff\u5b66\u4e60\u8bad\u7ec3\u4e86\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4f7f\u5176\u80fd\u591f\u4ec5\u901a\u8fc7\u4e00\u4e2a\u6444\u50cf\u5934\u4f5c\u4e3a\u8f93\u5165\u6765\u9a7e\u9a76\u4e00\u8f86\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u3002\u6211\u4eec\u7684\u8bad\u7ec3\u4ee3\u7801\u6587\u4ef6\u53ef\u5728 \u6b64\u5904 \u83b7\u53d6\uff0c\u8fd9\u4e9b\u4ee3\u7801\u6587\u4ef6\u57fa\u4e8e AirSim cookbook \u3002 \u6536\u96c6\u8bad\u7ec3\u6570\u636e # \u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e9b \u56fe\u5f62\u529f\u80fd \uff0c\u4ee5\u7b80\u5316\u6570\u636e\u8bb0\u5f55\u8fc7\u7a0b\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 \u6b64 \u6559\u7a0b\u66f4\u6539\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4ece AirSim \u751f\u6210\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684\u201c\u8bb0\u5f55\u201d\u6309\u94ae\u3002\u8fd9\u5c06\u5f00\u59cb\u8bb0\u5f55\u6bcf\u4e00\u5e27\u7684\u59ff\u52bf\u548c\u56fe\u50cf\u3002\u6570\u636e\u8bb0\u5f55\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u8fdb\u884c\u4fee\u6539\u3002 \u6309\u7167\u60a8\u6240\u9700\u7684\u65b9\u5f0f\u751f\u6210\u8bad\u7ec3\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u8bbf\u95ee API\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u8bb0\u5f55\u6570\u636e\u7684\u65b9\u5f0f\u3001\u5185\u5bb9\u3001\u4f4d\u7f6e\u548c\u65f6\u95f4\u3002 \u5b9e\u8f66\u5b9e\u73b0 # \u60a8\u53ef\u4ee5\u5728\u6b64 \u5b58\u50a8\u5e93 \u4e2d\u627e\u5230\u6211\u4eec\u5728 Nvidia Jetson TX2 \u4e0a\u5bf9\u8be5\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002 \u65b9\u7a0b\u5f0f\u5927\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u7b97\u6cd5\u56e2\u961f # Tom Hirshberg , Dean Zadok \u548c Amir Biran . \u81f4\u8c22 # \u6211\u4eec\u8981\u611f\u8c22\u6211\u4eec\u7684\u5bfc\u5e08\uff1aKira Radinsky \u535a\u58eb\u3001Ashish Kapoor \u535a\u58eb\u548c Boaz Sternfeld\u3002 \u611f\u8c22\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u667a\u80fd\u7cfb\u7edf\u5b9e\u9a8c\u5ba4 (ISL) \u7684\u652f\u6301\u3002","title":"\u5927\u5b66\u751f\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u81ea\u9a7e\u8d5b"},{"location":"wiki/technion/technion/#-airsim","text":"\u8981\u67e5\u770b AirSim git \u548c\u539f\u59cb README\uff0c\u8bf7\u8f6c\u5230 AirSim git \u3002 \u8be5\u9879\u76ee\u65e8\u5728\u4e3a\u65b9\u7a0b\u5f0f\u5b66\u751f\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66\u6bd4\u8d5b\u8bad\u7ec3\u548c\u5b9e\u73b0\u81ea\u52a8\u9a7e\u9a76\u7b97\u6cd5\u3002\u5728\u6b64\u7c7b\u6bd4\u8d5b\u4e2d\uff0c\u4e00\u8f86\u7531\u5b66\u751f\u8bbe\u8ba1\u548c\u5236\u9020\u7684\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u9700\u8981\u7a7f\u8d8a\u4e4b\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u3001\u7531\u4ea4\u901a\u9525\u6807\u8bb0\u7684\u8d5b\u9053\u3002 \u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u65b9\u7a0b\u5f0f\u5b66\u751f\u8d5b\u8f66\u548c\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66\u6bd4\u8d5b\u73af\u5883\u7684\u6a21\u62df\u5668\u3002\u8be5\u6a21\u62df\u5668\u57fa\u4e8e AirSim\u3002 \u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u5b66\u751f\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u3002\u5de6\u4e3a\u5b9e\u8f66\uff0c\u53f3\u4e3a\u6a21\u62df\u8f66\u3002 AirSim \u662f\u4e00\u6b3e\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u7684\u65e0\u4eba\u673a\u3001\u6c7d\u8f66\u7b49\u6a21\u62df\u5668\u3002\u5b83\u5f00\u6e90\u4e14\u8de8\u5e73\u53f0\uff0c\u652f\u6301\u4e0e PX4 \u7b49\u4e3b\u6d41\u98de\u884c\u63a7\u5236\u5668\u8fdb\u884c\u786c\u4ef6\u5728\u73af\uff0c\u4ee5\u5b9e\u73b0\u7269\u7406\u548c\u89c6\u89c9\u4e0a\u903c\u771f\u7684\u6a21\u62df\u3002\u5b83\u4ee5\u865a\u5e7b\u63d2\u4ef6\u7684\u5f62\u5f0f\u5f00\u53d1\uff0c\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u5230\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u63d0\u4f9b\u4e00\u4e2a\u5e73\u53f0\uff0c\u4e3a\u65b9\u7a0b\u5f0f\u5b66\u751f\u65e0\u4eba\u9a7e\u9a76\u6c7d\u8f66\u8bd5\u9a8c\u6df1\u5ea6\u5b66\u4e60\uff0c\u7279\u522b\u662f\u6a21\u4eff\u5b66\u4e60\u3002 \u65b9\u7a0b\u5f0f\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u8d5b\u8f66\u6a21\u578b\u7531 Ryan Pourati \u63d0\u4f9b\u3002 \u73af\u5883\u573a\u666f\u7531 PolyPixel \u63d0\u4f9b\u3002 \u4ec5\u57fa\u4e8e AirSim \u6570\u636e\uff0c\u4f7f\u7528\u7ecf\u8fc7\u8bad\u7ec3\u7684\u6a21\u4eff\u5b66\u4e60\u6a21\u578b\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u9a7e\u9a76","title":"\u65b9\u7a0b\u5f0f\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u65e0\u4eba\u9a7e\u9a76\u8d5b\u8f66 - \u57fa\u4e8e AirSim"},{"location":"wiki/technion/technion/#_1","text":"\u64cd\u4f5c\u7cfb\u7edf\uff1aWindows 10 GPU: Nvidia GTX 1080 \u6216\u66f4\u9ad8\u7248\u672c\uff08\u63a8\u8350\uff09 \u8f6f\u4ef6: Unreal Engine 4.18 \u548c Visual Studio 2017 (see upgrade instructions ) \u6ce8\u610f\uff1a\u6b64\u5b58\u50a8\u5e93\u662f\u4ece AirSim 1.2 \u5206\u652f\u51fa\u6765\u7684","title":"\u5148\u51b3\u6761\u4ef6"},{"location":"wiki/technion/technion/#_2","text":"","title":"\u5982\u4f55\u83b7\u53d6"},{"location":"wiki/technion/technion/#windows","text":"\u6784\u5efa","title":"Windows"},{"location":"wiki/technion/technion/#_3","text":"","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"wiki/technion/technion/#_4","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cAirSim \u4f1a\u63d0\u793a\u60a8\u9009\u62e9\u201cCar\u201d\u6216\u201cMultirotor\u201d\u6a21\u5f0f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 SimMode \u8bbe\u7f6e \u5c06\u9ed8\u8ba4\u8f66\u8f86\u6307\u5b9a\u4e3a\u201cCar\u201d\uff08Formula Technion Student \u8d5b\u8f66\uff09\u3002","title":"\u9009\u62e9\u6a21\u5f0f\uff1a\u6c7d\u8f66\u3001\u591a\u65cb\u7ffc\u6216\u8ba1\u7b97\u673a\u89c6\u89c9"},{"location":"wiki/technion/technion/#_5","text":"\u5982\u679c\u60a8\u6709\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5411\u76d8\uff08\u7f57\u6280 G920\uff09\uff0c\u60a8\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u4e2d\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7bad\u5934\u952e\u624b\u52a8\u9a7e\u9a76\u3002 \u66f4\u591a\u7ec6\u8282","title":"\u624b\u52a8\u9a7e\u9a76"},{"location":"wiki/technion/technion/#_6","text":"\u6211\u4eec\u5229\u7528\u6a21\u4eff\u5b66\u4e60\u8bad\u7ec3\u4e86\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4f7f\u5176\u80fd\u591f\u4ec5\u901a\u8fc7\u4e00\u4e2a\u6444\u50cf\u5934\u4f5c\u4e3a\u8f93\u5165\u6765\u9a7e\u9a76\u4e00\u8f86\u65b9\u7a0b\u5f0f\u8d5b\u8f66\u3002\u6211\u4eec\u7684\u8bad\u7ec3\u4ee3\u7801\u6587\u4ef6\u53ef\u5728 \u6b64\u5904 \u83b7\u53d6\uff0c\u8fd9\u4e9b\u4ee3\u7801\u6587\u4ef6\u57fa\u4e8e AirSim cookbook \u3002","title":"\u5229\u7528\u6a21\u4eff\u5b66\u4e60\u6765\u9a7e\u9a76\u6c7d\u8f66"},{"location":"wiki/technion/technion/#_7","text":"\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e9b \u56fe\u5f62\u529f\u80fd \uff0c\u4ee5\u7b80\u5316\u6570\u636e\u8bb0\u5f55\u8fc7\u7a0b\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 \u6b64 \u6559\u7a0b\u66f4\u6539\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4ece AirSim \u751f\u6210\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684\u201c\u8bb0\u5f55\u201d\u6309\u94ae\u3002\u8fd9\u5c06\u5f00\u59cb\u8bb0\u5f55\u6bcf\u4e00\u5e27\u7684\u59ff\u52bf\u548c\u56fe\u50cf\u3002\u6570\u636e\u8bb0\u5f55\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u8fdb\u884c\u4fee\u6539\u3002 \u6309\u7167\u60a8\u6240\u9700\u7684\u65b9\u5f0f\u751f\u6210\u8bad\u7ec3\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u8bbf\u95ee API\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u8bb0\u5f55\u6570\u636e\u7684\u65b9\u5f0f\u3001\u5185\u5bb9\u3001\u4f4d\u7f6e\u548c\u65f6\u95f4\u3002","title":"\u6536\u96c6\u8bad\u7ec3\u6570\u636e"},{"location":"wiki/technion/technion/#_8","text":"\u60a8\u53ef\u4ee5\u5728\u6b64 \u5b58\u50a8\u5e93 \u4e2d\u627e\u5230\u6211\u4eec\u5728 Nvidia Jetson TX2 \u4e0a\u5bf9\u8be5\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002","title":"\u5b9e\u8f66\u5b9e\u73b0"},{"location":"wiki/technion/technion/#_9","text":"Tom Hirshberg , Dean Zadok \u548c Amir Biran .","title":"\u65b9\u7a0b\u5f0f\u5927\u5b66\u751f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u7b97\u6cd5\u56e2\u961f"},{"location":"wiki/technion/technion/#_10","text":"\u6211\u4eec\u8981\u611f\u8c22\u6211\u4eec\u7684\u5bfc\u5e08\uff1aKira Radinsky \u535a\u58eb\u3001Ashish Kapoor \u535a\u58eb\u548c Boaz Sternfeld\u3002 \u611f\u8c22\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u667a\u80fd\u7cfb\u7edf\u5b9e\u9a8c\u5ba4 (ISL) \u7684\u652f\u6301\u3002","title":"\u81f4\u8c22"}]}